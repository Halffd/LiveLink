This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
__mocks__/
  jest-mock-extended.js
.storybook/
  main.ts
  preview.ts
e2e/
  demo.test.ts
messages/
  en.json
  ja.json
  pt-br.json
project.inlang/
  .gitignore
  project_id
  settings.json
scripts/
  shortcuts/
    global_shortcuts.sh
  livelink.lua
  position_windows.sh
  test-network-optimization.js
src/
  __tests__/
    helpers/
      async-utils.ts
      mock-factory.ts
      timer-mock.ts
    integration/
      skipWatchedStreams.test.ts
    server/
      services/
        player.race.test.ts
        queue_service.test.ts
      stream_manager.race.test.ts
  cli/
    livelink.ts
  components/
    ConfigEditor.svelte
    Header.svelte
    LayerConfig.svelte
    Navigation.svelte
    PlayerConfig.svelte
    PlayerControls.svelte
    QueueList.svelte
    StreamCard.svelte
  config/
    default/
      config.json
      filters.json
      mpv.json
      player.json
      streamlink.json
      streams.json
    defaults/
      player.ts
    schemas/
      player.ts
    types/
      player.ts
    env.ts
    loader.ts
  lib/
    i18n/
      helpers.ts
      index.ts
      types.ts
    stores/
      auth.ts
      index.ts
    api.ts
    index.ts
  routes/
    api/
      +page.svelte
    config/
      +page.svelte
    demo/
      paraglide/
        +page.svelte
      +page.svelte
    manager/
      +page.svelte
    settings/
      +page.svelte
    streams/
      +page.svelte
    +layout.svelte
    +page.svelte
    Settings.svelte
    Streams.svelte
  server/
    db/
      database.ts
    routes/
      api.ts
    services/
      __tests__/
        player.catch.test.ts
        player.network.test.ts
      logger/
        index.ts
      holodex.ts
      keyboard_service.ts
      keyboard_worker.ts
      logger.ts
      player_manager.ts
      player.ts
      queue_service.ts
      twitch.ts
      youtube.ts
    types/
      events.ts
    workers/
      player_worker.ts
    api.ts
    config.ts
    index.ts
    router.ts
    stream_manager.network.test.ts
    stream_manager.ts
    websocket.ts
  stories/
    assets/
      accessibility.svg
      discord.svg
      github.svg
      tutorials.svg
      youtube.svg
    button.css
    Configure.mdx
    header.css
    Header.stories.svelte
    Header.svelte
    page.css
    Page.stories.svelte
    Page.svelte
  types/
    bootstrap.d.ts
    config.ts
    stream_instance.ts
    stream.ts
  app.css
  app.d.ts
  app.html
  demo.spec.ts
  hooks.client.ts
  hooks.server.ts
  hooks.ts
svelte-nodegui-starter/
  .git/
    hooks/
      applypatch-msg.sample
      commit-msg.sample
      fsmonitor-watchman.sample
      post-update.sample
      pre-applypatch.sample
      pre-commit.sample
      pre-merge-commit.sample
      pre-push.sample
      pre-rebase.sample
      pre-receive.sample
      prepare-commit-msg.sample
      push-to-checkout.sample
      sendemail-validate.sample
      update.sample
    info/
      exclude
    refs/
      heads/
        master
      remotes/
        origin/
          HEAD
    config
    description
    FETCH_HEAD
    HEAD
    packed-refs
  src/
    components/
      dog.js
      StepOne.svelte
      StepTwo.svelte
    App.svelte
    app.ts
  .gitignore
  assets.d.ts
  livereload.js
  package.json
  README.md
  tsconfig.json
  webpack.config.js
.gitignore
.npmrc
.prettierignore
.prettierrc
diff
DOCS.md
eslint.config.js
jest.config.js
jest.setup.js
package.json
playwright.config.ts
postcss.config.js
README.md
setup.sh
stopall.sh
stopstream.sh
svelte.config.js
tailwind.config.ts
TESTING.md
tsconfig.build.json
tsconfig.build.tsbuildinfo
tsconfig.json
tsconfig.server.json
tsconfig.test.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".storybook/main.ts">
import type { StorybookConfig } from '@storybook/sveltekit';

const config: StorybookConfig = {
  "stories": [
    "../src/**/*.mdx",
    "../src/**/*.stories.@(js|ts|svelte)"
  ],
  "addons": [
    "@storybook/addon-svelte-csf",
    "@storybook/addon-essentials",
    "@chromatic-com/storybook",
    "@storybook/addon-interactions"
  ],
  "framework": {
    "name": "@storybook/sveltekit",
    "options": {}
  }
};
export default config;
</file>

<file path=".storybook/preview.ts">
import type { Preview } from '@storybook/svelte'

const preview: Preview = {
  parameters: {
    controls: {
      matchers: {
       color: /(background|color)$/i,
       date: /Date$/i,
      },
    },
  },
};

export default preview;
</file>

<file path="e2e/demo.test.ts">
import { expect, test } from '@playwright/test';

test('home page has expected h1', async ({ page }) => {
	await page.goto('/');
	await expect(page.locator('h1')).toBeVisible();
});
</file>

<file path="messages/en.json">
{
	"$schema": "https://inlang.com/schema/inlang-message-format",
	"hello_world": "Hello, {name} from en!"
}
</file>

<file path="messages/ja.json">
{
	"$schema": "https://inlang.com/schema/inlang-message-format",
	"hello_world": "Hello, {name} from ja!"
}
</file>

<file path="messages/pt-br.json">
{
	"$schema": "https://inlang.com/schema/inlang-message-format",
	"hello_world": "Hello, {name} from pt-br!"
}
</file>

<file path="project.inlang/.gitignore">
cache
</file>

<file path="project.inlang/project_id">
82c5bd7ac16080ce4ab677eafc95aa10f7ba0007e3addf85a7b647393aab4e26
</file>

<file path="project.inlang/settings.json">
{
	"$schema": "https://inlang.com/schema/project-settings",
	"modules": [
		"https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-empty-pattern@1/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-identical-pattern@1/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-missing-translation@1/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-without-source@1/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-valid-js-identifier@1/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/plugin-message-format@2/dist/index.js",
		"https://cdn.jsdelivr.net/npm/@inlang/plugin-m-function-matcher@0/dist/index.js"
	],
	"plugin.inlang.messageFormat": {
		"pathPattern": "./messages/{languageTag}.json"
	},
	"sourceLanguageTag": "en",
	"languageTags": ["en", "pt-br", "ja"]
}
</file>

<file path="scripts/shortcuts/global_shortcuts.sh">
#!/bin/bash

# Function to make API calls
make_api_call() {
    local endpoint=$1
    local data=$2
    curl -s -X POST "http://localhost:3001/api/$endpoint" \
        -H "Content-Type: application/json" \
        -d "$data"
}

# Handle command line arguments
case "$1" in
    "autostart-1")
        make_api_call "streams/autostart" '{"screen": 1}'
        ;;
    "autostart-2")
        make_api_call "streams/autostart" '{"screen": 2}'
        ;;
    "close-all")
        make_api_call "streams/close-all" '{}'
        ;;
    *)
        echo "Unknown command: $1"
        exit 1
        ;;
esac
</file>

<file path="scripts/livelink.lua">
-- LiveLink MPV Script
-- Features:
-- - Auto queue management
-- - Stream status tracking
-- - Watched stream tracking
-- - Multi-screen support
-- - Stream info display
-- - Auto-refresh capability

-- Required modules
local utils = require('mp.utils')
local msg = require('mp.msg')
local options = require('mp.options')

-- Configuration
local API_URL = "http://localhost:3001/api"
local info_display_time = 10 -- How long to show info overlay (seconds)
local REFRESH_INTERVAL = 30 * 60 -- 30 minutes in seconds
local last_refresh_time = os.time()
local MIN_WATCH_TIME = 60 -- Minimum time to watch before marking as watched (seconds)
local ERROR_RETRY_COUNT = 3 -- Number of times to retry on error
local RETRY_DELAY = 2 -- Delay between retries in seconds (reduced from 5)
local STREAM_SWITCH_DELAY = 1.0 -- Delay between switching streams in seconds (reduced from 1)
local WATCHED_CHECK_INTERVAL = 60 -- Check every minute

-- Track state
local marked_streams = {}
local playlist_initialized = false
local manual_navigation = false
local current_error_count = 0
local stream_start_time = nil
local is_stream_active = false
local active_process = nil
local is_shutting_down = false
local key_bindings_registered = false
local current_url = nil
local current_screen = nil

-- Add process state tracking
local process_state = {
    starting = false,
    shutting_down = false,
    error_count = 0,
    last_health_check = os.time()
}

-- Get script options
local script_opts = {
    screen = 1  -- Default screen number
}

-- Read options
options.read_options(script_opts, "livelink")

-- Override with command line option if present
local screen_opt = mp.get_opt("screen")
if screen_opt then
    script_opts.screen = tonumber(screen_opt) or 1
end

-- Initialize screen number once
current_screen = script_opts.screen
msg.info(string.format("LiveLink MPV script initialized"))
msg.info(string.format("Screen number set to: %d", current_screen))

-- Add safer API endpoint handling
local API = {
    streams = {
        playlist = API_URL .. "/streams/playlist",
        progress = API_URL .. "/streams/progress",
        watched = API_URL .. "/streams/watched",
        queue = function(screen) return API_URL .. "/streams/queue/" .. screen end,
        next = function(screen) return API_URL .. "/streams/next/" .. screen end,
        autostart = API_URL .. "/streams/autostart",
        restart = API_URL .. "/streams/restart",
        shutdown = API_URL .. "/streams/shutdown",
        active = API_URL .. "/streams/active"
    },
    log = API_URL .. "/log"
}

-- Get screen number from script options or socket path
function get_current_screen()
    return current_screen
end

-- Add safer API request function
function api_request(endpoint, method, data)
    if not endpoint then return nil end
    
    local headers = "Content-Type: application/json"
    local json_data = data and utils.format_json(data) or nil
    
    return http_request(endpoint, method, headers, json_data)
end

-- Helper function to send messages to node console with better error handling
function send_to_node(message_type, data)
    local screen = get_current_screen()
    if not screen then
        msg.error("Failed to send message to node: screen number unknown")
        return false
    end

    local message = utils.format_json({
        screen = screen,
        type = message_type,
        data = data
    })

    if not message then
        msg.error("Failed to format JSON message")
        return false
    end

    local success = http_request(
        API.log,
        "POST",
        "Content-Type: application/json",
        message
    )

    return success ~= nil
end

-- Helper function to log with node console and fallback to mpv log
function log_to_node(level, message)
    if not level or not message then return end
    
    -- Validate level
    if type(level) ~= "string" or type(message) ~= "string" then
        msg[level](message)
        return
    end
    
    -- Log to mpv first
    msg[level](message)
    
    -- Then try to send to node using send_to_node
    local success = send_to_node("log", {
        level = level,
        message = message
    })
    
    if not success then
        msg.warn("Failed to send log message to node")
    end
end

-- Helper function to validate URLs
function is_valid_url(url)
    if not url or type(url) ~= "string" then
        return false
    end
    
    -- Basic URL validation
    return url:match("^https?://") ~= nil
end

-- Improve HTTP request function with better error handling and retry logic
function http_request(url, method, headers, data)
    if not url then
        msg.error("Invalid URL for HTTP request")
        return nil
    end
    
    method = method or "GET"
    
    -- Build the curl command
    local command = {"curl", "-s", "-X", method, url}
    
    -- Add headers if provided
    if headers then
        table.insert(command, "-H")
        table.insert(command, headers)
    end
    
    -- Add data if provided
    if data then
        table.insert(command, "-d")
        table.insert(command, data)
    end
    
    -- Execute the command with retry logic
    local response
    for attempt = 1, ERROR_RETRY_COUNT do
        response = utils.subprocess({
            args = command,
            cancellable = false,
        })
        
        if response.status == 0 then
            break
        end
        
        msg.warn(string.format("HTTP request failed with status %d: %s", response.status, response.stderr or "Unknown error"))
        msg.info(string.format("Retrying HTTP request (%d/%d)...", attempt, ERROR_RETRY_COUNT))
        utils.sleep(RETRY_DELAY)
    end
    
    if response.status ~= 0 then
        msg.error(string.format("HTTP request failed after %d attempts", ERROR_RETRY_COUNT))
        return nil
    end
    
    -- Parse JSON response
    if response.stdout and response.stdout ~= "" then
        local success, json_data = pcall(utils.parse_json, response.stdout)
        if success and json_data then
            return json_data
        else
            msg.warn("Failed to parse JSON response: " .. (response.stdout:sub(1, 100) .. (response.stdout:len() > 100 and "..." or "")))
            return { raw = response.stdout }
        end
    end
    
    return {}
end

-- Helper function to check if a value exists in a table
function has_value(tab, val)
    if not tab then return false end
    for _, value in ipairs(tab) do
        if value == val then
            return true
        end
    end
    return false
end

-- Get next unwatched URL from queue
function get_next_unwatched()
    local screen = get_current_screen()
    if not screen then 
        msg.error("Cannot get next stream: screen number unknown")
        return nil 
    end

    msg.info("Fetching next unwatched stream for screen " .. screen)
    
    local response = http_request(API.streams.queue(screen))
    if response then
        -- Get watched streams
        local watched = http_request(API.streams.watched)
        local watched_urls = watched or {}
        
        msg.debug(string.format("Found %d streams in queue", #response))
        msg.debug(string.format("Found %d watched streams", #watched_urls))

        -- Find first unwatched stream
        for _, stream in ipairs(response) do
            if not has_value(watched_urls, stream.url) then
                msg.info("Found next unwatched stream: " .. stream.url)
                return stream.url
            end
        end
        
        msg.info("No unwatched streams found in queue")
    else
        msg.error("Failed to fetch queue")
    end
    
    return nil
end

-- Check if URL is already playing on another screen
function check_url_duplicate(url)
    -- Skip checking if URL is nil
    if not url then
        msg.debug("Skipping duplicate check for nil URL")
        return false, nil
    end

    -- Skip checking playlist files
    if string.match(url, "playlist%-screen%d+") then
        msg.debug("Skipping duplicate check for playlist file")
        return false, nil
    end

    -- Skip checking if this is a local file
    if string.match(url, "^/") then
        msg.debug("Skipping duplicate check for local file")
        return false, nil
    end
    
    -- Skip checking for about:blank
    if url == "about:blank" then
        msg.debug("Skipping about:blank update")
        return false, nil
    end

    -- Normalize URL for comparison
    local normalized_url = url
    if url:match("twitch.tv/") and not url:match("^https://") then
        normalized_url = "https://twitch.tv/" .. url:match("twitch.tv/(.+)")
    elseif url:match("youtube.com/") and not url:match("^https://") then
        normalized_url = "https://youtube.com/" .. url:match("youtube.com/(.+)")
    end

    msg.debug("Checking for duplicate stream: " .. normalized_url)
    
    local response = http_request(API.streams.active, "GET")
    if response then
        local current_screen = get_current_screen()
        for _, stream in ipairs(response) do
            -- Normalize the stream URL for comparison
            local stream_url = stream.url
            if stream_url:match("twitch.tv/") and not stream_url:match("^https://") then
                stream_url = "https://twitch.tv/" .. stream_url:match("twitch.tv/(.+)")
            elseif stream_url:match("youtube.com/") and not stream_url:match("^https://") then
                stream_url = "https://youtube.com/" .. stream_url:match("youtube.com/(.+)")
            end
            
            -- Only consider it a duplicate if:
            -- 1. Same URL (after normalization)
            -- 2. Different screen
            -- 3. The other screen has a lower number (higher priority)
            if stream_url == normalized_url and 
               stream.screen ~= current_screen and 
               stream.screen < current_screen then
                msg.warn(string.format("URL already playing on higher priority screen %d", stream.screen))
                return true, stream.screen
            end
        end
    end
    
    return false, nil
end

-- Add network connectivity check function
function check_network_connectivity()
    local command = {"ping", "-c", "1", "-W", "2", "8.8.8.8"}
    local response = utils.subprocess({
        args = command,
        cancellable = false,
    })
    
    return response.status == 0
end

-- Add a flag to track if we're already handling an end-of-playlist event
local handling_end_of_playlist = false

-- Modify handle_end_of_playlist function to handle network failures
function handle_end_of_playlist()
    -- Don't request new streams if we're shutting down
    if is_shutting_down then
        log_to_node("info", "Player is shutting down, not requesting new streams")
        return
    end

    -- Prevent infinite loops by checking if we're already handling an end-of-playlist event
    if handling_end_of_playlist then
        log_to_node("info", "Already handling end of playlist, not requesting new streams")
        return
    end

    -- Set the flag to indicate we're handling an end-of-playlist event
    handling_end_of_playlist = true
    
    -- Set a timeout to reset the flag after 30 seconds in case of failure
    mp.add_timeout(30, function()
        if handling_end_of_playlist then
            msg.warn("Resetting handling_end_of_playlist flag after timeout")
            handling_end_of_playlist = false
        end
    end)

    -- Check network connectivity
    local has_network = check_network_connectivity()
    if not has_network then
        msg.warn("No network connectivity detected, using fallback")
        
        -- Try to play a local file as fallback
        local home_dir = os.getenv("HOME") or os.getenv("USERPROFILE")
        if home_dir then
            local fallback_dirs = {
                home_dir .. "/Videos",
                home_dir .. "/Movies",
                home_dir .. "/Downloads"
            }
            
            for _, dir in ipairs(fallback_dirs) do
                local handle = io.popen('ls -1 "' .. dir .. '" 2>/dev/null | grep -E "\\.(mp4|mkv|avi|mov)$" | head -1')
                if handle then
                    local result = handle:read("*a")
                    handle:close()
                    
                    result = result:gsub("[\n\r]", "")
                    
                    if result and result ~= "" then
                        local file_path = dir .. "/" .. result
                        msg.info("Playing fallback file: " .. file_path)
                        mp.commandv("loadfile", file_path)
                        
                        -- Reset flag after successful fallback
                        mp.add_timeout(3, function()
                            handling_end_of_playlist = false
                        end)
                        return
                    end
                end
            end
        end
        
        -- If no fallback file found, try to reopen the player with a blank playlist
        msg.info("No fallback file found, reopening player with blank playlist")
        mp.commandv("loadfile", "")
        
        -- Reset flag after reopening
        mp.add_timeout(3, function()
            handling_end_of_playlist = false
        end)
        return
    end
    
    local screen = get_current_screen()
    if not screen then
        log_to_node("error", "Cannot handle end of playlist: screen number unknown")
        handling_end_of_playlist = false
        return
    end
    
    log_to_node("info", string.format("Requesting new streams for screen %d", screen))
    
    -- Request update from server
    local response = http_request(
        API.streams.autostart,
        "POST",
        "Content-Type: application/json",
        utils.format_json({ screen = screen })
    )
    
    if response and response.success then
        log_to_node("info", "Successfully requested new streams")
        -- Reset playlist initialization flag to allow new initialization
        playlist_initialized = false
        -- Add a small delay before trying to initialize again
        mp.add_timeout(STREAM_SWITCH_DELAY, function()
            initialize_playlist()
            -- Reset the flag after initialization
            handling_end_of_playlist = false
        end)
    else
        log_to_node("error", "Failed to request new streams")
        
        -- If server request failed, try to keep the player open
        msg.info("Server request failed, keeping player open with blank playlist")
        mp.commandv("loadfile", "")
        
        -- Reset the flag after reopening
        mp.add_timeout(3, function()
            handling_end_of_playlist = false
        end)
    end
end

-- Mark current stream as watched
function mark_current_watched()
    local current_url = mp.get_property("path")
    if not current_url then return end
    
    -- Send watched status to server
    local screen = get_current_screen()
    if screen then
        local data = utils.format_json({
            url = current_url,
            screen = screen
        })
        
        http_request(API.streams.watched, "POST", "Content-Type: application/json", data)
        
        -- Remove current item from playlist after marking as watched
        remove_current_from_playlist()
    end
end

-- Update screen info
function update_screen_info()
    local screen = get_current_screen()
    if not screen then 
        msg.error("Cannot update screen info: invalid screen number")
        return 
    end
    
    local url = mp.get_property("path")
    if not url then 
        msg.debug("No URL available for update")
        return 
    end
    
    -- Skip invalid URLs
    if not is_valid_url(url) then
        msg.debug("Skipping invalid URL: " .. tostring(url))
        return
    end
    
    -- Normalize URL with error handling
    local normalized_url = url
    local success, err = pcall(function()
    if url:match("twitch.tv/") and not url:match("^https://") then
        normalized_url = "https://twitch.tv/" .. url:match("twitch.tv/(.+)")
    elseif url:match("youtube.com/") and not url:match("^https://") then
        normalized_url = "https://youtube.com/" .. url:match("youtube.com/(.+)")
        end
    end)
    
    if not success then
        msg.error("Failed to normalize URL: " .. tostring(err))
        return
    end
    
    -- Only update if URL has changed
    if normalized_url ~= current_url then
        msg.info("URL changed, updating stream info")
        
        -- Update screen info via API with error handling
            local data = utils.format_json({
                url = normalized_url,
            screen = screen,
            quality = mp.get_property("options/quality") or "best",
            notify_only = true,
            log_file = get_log_filename("mpv", screen)
        })
        
        if not data then
            msg.error("Failed to format JSON data")
            return
        end
        
        msg.debug("Sending update to API: " .. data)
        
        local response = http_request(
            API_URL .. "/streams/url",
            "POST",
            "Content-Type: application/json",
            data
        )
        
        if response then
            current_url = normalized_url
        stream_start_time = os.time()
        end
    end
end

-- Show stream info overlay
function show_stream_info()
    local screen = get_current_screen()
    if not screen then return end

    msg.info("Gathering stream information for display")

    -- Get all relevant information
    local active = http_request(API_URL .. "/streams/active")
    local queue = http_request(API.streams.queue(screen))
    local config = http_request(API_URL .. "/screens/" .. screen)
    local watched = http_request(API.streams.watched)

    -- Get current playlist information
    local playlist_count = mp.get_property_number("playlist-count") or 0
    local playlist_pos = mp.get_property_number("playlist-pos") or 0
    local current_url = mp.get_property("path")

    -- Format info text
    local info = string.format("Screen %d Info:\n", screen)
    
    -- Active streams section
    info = info .. "\nActive Streams:\n"
    if active and #active > 0 then
        for _, stream in ipairs(active) do
            info = info .. string.format("  Screen %d: %s\n", stream.screen, stream.url)
            if stream.title then
                info = info .. string.format("    Title: %s\n", stream.title)
            end
        end
    else
        info = info .. "  No active streams\n"
    end

    -- Current Playlist section
    info = info .. "\nCurrent Playlist:\n"
    if playlist_count > 0 then
        info = info .. string.format("  Position: %d/%d\n", playlist_pos + 1, playlist_count)
        -- Get and display all playlist items
        for i = 0, playlist_count - 1 do
            local item_url = mp.get_property(string.format("playlist/%d/filename", i))
            local is_current = i == playlist_pos
            local watched_mark = has_value(watched or {}, item_url) and " (watched)" or ""
            local current_mark = is_current and " *CURRENT*" or ""
            info = info .. string.format("  %d: %s%s%s\n", i + 1, item_url, watched_mark, current_mark)
        end
    else
        info = info .. "  Playlist is empty\n"
    end

    -- Check for remaining streams in JSON file
    local remaining_path = string.format("/home/all/repos/LiveLink/logs/playlists/remaining-screen%d.json", screen)
    local remaining_file = io.open(remaining_path, "r")
    if remaining_file then
        local content = remaining_file:read("*all")
        remaining_file:close()
        if content and content ~= "" then
            local remaining = utils.parse_json(content)
            if remaining and #remaining > 0 then
                info = info .. "\nRemaining Streams:\n"
                for i, url in ipairs(remaining) do
                    local watched_mark = has_value(watched or {}, url) and " (watched)" or ""
                    info = info .. string.format("  %d: %s%s\n", i, url, watched_mark)
                end
            end
        end
    end

    -- Queue section
    info = info .. "\nQueue:\n"
    if queue and #queue > 0 then
        for i, stream in ipairs(queue) do
            local watched_mark = has_value(watched or {}, stream.url) and " (watched)" or ""
            info = info .. string.format("  %d: %s%s\n", i, stream.url, watched_mark)
            if stream.title then
                info = info .. string.format("    Title: %s\n", stream.title)
            end
        end
    else
        info = info .. "  Queue is empty\n"
    end

    -- Configuration section
    if config then
        info = info .. "\nScreen Configuration:\n"
        info = info .. string.format("  Enabled: %s\n", config.enabled and "yes" or "no")
        info = info .. string.format("  Quality: %s\n", config.quality or "best")
        info = info .. string.format("  Volume: %d\n", config.volume or 100)
        
        -- Current playback info
        local pos = mp.get_property_number("percent-pos") or 0
        info = info .. string.format("\nPlayback Progress: %.1f%%\n", pos)
    end

    msg.debug("Displaying info overlay:\n" .. info)
    mp.osd_message(info, info_display_time)
end

-- Clear watched streams
function clear_watched()
    msg.info("Clearing watched streams history")
    
    local response = http_request(API.streams.watched, "DELETE")
    if response then
        msg.info("Watched streams history cleared")
        mp.osd_message("Cleared watched streams history", 3)
        -- Clear local marked streams cache
        marked_streams = {}
    else
        msg.error("Failed to clear watched streams history")
        mp.osd_message("Failed to clear watched streams history", 3)
    end
end

-- Refresh current stream
function refresh_stream()
    local url = current_url
    if url then
        msg.info("Refreshing current stream: " .. url)
        mp.commandv("loadfile", url)
    else
        msg.warn("No current stream to refresh")
    end
end

-- Add check_watched_status function
function check_watched_status(time)
    if not time then return end
    
    local url = mp.get_property("path")
    if not url then return end
    
    -- Get duration if available
    local duration = mp.get_property_number("duration")
    if not duration then return end
    
    -- Calculate watch percentage
    local watch_percent = (time / duration) * 100
    
    -- Mark as watched if:
    -- 1. Watched more than minimum time (60 seconds by default)
    -- 2. Watched more than 80% of the video
    if time >= MIN_WATCH_TIME or watch_percent >= 80 then
        if not has_value(marked_streams, url) then
            -- Send watched status to server
            local data = utils.format_json({
                url = url,
                screen = get_current_screen()
            })
            
            if data then
                http_request(API.streams.watched, "POST", "Content-Type: application/json", data)
                table.insert(marked_streams, url)
                log_to_node("info", string.format("Marked stream as watched: %s", url))
            end
        end
    end
end

-- Add error recovery function
function handle_playback_error(error)
    msg.error(string.format("Playback error: %s", error))
    
    -- Get current URL and screen
    local url = mp.get_property("path")
    local screen = get_current_screen()
    
    if not url or not screen then
        msg.error("Cannot handle error: missing URL or screen number")
        return
    end
    
    -- Log error to server
    log_to_node("error", string.format("Playback error for %s: %s", url, error))
    
    -- Remove failed stream from playlist
    remove_current_from_playlist()
    
    -- Get next stream from queue
    local response = http_request(API.streams.queue(screen), "POST", nil, utils.format_json({ screen = screen }))
    
    if response and response.url then
        msg.info(string.format("Loading next stream from queue: %s", response.url))
        mp.commandv("loadfile", response.url)
    else
        msg.info("No next stream available, requesting new streams")
        -- Request new streams from server
        local autostart_response = http_request(
            API.streams.autostart,
            "POST",
            nil,
            utils.format_json({ screen = screen })
        )
        
        if not autostart_response then
            msg.error("Failed to request new streams")
            mp.osd_message("Failed to load next stream", 3)
        end
    end
end

-- Update end-file event handler
mp.register_event("end-file", function(event)
    if event.error then
        handle_playback_error(event.error)
        return
    end
    
    -- Log the event with more details
    log_to_node("info", string.format("Playback ended with reason: %s", event.reason))
    log_to_node("debug", string.format("Current URL: %s", mp.get_property("path") or "none"))
    
    -- Mark current stream as watched before moving to next
    mark_current_watched()
    
    -- Only handle automatic navigation if not in manual mode
    if not manual_navigation then
        log_to_node("info", "Auto-navigating to next stream")
        -- Add a small delay before playing next stream
        mp.add_timeout(STREAM_SWITCH_DELAY, function()
            play_next_stream()
        end)
    else
        log_to_node("info", "Manual navigation mode - not auto-playing next stream")
    end
end)

-- Update initialize_playlist function
function initialize_playlist()
    if playlist_initialized then
        return
    end

    local current_url = mp.get_property("path")
    if not current_url then
        msg.warn("No URL available for playlist initialization")
        return
    end

    -- Create initial playlist with better error handling
    local playlist = {}
    local playlist_count = mp.get_property_number("playlist-count") or 0
    
    -- If no playlist items, try to get from queue
    if playlist_count == 0 then
        local screen = get_current_screen()
        if screen then
            local response = http_request(API.streams.queue(screen), "GET")
            if response then
                -- Add queue items to playlist
                for _, item in ipairs(response) do
                    if item.url then
                        mp.commandv("loadfile", item.url, "append")
                    end
                end
                -- Update playlist count
                playlist_count = mp.get_property_number("playlist-count") or 0
            end
        end
    end
    
    local player_title = mp.get_property("media-title") or "Unknown Title"
    local viewers = mp.get_property_number("metadata/by-key/viewers") or 0
    local time = os.date("%Y-%m-%d %H:%M:%S")

    for i = 0, playlist_count - 1 do
        local item = {
            filename = mp.get_property(string.format("playlist/%d/filename", i)),
            title = string.format("%s | %s | %d viewers | %s | Screen %d", player_title, mp.get_property(string.format("playlist/%d/title", i)) or "No Title", viewers, time, get_current_screen()),
            current = (i == mp.get_property_number("playlist-pos"))
        }
        table.insert(playlist, item)
    end

    -- Send playlist update to server with proper error handling
    local success, err = pcall(function()
        local data = utils.format_json({
            screen = get_current_screen(),
            data = playlist,
            type = "playlist"
        })
        
        if not data then
            error("Failed to format playlist data")
        end

        local response = http_request(
            API.streams.playlist,
            "POST",
            "Content-Type: application/json",
            data
        )

        -- Even if the response has an error, we'll consider the playlist initialized
        -- This prevents repeated attempts that might fail
        if response and response.error then
            msg.warn("Server returned error for playlist update: " .. response.error)
        end
    end)

    if not success then
        msg.warn("Failed to send playlist update: " .. (err or "unknown error"))
        -- Still mark as initialized to prevent repeated failures
    end

    playlist_initialized = true
    msg.info("Playlist initialized successfully")
end

-- Add safer property observers
function observe_properties()
    -- Observe playlist position changes
    mp.observe_property("playlist-pos", "number", function(_, pos)
        if pos then
            initialize_playlist()
        end
    end)
    
    -- Observe playback time for progress updates
    mp.observe_property("time-pos", "number", function(_, time)
        if time then
            local duration = mp.get_property_number("duration")
            if duration then
                local remaining = duration - time
                local data = utils.format_json({
                    screen = script_opts.screen,
                    position = time,
                    duration = duration,
                    remaining = remaining
                })
                
                if data then
                    http_request(API.streams.progress, "POST", "Content-Type: application/json", data)
                end
            end
        end
    end)
end

-- Initialize script
function init()
    -- Initialize screen number
    if not script_opts.screen then
        msg.error("Screen number not set")
        return
    end
    
    -- Log initialization
    msg.info(string.format("Initializing LiveLink for screen %d", script_opts.screen))
    
    -- Setup key bindings if not already done
    if not key_bindings_registered then
        -- Register key bindings
        mp.add_key_binding("F2", "show-stream-info", show_stream_info)
        mp.add_key_binding("F5", "refresh-stream", refresh_stream)
        mp.add_key_binding("Ctrl+F5", "clear-watched", clear_watched)
        mp.add_key_binding("PGDWN", "playlist-next-stream", next_stream)
        mp.add_key_binding("PGUP", "playlist-prev-stream", prev_stream)
        mp.add_key_binding("Alt+k", "auto-start-screen-2", function() auto_start_screen(2) end)
        mp.add_key_binding("Alt+l", "auto-start-screen-1", function() auto_start_screen(1) end)
        
        -- Log key bindings
        local bindings = {
            "F2 -> show-stream-info",
            "F5 -> refresh-stream",
            "Ctrl+F5 -> clear-watched",
            "PGDWN -> playlist-next-stream",
            "PGUP -> playlist-prev-stream",
            "Alt+k -> auto-start-screen-2",
            "Alt+l -> auto-start-screen-1"
        }
        
        for _, binding in ipairs(bindings) do
            msg.debug("Registered key binding: " .. binding)
        end
        
        key_bindings_registered = true
    end
    
    -- Initialize playlist observer
    mp.observe_property("playlist", "native", function(_, playlist)
        if playlist then
            initialize_playlist()
        end
    end)
    
    -- Initialize path observer
    mp.observe_property("path", "string", function(_, path)
        if path and path ~= current_url then
            current_url = path
            initialize_playlist()
        end
    end)
    
    -- Initialize time observer for watched status
    mp.observe_property("time-pos", "number", function(_, time)
        if time and not manual_navigation then
            check_watched_status(time)
        end
    end)
    
    msg.info(string.format("Successfully initialized screen number: %d", script_opts.screen))

    -- Display player information on startup
    local player_title = mp.get_property("media-title") or "Unknown Title"
    local viewers = mp.get_property_number("metadata/by-key/viewers") or 0
    local time = os.date("%Y-%m-%d %H:%M:%S")
    local screen = script_opts.screen
    local startup_info = string.format("Player: %s | Viewers: %d | Time: %s | Screen: %d", player_title, viewers, time, screen)
    msg.info("Startup Info: " .. startup_info)
    mp.osd_message(startup_info, 5)
end

-- Register script message handlers
mp.register_script_message("log", function(level, message)
    log_to_node(level, message)
end)

-- Start initialization when player is ready
mp.register_event("file-loaded", function()
    if not is_shutting_down then
        init()
        -- Update window title when file is loaded
        update_window_title()
        -- Register title observers
        register_title_observers()
    end
end)

-- Cleanup on exit
mp.register_event("shutdown", function()
    is_shutting_down = true
    msg.debug("Exiting...")
end)

-- Update playlist navigation handlers
-- Removed ENTER binding for playlist selection

-- Add handler for playlist-next command
mp.add_key_binding("PGDWN", "playlist-next-stream", function()
    play_next_stream()
end)

-- Add handler for playlist-next command
mp.add_key_binding("END", "playlist-next-stream", function()
    play_next_stream()
end)
-- Add handler for playlist-prev command
mp.add_key_binding("PGUP", "playlist-prev-stream", function()
    local pos = mp.get_property_number("playlist-pos") or 0
    
    if pos > 0 then
        mp.commandv("playlist-prev")
        mp.osd_message("Playing previous stream", 2)
    else
        mp.osd_message("Already at start of playlist", 2)
    end
end)

-- Add a flag to track if we're already playing the next stream
local playing_next_stream = false

-- Improve play_next_stream function to handle network failures
function play_next_stream()
    -- Don't play next stream if we're shutting down
    if is_shutting_down then
        log_to_node("info", "Player is shutting down, not playing next stream")
        return
    end

    -- Prevent infinite loops by checking if we're already playing the next stream
    if playing_next_stream then
        log_to_node("info", "Already playing next stream, not requesting another")
        return
    end

    -- Set the flag to indicate we're playing the next stream
    playing_next_stream = true
    
    -- Set a timeout to reset the flag after 30 seconds in case of failure
    mp.add_timeout(30, function()
        if playing_next_stream then
            msg.warn("Resetting playing_next_stream flag after timeout")
            playing_next_stream = false
        end
    end)
    
    -- Check network connectivity
    local has_network = check_network_connectivity()
    if not has_network then
        msg.warn("No network connectivity detected, keeping player open")
        
        -- Try to play a local file as fallback
        local home_dir = os.getenv("HOME") or os.getenv("USERPROFILE")
        if home_dir then
            local fallback_dirs = {
                home_dir .. "/Videos",
                home_dir .. "/Movies",
                home_dir .. "/Downloads"
            }
            
            for _, dir in ipairs(fallback_dirs) do
                local handle = io.popen('ls -1 "' .. dir .. '" 2>/dev/null | grep -E "\\.(mp4|mkv|avi|mov)$" | head -1')
                if handle then
                    local result = handle:read("*a")
                    handle:close()
                    
                    result = result:gsub("[\n\r]", "")
                    
                    if result and result ~= "" then
                        local file_path = dir .. "/" .. result
                        msg.info("Playing fallback file: " .. file_path)
                        mp.commandv("loadfile", file_path)
                        
                        -- Reset flag after successful fallback
                        mp.add_timeout(3, function()
                            playing_next_stream = false
                        end)
                        return
                    end
                end
            end
        end
        
        -- If no fallback file found, try to reopen the player with a blank playlist
        msg.info("No fallback file found, keeping player open with blank playlist")
        mp.commandv("loadfile", "")
        
        -- Reset flag after reopening
        mp.add_timeout(3, function()
            playing_next_stream = false
        end)
        return
    end

    local screen = get_current_screen()
    if not screen then 
        playing_next_stream = false
        return 
    end
    
    log_to_node("info", "Requesting next stream from API")
    mp.osd_message("Requesting next stream from API", 1)
    
    -- Try first with the next endpoint
    local response = api_request(API.streams.next(screen), "POST", {
        screen = screen
    })
    
    -- If that fails, try the queue endpoint
    if not response or not response.url then
        log_to_node("info", "Next endpoint failed, trying queue endpoint")
        response = http_request(API.streams.queue(screen), "GET")
        
        if response and #response > 0 then
            response = response[1]  -- Take the first item from the queue
        end
    end
    
    if response and response.url then
        log_to_node("info", string.format("Playing next stream: %s", response.url))
        mp.commandv("loadfile", response.url)
        mp.osd_message("Playing next stream", 2)
        
        -- Reset the flag after a delay to allow the new stream to load
        mp.add_timeout(5, function()
            playing_next_stream = false
        end)
    else
        log_to_node("warn", "No next stream available")
        mp.osd_message("No more streams available", 2)
        
        -- Only request new streams if we're not already handling an end-of-playlist event
        if not handling_end_of_playlist then
        -- Request new streams from server
        handle_end_of_playlist()
        else
            log_to_node("info", "Already handling end of playlist, not requesting new streams")
        end
        
        -- Reset the flag since we're done
        playing_next_stream = false
    end
end

-- Helper function to safely read a file
function safe_read_file(path)
    if not path or type(path) ~= "string" then
        msg.error("Invalid file path")
        return nil
    end
    
    local success, file = pcall(io.open, path, "r")
    if not success or not file then
        msg.debug(string.format("Could not open file: %s", path))
        return nil
    end
    
    local content = file:read("*all")
    file:close()
    
    return content
end

-- Helper function to safely write a file
function safe_write_file(path, content)
    if not path or type(path) ~= "string" then
        msg.error("Invalid file path")
        return false
    end
    
    local success, file = pcall(io.open, path, "w")
    if not success or not file then
        msg.error(string.format("Could not open file for writing: %s", path))
        return false
    end
    
    local write_success = pcall(file.write, file, content)
    file:close()
    
    return write_success
end

-- Helper function to safely execute shell commands
function safe_execute(command)
    if not command or type(command) ~= "string" then
        msg.error("Invalid command")
        return nil
    end
    
    local success, result, err = pcall(os.execute, command)
    if not success then
        msg.error(string.format("Command execution failed: %s", err or "unknown error"))
        return nil
    end
    
    return result
end

-- Update cleanup_old_logs function to be safer
function cleanup_old_logs(directory)
    if not directory or type(directory) ~= "string" then
        msg.error("Invalid directory path")
        return
    end
    
    -- Validate directory exists
    local stat = utils.file_info(directory)
    if not stat or not stat.is_dir then
        msg.error(string.format("Invalid log directory: %s", directory))
        return
    end
    
    local max_age_days = 7 -- Default to 7 days
    local cmd = string.format('find %q -name "*.log" -type f -mtime +%d -delete 2>/dev/null', 
        directory, max_age_days)
    
    local success = safe_execute(cmd)
    if success then
        log_to_node("debug", string.format("Cleaned up old logs in %s", directory))
    else
        log_to_node("error", string.format("Failed to clean up logs in %s", directory))
    end
end

-- Update get_log_filename to be safer
function get_log_filename(prefix, screen)
    if not prefix or type(prefix) ~= "string" then
        msg.error("Invalid log prefix")
        return nil
    end
    
    if not screen or type(screen) ~= "number" or screen < 1 then
        msg.error("Invalid screen number for log filename")
        return nil
    end
    
    local timestamp = os.date("%Y%m%d-%H%M%S")
    if not timestamp then
        msg.error("Failed to generate timestamp for log filename")
        return nil
    end
    
    local log_dir = "/home/all/repos/LiveLink/logs/" .. prefix
    
    -- Ensure log directory exists
    local stat = utils.file_info(log_dir)
    if not stat or not stat.is_dir then
        -- Try to create directory
        local success = safe_execute(string.format("mkdir -p %q", log_dir))
        if not success then
            msg.error(string.format("Failed to create log directory: %s", log_dir))
            return nil
        end
    end
    
    return string.format("%s/%s-screen%d-%s.log", 
        log_dir, prefix, screen, timestamp)
end

-- Function to auto-start streams on a specific screen
function auto_start_screen(screen)
    msg.info(string.format("Auto-starting streams on screen %d", screen))
    
    local data = utils.format_json({
        screen = screen
    })
    
    local response = http_request(API.streams.autostart, "POST", nil, data)
    
    if response then
        mp.osd_message(string.format("Auto-starting streams on screen %d", screen), 3)
    else
        mp.osd_message(string.format("Failed to auto-start streams on screen %d", screen), 3)
    end
end

-- Add health check function
function check_process_health()
    if not process_state.starting and not process_state.shutting_down then
        local pid = mp.get_property_number("pid")
        if not pid then
            process_state.error_count = process_state.error_count + 1
            
            if process_state.error_count >= ERROR_RETRY_COUNT then
                show_error("Process appears to be unresponsive", 10)
                request_restart()
            end
        else
            process_state.error_count = 0
            process_state.last_health_check = os.time()
        end
    end
end

-- Add restart request function
function request_restart()
    local screen = get_current_screen()
    if not screen then return end
    
    -- Only request restart if not already in progress
    if not process_state.starting then
        process_state.starting = true
        
        log_to_node("info", "Requesting stream restart")
        
        local data = utils.format_json({
            screen = screen,
            type = "restart"
        })
        
        local response = http_request(API.streams.restart, "POST", nil, data)
        
        if response then
            log_to_node("info", "Restart request sent successfully")
        else
            log_to_node("error", "Failed to send restart request")
            process_state.starting = false
        end
    else
        log_to_node("warn", "Startup already in progress, skipping restart request")
    end
end

-- Add periodic health check timer
mp.add_periodic_timer(5, check_process_health)

-- Update shutdown handler with process state
mp.register_event("shutdown", function()
    if not process_state.shutting_down then
        process_state.shutting_down = true
        log_to_node("info", "MPV shutting down, cleaning up...")
        
        -- Clear active process flag
        active_process = nil
        
        -- Notify the server about shutdown
        local screen = get_current_screen()
        if screen then
            local data = utils.format_json({
                screen = screen,
                type = "shutdown",
                error_count = process_state.error_count
            })
            
            http_request(API.streams.shutdown, "POST", nil, data)
        end
    end
end)

-- Add a flag to track if we're already handling an end-file event
local handling_end_file = false

-- Add end-file event handler with improved logging
mp.register_event("end-file", function(event)
    -- Prevent infinite loops by checking if we're already handling an end-file event
    if handling_end_file then
        log_to_node("info", "Already handling end-file event, not auto-navigating")
        return
    end

    -- Set the flag to indicate we're handling an end-file event
    handling_end_file = true
    
    -- Set a timeout to reset the flag after 30 seconds in case of failure
    mp.add_timeout(30, function()
        if handling_end_file then
            msg.warn("Resetting handling_end_file flag after timeout")
            handling_end_file = false
        end
    end)
    
    -- Log the event with more details
    log_to_node("info", string.format("Playback ended with reason: %s", event.reason))
    log_to_node("debug", string.format("Current URL: %s", mp.get_property("path") or "none"))
    
    -- Check if this is a manual close (EOF, quit, or error code 4)
    if event.reason == "quit" or event.reason == "eof" or (event.error and event.error:match("code 4")) then
        log_to_node("info", "Player closed manually or reached end of file, not auto-navigating")
        handling_end_file = false
        return
    end
    
    -- Check network connectivity
    local has_network = check_network_connectivity()
    if not has_network then
        msg.warn("No network connectivity detected, keeping player open")
        
        -- Try to play a local file as fallback
        local home_dir = os.getenv("HOME") or os.getenv("USERPROFILE")
        if home_dir then
            local fallback_dirs = {
                home_dir .. "/Videos",
                home_dir .. "/Movies",
                home_dir .. "/Downloads"
            }
            
            for _, dir in ipairs(fallback_dirs) do
                local handle = io.popen('ls -1 "' .. dir .. '" 2>/dev/null | grep -E "\\.(mp4|mkv|avi|mov)$" | head -1')
                if handle then
                    local result = handle:read("*a")
                    handle:close()
                    
                    result = result:gsub("[\n\r]", "")
                    
                    if result and result ~= "" then
                        local file_path = dir .. "/" .. result
                        msg.info("Playing fallback file: " .. file_path)
                        mp.commandv("loadfile", file_path)
                        
                        -- Reset flag after successful fallback
                        mp.add_timeout(3, function()
                            handling_end_file = false
                        end)
                        return
                    end
                end
            end
        end
        
        -- If no fallback file found, try to reopen the player with a blank playlist
        msg.info("No fallback file found, keeping player open with blank playlist")
        mp.commandv("loadfile", "")
        
        -- Reset flag after reopening
        mp.add_timeout(3, function()
            handling_end_file = false
        end)
        return
    end
    
    -- Mark current stream as watched before moving to next
    mark_current_watched()
    
    -- Only handle automatic navigation if not in manual mode
    if not manual_navigation then
        log_to_node("info", "Auto-navigating to next stream")
        -- Add a small delay before playing next stream
        mp.add_timeout(STREAM_SWITCH_DELAY, function()
            play_next_stream()
            -- Reset the flag after playing the next stream
            handling_end_file = false
        end)
    else
        log_to_node("info", "Manual navigation mode - not auto-playing next stream")
        handling_end_file = false
    end
end)

-- Log initialization with more details
log_to_node("info", "LiveLink MPV script initialized")
local screen = get_current_screen()
if screen then
    log_to_node("info", string.format("Running on screen %d", screen))
    -- Log MPV version
    local mpv_version = mp.get_property("mpv-version")
    log_to_node("info", string.format("MPV version: %s", mpv_version))
else
    log_to_node("warn", "Could not determine screen number")
end

-- Initialize screen number early
local initial_screen = get_current_screen()
if initial_screen then
    msg.info("Successfully initialized screen number: " .. initial_screen)
else
    msg.error("Failed to initialize screen number")
end

-- Add playlist control functions
function add_to_playlist(url)
    if not url or type(url) ~= "string" then
        show_error("Invalid URL for playlist")
        return false
    end

    local success, err = pcall(function()
        mp.commandv("loadfile", url, "append")
    end)

    if success then
        log_to_node("info", string.format("Added %s to playlist", url))
        return true
    else
        show_error(string.format("Failed to add %s to playlist", url))
        return false
    end
end

function remove_current_from_playlist()
    local current_pos = mp.get_property_number("playlist-pos")
    if current_pos == nil then
        log_to_node("error", "No current playlist position")
        return false
    end

    local success, err = pcall(function()
        mp.commandv("playlist-remove", "current")
    end)

    if success then
        log_to_node("info", "Removed current item from playlist")
        return true
    else
        log_to_node("error", string.format("Failed to remove current item: %s", err))
        return false
    end
end

function play_playlist_index(index)
    if not index or type(index) ~= "number" then
        show_error("Invalid playlist index")
        return false
    end

    local playlist_count = mp.get_property_number("playlist-count")
    if not playlist_count or index >= playlist_count then
        show_error(string.format("Invalid index %d (playlist size: %d)", 
            index, playlist_count or 0))
        return false
    end

    local success, err = pcall(function()
        mp.commandv("playlist-play-index", tostring(index))
    end)

    if success then
        log_to_node("info", string.format("Playing playlist index %d", index))
        return true
    else
        show_error(string.format("Failed to play index %d", index))
        return false
    end
end

function shuffle_playlist()
    local playlist_count = mp.get_property_number("playlist-count")
    if not playlist_count or playlist_count < 2 then
        log_to_node("warn", "Not enough items to shuffle")
        return false
    end

    local success, err = pcall(function()
        mp.commandv("playlist-shuffle")
    end)

    if success then
        log_to_node("info", "Shuffled playlist")
        return true
    else
        log_to_node("error", string.format("Failed to shuffle playlist: %s", err))
        return false
    end
end

function clear_playlist_except_current()
    local success, err = pcall(function()
        mp.commandv("playlist-clear")
    end)

    if success then
        log_to_node("info", "Cleared playlist except current")
        return true
    else
        log_to_node("error", string.format("Failed to clear playlist: %s", err))
        return false
    end
end

-- Add command handlers for playlist control
mp.register_script_message("playlist-add", function(url)
    add_to_playlist(url)
end)

mp.register_script_message("playlist-remove-current", function()
    remove_current_from_playlist()
end)

mp.register_script_message("playlist-play-index", function(index)
    play_playlist_index(tonumber(index))
end)

mp.register_script_message("playlist-shuffle", function()
    shuffle_playlist()
end)

mp.register_script_message("playlist-clear", function()
    clear_playlist_except_current()
end)

-- Add playlist change observer
mp.observe_property("playlist-count", "number", function(_, count)
    if count then
        local playlist = {}
        for i = 0, count - 1 do
            local item = {
                filename = mp.get_property(string.format("playlist/%d/filename", i)),
                title = mp.get_property(string.format("playlist/%d/title", i)),
                current = (i == mp.get_property_number("playlist-pos"))
            }
            table.insert(playlist, item)
        end
        
        -- Send playlist update to server
        local screen = get_current_screen()
        if screen then
            local data = utils.format_json({
                screen = screen,
                type = "playlist",
                data = playlist
            })
            
            http_request(API.streams.playlist, "POST", nil, data)
        end
    end
end)

-- Add queue loading and management functions
function load_queue()
    if not script_opts.screen then
        show_error("Cannot load queue: screen number not set")
        return false
    end
    
    local response = http_request(API.streams.queue(script_opts.screen), "GET")
    if not response then
        show_error("Failed to load queue from server")
        return false
    end
    
    -- Clear existing playlist
    local success = pcall(function()
        mp.commandv("playlist-clear")
    end)

    if not success then
        show_error("Failed to clear playlist")
        return false
    end
    
    -- Add each queue item to playlist
    local added = 0
    for _, item in ipairs(response) do
        if item.url then
            success = pcall(function()
                mp.commandv("loadfile", item.url, "append")
            end)
            
            if success then
                added = added + 1
            end
        end
    end
    
    log_to_node("info", string.format("Loaded %d items from queue", added))
    return added > 0
end

function remove_watched_streams()
    local screen = get_current_screen()
    if not screen then
        log_to_node("error", "Cannot remove watched streams: screen number not available")
        return false
    end

    -- Get current playlist
    local playlist_count = mp.get_property_number("playlist-count")
    if not playlist_count or playlist_count == 0 then
        log_to_node("info", "No items in playlist")
        return true
    end

    -- Collect indices of watched items (in reverse order)
    local watched_indices = {}
    for i = 0, playlist_count - 1 do
        local filename = mp.get_property(string.format("playlist/%d/filename", i))
        if filename then
            -- Check if URL is in watched list
            local response = http_request(API.streams.watched, "GET")
            
            if response and response[filename] then
                table.insert(watched_indices, 1, i)  -- Insert at beginning for reverse order
            end
        end
    end

    -- Remove watched items (starting from highest index)
    local removed_count = 0
    for _, index in ipairs(watched_indices) do
        local success, err = pcall(function()
            mp.commandv("playlist-remove", tostring(index))
        end)
        
        if success then
            removed_count = removed_count + 1
        else
            log_to_node("error", string.format("Failed to remove playlist item %d: %s", index, err))
        end
    end

    if removed_count > 0 then
        log_to_node("info", string.format("Removed %d watched items from playlist", removed_count))
    end
    
    return true
end

-- Add startup queue loading
mp.register_event("file-loaded", function()
    -- Only load queue if this is the first file
    if mp.get_property_number("playlist-pos") == 0 then
        log_to_node("info", "First file loaded, initializing queue...")
        load_queue()
    end
end)

-- Add periodic check for watched streams
mp.add_periodic_timer(WATCHED_CHECK_INTERVAL, function()
    remove_watched_streams()
end)

-- Add command handler for manual queue reload
mp.register_script_message("reload-queue", function()
    load_queue()
end)

-- Add error display function with better formatting
function show_error(message, duration)
    if not message then return end
    duration = duration or 5
    
    -- Log the error
    msg.error(message)
    
    -- Show error on OSD with better formatting
    local osd_message = string.format("{\\an7}{\\c&H0000FF&}Error: %s", message)
    mp.osd_message(osd_message, duration)
    
    -- Try to send to node
    log_to_node("error", message)
end

-- Update initialization error handling
mp.register_event("start-file", function()
    local screen = get_current_screen()
    if not screen then
        show_error("Failed to initialize: screen number not available", 10)
        return
    end
    
    -- Check for required properties
    local path = mp.get_property("path")
    if not path then
        show_error("Failed to initialize: no media loaded", 10)
        return
    end
    
    -- Initialize playlist if needed
    if mp.get_property_number("playlist-count", 0) == 0 then
        if not load_queue() then
            show_error("Failed to load initial queue", 10)
        end
    end
end)

-- Add the missing check_watched_status function
function check_watched_status(time)
    if not time then return end
    
    local current_url = mp.get_property("path")
    if not current_url then return end
    
    -- Skip if already marked as watched
    if has_value(marked_streams, current_url) then
        return
    end
    
    -- Get duration
    local duration = mp.get_property_number("duration")
    if not duration then return end
    
    -- Mark as watched if:
    -- 1. Watched more than MIN_WATCH_TIME seconds, or
    -- 2. Watched more than 80% of the video
    local watch_threshold = math.min(MIN_WATCH_TIME, duration * 0.8)
    
    if time >= watch_threshold then
        log_to_node("info", string.format("Marking stream as watched: %s (watched %.1f seconds)", 
            current_url, time))
        
        -- Add to local cache
        table.insert(marked_streams, current_url)
        
        -- Send to server
        mark_current_watched()
    end
end

-- Update window title with current stream title and handle environment variables
function update_window_title()
    local screen = get_current_screen()
    if not screen then return end
    
    -- Try different properties to get the best title
    local title = mp.get_property("media-title") or 
                 mp.get_property("filename") or 
                 mp.get_property("path")
                 
    if title then
        -- Clean up the title (remove URL parameters, etc.)
        title = title:gsub("^https?://[^/]+/", "")  -- Remove domain
        title = title:gsub("%?.*$", "")             -- Remove URL parameters
        title = title:gsub("&.*$", "")              -- Remove ampersand and following
        title = title:gsub("%.%w+$", "")            -- Remove file extension
        title = title:gsub("_", " ")                -- Replace underscores with spaces
        title = title:gsub("-", " ")                -- Replace hyphens with spaces
        
        -- Keep the LiveLink-X prefix for window positioning script
        local window_title = string.format("LiveLink-%d - %s", screen, title)
        mp.command(string.format("set window-title \"%s\"", window_title))
        log_to_node("debug", string.format("Updated window title to: %s", window_title))
    end
end

-- Register observers for properties that might contain the title
function register_title_observers()
    -- Update title when media-title changes
    mp.observe_property("media-title", "string", function(_, title)
        if title then
            update_window_title()
        end
    end)
    
    -- Also observe filename as fallback
    mp.observe_property("filename", "string", function(_, filename)
        if filename then
            update_window_title()
        end
    end)
    
    -- Observe metadata changes
    mp.observe_property("metadata", "native", function(_, metadata)
        if metadata then
            update_window_title()
        end
    end)
end

-- Helper function to expand environment variables in strings
function expand_env_vars(str)
    if not str then return str end
    
    -- Replace ${VAR} or $VAR with the environment variable value
    local result = str:gsub("%${([%w_]+)}", os.getenv)
    result = result:gsub("%$([%w_]+)", os.getenv)
    
    -- Replace ${SCREEN} with the current screen number
    result = result:gsub("%${SCREEN}", tostring(get_current_screen()))
    result = result:gsub("%$SCREEN", tostring(get_current_screen()))
    
    -- Replace ${DATE} with current date in ISO format
    local date_str = os.date("%Y-%m-%d-%H-%M-%S")
    result = result:gsub("%${DATE}", date_str)
    result = result:gsub("%$DATE", date_str)
    
    return result
end

-- Helper function to handle file paths with environment variables
function get_log_file_path()
    local screen = get_current_screen()
    if not screen then return nil end
    
    local home = os.getenv("HOME") or os.getenv("USERPROFILE")
    if not home then return nil end
    
    local date_str = os.date("%Y-%m-%d-%H-%M-%S")
    local log_path = home .. "/.livelink/logs/mpv/mpv-screen" .. screen .. "-" .. date_str .. ".log"
    
    return log_path
end

-- Get IPC socket path with environment variables expanded
function get_ipc_path()
    local screen = get_current_screen()
    if not screen then return nil end
    
    local home = os.getenv("HOME") or os.getenv("USERPROFILE")
    if not home then 
        return "/tmp/mpv-ipc-" .. screen
    end
    
    return home .. "/.livelink/mpv-ipc-" .. screen
end
</file>

<file path="scripts/position_windows.sh">
#!/bin/bash

# This script positions MPV windows on the correct monitors
# It should be run after MPV windows are opened

# Wait for windows to initialize
sleep 2

# Find all MPV windows
mpv_windows=$(xdotool search --class mpv)

# Loop through each window
for window_id in $mpv_windows; do
  # Get window title
  title=$(xdotool getwindowname $window_id)
  
  # Position based on title
  if [[ "$title" == *"LiveLink-1"* ]]; then
    # Screen 1 - Position on primary monitor
    xdotool windowmove $window_id 1366 0
    xdotool windowsize $window_id 1920 1080
    xdotool windowmaximize $window_id
    echo "Positioned window $window_id (LiveLink-1) on primary monitor"
  elif [[ "$title" == *"LiveLink-2"* ]]; then
    # Screen 2 - Position on secondary monitor
    xdotool windowmove $window_id 0 312
    xdotool windowsize $window_id 1366 768
    xdotool windowmaximize $window_id
    echo "Positioned window $window_id (LiveLink-2) on secondary monitor"
  fi
done

exit 0
</file>

<file path="src/components/Header.svelte">
<script lang="ts">
  import { page } from '$app/stores';
  import { activeStreams } from '$lib/stores';

  let activeStreamCount = $derived($activeStreams.length);
</script>

<header class="bg-gray-800 shadow-lg">
  <div class="container mx-auto px-4">
    <nav class="flex items-center justify-between h-16">
      <div class="flex items-center space-x-8">
        <a href="/" class="text-xl font-bold text-white hover:text-gray-300">
          LiveLink
        </a>
        
        <div class="hidden md:flex space-x-4">
          <a 
            href="/streams" 
            class="px-3 py-2 rounded-md text-sm font-medium {$page.url.pathname.startsWith('/streams') ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white'}"
          >
            Streams {activeStreamCount > 0 ? `(${activeStreamCount})` : ''}
          </a>
          
          <a 
            href="/settings" 
            class="px-3 py-2 rounded-md text-sm font-medium {$page.url.pathname === '/settings' ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white'}"
          >
            Settings
          </a>
        </div>
      </div>

      <div class="flex items-center space-x-4">
        <button 
          class="px-4 py-2 rounded bg-purple-600 hover:bg-purple-700 text-white font-medium text-sm transition-colors"
          on:click={() => window.location.href = '/api/auth/twitch'}
        >
          Connect Twitch
        </button>
      </div>
    </nav>
  </div>
</header>
</file>

<file path="src/components/PlayerControls.svelte">
<script lang="ts">
  import { api } from '$lib/api';
  import type { Stream } from '../types/stream.js';
  import { onMount, onDestroy } from 'svelte';

  let { stream } = $props<{
    stream: Stream;
  }>();

  let volume = $state(stream.volume || 50);
  let seeking = $state(false);
  let error = $state<string | null>(null);
  let isPaused = $state(stream.playerStatus === 'paused');

  let updateInterval: ReturnType<typeof setInterval>;

  const handleVolumeChange = async (event: Event) => {
    const target = event.target as HTMLInputElement;
    const newVolume = parseInt(target.value);
    try {
      await api.setVolume(stream.screen, newVolume);
      volume = newVolume;
    } catch (err) {
      console.error('Error setting volume:', err);
      error = err instanceof Error ? err.message : 'Failed to set volume';
      setTimeout(() => error = null, 3000);
    }
  };

  const togglePause = async () => {
    try {
      await api.togglePause(stream.screen);
      isPaused = !isPaused;
    } catch (err) {
      console.error('Error toggling pause:', err);
      error = err instanceof Error ? err.message : 'Failed to toggle pause';
      setTimeout(() => error = null, 3000);
    }
  };

  const updateStreamStatus = async () => {
    try {
      const status = await api.getStreamStatus(stream.screen);
      isPaused = status.playerStatus === 'paused';
      volume = status.volume || volume;
    } catch (err) {
      console.error('Error updating stream status:', err);
    }
  };

  async function handleSeek(seconds: number) {
    if (seeking) return;
    seeking = true;
    try {
      await api.seek(stream.screen, seconds);
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to seek';
      setTimeout(() => error = null, 3000);
    } finally {
      seeking = false;
    }
  }

  async function restartStream() {
    try {
      await api.restartStream(stream.screen);
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to restart stream';
      setTimeout(() => error = null, 3000);
    }
  }

  onMount(() => {
    updateStreamStatus();
    updateInterval = setInterval(updateStreamStatus, 2000);
  });

  onDestroy(() => {
    if (updateInterval) {
      clearInterval(updateInterval);
    }
  });
</script>

<div class="card card-dark mb-4">
  <div class="card-header card-header-dark">
    <h5 class="mb-0">Player Controls</h5>
  </div>
  
  <div class="card-body">
    {#if error}
      <div class="alert alert-danger alert-dismissible fade show mb-3">
        <strong>Error!</strong> {error}
        <button type="button" class="btn-close" on:click={() => error = null}></button>
      </div>
    {/if}

    <div class="d-flex align-items-center gap-3">
      <button
        class="btn btn-outline-light"
        on:click={togglePause}
        title={isPaused ? 'Play' : 'Pause'}
        aria-label={isPaused ? 'Play' : 'Pause'}
      >
        <i class="bi {isPaused ? 'bi-play-fill' : 'bi-pause-fill'}"></i>
      </button>

      <div class="d-flex gap-2">
        <button
          class="btn btn-outline-light"
          on:click={() => handleSeek(-10)}
          title="Rewind 10s"
          disabled={seeking}
        >
          <i class="bi bi-rewind-fill"></i>
        </button>

        <button
          class="btn btn-outline-light"
          on:click={() => handleSeek(10)}
          title="Forward 10s"
          disabled={seeking}
        >
          <i class="bi bi-fast-forward-fill"></i>
        </button>
      </div>

      <div class="d-flex align-items-center flex-grow-1 gap-2">
        <i class="bi bi-volume-up"></i>
        <input
          type="range"
          class="form-range"
          min="0"
          max="100"
          bind:value={volume}
          on:change={handleVolumeChange}
        />
      </div>

      <button
        class="btn btn-outline-light"
        on:click={restartStream}
        title="Restart Stream"
      >
        <i class="bi bi-arrow-repeat"></i>
      </button>
    </div>
    
    <div class="mt-3">
      <div class="d-flex justify-content-between text-muted small">
        <div>Status: <span class="badge {stream.playerStatus === 'playing' ? 'bg-success' : stream.playerStatus === 'paused' ? 'bg-warning text-dark' : stream.playerStatus === 'error' ? 'bg-danger' : 'bg-secondary'}">{stream.playerStatus || 'unknown'}</span></div>
        <div>Volume: {volume}%</div>
      </div>
    </div>
  </div>
</div>

<style>
  .card-dark {
    background-color: #2c2c2c;
    border-color: #444;
    color: #f8f9fa;
  }
  
  .card-header-dark {
    background-color: #222;
    border-color: #444;
    color: #f8f9fa;
  }
  
  /* Bootstrap Icons fallback */
  .bi-play-fill::before {
    content: "▶";
  }
  
  .bi-rewind-fill::before {
    content: "◀◀";
  }
  
  .bi-fast-forward-fill::before {
    content: "▶▶";
  }
  
  .bi-volume-up::before {
    content: "🔊";
  }
  
  .bi-arrow-repeat::before {
    content: "↻";
  }
</style>
</file>

<file path="src/components/QueueList.svelte">
<script lang="ts">
  import type { StreamSource } from '../types/stream.js';
  import { streamQueues } from '$lib/stores';

  let { screen, queue } = $props<{
    screen: number;
    queue: StreamSource[];
  }>();

  let draggedIndex = $state<number | null>(null);

  async function reorderQueue(sourceIndex: number, targetIndex: number) {
    try {
      const response = await fetch('/api/streams/reorder', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          screen,
          sourceIndex,
          targetIndex
        })
      });

      if (!response.ok) throw new Error('Failed to reorder queue');

      // Update local queue
      streamQueues.update(queues => {
        const currentQueue = [...(queues.get(screen) || [])];
        const [item] = currentQueue.splice(sourceIndex, 1);
        currentQueue.splice(targetIndex, 0, item);
        queues.set(screen, currentQueue);
        return queues;
      });

    } catch (error) {
      console.error('Failed to reorder queue:', error);
    }
  }

  function handleDragStart(event: DragEvent, index: number) {
    draggedIndex = index;
    if (event.dataTransfer) {
      event.dataTransfer.effectAllowed = 'move';
    }
  }

  function handleDragOver(event: DragEvent, index: number) {
    event.preventDefault();
    if (event.dataTransfer) {
      event.dataTransfer.dropEffect = 'move';
    }
  }

  function handleDrop(event: DragEvent, index: number) {
    event.preventDefault();
    if (draggedIndex !== null && draggedIndex !== index) {
      reorderQueue(draggedIndex, index);
    }
    draggedIndex = null;
  }
  
  function removeFromQueue(index: number) {
    streamQueues.update(queues => {
      const currentQueue = [...(queues.get(screen) || [])];
      currentQueue.splice(index, 1);
      queues.set(screen, currentQueue);
      return queues;
    });
  }
</script>

<div class="mt-4">
  <div class="card card-dark">
    <div class="card-header card-header-dark d-flex justify-content-between align-items-center">
      <h5 class="mb-0">Queue</h5>
      <span class="badge bg-info">{queue.length}</span>
    </div>
    
    <div class="card-body">
      {#if queue.length === 0}
        <div class="alert alert-secondary text-center">
          Queue is empty
        </div>
      {:else}
        <div class="list-group">
          {#each queue as stream, i}
            <div
              class="list-group-item list-group-item-action bg-dark text-light border-secondary"
              draggable="true"
              role="listitem"
              ondragstart={(e) => handleDragStart(e, i)}
              ondragover={(e) => handleDragOver(e, i)}
              ondrop={(e) => handleDrop(e, i)}
            >
              <div class="d-flex justify-content-between align-items-start">
                <div>
                  <h6 class="mb-1 text-truncate" style="max-width: 300px;">
                    {stream.title || 'Untitled Stream'}
                  </h6>
                  <p class="mb-1 text-muted small text-truncate" style="max-width: 300px;">
                    {stream.url}
                  </p>
                  {#if stream.viewerCount !== undefined}
                    <span class="badge bg-secondary">
                      {stream.viewerCount.toLocaleString()} viewers
                    </span>
                  {/if}
                </div>

                <div class="d-flex align-items-center">
                  {#if stream.platform}
                    <span class="badge bg-primary me-2">
                      {stream.platform}
                    </span>
                  {/if}
                  <button
                    class="btn btn-sm btn-outline-danger"
                    aria-label="Remove from queue"
                    onclick={() => removeFromQueue(i)}
                  >
                    <i class="bi bi-x"></i>
                  </button>
                </div>
              </div>
            </div>
          {/each}
        </div>
      {/if}
    </div>
  </div>
</div>

<style>
  .card-dark {
    background-color: #2c2c2c;
    border-color: #444;
    color: #f8f9fa;
  }
  
  .card-header-dark {
    background-color: #222;
    border-color: #444;
    color: #f8f9fa;
  }
  
  /* Drag and drop styling */
  [draggable=true] {
    cursor: move;
  }
  
  /* Bootstrap Icons fallback */
  .bi-x::before {
    content: "×";
    font-size: 1.5rem;
    line-height: 1;
  }
</style>
</file>

<file path="src/config/defaults/player.ts">
import { type MpvConfig, type StreamlinkConfig } from '../types/player.js';

export const defaultMpvConfig: MpvConfig = {
  // Video Output & Hardware Acceleration
  vo: 'gpu',
  hwdec: 'auto-copy-safe',
  'gpu-api': 'x11',
  'gpu-context': 'x11',
  'hwdec-codecs': 'all',
  
  // Process Priority
  priority: 'high',
  
  // Video Quality & Processing
  deband: false,
  'deband-iterations': 1,
  'deband-threshold': 64,
  'deband-range': 16,
  'deband-grain': 48,
  'temporal-dither': false,
  'dither-depth': 'auto',
  'correct-downscaling': false,
  'linear-downscaling': false,
  'sigmoid-upscaling': false,
  
  // Scaling Options
  scale: 'bilinear',
  cscale: 'bilinear',
  dscale: 'bilinear',
  'scale-antiring': 0.0,
  'cscale-antiring': 0.0,
  
  // Performance & Sync
  'video-sync': 'display-resample',
  interpolation: false,
  tscale: 'oversample',
  'video-sync-max-factor': 5,
  'video-sync-adrop-size': 0.05,
  framedrop: 'vo',
  
  // Cache & Network
  cache: true,
  'cache-secs': 60,
  'demuxer-max-bytes': '800M',
  'demuxer-max-back-bytes': '200M',
  'network-timeout': 60,
  'stream-buffer-size': '64M',
  
  // Window Behavior
  'keep-open': true,
  'force-window': true,
  ontop: false,
  border: true,
  'cursor-autohide': 1,
  
  // Audio
  'audio-channels': 'auto-safe',
  'audio-pitch-correction': true,
  'audio-fallback-to-null': true,
  'audio-buffer': 0.2,
  'audio-normalize-downmix': false,
  
  // OSD & UI
  'osd-level': 1,
  'osd-duration': 1000,
  'osd-font': 'sans-serif',
  'osd-font-size': 32,
  'osd-color': '#CCFFFFFF',
  'osd-border-color': '#DD322640',
  
  // Debug & Logging
  'msg-level': 'all=v',
  
  // YouTube-DL
  'ytdl-format': 'bestvideo[height<=?1080]+bestaudio/best',
  'ytdl-raw-options': 'ignore-errors=,quiet=,no-warnings=,retries=10',
  
  // Screenshots
  'screenshot-format': 'png',
  'screenshot-png-compression': 7,
  'screenshot-template': '%F-%P-%n'
};

export const defaultStreamlinkConfig: StreamlinkConfig = {
  // Stream Quality & Selection
  default_quality: 'best',
  stream_sorting_excludes: '>1080p,<480p',
  default_stream: ['1080p', '720p', 'best'],
  
  // Timeouts & Retries
  stream_timeout: 60,
  hls_timeout: 60,
  hls_live_edge: 3,
  hls_playlist_reload_time: 1,
  retry_max: 10,
  retry_streams: 3,
  retry_open: 3,
  
  // Stream Optimization
  prefer_cdn: true,
  disable_ads: true,
  low_latency: false,
  
  // Buffer & Performance
  ringbuffer_size: '32M',
  stream_segment_threads: 2,
  stream_segment_attempts: 5,
  stream_segment_timeout: 10,
  
  // Platform Specific
  twitch_disable_hosting: true,
  twitch_disable_ads: true,
  twitch_low_latency: false,
  
  // HTTP Settings
  http_header: {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',
    'Accept-Language': 'en-US,en;q=0.9'
  },
  
  // Logging & Debug
  loglevel: 'debug'
};
</file>

<file path="src/config/schemas/player.ts">
import { z } from 'zod';

// Make schemas accept any string key with any value
export const MpvConfigSchema = z.record(z.any()).default({
  // Video Output & Hardware Acceleration
  vo: 'gpu',
  hwdec: 'auto-copy-safe',
  'gpu-api': 'x11',
  'gpu-context': 'x11',
  'gpu-hwdec-interop': z.string().optional(),
  'hwdec-codecs': z.string().default('all'),
  
  // Process Priority
  priority: 'high',
  
  // Video Quality & Processing
  'deband': z.boolean().default(false),
  'deband-iterations': z.number().default(1),
  'deband-threshold': z.number().default(64),
  'deband-range': z.number().default(16),
  'deband-grain': z.number().default(48),
  'temporal-dither': z.boolean().default(false),
  'dither-depth': z.string().default('auto'),
  'correct-downscaling': z.boolean().default(false),
  'linear-downscaling': z.boolean().default(false),
  'sigmoid-upscaling': z.boolean().default(false),
  
  // Scaling Options
  'scale': z.string().default('bilinear'),
  'cscale': z.string().default('bilinear'),
  'dscale': z.string().default('bilinear'),
  'scale-antiring': z.number().default(0.0),
  'cscale-antiring': z.number().default(0.0),
  'scale-radius': z.number().optional(),
  'scale-blur': z.number().optional(),
  'scale-clamp': z.number().optional(),
  
  // Performance & Sync
  'video-sync': z.string().default('display-resample'),
  'interpolation': z.boolean().default(false),
  'tscale': z.string().default('oversample'),
  'video-sync-max-factor': z.number().default(5),
  'video-sync-adrop-size': z.number().default(0.05),
  'framedrop': z.string().default('vo'),
  
  // Cache & Network
  'cache': z.boolean().default(true),
  'cache-secs': z.number().default(60),
  'demuxer-max-bytes': z.string().default('800M'),
  'demuxer-max-back-bytes': z.string().default('200M'),
  'network-timeout': z.number().default(60),
  'stream-buffer-size': z.string().default('64M'),
  
  // Window Behavior (non-geometry related)
  'keep-open': true,
  'force-window': true,
  'ontop': z.boolean().default(false),
  'border': z.boolean().default(true),
  'cursor-autohide': z.number().default(1),
  
  // Audio
  'audio-channels': z.string().default('auto-safe'),
  'audio-pitch-correction': z.boolean().default(true),
  'audio-fallback-to-null': z.boolean().default(true),
  'audio-buffer': z.number().default(0.2),
  'audio-device': z.string().optional(),
  'audio-normalize-downmix': z.boolean().default(false),
  
  // OSD & UI
  'osd-level': z.number().default(1),
  'osd-duration': z.number().default(1000),
  'osd-font': z.string().default('sans-serif'),
  'osd-font-size': z.number().default(32),
  'osd-color': z.string().default('#CCFFFFFF'),
  'osd-border-color': z.string().default('#DD322640'),
  
  // Debug & Logging
  'msg-level': 'all=v',
  'log-file': z.string().optional(),
  
  // YouTube-DL
  'ytdl-format': z.string().default('bestvideo[height<=?1080]+bestaudio/best'),
  'ytdl-raw-options': z.string().default('ignore-errors=,quiet=,no-warnings=,retries=10'),
  
  // Screenshots
  'screenshot-format': z.string().default('png'),
  'screenshot-png-compression': z.number().default(7),
  'screenshot-directory': z.string().optional(),
  'screenshot-template': z.string().default('%F-%P-%n')
});

export const StreamlinkConfigSchema = z.record(z.any()).default({
  // Stream Quality & Selection
  default_quality: 'best',
  stream_sorting_excludes: z.string().default('>1080p,<480p'),
  default_stream: z.array(z.string()).default(['1080p', '720p', 'best']),
  
  // Timeouts & Retries
  stream_timeout: 60,
  hls_timeout: 60,
  hls_live_edge: z.number().default(3),
  hls_playlist_reload_time: z.number().default(1),
  retry_max: 10,
  retry_streams: 3,
  retry_open: z.number().default(3),
  
  // Stream Optimization
  prefer_cdn: true,
  disable_ads: true,
  low_latency: false,
  
  // Buffer & Performance
  ringbuffer_size: z.string().default('32M'),
  stream_segment_threads: z.number().default(2),
  stream_segment_attempts: z.number().default(5),
  stream_segment_timeout: z.number().default(10),
  
  // Platform Specific
  twitch_disable_hosting: z.boolean().default(true),
  twitch_disable_ads: z.boolean().default(true),
  twitch_low_latency: z.boolean().default(false),
  
  // HTTP Settings
  http_header: z.record(z.string()).default({
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',
    'Accept-Language': 'en-US,en;q=0.9'
  }),
  
  // Logging & Debug
  loglevel: z.string().default('debug'),
  logfile: z.string().optional()
});
</file>

<file path="src/config/types/player.ts">
import { z } from 'zod';
import { MpvConfigSchema, StreamlinkConfigSchema } from '../schemas/player.js';

export type MpvConfig = Record<string, any>;
export type StreamlinkConfig = Record<string, any>;

// Screen-specific settings that come from player.json
export interface PlayerConfig {
  geometry?: string;
  'window-maximized'?: boolean;
}
</file>

<file path="src/config/env.ts">
import { z } from 'zod';
import { config } from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

// Load environment variables
config();

const envSchema = z.object({
  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),
  PORT: z.string().transform(Number).default('3001'),
  LOG_LEVEL: z.enum(['error', 'warn', 'info', 'debug']).default('info'),
  DATABASE_PATH: z.string().default(path.resolve(process.cwd(), 'data/streams.db')),
  HOLODEX_API_KEY: z.string({
    required_error: 'HOLODEX_API_KEY is required'
  }),
  TWITCH_CLIENT_ID: z.string({
    required_error: 'TWITCH_CLIENT_ID is required'
  }),
  TWITCH_CLIENT_SECRET: z.string({
    required_error: 'TWITCH_CLIENT_SECRET is required'
  })
});

export const env = envSchema.parse(process.env);
</file>

<file path="src/lib/i18n/helpers.ts">
import { get } from 'svelte/store';
import { locale, t, type Locale } from './index.js';

export function useTranslation() {
  return {
    t,
    locale,
    setLocale: (newLocale: Locale) => locale.set(newLocale),
    getLocale: () => get(locale)
  };
}

export function getLocaleFromPath(path: string): Locale {
  const lang = path.split('/')[1];
  return (lang === 'en' || lang === 'ja') ? lang as Locale : 'en';
}
</file>

<file path="src/lib/i18n/index.ts">
import { writable, derived } from 'svelte/store';

export type Locale = 'en' | 'ja';

export const translations = {
  en: {
    welcome: 'Welcome to LiveLink',
    streams: 'Streams',
    settings: 'Settings',
    queue: 'Queue',
    connectTwitch: 'Connect Twitch',
    streamControl: {
      play: 'Play',
      pause: 'Pause',
      stop: 'Stop',
      volume: 'Volume',
      quality: 'Quality'
    },
    errors: {
      streamStart: 'Failed to start stream',
      streamStop: 'Failed to stop stream',
      connection: 'Connection error'
    }
  },
  ja: {
    welcome: 'LiveLinkへようこそ',
    streams: 'ストリーム',
    settings: '設定',
    queue: 'キュー',
    connectTwitch: 'Twitchと接続',
    streamControl: {
      play: '再生',
      pause: '一時停止',
      stop: '停止',
      volume: '音量',
      quality: '画質'
    },
    errors: {
      streamStart: 'ストリームの開始に失敗しました',
      streamStop: 'ストリームの停止に失敗しました',
      connection: '接続エラー'
    }
  }
} as const;

export type Translation = typeof translations;
export type TranslationKeys = keyof Translation['en'];

export const locale = writable<Locale>('en');

export const t = derived(locale, ($locale) => translations[$locale]);
</file>

<file path="src/lib/i18n/types.ts">
import type { BaseTranslation } from 'typesafe-i18n';

export type Translations = {
  welcome: string;
  streams: string;
  settings: string;
  queue: string;
  connectTwitch: string;
  streamControl: {
    play: string;
    pause: string;
    stop: string;
    volume: string;
    quality: string;
  };
  errors: {
    streamStart: string;
    streamStop: string;
    connection: string;
  };
}

export type Translation = {
  [K in 'en' | 'ja']: Translations;
}

export type Formatters = {}
export type Locales = keyof Translation;
</file>

<file path="src/lib/stores/auth.ts">
import { writable } from 'svelte/store';

interface TwitchUser {
  id: string;
  username: string;
  isAuthenticated: boolean;
}

export const twitchUser = writable<TwitchUser>({
  id: '',
  username: '',
  isAuthenticated: false
});
</file>

<file path="src/lib/stores/index.ts">
import { writable } from 'svelte/store';
import type { Stream, StreamSource } from '../../types/stream.js';

// Active streams store
export const activeStreams = writable<Stream[]>([]);

// Queue store for each screen
export const streamQueues = writable<Map<number, StreamSource[]>>(new Map());

// Screen configuration store
export const screenConfigs = writable<Map<number, {
  enabled: boolean;
  width: number;
  height: number;
  x: number;
  y: number;
  volume: number;
  quality: string;
  windowMaximized: boolean;
}>>(new Map());

// Player settings store
export const playerSettings = writable({
  preferStreamlink: false,
  defaultQuality: 'best',
  defaultVolume: 0,
  windowMaximized: true,
  maxStreams: 2,
  autoStart: true
});

// Initialize all stores
export async function initializeStores() {
  try {
    // Fetch active streams
    const streamsResponse = await fetch('/api/streams/active');
    const streams = await streamsResponse.json();
    activeStreams.set(streams);

    // Fetch player settings
    const settingsResponse = await fetch('/api/player/settings');
    const settings = await settingsResponse.json();
    playerSettings.set(settings);

    // Set up screen configs
    const screensResponse = await fetch('/api/screens');
    const screens = await screensResponse.json();
    const screenConfigMap = new Map();
    screens.forEach((screen: any) => {
      screenConfigMap.set(screen.id, {
        enabled: screen.enabled,
        width: screen.width,
        height: screen.height,
        x: screen.x,
        y: screen.y,
        volume: screen.volume,
        quality: screen.quality,
        windowMaximized: screen.windowMaximized
      });
    });
    screenConfigs.set(screenConfigMap);

    // Set up stream queues
    const queueMap = new Map();
    for (const screen of screens) {
      const queueResponse = await fetch(`/api/streams/queue/${screen.id}`);
      const queue = await queueResponse.json();
      queueMap.set(screen.id, queue);
    }
    streamQueues.set(queueMap);

  } catch (error) {
    console.error('Failed to initialize stores:', error);
  }
}

// Subscribe to WebSocket updates
if (typeof window !== 'undefined') {
  const ws = new WebSocket(`ws://${window.location.host}/ws`);
  
  ws.onmessage = (event) => {
    const data = JSON.parse(event.data);
    
    switch (data.type) {
      case 'streamUpdate':
        activeStreams.update(streams => {
          const index = streams.findIndex(s => s.screen === data.stream.screen);
          if (index !== -1) {
            streams[index] = data.stream;
          } else {
            streams.push(data.stream);
          }
          return streams;
        });
        break;
        
      case 'queueUpdate':
        streamQueues.update(queues => {
          queues.set(data.screen, data.queue);
          return queues;
        });
        break;
        
      case 'screenUpdate':
        screenConfigs.update(configs => {
          configs.set(data.screen.id, {
            enabled: data.screen.enabled,
            width: data.screen.width,
            height: data.screen.height,
            x: data.screen.x,
            y: data.screen.y,
            volume: data.screen.volume,
            quality: data.screen.quality,
            windowMaximized: data.screen.windowMaximized
          });
          return configs;
        });
        break;
    }
  };
}
</file>

<file path="src/lib/index.ts">
// Reexport your entry components here
</file>

<file path="src/routes/config/+page.svelte">
<script lang="ts">
  import { onMount } from 'svelte';
  import ConfigEditor from '$components/ConfigEditor.svelte';
  import { writable } from 'svelte/store';

  let loading = true;
  let error: string | null = null;
  let success: string | null = null;
  
  const config = writable({
    streams: [],
    organizations: [],
    favoriteChannels: {
      holodex: [],
      twitch: []
    },
    holodex: {
      apiKey: ''
    },
    twitch: {
      clientId: '',
      clientSecret: '',
      streamersFile: 'config/streamers.txt'
    }
  });

  async function loadConfig() {
    try {
      const response = await fetch('/api/config');
      const data = await response.json();
      config.set(data);
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to load configuration';
    } finally {
      loading = false;
    }
  }

  async function saveConfig(updatedConfig: any) {
    try {
      const response = await fetch('/api/config', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updatedConfig)
      });

      if (!response.ok) throw new Error('Failed to save configuration');

      success = 'Configuration saved successfully';
      setTimeout(() => success = null, 3000);
      
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to save configuration';
      setTimeout(() => error = null, 3000);
    }
  }

  onMount(() => {
    loadConfig();
  });
</script>

<div class="space-y-8">
  <div class="flex justify-between items-center">
    <h1 class="text-2xl font-bold">Configuration Editor</h1>
    
    <div class="space-x-4">
      <button
        class="px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-white"
        on:click={loadConfig}
      >
        Reload
      </button>
    </div>
  </div>

  {#if error}
    <div class="bg-red-500 text-white p-4 rounded">
      {error}
      <button class="ml-4 underline" on:click={() => error = null}>Dismiss</button>
    </div>
  {/if}

  {#if success}
    <div class="bg-green-500 text-white p-4 rounded">
      {success}
      <button class="ml-4 underline" on:click={() => success = null}>Dismiss</button>
    </div>
  {/if}

  {#if loading}
    <div class="flex justify-center items-center h-64">
      <div class="animate-spin rounded-full h-32 w-32 border-b-2 border-white"></div>
    </div>
  {:else}
    <ConfigEditor 
      config={$config} 
      on:save={(e) => saveConfig(e.detail)}
    />
  {/if}
</div>
</file>

<file path="src/routes/demo/paraglide/+page.svelte">
<script lang="ts">
	import { locale, t } from '$lib/i18n';
</script>

<div class="container mx-auto px-4 py-8">
	<h1 class="text-2xl font-bold mb-4">{$t.welcome}</h1>
	
	<div class="space-y-4">
		<div class="flex space-x-4">
			<button 
				class="px-4 py-2 bg-blue-500 text-white rounded"
				onclick={() => locale.set('en')}
			>
				English
			</button>
			<button 
				class="px-4 py-2 bg-blue-500 text-white rounded"
				onclick={() => locale.set('ja')}
			>
				日本語
			</button>
		</div>

		<div class="space-y-2">
			<p>{$t.streams}</p>
			<p>{$t.settings}</p>
			<p>{$t.queue}</p>
			<p>{$t.connectTwitch}</p>
		</div>
	</div>
</div>
</file>

<file path="src/routes/demo/+page.svelte">
<a href="/demo/paraglide">paraglide</a>
</file>

<file path="src/routes/manager/+page.svelte">
<script lang="ts">
  import { onMount, onDestroy } from 'svelte';
  import { page } from '$app/stores';

  interface Stream {
    screen: number;
    url: string;
    quality: string;
    title?: string;
    platform?: 'youtube' | 'twitch';
  }

  let streams: Stream[] = [];
  let newStream = {
    url: $page.url.searchParams.get('url') || '',
    quality: 'best',
    screen: 1,
    volume: 0,
    windowMaximized: true
  };

  const API_URL = 'http://localhost:3001/api';

  async function fetchStreams() {
    const response = await fetch(`${API_URL}/streams`);
    streams = await response.json();
  }

  async function startStream() {
    await fetch(`${API_URL}/streams`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newStream)
    });
    await fetchStreams();
  }

  async function stopStream(screen: number) {
    await fetch(`${API_URL}/streams/${screen}`, {
      method: 'DELETE'
    });
    await fetchStreams();
  }

  let interval: number;
  onMount(() => {
    fetchStreams();
    interval = setInterval(fetchStreams, 5000);
  });

  onDestroy(() => {
    clearInterval(interval);
  });
</script>

<div class="container mx-auto p-4">
  <header class="mb-8">
    <nav class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-lg">
      <div class="flex gap-4">
        <a href="/" class="hover:text-gray-300">Home</a>
        <a href="/manager" class="hover:text-gray-300">Stream Manager</a>
      </div>
    </nav>
  </header>

  <main>
    <h1 class="text-2xl font-bold mb-6">Stream Manager</h1>

    <div class="mb-8 p-6 bg-gray-100 rounded-lg">
      <h2 class="text-xl mb-4">Add New Stream</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <input
          type="text"
          bind:value={newStream.url}
          placeholder="Stream URL"
          class="p-2 border rounded"
        />
        <select bind:value={newStream.quality} class="p-2 border rounded">
          <option value="best">Best</option>
          <option value="1080p">1080p</option>
          <option value="720p">720p</option>
          <option value="480p">480p</option>
        </select>
        <input
          type="number"
          bind:value={newStream.screen}
          min="1"
          max="4"
          class="p-2 border rounded"
          placeholder="Screen"
        />
        <button
          on:click={startStream}
          class="bg-blue-500 hover:bg-blue-600 text-white p-2 rounded"
        >
          Start Stream
        </button>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      {#each streams as stream (stream.screen)}
        <div class="p-6 border rounded-lg shadow">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="font-bold text-lg">Screen {stream.screen}</h3>
              <p class="text-gray-600 truncate mt-1">{stream.url}</p>
              <p class="text-sm text-gray-500 mt-1">Quality: {stream.quality}</p>
              {#if stream.title}
                <p class="text-sm text-gray-500 mt-1">Title: {stream.title}</p>
              {/if}
            </div>
            <button
              on:click={() => stopStream(stream.screen)}
              class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded"
            >
              Stop
            </button>
          </div>
        </div>
      {/each}
    </div>
  </main>
</div>
</file>

<file path="src/routes/settings/+page.svelte">
<script lang="ts">
  import { playerSettings, screenConfigs } from '$lib/stores';
  import PlayerConfig from '$components/PlayerConfig.svelte';
  import LayerConfig from '$components/LayerConfig.svelte';
  import { onMount } from 'svelte';
  import type { MPVConfig, StreamlinkConfig, LayerConfig as LayerConfigType } from '../types/config';

  let loading = true;
  let error: string | null = null;
  let success: string | null = null;

  const priorities = [
    { value: 'realtime', label: 'Realtime' },
    { value: 'high', label: 'High' },
    { value: 'above_normal', label: 'Above Normal' },
    { value: 'normal', label: 'Normal' },
    { value: 'below_normal', label: 'Below Normal' },
    { value: 'low', label: 'Low' },
    { value: 'idle', label: 'Idle' }
  ];

  const qualities = [
    'best',
    '1080p',
    '720p',
    '480p',
    'worst'
  ];

  async function updatePlayerPriority(priority: string) {
    try {
      const response = await fetch('/api/player/priority', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ priority })
      });

      if (!response.ok) throw new Error('Failed to update priority');

      success = 'Priority updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update priority';
      setTimeout(() => error = null, 3000);
    }
  }

  async function updateScreenConfig(screen: number, config: any) {
    try {
      const response = await fetch(`/api/screens/${screen}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(config)
      });

      if (!response.ok) throw new Error('Failed to update screen configuration');

      success = 'Screen configuration updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update screen configuration';
      setTimeout(() => error = null, 3000);
    }
  }

  async function updatePlayerSettings(settings: any) {
    try {
      const response = await fetch('/api/player/settings', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(settings)
      });

      if (!response.ok) throw new Error('Failed to update player settings');

      success = 'Settings updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update settings';
      setTimeout(() => error = null, 3000);
    }
  }

  async function updateMPVConfig(event: CustomEvent<MPVConfig>) {
    try {
      const response = await fetch('/api/player/mpv', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(event.detail)
      });

      if (!response.ok) throw new Error('Failed to update MPV configuration');

      success = 'MPV configuration updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update MPV configuration';
      setTimeout(() => error = null, 3000);
    }
  }

  async function updateStreamlinkConfig(event: CustomEvent<StreamlinkConfig>) {
    try {
      const response = await fetch('/api/player/streamlink', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(event.detail)
      });

      if (!response.ok) throw new Error('Failed to update Streamlink configuration');

      success = 'Streamlink configuration updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update Streamlink configuration';
      setTimeout(() => error = null, 3000);
    }
  }

  async function updateLayerConfig(screen: number, event: CustomEvent<LayerConfigType>) {
    try {
      const response = await fetch(`/api/screens/${screen}/layer`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(event.detail)
      });

      if (!response.ok) throw new Error('Failed to update layer configuration');

      success = 'Layer configuration updated successfully';
      setTimeout(() => success = null, 3000);

    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to update layer configuration';
      setTimeout(() => error = null, 3000);
    }
  }

  onMount(async () => {
    try {
      const response = await fetch('/api/player/settings');
      const settings = await response.json();
      playerSettings.set(settings);
      loading = false;
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to load settings';
      loading = false;
    }
  });
</script>

<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-8">Settings</h1>

  {#if error}
    <div class="bg-red-500 text-white p-4 rounded mb-4">
      {error}
    </div>
  {/if}

  {#if success}
    <div class="bg-green-500 text-white p-4 rounded mb-4">
      {success}
    </div>
  {/if}

  {#if loading}
    <div class="flex justify-center items-center h-64">
      <div class="animate-spin rounded-full h-32 w-32 border-b-2 border-white"></div>
    </div>
  {:else}
    <div class="space-y-8">
      <!-- Basic Player Settings -->
      <div class="bg-gray-800 rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-6">Basic Settings</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="space-y-4">
            <label class="block">
              <span class="text-sm text-gray-300">Default Quality</span>
              <select
                class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                bind:value={$playerSettings.defaultQuality}
                on:change={() => updatePlayerSettings($playerSettings)}
              >
                {#each qualities as quality}
                  <option value={quality}>{quality}</option>
                {/each}
              </select>
            </label>

            <label class="block">
              <span class="text-sm text-gray-300">Default Volume</span>
              <input
                type="range"
                class="mt-1 block w-full"
                min="0"
                max="100"
                bind:value={$playerSettings.defaultVolume}
                on:change={() => updatePlayerSettings($playerSettings)}
              />
            </label>

            <label class="flex items-center space-x-2">
              <input
                type="checkbox"
                class="rounded bg-gray-700 border-gray-600"
                bind:checked={$playerSettings.preferStreamlink}
                on:change={() => updatePlayerSettings($playerSettings)}
              />
              <span class="text-sm text-gray-300">Prefer Streamlink for Twitch</span>
            </label>

            <label class="flex items-center space-x-2">
              <input
                type="checkbox"
                class="rounded bg-gray-700 border-gray-600"
                bind:checked={$playerSettings.windowMaximized}
                on:change={() => updatePlayerSettings($playerSettings)}
              />
              <span class="text-sm text-gray-300">Start Maximized</span>
            </label>

            <label class="flex items-center space-x-2">
              <input
                type="checkbox"
                class="rounded bg-gray-700 border-gray-600"
                bind:checked={$playerSettings.autoStart}
                on:change={() => updatePlayerSettings($playerSettings)}
              />
              <span class="text-sm text-gray-300">Auto-start Streams</span>
            </label>
          </div>

          <div class="space-y-4">
            <label class="block">
              <span class="text-sm text-gray-300">Maximum Streams</span>
              <input
                type="number"
                class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                min="1"
                max="16"
                bind:value={$playerSettings.maxStreams}
                on:change={() => updatePlayerSettings($playerSettings)}
              />
            </label>
          </div>
        </div>
      </div>

      <!-- MPV and Streamlink Configuration -->
      <PlayerConfig
        mpvConfig={$playerSettings.mpv || {}}
        streamlinkConfig={$playerSettings.streamlink || {}}
        on:mpvupdate={updateMPVConfig}
        on:streamlinkupdate={updateStreamlinkConfig}
      />

      <!-- Screen Configurations -->
      <div class="space-y-6">
        <h2 class="text-xl font-semibold">Screen Configurations</h2>

        {#each Array.from($screenConfigs) as [screen, config]}
          <div class="bg-gray-800 rounded-lg p-6">
            <h3 class="text-lg font-semibold mb-4">Screen {screen}</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <!-- Screen Settings -->
              <div class="space-y-4">
                <label class="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    class="rounded bg-gray-700 border-gray-600"
                    bind:checked={config.enabled}
                    on:change={() => updatePlayerSettings($playerSettings)}
                  />
                  <span class="text-sm text-gray-300">Enabled</span>
                </label>

                <label class="block">
                  <span class="text-sm text-gray-300">Width</span>
                  <input
                    type="number"
                    class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                    bind:value={config.width}
                    on:change={() => updatePlayerSettings($playerSettings)}
                  />
                </label>

                <label class="block">
                  <span class="text-sm text-gray-300">Height</span>
                  <input
                    type="number"
                    class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                    bind:value={config.height}
                    on:change={() => updatePlayerSettings($playerSettings)}
                  />
                </label>

                <label class="block">
                  <span class="text-sm text-gray-300">X Position</span>
                  <input
                    type="number"
                    class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                    bind:value={config.x}
                    on:change={() => updatePlayerSettings($playerSettings)}
                  />
                </label>

                <label class="block">
                  <span class="text-sm text-gray-300">Y Position</span>
                  <input
                    type="number"
                    class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                    bind:value={config.y}
                    on:change={() => updatePlayerSettings($playerSettings)}
                  />
                </label>
              </div>

              <!-- Layer Configuration -->
              {#if config.enabled}
                <LayerConfig
                  layer={config.layer || {
                    zIndex: 0,
                    opacity: 1,
                    visible: true,
                    blendMode: 'normal'
                  }}
                  on:update={(event) => updateLayerConfig(screen, event)}
                />
              {/if}
            </div>
          </div>
        {/each}
      </div>
    </div>
  {/if}
</div>
</file>

<file path="src/routes/streams/+page.svelte">
<script lang="ts">
  import { activeStreams, streamQueues, screenConfigs } from '$lib/stores';
  import StreamCard from '$components/StreamCard.svelte';
  import QueueList from '$components/QueueList.svelte';
  import { onMount } from 'svelte';

  let loading = true;
  let error: string | null = null;

  async function startStream(url: string, screen: number) {
    try {
      const response = await fetch('/api/streams', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ url, screen })
      });
      
      if (!response.ok) throw new Error('Failed to start stream');
      
      const result = await response.json();
      if (result.error) throw new Error(result.error);
      
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to start stream';
    }
  }

  async function stopStream(screen: number) {
    try {
      const response = await fetch(`/api/streams/${screen}`, {
        method: 'DELETE'
      });
      
      if (!response.ok) throw new Error('Failed to stop stream');
      
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to stop stream';
    }
  }

  async function toggleScreen(screen: number, enabled: boolean) {
    try {
      const response = await fetch(`/api/screens/${screen}/${enabled ? 'enable' : 'disable'}`, {
        method: 'POST'
      });
      
      if (!response.ok) throw new Error(`Failed to ${enabled ? 'enable' : 'disable'} screen`);
      
    } catch (err) {
      error = err instanceof Error ? err.message : 'Failed to toggle screen';
    }
  }

  onMount(() => {
    loading = false;
  });
</script>

<div class="space-y-8">
  <div class="flex justify-between items-center">
    <h1 class="text-2xl font-bold">Stream Manager</h1>
    <div class="space-x-4">
      <button
        class="px-4 py-2 bg-green-600 hover:bg-green-700 rounded text-white"
        on:click={() => {
          $screenConfigs.forEach((config, screen) => {
            if (config.enabled && !$activeStreams.find(s => s.screen === screen)) {
              startStream('', screen);
            }
          });
        }}
      >
        Start All
      </button>
      <button
        class="px-4 py-2 bg-red-600 hover:bg-red-700 rounded text-white"
        on:click={() => {
          $activeStreams.forEach(stream => stopStream(stream.screen));
        }}
      >
        Stop All
      </button>
    </div>
  </div>

  {#if error}
    <div class="bg-red-500 text-white p-4 rounded">
      {error}
      <button class="ml-4 underline" on:click={() => error = null}>Dismiss</button>
    </div>
  {/if}

  {#if loading}
    <div class="flex justify-center items-center h-64">
      <div class="animate-spin rounded-full h-32 w-32 border-b-2 border-white"></div>
    </div>
  {:else}
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {#each Array.from($screenConfigs) as [screen, config]}
        <div class="bg-gray-800 rounded-lg p-6 space-y-6">
          <div class="flex justify-between items-center">
            <h2 class="text-xl font-semibold">Screen {screen}</h2>
            <label class="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                class="sr-only peer"
                checked={config.enabled}
                on:change={(e) => toggleScreen(screen, e.currentTarget.checked)}
              >
              <div class="w-11 h-6 bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
            </label>
          </div>

          {#if config.enabled}
            {@const activeStream = $activeStreams.find(s => s.screen === screen)}
            {#if activeStream}
              <StreamCard 
                stream={activeStream}
                onStop={() => stopStream(screen)}
              />
            {:else}
              <div class="text-center py-8 bg-gray-700 rounded">
                <p class="text-gray-300">No active stream</p>
                <button
                  class="mt-4 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-white"
                  on:click={() => startStream('', screen)}
                >
                  Start Stream
                </button>
              </div>
            {/if}

            <QueueList
              screen={screen}
              queue={$streamQueues.get(screen) || []}
            />
          {:else}
            <div class="text-center py-8 text-gray-400">
              Screen disabled
            </div>
          {/if}
        </div>
      {/each}
    </div>
  {/if}
</div>
</file>

<file path="src/routes/+layout.svelte">
<script lang="ts">
	import Navigation from '../components/Navigation.svelte';
	import '../app.css';
	import { onMount } from 'svelte';
	import { initializeStores } from '$lib/stores';

	onMount(() => {
		initializeStores();
		
		// Initialize Bootstrap JavaScript components
		if (typeof document !== 'undefined') {
			// Import Bootstrap JS
			import('bootstrap/dist/js/bootstrap.bundle.min.js').then(() => {
				console.log('Bootstrap JS loaded');
			});
		}
	});
</script>

<div class="min-vh-100 bg-dark text-light">
	<Navigation />
	<main class="container-fluid py-4">
		<slot />
	</main>
</div>

<style>
	:global(body) {
		margin: 0;
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
			Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
		background-color: #111827;
		color: white;
	}
</style>
</file>

<file path="src/routes/Settings.svelte">
<script lang="ts">
    import { onMount } from 'svelte';
    import { api } from '$lib/api';
    import type { PlayerSettings, StreamConfig } from '../types/stream.js';

    let playerSettings = $state<PlayerSettings | null>(null);
    let screenConfigs = $state<StreamConfig[]>([]);
    let error = $state<string | null>(null);
    let success = $state<string | null>(null);

    const fetchSettings = async () => {
        try {
            const [settings, configs] = await Promise.all([
                api.getPlayerSettings(),
                api.getScreenConfigs()
            ]);
            playerSettings = settings;
            screenConfigs = configs;
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to fetch settings';
            setTimeout(() => error = null, 3000);
        }
    };

    const updatePlayerSettings = async () => {
        if (!playerSettings) return;
        try {
            await api.updatePlayerSettings(playerSettings);
            success = 'Player settings updated successfully';
            setTimeout(() => success = null, 3000);
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to update player settings';
            setTimeout(() => error = null, 3000);
        }
    };

    const updateScreenConfig = async (screen: number, config: Partial<StreamConfig>) => {
        try {
            await api.updateScreenConfig(screen, config);
            await fetchSettings();
            success = `Screen ${screen} settings updated successfully`;
            setTimeout(() => success = null, 3000);
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to update screen settings';
            setTimeout(() => error = null, 3000);
        }
    };

    const stopServer = async () => {
        if (!confirm('Are you sure you want to stop the server?')) return;
        try {
            await api.stopServer();
            success = 'Server stopping...';
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to stop server';
            setTimeout(() => error = null, 3000);
        }
    };

    onMount(fetchSettings);
</script>

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Settings</h1>
        <button
            on:click={stopServer}
            class="btn btn-danger"
        >
            Stop Server
        </button>
    </div>

    {#if error}
        <div class="alert alert-danger alert-dismissible fade show mb-4">
            <strong>Error!</strong> {error}
            <button type="button" class="btn-close" on:click={() => error = null}></button>
        </div>
    {/if}

    {#if success}
        <div class="alert alert-success alert-dismissible fade show mb-4">
            <strong>Success!</strong> {success}
            <button type="button" class="btn-close" on:click={() => success = null}></button>
        </div>
    {/if}

    {#if playerSettings}
        <div class="card card-dark mb-4">
            <div class="card-header card-header-dark">
                <h5 class="mb-0">Player Settings</h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6 col-lg-3">
                        <label for="defaultVolume" class="form-label">Default Volume</label>
                        <input
                            type="number"
                            id="defaultVolume"
                            min="0"
                            max="100"
                            bind:value={playerSettings.defaultVolume}
                            class="form-control bg-dark text-light border-secondary"
                        />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label for="defaultQuality" class="form-label">Default Quality</label>
                        <select
                            id="defaultQuality"
                            bind:value={playerSettings.defaultQuality}
                            class="form-select bg-dark text-light border-secondary"
                        >
                            <option value="best">Best</option>
                            <option value="high">High</option>
                            <option value="medium">Medium</option>
                            <option value="low">Low</option>
                        </select>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label for="processPriority" class="form-label">Process Priority</label>
                        <select
                            id="processPriority"
                            bind:value={playerSettings.processPriority}
                            class="form-select bg-dark text-light border-secondary"
                        >
                            <option value="normal">Normal</option>
                            <option value="high">High</option>
                            <option value="realtime">Realtime</option>
                            <option value="above_normal">Above Normal</option>
                            <option value="below_normal">Below Normal</option>
                            <option value="low">Low</option>
                            <option value="idle">Idle</option>
                        </select>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label for="windowMode" class="form-label">Window Mode</label>
                        <select
                            id="windowMode"
                            bind:value={playerSettings.windowMode}
                            class="form-select bg-dark text-light border-secondary"
                        >
                            <option value="windowed">Windowed</option>
                            <option value="fullscreen">Fullscreen</option>
                            <option value="borderless">Borderless</option>
                        </select>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label for="maxStreams" class="form-label">Max Concurrent Streams</label>
                        <input
                            type="number"
                            id="maxStreams"
                            min="1"
                            max="10"
                            bind:value={playerSettings.maxStreams}
                            class="form-control bg-dark text-light border-secondary"
                        />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <div class="form-check form-switch mt-4">
                            <input
                                class="form-check-input"
                                type="checkbox"
                                id="autoStart"
                                bind:checked={playerSettings.autoStart}
                            />
                            <label class="form-check-label" for="autoStart">
                                Auto-start streams
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <div class="form-check form-switch mt-4">
                            <input
                                class="form-check-input"
                                type="checkbox"
                                id="preferStreamlink"
                                bind:checked={playerSettings.preferStreamlink}
                            />
                            <label class="form-check-label" for="preferStreamlink">
                                Prefer Streamlink
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <div class="form-check form-switch mt-4">
                            <input
                                class="form-check-input"
                                type="checkbox"
                                id="windowMaximized"
                                bind:checked={playerSettings.windowMaximized}
                            />
                            <label class="form-check-label" for="windowMaximized">
                                Maximize windows
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <div class="form-check form-switch mt-4">
                            <input
                                class="form-check-input"
                                type="checkbox"
                                id="forcePlayer"
                                bind:checked={playerSettings.force_player}
                            />
                            <label class="form-check-label" for="forcePlayer">
                                Force player always running
                            </label>
                            <div class="form-text text-muted small">
                                Automatically restart players if they close
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    <button
                        on:click={updatePlayerSettings}
                        class="btn btn-primary"
                    >
                        Save Player Settings
                    </button>
                </div>
            </div>
        </div>
    {/if}

    <h2 class="h4 mb-3">Screen Settings</h2>
    <div class="row g-4">
        {#each screenConfigs as config}
            <div class="col-12">
                <div class="card card-dark">
                    <div class="card-header card-header-dark d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Screen {config.screen}</h5>
                        <button
                            class="btn btn-sm {config.enabled ? 'btn-warning' : 'btn-success'}"
                            on:click={() => updateScreenConfig(config.screen, { enabled: !config.enabled })}
                        >
                            {config.enabled ? 'Disable' : 'Enable'}
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6 col-lg-3">
                                <label for="volume-{config.screen}" class="form-label">Default Volume</label>
                                <input
                                    type="number"
                                    id="volume-{config.screen}"
                                    min="0"
                                    max="100"
                                    bind:value={config.volume}
                                    on:change={() => updateScreenConfig(config.screen, { volume: config.volume })}
                                    class="form-control bg-dark text-light border-secondary"
                                />
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <label for="quality-{config.screen}" class="form-label">Default Quality</label>
                                <select
                                    id="quality-{config.screen}"
                                    bind:value={config.quality}
                                    on:change={() => updateScreenConfig(config.screen, { quality: config.quality })}
                                    class="form-select bg-dark text-light border-secondary"
                                >
                                    <option value="best">Best</option>
                                    <option value="high">High</option>
                                    <option value="medium">Medium</option>
                                    <option value="low">Low</option>
                                </select>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <label for="playerType-{config.screen}" class="form-label">Player Type</label>
                                <select
                                    id="playerType-{config.screen}"
                                    bind:value={config.playerType}
                                    on:change={() => updateScreenConfig(config.screen, { playerType: config.playerType })}
                                    class="form-select bg-dark text-light border-secondary"
                                >
                                    <option value="mpv">MPV (Direct)</option>
                                    <option value="streamlink">Streamlink</option>
                                </select>
                                <div class="form-text text-muted small">
                                    Streamlink is better for Twitch/YouTube
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label">Window Position</label>
                                <div class="input-group">
                                    <input
                                        type="number"
                                        placeholder="X"
                                        bind:value={config.windowX}
                                        on:change={() => updateScreenConfig(config.screen, { windowX: config.windowX })}
                                        class="form-control bg-dark text-light border-secondary"
                                    />
                                    <input
                                        type="number"
                                        placeholder="Y"
                                        bind:value={config.windowY}
                                        on:change={() => updateScreenConfig(config.screen, { windowY: config.windowY })}
                                        class="form-control bg-dark text-light border-secondary"
                                    />
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <label class="form-label">Window Size</label>
                                <div class="input-group">
                                    <input
                                        type="number"
                                        placeholder="Width"
                                        bind:value={config.windowWidth}
                                        on:change={() => updateScreenConfig(config.screen, { windowWidth: config.windowWidth })}
                                        class="form-control bg-dark text-light border-secondary"
                                    />
                                    <input
                                        type="number"
                                        placeholder="Height"
                                        bind:value={config.windowHeight}
                                        on:change={() => updateScreenConfig(config.screen, { windowHeight: config.windowHeight })}
                                        class="form-control bg-dark text-light border-secondary"
                                    />
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="form-check form-switch mt-4">
                                    <input
                                        class="form-check-input"
                                        type="checkbox"
                                        id="windowMaximized-{config.screen}"
                                        bind:checked={config.windowMaximized}
                                        on:change={() => updateScreenConfig(config.screen, { windowMaximized: config.windowMaximized })}
                                    />
                                    <label class="form-check-label" for="windowMaximized-{config.screen}">
                                        Maximize window
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="form-check form-switch mt-4">
                                    <input
                                        class="form-check-input"
                                        type="checkbox"
                                        id="autoStart-{config.screen}"
                                        bind:checked={config.autoStart}
                                        on:change={() => updateScreenConfig(config.screen, { autoStart: config.autoStart })}
                                    />
                                    <label class="form-check-label" for="autoStart-{config.screen}">
                                        Auto-start streams
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {/each}
    </div>
</div>

<style>
    .card-dark {
        background-color: #2c2c2c;
        border-color: #444;
        color: #f8f9fa;
    }
    
    .card-header-dark {
        background-color: #222;
        border-color: #444;
        color: #f8f9fa;
    }
    
    /* Custom form switch styling for dark theme */
    :global(.form-check-input) {
        background-color: #495057;
        border-color: #6c757d;
    }
    
    :global(.form-check-input:checked) {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>
</file>

<file path="src/routes/Streams.svelte">
<script lang="ts">
    import { onMount, onDestroy } from 'svelte';
    import type { Stream, StreamConfig } from '../types/stream.js';
    import { api } from '$lib/api';
    import PlayerControls from '../components/PlayerControls.svelte';
    import QueueList from '../components/QueueList.svelte';

    let streams = $state<Stream[]>([]);
    let screenConfigs = $state<StreamConfig[]>([]);
    let url = $state('');
    let quality = $state('best');
    let selectedScreen = $state(1);
    let error = $state<string | null>(null);

    const qualities = ['best', 'high', 'medium', 'low'];

    // Change the interval type
    let pollInterval: ReturnType<typeof setInterval>;

    const fetchStreams = async () => {
        try {
            const [activeStreams, configs] = await Promise.all([
                api.getActiveStreams(),
                api.getScreenConfigs()
            ]);
            streams = activeStreams;
            screenConfigs = configs;
        } catch (err) {
            console.error('Error fetching streams:', err);
            error = err instanceof Error ? err.message : 'Failed to fetch streams';
            setTimeout(() => error = null, 3000);
        }
    };

    const addStream = async () => {
        try {
            await api.startStream(url, selectedScreen, quality);
            await fetchStreams();
            url = '';
            quality = 'best';
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to add stream';
            setTimeout(() => error = null, 3000);
        }
    };

    const stopStream = async (screen: number) => {
        try {
            await api.stopStream(screen);
            // Remove stream from local state immediately
            streams = streams.filter(s => s.screen !== screen);
            await fetchStreams(); // Refresh all streams
        } catch (err) {
            console.error('Error stopping stream:', err);
            error = err instanceof Error ? err.message : 'Failed to stop stream';
            setTimeout(() => error = null, 3000);
        }
    };

    const toggleScreen = async (screen: number) => {
        try {
            const config = screenConfigs.find(c => c.screen === screen);
            if (config) {
                await api.updateScreenConfig(screen, { enabled: !config.enabled });
                await fetchStreams();
            }
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to toggle screen';
            setTimeout(() => error = null, 3000);
        }
    };

    const stopAllStreams = async () => {
        try {
            for (const stream of streams) {
                await api.stopStream(stream.screen);
            }
            await fetchStreams();
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to stop all streams';
            setTimeout(() => error = null, 3000);
        }
    };

    const autoStartStreams = async () => {
        try {
            await fetch('/api/streams/autostart', { method: 'POST' });
            await fetchStreams();
        } catch (err) {
            error = err instanceof Error ? err.message : 'Failed to auto-start streams';
            setTimeout(() => error = null, 3000);
        }
    };

    onMount(() => {
        fetchStreams();
        // Poll for updates every 5 seconds
        pollInterval = setInterval(fetchStreams, 5000);
    });

    onDestroy(() => {
        if (pollInterval) {
            clearInterval(pollInterval);
        }
    });
</script>

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Stream Manager</h1>
        <div class="d-flex gap-2">
            <button
                on:click={autoStartStreams}
                class="btn btn-success"
            >
                Auto-Start Streams
            </button>
            <button
                on:click={stopAllStreams}
                class="btn btn-danger"
                disabled={streams.length === 0}
            >
                Stop All Streams
            </button>
        </div>
    </div>

    {#if error}
        <div class="alert alert-danger alert-dismissible fade show mb-4">
            <strong>Error!</strong> {error}
            <button type="button" class="btn-close" on:click={() => error = null}></button>
        </div>
    {/if}

    <div class="card card-dark mb-4">
        <div class="card-header card-header-dark">
            <h5 class="mb-0">Add Stream</h5>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <label for="streamUrl" class="form-label">Stream URL</label>
                    <input 
                        type="text" 
                        id="streamUrl"
                        class="form-control bg-dark text-light border-secondary" 
                        bind:value={url} 
                        placeholder="Enter stream URL"
                    />
                </div>
                <div class="col-md-3">
                    <label for="screenSelect" class="form-label">Screen</label>
                    <select
                        id="screenSelect"
                        bind:value={selectedScreen}
                        class="form-select bg-dark text-light border-secondary"
                    >
                        {#each screenConfigs as config}
                            <option value={config.screen}>
                                Screen {config.screen} {config.enabled ? '' : '(Disabled)'}
                            </option>
                        {/each}
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="qualitySelect" class="form-label">Quality</label>
                    <select 
                        id="qualitySelect"
                        bind:value={quality}
                        class="form-select bg-dark text-light border-secondary"
                    >
                        {#each qualities as q}
                            <option value={q}>{q}</option>
                        {/each}
                    </select>
                </div>
            </div>
            <div class="d-flex justify-content-end mt-3">
                <button 
                    on:click={addStream}
                    class="btn btn-primary"
                    disabled={!url}
                >
                    Add Stream
                </button>
            </div>
        </div>
    </div>

    <h2 class="h4 mb-3">Active Streams</h2>
    {#if streams.length === 0}
        <div class="alert alert-secondary">No active streams</div>
    {:else}
        <div class="row g-4">
            {#each streams as stream (stream.screen)}
                <div class="col-12">
                    <div class="card card-dark">
                        <div class="card-header card-header-dark d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Screen {stream.screen}</h5>
                            <div class="d-flex gap-2">
                                <button 
                                    on:click={() => toggleScreen(stream.screen)}
                                    class="btn btn-sm {screenConfigs.find(c => c.screen === stream.screen)?.enabled ? 'btn-warning' : 'btn-success'}"
                                >
                                    {screenConfigs.find(c => c.screen === stream.screen)?.enabled ? 'Disable' : 'Enable'}
                                </button>
                                <button 
                                    on:click={() => stopStream(stream.screen)}
                                    class="btn btn-sm btn-danger"
                                >
                                    Stop
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <p class="mb-1"><strong>URL:</strong> <span class="text-muted">{stream.url}</span></p>
                                <p class="mb-0"><strong>Quality:</strong> <span class="text-muted">{stream.quality}</span></p>
                            </div>
                            <PlayerControls {stream} />
                            <QueueList screen={stream.screen} queue={stream.queue || []} />
                        </div>
                    </div>
                </div>
            {/each}
        </div>
    {/if}
</div>

<style>
    .card-dark {
        background-color: #2c2c2c;
        border-color: #444;
        color: #f8f9fa;
    }
    
    .card-header-dark {
        background-color: #222;
        border-color: #444;
        color: #f8f9fa;
    }
</style>
</file>

<file path="src/server/db/database.ts">
import sqlite3 from 'sqlite3';
import { open, Database } from 'sqlite';
import { fileURLToPath } from 'url';
import path from 'path';
import fs from 'fs/promises';
import { env } from '../../config/env.js';
import { logger } from '../services/logger.js';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

export interface TwitchAuth {
  userId: string;
  accessToken: string;
  refreshToken: string;
  expiresAt: number;
}

class DatabaseError extends Error {
  constructor(message: string) {
    super(message);
    this.name = 'DatabaseError';
  }
}

export class DatabaseService {
  private db: Database | null = null;
  private dbPath: string;

  constructor() {
    this.dbPath = path.resolve(process.cwd(), env.DATABASE_PATH);
  }

  async initialize() {
    try {
      // Ensure the database directory exists
      const dbDir = path.dirname(this.dbPath);
      await fs.mkdir(dbDir, { recursive: true });

      logger.debug(`Initializing database at ${this.dbPath}`, 'Database');
      this.db = await open({
        filename: this.dbPath,
        driver: sqlite3.Database
      });

      // Initialize tables
      await this.db.exec(`
        CREATE TABLE IF NOT EXISTS streams (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          url TEXT NOT NULL,
          screen INTEGER NOT NULL,
          quality TEXT NOT NULL,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP
        );
      `);

      await this.db.exec(`
        CREATE TABLE IF NOT EXISTS twitch_auth (
          user_id TEXT PRIMARY KEY,
          access_token TEXT NOT NULL,
          refresh_token TEXT NOT NULL,
          expires_at INTEGER NOT NULL
        )
      `);

      logger.info('Database initialized successfully', 'Database');
    } catch (error) {
      logger.error(
        `Failed to initialize database: ${error}`,
        'Database',
        error instanceof Error ? error : new Error(String(error))
      );
      throw new DatabaseError(`Failed to initialize database: ${error}`);
    }
  }

  async saveTwitchAuth(auth: TwitchAuth): Promise<void> {
    if (!this.db) throw new DatabaseError('Database not initialized');
    
    try {
      await this.db.run(
        `INSERT OR REPLACE INTO twitch_auth (user_id, access_token, refresh_token, expires_at)
         VALUES (?, ?, ?, ?)`,
        [auth.userId, auth.accessToken, auth.refreshToken, auth.expiresAt]
      );
    } catch (error) {
      throw new DatabaseError(`Failed to save Twitch auth: ${error}`);
    }
  }

  async getTwitchAuth(userId: string): Promise<TwitchAuth | null> {
    if (!this.db) throw new DatabaseError('Database not initialized');
    
    try {
      const row = await this.db.get(
        'SELECT user_id as userId, access_token as accessToken, refresh_token as refreshToken, expires_at as expiresAt FROM twitch_auth WHERE user_id = ?',
        userId
      ) as TwitchAuth | undefined;
      
      return row || null;
    } catch (error) {
      throw new DatabaseError(`Failed to get Twitch auth: ${error}`);
    }
  }
}

export const db = new DatabaseService();
</file>

<file path="src/server/services/keyboard_service.ts">
import { Worker } from 'worker_threads';
import { logger } from './logger.js';
import { fileURLToPath } from 'url';
import path from 'path';
import { EventEmitter } from 'events';

// Create a singleton event emitter for keyboard events
export const keyboardEvents = new EventEmitter();

export class KeyboardService {
  private worker?: Worker;
  private isShuttingDown = false;
  private initializationTimeout?: NodeJS.Timeout;

  constructor() {
    this.setupWorker();
    logger.info('Keyboard service initializing...', 'KeyboardService');
  }

  private setupWorker() {
    try {
      // Create a new worker thread using the keyboard worker file
      const workerPath = path.join(path.dirname(fileURLToPath(import.meta.url)), 'keyboard_worker.js');
      this.worker = new Worker(workerPath);

      // Set a timeout for initialization
      this.initializationTimeout = setTimeout(() => {
        if (!this.isShuttingDown) {
          logger.error(
            'Keyboard service initialization timed out. Please check your system permissions.',
            'KeyboardService'
          );
          this.cleanup();
        }
      }, 5000);

      // Handle messages from the worker
      this.worker.on('message', async (message: { type: string; screen?: number; error?: string }) => {
        try {
          switch (message.type) {
            case 'ready': {
              clearTimeout(this.initializationTimeout);
              logger.info('Keyboard service initialized successfully', 'KeyboardService');
              break;
            }
            case 'error': {
              clearTimeout(this.initializationTimeout);
              logger.error(
                'Keyboard initialization error. Please ensure you have the required permissions:',
                'KeyboardService',
                new Error(message.error || 'Unknown error')
              );
              logger.info(
                'To fix permission issues, try the following:\n' +
                '1. Install required packages:\n' +
                '   sudo apt-get install libx11-dev libxtst-dev libpng-dev\n' +
                '2. Set input device permissions:\n' +
                '   sudo chmod +r /dev/input/event*\n' +
                '3. Add your user to the input group:\n' +
                '   sudo usermod -a -G input $USER\n' +
                '4. Log out and log back in for group changes to take effect',
                'KeyboardService'
              );
              this.cleanup();
              break;
            }
            case 'autostart': {
              if (message.screen) {
                logger.info(`Keyboard shortcut: Alt+${message.screen === 1 ? 'L' : 'K'} - Auto-starting screen ${message.screen}`, 'KeyboardService');
                keyboardEvents.emit('autostart', message.screen);
              }
              break;
            }
            case 'closeall': {
              logger.info('Keyboard shortcut: Alt+F1 - Closing all players', 'KeyboardService');
              keyboardEvents.emit('closeall');
              break;
            }
          }
        } catch (error) {
          logger.error(
            'Failed to handle keyboard shortcut',
            'KeyboardService',
            error instanceof Error ? error : new Error(String(error))
          );
        }
      });

      // Handle worker errors
      this.worker.on('error', (error) => {
        if (!this.isShuttingDown) {
          clearTimeout(this.initializationTimeout);
          logger.error(
            'Keyboard worker error',
            'KeyboardService',
            error instanceof Error ? error : new Error(String(error))
          );
          this.cleanup();
        }
      });

      // Handle worker exit
      this.worker.on('exit', (code) => {
        if (code !== 0 && !this.isShuttingDown) {
          clearTimeout(this.initializationTimeout);
          logger.error(`Keyboard worker stopped with exit code ${code}`, 'KeyboardService');
          this.cleanup();
        }
      });

      // Set up signal handlers
      this.setupSignalHandlers();
    } catch (error) {
      clearTimeout(this.initializationTimeout);
      logger.error(
        'Failed to initialize keyboard service',
        'KeyboardService',
        error instanceof Error ? error : new Error(String(error))
      );
      this.cleanup();
    }
  }

  private setupSignalHandlers() {
    // Ensure cleanup happens on process termination
    process.on('SIGINT', () => this.cleanup());
    process.on('SIGTERM', () => this.cleanup());
    process.on('exit', () => this.cleanup());
  }

  cleanup() {
    this.isShuttingDown = true;
    clearTimeout(this.initializationTimeout);
    if (this.worker) {
      // Send cleanup message to worker
      this.worker.postMessage('cleanup');
      // Give the worker a chance to clean up
      setTimeout(() => {
        this.worker?.terminate();
        this.worker = undefined;
      }, 1000);
    }
  }
}
</file>

<file path="src/server/services/keyboard_worker.ts">
import { parentPort } from 'worker_threads';
import { GlobalKeyboardListener } from 'node-global-key-listener';
import { execSync } from 'child_process';

function checkInputPermissions() {
  try {
    // Check if user has access to input devices
    const result = execSync('ls -l /dev/input/event* 2>/dev/null || true', { encoding: 'utf8' });
    const hasAccess = result.split('\n').some(line => 
      line.includes(`input`) || line.includes(process.env.USER || '')
    );
    
    if (!hasAccess) {
      throw new Error('No access to input devices. Please run: sudo usermod -a -G input $USER');
    }

    // Check if uinput module is loaded
    const modules = execSync('lsmod | grep uinput || true', { encoding: 'utf8' });
    if (!modules.includes('uinput')) {
      throw new Error('uinput module not loaded. Please run: sudo modprobe uinput');
    }

    // Check if streamlink is installed
    try {
      execSync('which streamlink', { encoding: 'utf8' });
    } catch (error) {
      throw new Error('streamlink is not installed. Please install it with: sudo pacman -S streamlink');
    }

    return true;
  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : String(error);
    throw new Error(`Permission check failed: ${errorMessage}`);
  }
}

try {
  // Check permissions first
  checkInputPermissions();

  // Initialize keyboard listener with minimal configuration
  const keyboard = new GlobalKeyboardListener({
    x11: {
      onError: (errorCode) => {
        if (errorCode !== null) {
          parentPort?.postMessage({ 
            type: 'error', 
            error: `X11 keyboard error: ${errorCode}. Please ensure you have the correct permissions:
1. Add user to input group: sudo usermod -a -G input $USER
2. Load uinput module: sudo modprobe uinput
3. Set permissions: sudo chmod 660 /dev/input/event*
4. Log out and log back in for group changes to take effect` 
          });
        }
      },
      onInfo: (data) => {
        parentPort?.postMessage({ 
          type: 'info', 
          data 
        });
      }
    }
  });

  keyboard.addListener((e, down) => {
    // Alt + L: Auto-start screen 1
    if (e.state === 'DOWN' && e.name === 'L' && (down['LEFT ALT'] || down['RIGHT ALT'])) {
      parentPort?.postMessage({ type: 'autostart', screen: 1 });
    }
    
    // Alt + K: Auto-start screen 2
    if (e.state === 'DOWN' && e.name === 'K' && (down['LEFT ALT'] || down['RIGHT ALT'])) {
      parentPort?.postMessage({ type: 'autostart', screen: 2 });
    }
    
    // Alt + F1: Close all players
    if (e.state === 'DOWN' && e.name === 'F1' && (down['LEFT ALT'] || down['RIGHT ALT'])) {
      parentPort?.postMessage({ type: 'closeall' });
    }

    // Return true to prevent the event from being propagated
    return true;
  });

  // Handle cleanup message from main thread
  parentPort?.on('message', (message) => {
    if (message === 'cleanup') {
      keyboard.kill();
      process.exit(0);
    }
  });

  // Notify main thread that initialization was successful
  parentPort?.postMessage({ type: 'ready' });
} catch (error) {
  parentPort?.postMessage({ 
    type: 'error', 
    error: error instanceof Error ? error.message : String(error)
  });
  process.exit(1);
}
</file>

<file path="src/server/services/player_manager.ts">
import { EventEmitter } from 'events';
import type { StreamInstance } from '../../types/stream_instance.js';
import type { Config } from '../../types/stream.js';
import { logger } from './logger.js';

interface WorkerData {
  screen: number;
  url: string;
  config: Config;
}

interface WorkerMessage {
  type: string;
  data?: unknown;
}

interface WorkerOptions {
  type?: 'classic' | 'module';
}

declare class Worker extends EventTarget {
  constructor(scriptURL: string | URL, options?: WorkerOptions);
  postMessage(message: WorkerMessage): void;
  terminate(): void;
  onmessage: ((this: Worker, ev: MessageEvent<WorkerMessage>) => void) | null;
  onerror: ((this: Worker, ev: ErrorEvent) => void) | null;
}

export class PlayerManager extends EventEmitter {
  private workers: Map<number, Worker> = new Map();
  private streams: Map<number, StreamInstance> = new Map();
  private config: Config;

  constructor(config: Config) {
    super();
    this.config = config;
    this.initialize();
  }

  private initialize(): void {
    // Create workers for each enabled stream config
    for (const stream of this.config.streams) {
      if (!stream.enabled) continue;

      try {
        const worker = new Worker(new URL('./stream_worker.js', import.meta.url), {
          type: 'module'
        });

        this.workers.set(stream.screen, worker);

        worker.onmessage = (event: MessageEvent<WorkerMessage>) => {
          const message = event.data;
          switch (message.type) {
            case 'streamInfo':
              this.handleStreamInfo(stream.screen, message.data as StreamInstance);
              break;
            case 'error':
              this.handleStreamError(stream.screen, String(message.data));
              break;
          }
        };

        worker.onerror = (event: ErrorEvent) => {
          this.handleStreamError(stream.screen, event.message);
        };
      } catch (error) {
        logger.error(
          `Failed to initialize worker for screen ${stream.screen}`,
          'PlayerManager',
          error instanceof Error ? error : new Error(String(error))
        );
      }
    }
  }

  async startStream(screen: number, url: string): Promise<void> {
    try {
      const worker = this.workers.get(screen);
      if (!worker) {
        throw new Error(`No worker found for screen ${screen}`);
      }

      const data: WorkerData = {
        screen,
        url,
        config: this.config
      };

      worker.postMessage({ type: 'start', data });
    } catch (error) {
      logger.error(
        `Failed to start stream on screen ${screen}`,
        'PlayerManager',
        error instanceof Error ? error : new Error(String(error))
      );
      throw error;
    }
  }

  async stopStream(screen: number): Promise<void> {
    const worker = this.workers.get(screen);
    if (worker) {
      worker.postMessage({ type: 'stop' });
      worker.terminate();
      this.workers.delete(screen);
      this.streams.delete(screen);
    }
  }

  private handleStreamInfo(screen: number, data: StreamInstance): void {
    this.streams.set(screen, data);
    this.emit('streamUpdate', { screen, data });
  }

  private handleStreamError(screen: number, error: string): void {
    logger.error(`Stream error on screen ${screen}: ${error}`, 'PlayerManager');
    this.emit('streamError', { screen, error });
  }

  // Add methods for volume control, quality changes, etc.
}
</file>

<file path="src/server/services/youtube.ts">
import type { StreamService } from '../../types/stream.js';
import type { StreamSource } from '../../types/stream.js';
import { logger } from './logger.js';

export class YouTubeService implements StreamService {
  private favoriteChannels: string[] = [];

  constructor(favoriteChannels: string[]) {
    this.favoriteChannels = favoriteChannels;
  }

  async getLiveStreams(options?: { channels?: string[]; limit?: number }): Promise<StreamSource[]> {
    try {
      const channels = options?.channels || this.favoriteChannels;
      const limit = options?.limit || 25;

      // For each channel, create a basic entry that will be updated with live status
      const streams: StreamSource[] = channels.map(channel => ({
        url: `https://youtube.com/${channel}`,
        title: `${channel}'s channel`,
        platform: 'youtube',
        viewerCount: 0,
        channelId: channel
      }));

      logger.debug(`Found ${streams.length} YouTube channels`, 'YouTubeService');
      return streams.slice(0, limit);
    } catch (error) {
      logger.error(
        'Failed to fetch YouTube streams',
        'YouTubeService',
        error instanceof Error ? error : new Error(String(error))
      );
      return [];
    }
  }

  public updateFavorites(channels: string[]): void {
    this.favoriteChannels = channels;
    logger.debug(`Updated YouTube favorites: ${channels.join(', ')}`, 'YouTubeService');
  }
}
</file>

<file path="src/server/types/events.ts">
import { EventEmitter } from 'events';

declare global {
  interface ProcessEventTypes {
    'keyboard:autostart': (screen: number) => void;
    'keyboard:closeall': () => void;
  }
}

declare module 'events' {
  export interface Process {
    on<K extends keyof ProcessEventTypes>(event: K, listener: ProcessEventTypes[K]): this;
    emit<K extends keyof ProcessEventTypes>(
      event: K,
      ...args: Parameters<ProcessEventTypes[K]>
    ): boolean;
  }
}

export {};
</file>

<file path="src/server/api.ts">
import Koa from 'koa';
import bodyParser from 'koa-bodyparser';
import cors from '@koa/cors';
import serve from 'koa-static';
import path from 'path';
import { fileURLToPath } from 'url';
import { apiRouter } from './routes/api.js';
import appRouter from './router.js';
import { db } from './db/database.js';
import { streamManager } from './stream_manager.js';
import { logger } from './services/logger.js';
import { exec } from 'child_process';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = new Koa();

// Initialize database
logger.info('Initializing database...', 'Server');
await db.initialize();
logger.info('Database initialized', 'Server');

// Auto-start streams
logger.info('Auto-starting streams...', 'Server');
try {
  await streamManager.autoStartStreams();
  logger.info('Auto-start complete', 'Server');
} catch (error) {
  logger.error('Error during auto-start', 'Server', error as Error);
}

// Middleware
logger.debug('Setting up middleware...', 'Server');
app.use(cors());
app.use(bodyParser());

// Static files
const staticPath = path.join(__dirname, '../../static');
app.use(serve(staticPath));

// Routes
app.use(apiRouter.routes());
app.use(apiRouter.allowedMethods());
app.use(appRouter.routes());
app.use(appRouter.allowedMethods());

// Error handling
app.on('error', (err, ctx) => {
  logger.error('Server error', 'Server', err);
});

const PORT = parseInt(process.env.PORT || '3001', 10);

// Function to check if port is in use
async function isPortInUse(port: number): Promise<boolean> {
  return new Promise((resolve) => {
    const server = app.listen(port)
      .once('error', (err: NodeJS.ErrnoException) => {
        if (err.code === 'EADDRINUSE') {
          resolve(true);
        }
      })
      .once('listening', () => {
        server.close();
        resolve(false);
      });
  });
}

// Function to find and kill process using port
async function killProcessOnPort(port: number): Promise<void> {
  return new Promise((resolve, reject) => {
    exec(`lsof -i :${port} | grep LISTEN | awk '{print $2}' | xargs kill -9`, (error) => {
      if (error && error.code !== 1) { // code 1 means no process found
        reject(error);
      } else {
        resolve();
      }
    });
  });
}

// Start server with retry logic
async function startServer(retries = 3): Promise<void> {
  for (let i = 0; i < retries; i++) {
    try {
      if (await isPortInUse(PORT)) {
        logger.warn(`Port ${PORT} is in use, attempting to kill existing process...`, 'Server');
        await killProcessOnPort(PORT);
        // Wait a moment for the port to be freed
        await new Promise(resolve => setTimeout(resolve, 1000));
      }

      const server = app.listen(PORT, () => {
        logger.info(`Server running on http://localhost:${PORT}`, 'Server');
        logger.info('Routes:', 'Server');
        apiRouter.stack.forEach(layer => {
          logger.info(`${layer.methods.join(',')} ${layer.path}`, 'Server');
        });
      });

      // Handle server shutdown
      process.on('SIGINT', async () => {
        logger.info('Received SIGINT. Shutting down gracefully...', 'Server');
        await streamManager.cleanup();
        server.close(() => {
          logger.info('Server closed', 'Server');
          process.exit(0);
        });
      });

      return;
    } catch (error) {
      logger.error(`Failed to start server (attempt ${i + 1}/${retries})`, 'Server', error as Error);
      if (i === retries - 1) {
        throw error;
      }
      // Wait before retrying
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
  }
}

// Start the server
try {
  await startServer();
} catch (error) {
  logger.error('Failed to start server after multiple attempts', 'Server', error as Error);
  process.exit(1);
}

export default app;
</file>

<file path="src/server/router.ts">
import Router from 'koa-router';
import send from 'koa-send';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const router = new Router();

// Serve static files from the build directory
router.get('/assets', async (ctx) => {
  await send(ctx, ctx.path, { 
    root: path.resolve(__dirname, '../../build') 
  });
});

// Handle SvelteKit app routes
router.get(['/', '/manager'], async (ctx) => {
  await send(ctx, 'index.html', { 
    root: path.resolve(__dirname, '../../build') 
  });
});

// Define routes
router.get('/', async (ctx) => {
  ctx.body = { message: 'Server is running' };
});

export default router;
</file>

<file path="src/server/websocket.ts">
import { WebSocket, WebSocketServer } from 'ws';
import { Server } from 'http';
import type { Stream, StreamSource } from '../types/stream.js';
import { streamManager, type StreamManager } from './stream_manager.js';

export class WebSocketService {
  private wss: WebSocketServer;
  private clients: Set<WebSocket> = new Set();

  constructor(server: Server, private streamManager: StreamManager) {
    this.wss = new WebSocketServer({ server });
    this.setupWebSocketServer();
    this.setupStreamManagerListeners();
  }

  private setupWebSocketServer() {
    this.wss.on('connection', (ws: WebSocket) => {
      this.clients.add(ws);

      ws.addEventListener('close', () => {
        this.clients.delete(ws);
      });

      // Send initial state
      this.sendToClient(ws, {
        type: 'init',
        data: {
          streams: this.streamManager.getActiveStreams(),
          queues: this.streamManager.getQueueForScreen,
          screens: this.streamManager.getScreenConfigs()
        }
      });
    });
  }

  private setupStreamManagerListeners() {
    // Listen for stream updates
    this.streamManager.on('streamUpdate', (stream: Stream) => {
      this.broadcast({
        type: 'streamUpdate',
        data: { stream }
      });
    });

    // Listen for queue updates
    this.streamManager.on('queueUpdate', (screen: number, queue: StreamSource[]) => {
      this.broadcast({
        type: 'queueUpdate',
        data: { screen, queue }
      });
    });

    // Listen for screen config updates
    this.streamManager.on('screenUpdate', (screen: number, config: any) => {
      this.broadcast({
        type: 'screenUpdate',
        data: { screen, config }
      });
    });

    // Listen for player settings updates
    this.streamManager.on('settingsUpdate', (settings: any) => {
      this.broadcast({
        type: 'settingsUpdate',
        data: { settings }
      });
    });

    // Listen for errors
    this.streamManager.on('error', (error: Error) => {
      this.broadcast({
        type: 'error',
        data: { message: error.message }
      });
    });
  }

  private broadcast(message: any) {
    const data = JSON.stringify(message);
    this.clients.forEach(client => {
      if (client.readyState === WebSocket.OPEN) {
        client.send(data);
      }
    });
  }

  private sendToClient(client: WebSocket, message: any) {
    if (client.readyState === WebSocket.OPEN) {
      client.send(JSON.stringify(message));
    }
  }
}
</file>

<file path="src/stories/assets/accessibility.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="none" viewBox="0 0 48 48"><title>Accessibility</title><circle cx="24.334" cy="24" r="24" fill="#A849FF" fill-opacity=".3"/><path fill="#A470D5" fill-rule="evenodd" d="M27.8609 11.585C27.8609 9.59506 26.2497 7.99023 24.2519 7.99023C22.254 7.99023 20.6429 9.65925 20.6429 11.585C20.6429 13.575 22.254 15.1799 24.2519 15.1799C26.2497 15.1799 27.8609 13.575 27.8609 11.585ZM21.8922 22.6473C21.8467 23.9096 21.7901 25.4788 21.5897 26.2771C20.9853 29.0462 17.7348 36.3314 17.3325 37.2275C17.1891 37.4923 17.1077 37.7955 17.1077 38.1178C17.1077 39.1519 17.946 39.9902 18.9802 39.9902C19.6587 39.9902 20.253 39.6293 20.5814 39.0889L20.6429 38.9874L24.2841 31.22C24.2841 31.22 27.5529 37.9214 27.9238 38.6591C28.2948 39.3967 28.8709 39.9902 29.7168 39.9902C30.751 39.9902 31.5893 39.1519 31.5893 38.1178C31.5893 37.7951 31.3639 37.2265 31.3639 37.2265C30.9581 36.3258 27.698 29.0452 27.0938 26.2771C26.8975 25.4948 26.847 23.9722 26.8056 22.7236C26.7927 22.333 26.7806 21.9693 26.7653 21.6634C26.7008 21.214 27.0231 20.8289 27.4097 20.7005L35.3366 18.3253C36.3033 18.0685 36.8834 16.9773 36.6256 16.0144C36.3678 15.0515 35.2722 14.4737 34.3055 14.7305C34.3055 14.7305 26.8619 17.1057 24.2841 17.1057C21.7062 17.1057 14.456 14.7947 14.456 14.7947C13.4893 14.5379 12.3937 14.9873 12.0715 15.9502C11.7493 16.9131 12.3293 18.0044 13.3604 18.3253L21.2873 20.7005C21.674 20.8289 21.9318 21.214 21.9318 21.6634C21.9174 21.9493 21.9053 22.2857 21.8922 22.6473Z" clip-rule="evenodd"/></svg>
</file>

<file path="src/stories/assets/discord.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="33" height="32" fill="none" viewBox="0 0 33 32"><g clip-path="url(#clip0_10031_177575)"><mask id="mask0_10031_177575" style="mask-type:luminance" width="33" height="25" x="0" y="4" maskUnits="userSpaceOnUse"><path fill="#fff" d="M32.5034 4.00195H0.503906V28.7758H32.5034V4.00195Z"/></mask><g mask="url(#mask0_10031_177575)"><path fill="#5865F2" d="M27.5928 6.20817C25.5533 5.27289 23.3662 4.58382 21.0794 4.18916C21.0378 4.18154 20.9962 4.20057 20.9747 4.23864C20.6935 4.73863 20.3819 5.3909 20.1637 5.90358C17.7042 5.53558 15.2573 5.53558 12.8481 5.90358C12.6299 5.37951 12.307 4.73863 12.0245 4.23864C12.003 4.20184 11.9614 4.18281 11.9198 4.18916C9.63431 4.58255 7.44721 5.27163 5.40641 6.20817C5.38874 6.21578 5.3736 6.22848 5.36355 6.24497C1.21508 12.439 0.078646 18.4809 0.636144 24.4478C0.638667 24.477 0.655064 24.5049 0.677768 24.5227C3.41481 26.5315 6.06609 27.7511 8.66815 28.5594C8.70979 28.5721 8.75392 28.5569 8.78042 28.5226C9.39594 27.6826 9.94461 26.7968 10.4151 25.8653C10.4428 25.8107 10.4163 25.746 10.3596 25.7244C9.48927 25.3945 8.66058 24.9922 7.86343 24.5354C7.80038 24.4986 7.79533 24.4084 7.85333 24.3653C8.02108 24.2397 8.18888 24.109 8.34906 23.977C8.37804 23.9529 8.41842 23.9478 8.45249 23.963C13.6894 26.3526 19.359 26.3526 24.5341 23.963C24.5682 23.9465 24.6086 23.9516 24.6388 23.9757C24.799 24.1077 24.9668 24.2397 25.1358 24.3653C25.1938 24.4084 25.19 24.4986 25.127 24.5354C24.3298 25.0011 23.5011 25.3945 22.6296 25.7232C22.5728 25.7447 22.5476 25.8107 22.5754 25.8653C23.0559 26.7955 23.6046 27.6812 24.2087 28.5213C24.234 28.5569 24.2794 28.5721 24.321 28.5594C26.9357 27.7511 29.5869 26.5315 32.324 24.5227C32.348 24.5049 32.3631 24.4783 32.3656 24.4491C33.0328 17.5506 31.2481 11.5584 27.6344 6.24623C27.6256 6.22848 27.6105 6.21578 27.5928 6.20817ZM11.1971 20.8146C9.62043 20.8146 8.32129 19.3679 8.32129 17.5913C8.32129 15.8146 9.59523 14.368 11.1971 14.368C12.8115 14.368 14.0981 15.8273 14.0729 17.5913C14.0729 19.3679 12.7989 20.8146 11.1971 20.8146ZM21.8299 20.8146C20.2533 20.8146 18.9541 19.3679 18.9541 17.5913C18.9541 15.8146 20.228 14.368 21.8299 14.368C23.4444 14.368 24.7309 15.8273 24.7057 17.5913C24.7057 19.3679 23.4444 20.8146 21.8299 20.8146Z"/></g></g><defs><clipPath id="clip0_10031_177575"><rect width="32" height="32" fill="#fff" transform="translate(0.5)"/></clipPath></defs></svg>
</file>

<file path="src/stories/assets/github.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" viewBox="0 0 32 32"><path fill="#161614" d="M16.0001 0C7.16466 0 0 7.17472 0 16.0256C0 23.1061 4.58452 29.1131 10.9419 31.2322C11.7415 31.3805 12.0351 30.8845 12.0351 30.4613C12.0351 30.0791 12.0202 28.8167 12.0133 27.4776C7.56209 28.447 6.62283 25.5868 6.62283 25.5868C5.89499 23.7345 4.8463 23.2419 4.8463 23.2419C3.39461 22.2473 4.95573 22.2678 4.95573 22.2678C6.56242 22.3808 7.40842 23.9192 7.40842 23.9192C8.83547 26.3691 11.1514 25.6609 12.0645 25.2514C12.2081 24.2156 12.6227 23.5087 13.0803 23.1085C9.52648 22.7032 5.7906 21.3291 5.7906 15.1886C5.7906 13.4389 6.41563 12.0094 7.43916 10.8871C7.27303 10.4834 6.72537 8.85349 7.59415 6.64609C7.59415 6.64609 8.93774 6.21539 11.9953 8.28877C13.2716 7.9337 14.6404 7.75563 16.0001 7.74953C17.3599 7.75563 18.7297 7.9337 20.0084 8.28877C23.0623 6.21539 24.404 6.64609 24.404 6.64609C25.2749 8.85349 24.727 10.4834 24.5608 10.8871C25.5868 12.0094 26.2075 13.4389 26.2075 15.1886C26.2075 21.3437 22.4645 22.699 18.9017 23.0957C19.4756 23.593 19.9869 24.5683 19.9869 26.0634C19.9869 28.2077 19.9684 29.9334 19.9684 30.4613C19.9684 30.8877 20.2564 31.3874 21.0674 31.2301C27.4213 29.1086 32 23.1037 32 16.0256C32 7.17472 24.8364 0 16.0001 0ZM5.99257 22.8288C5.95733 22.9084 5.83227 22.9322 5.71834 22.8776C5.60229 22.8253 5.53711 22.7168 5.57474 22.6369C5.60918 22.5549 5.7345 22.5321 5.85029 22.587C5.9666 22.6393 6.03284 22.7489 5.99257 22.8288ZM6.7796 23.5321C6.70329 23.603 6.55412 23.5701 6.45291 23.4581C6.34825 23.3464 6.32864 23.197 6.40601 23.125C6.4847 23.0542 6.62937 23.0874 6.73429 23.1991C6.83895 23.3121 6.85935 23.4605 6.7796 23.5321ZM7.31953 24.4321C7.2215 24.5003 7.0612 24.4363 6.96211 24.2938C6.86407 24.1513 6.86407 23.9804 6.96422 23.9119C7.06358 23.8435 7.2215 23.905 7.32191 24.0465C7.41968 24.1914 7.41968 24.3623 7.31953 24.4321ZM8.23267 25.4743C8.14497 25.5712 7.95818 25.5452 7.82146 25.413C7.68156 25.2838 7.64261 25.1004 7.73058 25.0035C7.81934 24.9064 8.00719 24.9337 8.14497 25.0648C8.28381 25.1938 8.3262 25.3785 8.23267 25.4743ZM9.41281 25.8262C9.37413 25.9517 9.19423 26.0088 9.013 25.9554C8.83203 25.9005 8.7136 25.7535 8.75016 25.6266C8.78778 25.5003 8.96848 25.4408 9.15104 25.4979C9.33174 25.5526 9.45044 25.6985 9.41281 25.8262ZM10.7559 25.9754C10.7604 26.1076 10.6067 26.2172 10.4165 26.2196C10.2252 26.2238 10.0704 26.1169 10.0683 25.9868C10.0683 25.8534 10.2185 25.7448 10.4098 25.7416C10.6001 25.7379 10.7559 25.8441 10.7559 25.9754ZM12.0753 25.9248C12.0981 26.0537 11.9658 26.1862 11.7769 26.2215C11.5912 26.2554 11.4192 26.1758 11.3957 26.0479C11.3726 25.9157 11.5072 25.7833 11.6927 25.7491C11.8819 25.7162 12.0512 25.7937 12.0753 25.9248Z"/></svg>
</file>

<file path="src/stories/assets/tutorials.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="33" height="32" fill="none" viewBox="0 0 33 32"><g clip-path="url(#clip0_10031_177597)"><path fill="#B7F0EF" fill-rule="evenodd" d="M17 7.87059C17 6.48214 17.9812 5.28722 19.3431 5.01709L29.5249 2.99755C31.3238 2.64076 33 4.01717 33 5.85105V22.1344C33 23.5229 32.0188 24.7178 30.6569 24.9879L20.4751 27.0074C18.6762 27.3642 17 25.9878 17 24.1539L17 7.87059Z" clip-rule="evenodd" opacity=".7"/><path fill="#87E6E5" fill-rule="evenodd" d="M1 5.85245C1 4.01857 2.67623 2.64215 4.47507 2.99895L14.6569 5.01848C16.0188 5.28861 17 6.48354 17 7.87198V24.1553C17 25.9892 15.3238 27.3656 13.5249 27.0088L3.34311 24.9893C1.98119 24.7192 1 23.5242 1 22.1358V5.85245Z" clip-rule="evenodd"/><path fill="#61C1FD" fill-rule="evenodd" d="M15.543 5.71289C15.543 5.71289 16.8157 5.96289 17.4002 6.57653C17.9847 7.19016 18.4521 9.03107 18.4521 9.03107C18.4521 9.03107 18.4521 25.1106 18.4521 26.9629C18.4521 28.8152 19.3775 31.4174 19.3775 31.4174L17.4002 28.8947L16.2575 31.4174C16.2575 31.4174 15.543 29.0765 15.543 27.122C15.543 25.1674 15.543 5.71289 15.543 5.71289Z" clip-rule="evenodd"/></g><defs><clipPath id="clip0_10031_177597"><rect width="32" height="32" fill="#fff" transform="translate(0.5)"/></clipPath></defs></svg>
</file>

<file path="src/stories/assets/youtube.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" viewBox="0 0 32 32"><path fill="#ED1D24" d="M31.3313 8.44657C30.9633 7.08998 29.8791 6.02172 28.5022 5.65916C26.0067 5.00026 16 5.00026 16 5.00026C16 5.00026 5.99333 5.00026 3.4978 5.65916C2.12102 6.02172 1.03665 7.08998 0.668678 8.44657C0 10.9053 0 16.0353 0 16.0353C0 16.0353 0 21.1652 0.668678 23.6242C1.03665 24.9806 2.12102 26.0489 3.4978 26.4116C5.99333 27.0703 16 27.0703 16 27.0703C16 27.0703 26.0067 27.0703 28.5022 26.4116C29.8791 26.0489 30.9633 24.9806 31.3313 23.6242C32 21.1652 32 16.0353 32 16.0353C32 16.0353 32 10.9053 31.3313 8.44657Z"/><path fill="#fff" d="M12.7266 20.6934L21.0902 16.036L12.7266 11.3781V20.6934Z"/></svg>
</file>

<file path="src/stories/button.css">
.storybook-button {
  display: inline-block;
  cursor: pointer;
  border: 0;
  border-radius: 3em;
  font-weight: 700;
  line-height: 1;
  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}
.storybook-button--primary {
  background-color: #555ab9;
  color: white;
}
.storybook-button--secondary {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;
  background-color: transparent;
  color: #333;
}
.storybook-button--small {
  padding: 10px 16px;
  font-size: 12px;
}
.storybook-button--medium {
  padding: 11px 20px;
  font-size: 14px;
}
.storybook-button--large {
  padding: 12px 24px;
  font-size: 16px;
}
</file>

<file path="src/stories/Configure.mdx">
import { Meta } from "@storybook/blocks";

import Github from "./assets/github.svg";
import Discord from "./assets/discord.svg";
import Youtube from "./assets/youtube.svg";
import Tutorials from "./assets/tutorials.svg";
import Styling from "./assets/styling.png";
import Context from "./assets/context.png";
import Assets from "./assets/assets.png";
import Docs from "./assets/docs.png";
import Share from "./assets/share.png";
import FigmaPlugin from "./assets/figma-plugin.png";
import Testing from "./assets/testing.png";
import Accessibility from "./assets/accessibility.png";
import Theming from "./assets/theming.png";
import AddonLibrary from "./assets/addon-library.png";

export const RightArrow = () => <svg 
    viewBox="0 0 14 14" 
    width="8px" 
    height="14px" 
    style={{ 
      marginLeft: '4px',
      display: 'inline-block',
      shapeRendering: 'inherit',
      verticalAlign: 'middle',
      fill: 'currentColor',
      'path fill': 'currentColor'
    }}
>
  <path d="m11.1 7.35-5.5 5.5a.5.5 0 0 1-.7-.7L10.04 7 4.9 1.85a.5.5 0 1 1 .7-.7l5.5 5.5c.2.2.2.5 0 .7Z" />
</svg>

<Meta title="Configure your project" />

<div className="sb-container">
  <div className='sb-section-title'>
    # Configure your project

    Because Storybook works separately from your app, you'll need to configure it for your specific stack and setup. Below, explore guides for configuring Storybook with popular frameworks and tools. If you get stuck, learn how you can ask for help from our community.
  </div>
  <div className="sb-section">
    <div className="sb-section-item">
      <img
        src={Styling}
        alt="A wall of logos representing different styling technologies"
      />
      <h4 className="sb-section-item-heading">Add styling and CSS</h4>
      <p className="sb-section-item-paragraph">Like with web applications, there are many ways to include CSS within Storybook. Learn more about setting up styling within Storybook.</p>
      <a
        href="https://storybook.js.org/docs/configure/styling-and-css/?renderer=svelte"
        target="_blank"
      >Learn more<RightArrow /></a>
    </div>
    <div className="sb-section-item">
      <img
        src={Context}
        alt="An abstraction representing the composition of data for a component"
      />
      <h4 className="sb-section-item-heading">Provide context and mocking</h4>
      <p className="sb-section-item-paragraph">Often when a story doesn't render, it's because your component is expecting a specific environment or context (like a theme provider) to be available.</p>
      <a
        href="https://storybook.js.org/docs/writing-stories/decorators/?renderer=svelte#context-for-mocking"
        target="_blank"
      >Learn more<RightArrow /></a>
    </div>
    <div className="sb-section-item">
      <img src={Assets} alt="A representation of typography and image assets" />
      <div>
        <h4 className="sb-section-item-heading">Load assets and resources</h4>
        <p className="sb-section-item-paragraph">To link static files (like fonts) to your projects and stories, use the
        `staticDirs` configuration option to specify folders to load when
        starting Storybook.</p>
        <a
          href="https://storybook.js.org/docs/configure/images-and-assets/?renderer=svelte"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
    </div>
  </div>
</div>
<div className="sb-container">
  <div className='sb-section-title'>
    # Do more with Storybook

    Now that you know the basics, let's explore other parts of Storybook that will improve your experience. This list is just to get you started. You can customise Storybook in many ways to fit your needs.
  </div>

  <div className="sb-section">
    <div className="sb-features-grid">
      <div className="sb-grid-item">
        <img src={Docs} alt="A screenshot showing the autodocs tag being set, pointing a docs page being generated" />
        <h4 className="sb-section-item-heading">Autodocs</h4>
        <p className="sb-section-item-paragraph">Auto-generate living,
          interactive reference documentation from your components and stories.</p>
        <a
          href="https://storybook.js.org/docs/writing-docs/autodocs/?renderer=svelte"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
      <div className="sb-grid-item">
        <img src={Share} alt="A browser window showing a Storybook being published to a chromatic.com URL" />
        <h4 className="sb-section-item-heading">Publish to Chromatic</h4>
        <p className="sb-section-item-paragraph">Publish your Storybook to review and collaborate with your entire team.</p>
        <a
          href="https://storybook.js.org/docs/sharing/publish-storybook/?renderer=svelte#publish-storybook-with-chromatic"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
      <div className="sb-grid-item">
        <img src={FigmaPlugin} alt="Windows showing the Storybook plugin in Figma" />
        <h4 className="sb-section-item-heading">Figma Plugin</h4>
        <p className="sb-section-item-paragraph">Embed your stories into Figma to cross-reference the design and live
          implementation in one place.</p>
        <a
          href="https://storybook.js.org/docs/sharing/design-integrations/?renderer=svelte#embed-storybook-in-figma-with-the-plugin"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
      <div className="sb-grid-item">
        <img src={Testing} alt="Screenshot of tests passing and failing" />
        <h4 className="sb-section-item-heading">Testing</h4>
        <p className="sb-section-item-paragraph">Use stories to test a component in all its variations, no matter how
          complex.</p>
        <a
          href="https://storybook.js.org/docs/writing-tests/?renderer=svelte"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
      <div className="sb-grid-item">
        <img src={Accessibility} alt="Screenshot of accessibility tests passing and failing" />
        <h4 className="sb-section-item-heading">Accessibility</h4>
        <p className="sb-section-item-paragraph">Automatically test your components for a11y issues as you develop.</p>
        <a
          href="https://storybook.js.org/docs/writing-tests/accessibility-testing/?renderer=svelte"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
      <div className="sb-grid-item">
        <img src={Theming} alt="Screenshot of Storybook in light and dark mode" />
        <h4 className="sb-section-item-heading">Theming</h4>
        <p className="sb-section-item-paragraph">Theme Storybook's UI to personalize it to your project.</p>
        <a
          href="https://storybook.js.org/docs/configure/theming/?renderer=svelte"
          target="_blank"
        >Learn more<RightArrow /></a>
      </div>
    </div>
  </div>
</div>
<div className='sb-addon'>
  <div className='sb-addon-text'>
    <h4>Addons</h4>
    <p className="sb-section-item-paragraph">Integrate your tools with Storybook to connect workflows.</p>
    <a
        href="https://storybook.js.org/addons/"
        target="_blank"
      >Discover all addons<RightArrow /></a>
  </div>
  <div className='sb-addon-img'>
    <img src={AddonLibrary} alt="Integrate your tools with Storybook to connect workflows." />
  </div>
</div>

<div className="sb-section sb-socials">
    <div className="sb-section-item">
      <img src={Github} alt="Github logo" className="sb-explore-image"/>
      Join our contributors building the future of UI development.

      <a
        href="https://github.com/storybookjs/storybook"
        target="_blank"
      >Star on GitHub<RightArrow /></a>
    </div>
    <div className="sb-section-item">
      <img src={Discord} alt="Discord logo" className="sb-explore-image"/>
      <div>
        Get support and chat with frontend developers.

        <a
          href="https://discord.gg/storybook"
          target="_blank"
        >Join Discord server<RightArrow /></a>
      </div>
    </div>
    <div className="sb-section-item">
      <img src={Youtube} alt="Youtube logo" className="sb-explore-image"/>
      <div>
        Watch tutorials, feature previews and interviews.

        <a
          href="https://www.youtube.com/@chromaticui"
          target="_blank"
        >Watch on YouTube<RightArrow /></a>
      </div>
    </div>
    <div className="sb-section-item">
      <img src={Tutorials} alt="A book" className="sb-explore-image"/>
      <p>Follow guided walkthroughs on for key workflows.</p>

      <a
          href="https://storybook.js.org/tutorials/"
          target="_blank"
        >Discover tutorials<RightArrow /></a>
    </div>
</div>

<style>
  {`
  .sb-container {
    margin-bottom: 48px;
  }

  .sb-section {
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: 20px;
  }

  img {
    object-fit: cover;
  }

  .sb-section-title {
    margin-bottom: 32px;
  }

  .sb-section a:not(h1 a, h2 a, h3 a) {
    font-size: 14px;
  }

  .sb-section-item, .sb-grid-item {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .sb-section-item-heading {
    padding-top: 20px !important;
    padding-bottom: 5px !important;
    margin: 0 !important;
  }
  .sb-section-item-paragraph {
    margin: 0;
    padding-bottom: 10px;
  }

  .sb-chevron {
    margin-left: 5px;
  }

  .sb-features-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 32px 20px;
  }

  .sb-socials {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
  }

  .sb-socials p {
    margin-bottom: 10px;
  }

  .sb-explore-image {
    max-height: 32px;
    align-self: flex-start;
  }

  .sb-addon {
    width: 100%;
    display: flex;
    align-items: center;
    position: relative;
    background-color: #EEF3F8;
    border-radius: 5px;
    border: 1px solid rgba(0, 0, 0, 0.05);
    background: #EEF3F8;
    height: 180px;
    margin-bottom: 48px;
    overflow: hidden;
  }

  .sb-addon-text {
    padding-left: 48px;
    max-width: 240px;
  }

  .sb-addon-text h4 {
    padding-top: 0px;
  }

  .sb-addon-img {
    position: absolute;
    left: 345px;
    top: 0;
    height: 100%;
    width: 200%;
    overflow: hidden;
  }

  .sb-addon-img img {
    width: 650px;
    transform: rotate(-15deg);
    margin-left: 40px;
    margin-top: -72px;
    box-shadow: 0 0 1px rgba(255, 255, 255, 0);
    backface-visibility: hidden;
  }

  @media screen and (max-width: 800px) {
    .sb-addon-img {
      left: 300px;
    }
  }

  @media screen and (max-width: 600px) {
    .sb-section {
      flex-direction: column;
    }

    .sb-features-grid {
      grid-template-columns: repeat(1, 1fr);
    }

    .sb-socials {
      grid-template-columns: repeat(2, 1fr);
    }

    .sb-addon {
      height: 280px;
      align-items: flex-start;
      padding-top: 32px;
      overflow: hidden;
    }

    .sb-addon-text {
      padding-left: 24px;
    }

    .sb-addon-img {
      right: 0;
      left: 0;
      top: 130px;
      bottom: 0;
      overflow: hidden;
      height: auto;
      width: 124%;
    }

    .sb-addon-img img {
      width: 1200px;
      transform: rotate(-12deg);
      margin-left: 0;
      margin-top: 48px;
      margin-bottom: -40px;
      margin-left: -24px;
    }
  }
  `}
</style>
</file>

<file path="src/stories/header.css">
.storybook-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  padding: 15px 20px;
  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

.storybook-header svg {
  display: inline-block;
  vertical-align: top;
}

.storybook-header h1 {
  display: inline-block;
  vertical-align: top;
  margin: 6px 0 6px 10px;
  font-weight: 700;
  font-size: 20px;
  line-height: 1;
}

.storybook-header button + button {
  margin-left: 10px;
}

.storybook-header .welcome {
  margin-right: 10px;
  color: #333;
  font-size: 14px;
}
</file>

<file path="src/stories/Header.stories.svelte">
<script module>
  import { defineMeta } from '@storybook/addon-svelte-csf';
  import Header from './Header.svelte';
  import { fn } from '@storybook/test';

  // More on how to set up stories at: https://storybook.js.org/docs/writing-stories
  const { Story } = defineMeta({
    title: 'Example/Header',
    component: Header,
    // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs
    tags: ['autodocs'],
    parameters: {
      // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout
      layout: 'fullscreen',
    },
    args: {
      onLogin: fn(),
      onLogout: fn(),
      onCreateAccount: fn(),
    }
  });
</script>

<Story name="Logged In" args={{ user: { name: 'Jane Doe' } }} />

<Story name="Logged Out" />
</file>

<file path="src/stories/Header.svelte">
<script lang="ts">
  import { twitchUser } from '$lib/stores/auth';

  export let title = 'LiveLink';
</script>

<header class="w-full bg-gray-800 text-white">
  <div class="container mx-auto px-4 py-3">
    <div class="flex justify-between items-center">
      <div class="flex items-center gap-6">
        <h1 class="text-xl font-bold">{title}</h1>
        <nav class="flex gap-4">
          <a 
            href="/" 
            class="hover:text-gray-300 transition-colors"
          >
            Home
          </a>
          <a 
            href="/manager" 
            class="hover:text-gray-300 transition-colors"
          >
            Stream Manager
          </a>
        </nav>
      </div>

      <div>
        {#if !$twitchUser.isAuthenticated}
          <a 
            href="/api/auth/twitch"
            class="bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded transition-colors"
          >
            Login with Twitch
          </a>
        {:else}
          <div class="flex items-center gap-4">
            <span>Welcome, {$twitchUser.username}!</span>
            <button 
              class="text-sm text-gray-300 hover:text-white"
              on:click={() => window.location.href = '/api/auth/logout'}
            >
              Logout
            </button>
          </div>
        {/if}
      </div>
    </div>
  </div>
</header>
</file>

<file path="src/stories/page.css">
.storybook-page {
  margin: 0 auto;
  padding: 48px 20px;
  max-width: 600px;
  color: #333;
  font-size: 14px;
  line-height: 24px;
  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

.storybook-page h2 {
  display: inline-block;
  vertical-align: top;
  margin: 0 0 4px;
  font-weight: 700;
  font-size: 32px;
  line-height: 1;
}

.storybook-page p {
  margin: 1em 0;
}

.storybook-page a {
  color: inherit;
}

.storybook-page ul {
  margin: 1em 0;
  padding-left: 30px;
}

.storybook-page li {
  margin-bottom: 8px;
}

.storybook-page .tip {
  display: inline-block;
  vertical-align: top;
  margin-right: 10px;
  border-radius: 1em;
  background: #e7fdd8;
  padding: 4px 12px;
  color: #357a14;
  font-weight: 700;
  font-size: 11px;
  line-height: 12px;
}

.storybook-page .tip-wrapper {
  margin-top: 40px;
  margin-bottom: 40px;
  font-size: 13px;
  line-height: 20px;
}

.storybook-page .tip-wrapper svg {
  display: inline-block;
  vertical-align: top;
  margin-top: 3px;
  margin-right: 4px;
  width: 12px;
  height: 12px;
}

.storybook-page .tip-wrapper svg path {
  fill: #1ea7fd;
}
</file>

<file path="src/stories/Page.stories.svelte">
<script module>
  import { defineMeta } from '@storybook/addon-svelte-csf';
  import { expect, userEvent, waitFor, within } from '@storybook/test';
  import Page from './Page.svelte';
  import { fn } from '@storybook/test';

  // More on how to set up stories at: https://storybook.js.org/docs/writing-stories
  const { Story } = defineMeta({
    title: 'Example/Page',
    component: Page,
    parameters: {
      // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout
      layout: 'fullscreen',
    },
  });
</script>

<Story name="Logged In" play={async ({ canvasElement }) => {
    const canvas = within(canvasElement);
    const loginButton = canvas.getByRole('button', { name: /Log in/i });
    await expect(loginButton).toBeInTheDocument();
    await userEvent.click(loginButton);
    await waitFor(() => expect(loginButton).not.toBeInTheDocument());

    const logoutButton = canvas.getByRole('button', { name: /Log out/i });
    await expect(logoutButton).toBeInTheDocument();
  }}
/>

<Story name="Logged Out" />
</file>

<file path="src/stories/Page.svelte">
<script lang="ts">
  import './page.css';
  import Header from './Header.svelte';

  let user = $state<{ name: string }>();
</script>

<article>
  <Header
    {user}
    onLogin={() => (user = { name: 'Jane Doe' })}
    onLogout={() => (user = undefined)}
    onCreateAccount={() => (user = { name: 'Jane Doe' })}
  />

  <section class="storybook-page">
    <h2>Pages in Storybook</h2>
    <p>
      We recommend building UIs with a
      <a
        href="https://blog.hichroma.com/component-driven-development-ce1109d56c8e"
        target="_blank"
        rel="noopener noreferrer"
      >
        <strong>component-driven</strong>
      </a>
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without
      needing to navigate to them in your app. Here are some handy patterns for managing page data
      in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the
        "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out
        using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
      <a href="https://storybook.js.org/tutorials/" target="_blank" rel="noopener noreferrer">
        Storybook tutorials
      </a>
      . Read more in the
      <a href="https://storybook.js.org/docs" target="_blank" rel="noopener noreferrer">docs</a>
      .
    </p>
    <div class="tip-wrapper">
      <span class="tip">Tip</span>
      Adjust the width of the canvas with the
      <svg width="10" height="10" viewBox="0 0 12 12" xmlns="http://www.w3.org/2000/svg">
        <g fill="none" fill-rule="evenodd">
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0
            01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0
            010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            id="a"
            fill="#999"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
</file>

<file path="src/types/bootstrap.d.ts">
/**
 * Type declarations for Bootstrap
 */

declare module 'bootstrap/dist/js/bootstrap.bundle.min.js' {
  export * from 'bootstrap';
}

declare module 'bootstrap' {
  // Add specific Bootstrap types if needed
  export interface Tooltip {
    show(): void;
    hide(): void;
    toggle(): void;
    dispose(): void;
  }

  export interface Modal {
    show(): void;
    hide(): void;
    toggle(): void;
    dispose(): void;
  }

  export interface Dropdown {
    show(): void;
    hide(): void;
    toggle(): void;
    dispose(): void;
  }

  export interface Collapse {
    show(): void;
    hide(): void;
    toggle(): void;
    dispose(): void;
  }

  export interface Toast {
    show(): void;
    hide(): void;
    dispose(): void;
  }
}
</file>

<file path="src/types/config.ts">
export interface LayerConfig {
  zIndex: number;
  opacity: number;
  visible: boolean;
  blendMode: 'normal' | 'multiply' | 'screen' | 'overlay';
}

export interface MPVConfig {
  // Core settings
  priority?: string;
  vo?: string;
  hwdec?: string;
  'gpu-api'?: string;
  
  // Video settings
  'video-sync'?: string;
  interpolation?: boolean;
  tscale?: string;
  
  // Audio settings
  'audio-device'?: string;
  'audio-channels'?: string;
  
  // Performance settings
  'gpu-dumb-mode'?: boolean;
  'vd-lavc-threads'?: number;
  
  // OSD settings
  'osd-level'?: number;
  'osd-duration'?: number;
  
  // Other settings
  'keep-open'?: boolean;
  'force-window'?: boolean;
  'cursor-autohide'?: number;
  'input-default-bindings'?: boolean;
  osc?: boolean;
}

export interface StreamlinkConfig {
  // Core settings
  player?: string;
  'player-args'?: string;
  'default-stream'?: string[];
  'stream-sorting-excludes'?: string;
  
  // Stream settings
  'retry-open'?: number;
  'retry-streams'?: number;
  'retry-max'?: number;
  'stream-timeout'?: number;
  
  // Buffer settings
  'ringbuffer-size'?: string;
  'stream-segment-threads'?: number;
  'stream-segment-attempts'?: number;
  'stream-segment-timeout'?: number;
  
  // Platform-specific settings
  'twitch-disable-hosting'?: boolean;
  'twitch-disable-ads'?: boolean;
  
  // HTTP settings
  'http-header'?: Record<string, string>;
  'http-proxy'?: string;
  'https-proxy'?: string;
}

export interface StreamConfig {
  enabled: boolean;
  width: number;
  height: number;
  x: number;
  y: number;
  volume: number;
  quality: string;
  windowMaximized: boolean;
  layer?: LayerConfig;
}

export interface PlayerSettings {
  preferStreamlink: boolean;
  defaultQuality: string;
  defaultVolume: number;
  windowMaximized: boolean;
  maxStreams: number;
  autoStart: boolean;
  mpv?: MPVConfig;
  streamlink?: StreamlinkConfig;
}

export interface Config {
  player: PlayerSettings & {
    screens: StreamConfig[];
  };
}
</file>

<file path="src/app.css">
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import 'bootstrap/dist/css/bootstrap.min.css';
@import 'bootstrap-icons/font/bootstrap-icons.css';

/* Custom styles that override Bootstrap */
:root {
  --bs-primary: #0d6efd;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-dark-custom: #1a1a1a;
  --bs-card-dark: #2c2c2c;
  --bs-card-header-dark: #222;
}

/* Dark theme overrides */
.bg-dark-custom {
  background-color: var(--bs-dark-custom);
}

.text-light-custom {
  color: var(--bs-light);
}

/* Custom card styles */
.card-dark {
  background-color: var(--bs-card-dark);
  border-color: #444;
  color: var(--bs-light);
}

.card-header-dark {
  background-color: var(--bs-card-header-dark);
  border-color: #444;
  color: var(--bs-light);
}

/* Custom scrollbar for dark theme */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #333;
}

::-webkit-scrollbar-thumb {
  background: #666;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #888;
}
</file>

<file path="src/app.d.ts">
// See https://svelte.dev/docs/kit/types#app.d.ts
// for information about these interfaces
declare global {
	namespace App {
		// interface Error {}
		// interface Locals {}
		// interface PageData {}
		// interface PageState {}
		// interface Platform {}
	}
}

export {};
</file>

<file path="src/app.html">
<!doctype html>
<html lang="%paraglide.lang%" dir="%paraglide.textDirection%">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" href="%sveltekit.assets%/favicon.png" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		%sveltekit.head%
	</head>
	<body data-sveltekit-preload-data="hover">
		<div>%sveltekit.body%</div>
	</body>
</html>
</file>

<file path="src/demo.spec.ts">
import { describe, it, expect } from 'vitest';

describe('sum test', () => {
	it('adds 1 + 2 to equal 3', () => {
		expect(1 + 2).toBe(3);
	});
});
</file>

<file path="src/hooks.server.ts">
import type { Handle } from '@sveltejs/kit';
import { locale } from '$lib/i18n/index.js';
import type { Locale } from '$lib/i18n/index.js';

export const handle: Handle = async ({ event, resolve }) => {
  // Get locale from URL or default to 'en'
  const lang = event.url.pathname.split('/')[1];
  const validLocale = (lang === 'en' || lang === 'ja') ? lang as Locale : 'en';
  locale.set(validLocale);

  return resolve(event);
};
</file>

<file path="svelte-nodegui-starter/.git/hooks/applypatch-msg.sample">
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:
</file>

<file path="svelte-nodegui-starter/.git/hooks/commit-msg.sample">
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}
</file>

<file path="svelte-nodegui-starter/.git/hooks/fsmonitor-watchman.sample">
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}
</file>

<file path="svelte-nodegui-starter/.git/hooks/post-update.sample">
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-applypatch.sample">
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-commit.sample">
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-merge-commit.sample">
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-push.sample">
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-rebase.sample">
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END
</file>

<file path="svelte-nodegui-starter/.git/hooks/pre-receive.sample">
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi
</file>

<file path="svelte-nodegui-starter/.git/hooks/prepare-commit-msg.sample">
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi
</file>

<file path="svelte-nodegui-starter/.git/hooks/push-to-checkout.sample">
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi
</file>

<file path="svelte-nodegui-starter/.git/hooks/sendemail-validate.sample">
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi
</file>

<file path="svelte-nodegui-starter/.git/hooks/update.sample">
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0
</file>

<file path="svelte-nodegui-starter/.git/info/exclude">
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~
</file>

<file path="svelte-nodegui-starter/.git/refs/heads/master">
cf16977cfb414916b48b48118f2b52972b63033d
</file>

<file path="svelte-nodegui-starter/.git/refs/remotes/origin/HEAD">
ref: refs/remotes/origin/master
</file>

<file path="svelte-nodegui-starter/.git/config">
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = https://github.com/nodegui/svelte-nodegui-starter
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
	vscode-merge-base = origin/master
</file>

<file path="svelte-nodegui-starter/.git/description">
Unnamed repository; edit this file 'description' to name the repository.
</file>

<file path="svelte-nodegui-starter/.git/FETCH_HEAD">
cf16977cfb414916b48b48118f2b52972b63033d		branch 'master' of https://github.com/nodegui/svelte-nodegui-starter
</file>

<file path="svelte-nodegui-starter/.git/HEAD">
ref: refs/heads/master
</file>

<file path="svelte-nodegui-starter/.git/packed-refs">
# pack-refs with: peeled fully-peeled sorted 
cf16977cfb414916b48b48118f2b52972b63033d refs/remotes/origin/master
</file>

<file path="svelte-nodegui-starter/src/components/dog.js">
module.exports = `data:image/png;base64,
iVBORw0KGgoAAAANSUhEUgAAADIAAAAzCAMAAADivasmAAACglBMVEUAAABPPz9RQj9QQUBPPj5PPz5TRENQQEBTQUFRQUFRQUFTQ0J
RQUFQQEBkWFdXSkpVSUhTQEFRQUFUQUFQQUBQQEBOPj1QQD9WQkVdUE5RRERZTEtWRkdRQUFQQEBQQEBSQUJRQUFRQEBURUVQQEBPPT
1aRUVOPT1VRkZPQUBRQEBRQUBSQUFPQEBTQUFSQ0NRQEFQQkFUPkFUQkNOPz5RPj9SP0BTRERVRUVUQEFWRUX///+jnpz+//6lnpykn
pz9/f2inpyinZv9/v2kn538+/v///6inpv7+vmknZv+/v/+/f22s7KnoJ6Xj4+ln51SQkJVP0ClnZtTQEK0sa6koJ38/Pr19fTT0c+m
oJ6Gfn3w7u6wrKuhm5lOQkBSPj/l5OLBv72sp6Wmo6CdlpSblJL6f4f3gIRRQD9NQD78/fv5+fbz8/Lr6enf3dzFw8G/u7qkm5qgmJa
MhoV6cnF/T1D8/f3y8vLt7Ovh4N/a2NjLx8bIxsWuqaeknp+nn52akZCTi4mRiIePhoV/eXjKcnh5bWxrYmFpYF9gVVVdUVJYSklMPT
v49/jl5OTd29nOy8rMycjHxsS8uLaopKShmZf2goiLg4KIfn2DeXh5cG9yaGdvZmVoXV1cTU9VR0dLPzry8O/p6Ofm5ubZ1tbW1NLS0
tHRzszDwb+6trS1srD4gomEfXt1a2q0ZWpsZWT29/Xo5ePV0tO7ubicl5iYkpKVjY3ofofde4KMgYHNc3qtZmuRWFhZTUxPQ0RbQEG1
sLGyrq6qqqr4gYbzhYXpfYXxhISJfHx+dHPDbnO/bnOAcnK+bHG5a3B0bGy2ZWqgZGicWVxlXFqWXFlyUE9KQ0GhVcLgAAAAO3RSTlM
AB9CjBc/izbaqZzInDf759e7DbmtGGxYR+fj29cm5rpaNXT07A/3669mdkoV7elJPLSHz6d3UfV9UML/w/okAAAWkSURBVEjHhZZlVx
tBFIaXUqAtdXd3d8vszmp2kwBpQkJKDCkUd0pb3IpTijvU3d3dXf9PZzbaNpy+n/acO8+ZK+/chHBq8taoLZOWEENp/YiGCfOnE96a1
1cK4y9NnOYbWLJgbFlWdvcE7/D6aiNDUdqLgaN9EWNG9tmgFlJvVhIejSgHkRl7AF8euOhfYurEXIZlY4p4/bLhhFsBYfA8d6AIsKWz
tv9NLArsAiLVRO8Gobu8kGFhqhAFmWoQqezabcP/IKaMKwOqPdEaNUb8/kTUCkVKDOCz+uYFL1w9NyggIGji/FHBawbieWC1cErSJ0J
y0hGWonIH+7orwuLjS8vNVY/62wE4Z9JofCIKJGVEPqVS6bUqIIsvofR6NkNCkSERWkqPpbCgg4EQaItPN9LkkAh9IITVeiMMw7AQxh
6klT4RkpRORQJfgmzGVR8IG0JLLSLwKR6KBhN3mvkHkWJYMJQgtJr+RuJhSAEKoSJUFAUckmtyVAUBb2iGoYNjvAwTB5HDcJCNDImJs
TIOiI3NjGltc14eCUMHFruJ4cvaoXzKGJt/lVMqNZYCxIut1yRSyUnR50Un1O9B/HaFyveLISaOIxUKNak53sacitCQaCAcLRU623Bp
oRtZ3M8DrKJUdMYh8ng+7frWSJlGXBBzcZUbmZQLZEXTCrdIr0/StEdGbs91IyNzRJzWuQhSofYc9bBk8hmMAP3MMa5SJthkd6RzKCp
o8jgPRguCgJlUESFU6JV1rldUIxtlTwqnIKXMysp8wUVwaW1XbqZqUGqZGKE6/d15AawMDacQCjMK7HXHSLUDicg5lpPIRqCvJhnJmu
1YTBvHsRRuYboSpdU2UBueeNJ1i+lRTZKuBzdlPyuPoWeNjCzo5jHCpqKc8zISdbp6iwsRzFE63U2McFaMiPEr8GYYPd4GMGJNxu0Ur
N97rgvu6k/k1N2yYCSvQEb4S6PwDuviIUYKOXxILUg0zSmUSGq1mkSjp+WRcgdle1Jxy8cQC/uLKWxeMZ1WDC3cZoeju/2JQHOkFiPs
ftITpzlSo9HQ3mbgrPLsjKV2InhOrh6iPA0aT1x54JzBYHgacpL0Qo7gJ1TSuXwKmn1ANQ+Y4utqD6Ix66KiUK/CD3vdk8aiVO5tmib
vcDMDQPF+hUf0xXAkXXiSl09JwYBqiZuNXRY8I4sBtsI8TxJqrqkWM3aD4IXQuGclH9aiFxlUoaLgs0YXoUy2SHmk5UZvfVFThJo7Jr
mpiLNQD22zRhOTe1V6isqU3EiavVBADr5Vm5JMk8cftwhuZDdaHvy9EcSksXF4k2SaXMyBpGKENH7edQ25tDmx2YmQEmoZ1LJVIwli1
LhyLaofbVGalMs0DzZLJmuiPceSnF5dt9/Z47QQBhHxY1f5YZMFvAUQjf9Gmpy2cLhmV/3jcN0T+6+BpMEznEyYWkQegpKKpTucO8m/
JptisAEcDUs/+vPh+wf77n/bl9jq2B/CcxSm9D1zNhJO4eSMenBK40ji8NFDLxK+7HvZcUcXo3Q6OhKC0rELvH8T59exVKRrcCca7if
svbyv48Ir3Vm1YyaWIhHkziG8FVSm5QF/JCUZp45uwciFvXdkhKalfLSU+PZZU72RwM4SlK0q9mQjbrMLuRtVgBITDhoYgJCw+g3eyN
QVlUZeXjMt0SkpV3683nvoQcfeT1HREWlnYkXAMCqqc8IU4g/5jazOptALQn1Rnb8d9bEjISHh7tKqViMAPH6N2b0TdxJ/a/J4M4WjE
DJ8r/3hu0Nfn9S2Q4AlZnWNn+zrb9QG/xlmG3p3AIr6rrqkpPrcLIik0trMM/ynEb4V7D++qow1AkYE2uw4VssyjJEtq5q9cjQxtKaP
mjuzurIiLM5GUWxcWEVlzcx5k6YS/5HforX+iUkNDQ32zUH+q9dN/+fAbySYWHnCNGc5AAAAAElFTkSuQmCC`;
</file>

<file path="svelte-nodegui-starter/src/components/StepOne.svelte">
<script lang="ts">
    const dogImg = require("./dog");
</script>

<view style="margin-top: 8px; margin-horizontal: 16px; padding-horizontal: 8px;">
    <text wordWrap={true}>
        Edit App.svelte to make changes to this screen. Then come back to see your changes. The app will restart with each change, thanks to Live Reload 🔥
    </text>
    <text>
      {`
        <p style="color: rgb(255,72,38);"> 
          <center>
            <img src="${dogImg}" alt="doggy" />  
          </center>
          <center>You can even use <i><strong>rich HTML text</strong></i> like this if you want 😎</center>
        </p>
        <hr />
      `}
    </text>
</view>
</file>

<file path="svelte-nodegui-starter/src/components/StepTwo.svelte">
<script lang="ts">
    import open from "open";

    function onClicked(): void {
        open("https://svelte.nodegui.org").catch(console.error);
    }
</script>

<view style="margin-top: 8px; margin-horizontal: 16px; padding-horizontal: 8px;">
    <text style="margin-bottom: 8px;" wordWrap={true}>
        {`
            <ol>
                <li>
                    Open chrome and navigate to chrome://inspect. You should see a target below with your app.
                </li>
                <br/>
                    <li>
                        Next click on "Open dedicated DevTools for Node"
                    </li>
                    <br/>
                <li>
                    On the dedicated devtools. Click on Source > Node > "Your node process"
                </li>
            </ol>
        `}
    </text>
    <button
      style="margin-horizontal: 20px; height: 40px;"
      on:clicked={onClicked}
    >
        Open the Svelte NodeGUI docs
    </button>
</view>
</file>

<file path="svelte-nodegui-starter/src/App.svelte">
<script lang="ts">
    import { onMount } from 'svelte';
    import { QIcon } from "@nodegui/nodegui";
    import StepOne from "./components/StepOne.svelte";
    import StepTwo from "./components/StepTwo.svelte";
    import nodeguiIcon from "../assets/nodegui.jpg";
    import type { NSVElement, RNWindow } from "@nodegui/svelte-nodegui";

    const winIcon = new QIcon(nodeguiIcon);

    /**
     * The exact type for this is: NSVElement<RNWindow>
     * ... However, the Svelte language tools erroneously expect all bind:this values to extend HTMLElement, so
     * for now, we have to rely on reasserting the type.
     */
    let win;

    onMount(() => {
        (window as any).win = win; // Prevent garbage collection, otherwise the window quickly disappears!
        (win as NSVElement<RNWindow>).nativeView.show();

        return () => {
            delete (window as any).win;
        };
    });
</script>

<window
    bind:this={win}
    windowIcon={winIcon}
    minSize={{ width: 500, height: 520 }}
    windowTitle="Hello 👋🏽"
>
    <view style="flex: 1;">
        <text id="welcome-text">Welcome to Svelte NodeGUI 🐕</text>
        <text id="step-1">1. Play around</text>
        <StepOne />
        <text id="step-2">2. Debug</text>
        <StepTwo />
    </view>
</window>

<style>
    /* 
     * CSS has a few gotchas for now.
     * 1) Some values need to be enclosed with quotes (e.g. `width: '100%';` rather than `width: 100%;`).
     *    See: https://github.com/nodegui/svelte-nodegui/issues/4
     * 2) Classes are not supported yet; they're a bit weird in Qt5.
          See: https://github.com/nodegui/svelte-nodegui/issues/6
     * 3) You can't write element-level rules like `text { color: 'red'; }`, unless they're global (not scoped).
     *    For scoped rules, you have to refer to the underlying native element, e.g. `QLabel { color: 'red'; }`.
     *    See: https://github.com/nodegui/svelte-nodegui/issues/7
     */
    #welcome-text {
        font-size: 24px;
        padding-top: 20px;
        qproperty-alignment: 'AlignHCenter';
        font-family: 'sans-serif';
    }
    #step-1, #step-2 {
        font-size: 18px;
        padding-top: 10px;
        padding-horizontal: 20px;
    }
</style>
</file>

<file path="svelte-nodegui-starter/src/app.ts">
import { svelteNodeGUI } from "@nodegui/svelte-nodegui";

import App from "./App.svelte";
svelteNodeGUI(App, {});


declare global {
    var __HMR_MODE__: "live-reload" | "hmr" | "none";
    namespace NodeJS {
        interface Module {
            hot: any;
        }
    }
}

if(module.hot){
    if(__HMR_MODE__ === "live-reload"){
        module.hot.accept(function(){
            console.log(`Hot update received; will send exit signal to live reload.`);
            /**
             * Our user-defined exit code for livereload.
             * @see ../livereload.sh
             */
            process.exit(64);
        });
    } else if(__HMR_MODE__ === "hmr"){
        module.hot.accept(["./app"], function(){
            console.warn(`Unable to accept hot update – HMR not yet implemented!`);
        });
    }
}
</file>

<file path="svelte-nodegui-starter/.gitignore">
node_modules/
*.js.map

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# General
.DS_Store
.AppleDouble
.LSOverride
.idea
.cloud
.project

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# NodeGUI
dist/
</file>

<file path="svelte-nodegui-starter/assets.d.ts">
declare module "*.svg";
declare module "*.png";
declare module "*.jpg";
declare module "*.jpeg";
declare module "*.gif";
declare module "*.bmp";
</file>

<file path="svelte-nodegui-starter/livereload.js">
#!/usr/bin/env node
const { spawn } = require("child_process");
const { normalize } = require("path");

// 'disconnect' is not needed as it will only be raised, when either the child process or this process calss disconnect explicitly.
// We are abel to ensure, that this will never happen, as we do not need communication with the spawned subprocess
const terminationSignals = ["close", "exit"];

function startSubprocess() {
  return new Promise((res, rej) => {
    const [command, ...args] = process.argv.slice(2);
    const proc = spawn(normalize(command), args, {
      // use parents stdio
      stdio: "inherit",
      shell:
        process.platform === "win32" ||
        /^(msys|cygwin)$/.test(process.env.OSTYPE),
    });
    terminationSignals.forEach((event) => proc.on(event, res));
    proc.on("error", rej);
  });
}

async function loop() {
  let code = 64;
  while (code === 64) code = await startSubprocess();
}

loop();
</file>

<file path="svelte-nodegui-starter/package.json">
{
  "name": "svelte-nodegui-starter",
  "version": "1.0.2",
  "main": "index.js",
  "author": "Jamie Birch",
  "license": "MIT",
  "private": true,
  "scripts": {
    "build": "webpack --mode production",
    "dev": "webpack --mode=development",
    "start": "node livereload.js node_modules/.bin/qode ./dist/index.js",
    "debug": "qode --inspect ./dist/index.js"
  },
  "dependencies": {
    "@nodegui/nodegui": "^0.30.2",
    "@nodegui/svelte-nodegui": "^0.1.1",
    "open": "^7.4.2",
    "phin": "^3.5.1"
  },
  "devDependencies": {
    "@nodegui/packer": "^1.4.1",
    "@nodegui/svelte-nodegui-preprocessor": "^0.1.0",
    "@tsconfig/svelte": "^1.0.10",
    "@types/node": "^14.14.31",
    "clean-webpack-plugin": "^3.0.0",
    "file-loader": "^6.2.0",
    "fork-ts-checker-webpack-plugin": "^5.2.1",
    "native-addon-loader": "^2.0.1",
    "svelte": "^3.32.1",
    "svelte-loader": "^2.13.6",
    "svelte-preprocess": "^4.6.5",
    "ts-loader": "^8.0.17",
    "typescript": "^4.2.2",
    "webpack": "^5.24.2",
    "webpack-cli": "^4.5.0"
  }
}
</file>

<file path="svelte-nodegui-starter/README.md">
# svelte-nodegui-starter

**Clone and run for a quick way to see Svelte NodeGui in action.**

![logo](https://github.com/nodegui/svelte-nodegui-starter/raw/master/assets/demo.png)

## To Use

To clone and run this repository you'll need [Git](https://git-scm.com) and [Node.js](https://nodejs.org/en/download/) (which comes with [npm](http://npmjs.com)) installed on your computer.

Make sure you have met the requirements listed here: https://docs.nodegui.org/#/tutorial/development-environment

From your command line:

```bash
# Copy files from starter repo into a directory called "my-project"
npx degit https://github.com/nodegui/svelte-nodegui-starter my-project
# Go into the repository
cd my-project
# Install dependencies
npm install
# Build the app in development mode (unminified; watch mode on)
npm run dev
# (From another terminal) Run the built app
npm run start
```

## Resources for Learning NodeGui

- [svelte.nodegui.org](https://svelte.nodegui.org) - all of Svelte NodeGui's documentation

## Packaging app as a distributable

In order to distribute your finished app, you can use [@nodegui/packer](https://github.com/nodegui/packer)

### Step 1: (_**Run this command only once**_)

```sh
npx nodegui-packer --init MyAppName
```

This will produce the deploy directory containing the template. You can modify this to suite your needs. Like add icons, change the name, description and add other native features or dependencies. Make sure you commit this directory.

### Step 2: (_**Run this command every time you want to build a new distributable**_)

Next you can run the pack command:

```sh
npm run build
```

This will produce the js bundle along with assets inside the `./dist` directory

```sh
npx nodegui-packer --pack ./dist
```

This will build the distributable using `@nodegui/packer` based on your template. The output of the command is found under the build directory. You should gitignore the build directory.

More details about `@nodegui/packer` can be found here: https://github.com/nodegui/packer

## License

MIT
</file>

<file path="svelte-nodegui-starter/tsconfig.json">
{
    "extends": "@tsconfig/svelte/tsconfig.json",

    "compilerOptions": {
        "module": "esnext",
        "declaration": true,
        "removeComments": true,
        "noLib": false,
        "jsxFactory": "svelteNodeGUI.createElement",
        "emitDecoratorMetadata": false,
        "experimentalDecorators": true,
        "pretty": true,
        "allowUnreachableCode": false,
        "allowUnusedLabels": false,
        "noEmitHelpers": false,
        "noEmitOnError": false,
        "noImplicitAny": false,
        "noImplicitReturns": false,
        "noImplicitUseStrict": false,
        "noFallthroughCasesInSwitch": true,
        "allowSyntheticDefaultImports": true,
        "lib": ["es6", "dom", "es2015.iterable", "es2017.string", "es2018.promise"],
        "baseUrl": ".",
        "types": ["node", "svelte"],
        "paths": {
            "~/*": ["src/*"],
            "*": ["./node_modules/*"]
        }
    },
    /**
     * `svelte-nodegui.d.ts` provides the JSX typings needed to support Svelte components using lang="ts".
     * If you'd prefer not to introduce a "files" property into your tsconfig, you can add this
     * triple-slash directive to the top line of `src/app.ts` instead:
     * /// <reference path="../node_modules/@nodegui/svelte-nodegui/svelte-nodegui.d.ts" />
     * Remember to restart the Svelte Language Service after any significant changes to configuration.
    */
    "files": [
        "./node_modules/@nodegui/svelte-nodegui/svelte-nodegui.d.ts",
        "./assets.d.ts"
    ],
    "include": ["src/**/*", "assets/**/*"],
    "exclude": ["node_modules/*", "__sapper__/*", "public/*"]
}
</file>

<file path="svelte-nodegui-starter/webpack.config.js">
const path = require("path");
const webpack = require("webpack");
const ForkTsCheckerWebpackPlugin = require("fork-ts-checker-webpack-plugin");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const SvelteNodeGUIPreprocessor = require("@nodegui/svelte-nodegui-preprocessor");
const SveltePreprocess = require("svelte-preprocess");

module.exports = (env, argv) => {
    const config = {
        mode: "development",
        entry: ["./src/app.ts"],
        target: "node",
        output: {
            path: path.resolve(__dirname, "dist"),
            filename: "index.js"
        },
        module: {
            rules: [
                {
                    test: /\.(png|jpe?g|gif|svg|bmp|otf)$/i,
                    use: [
                        {
                            loader: "file-loader",
                            options: { publicPath: "dist" }
                        }
                    ]
                },
                {
                    test: /\.node/i,
                    use: [
                        {
                            loader: "native-addon-loader",
                            options: { name: "[name]-[hash].[ext]" }
                        }
                    ]
                },
                {
                    test: /\.ts$/,
                    use: {
                        loader: "ts-loader",
                        options: {
                            configFile: path.resolve(__dirname, "tsconfig.json"),
                            // https://github.com/TypeStrong/ts-loader/blob/ea2fcf925ec158d0a536d1e766adfec6567f5fb4/README.md#faster-builds
                            // https://github.com/TypeStrong/ts-loader/blob/ea2fcf925ec158d0a536d1e766adfec6567f5fb4/README.md#hot-module-replacement
                            transpileOnly: true,
                            allowTsInNodeModules: true,
                            compilerOptions: {
                                sourceMap: argv.mode !== 'production',
                                declaration: false
                            },
                        },
                    }
                },
                {
                    test: /\.mjs$/,
                    type: 'javascript/auto',
                },
                {
                    test: /\.svelte$/,
                    exclude: /node_modules/,
                    use: [
                        {
                            /**
                             * Note: Svelte Native uses a minor patch of svelte-loader. I'm not sure of the significance.
                             * @see https://github.com/halfnelson/svelte-native/blob/0af94fac6ea18f54f93ab299d0b512f91d722569/demo/package.json#L26
                             */
                            loader: 'svelte-loader',
                            options: {
                                preprocess: {
                                    ...SveltePreprocess(),
                                    ...SvelteNodeGUIPreprocessor(),
                                },
                            }
                        }
                    ]
                },
            ]
        },
        plugins: [
            new CleanWebpackPlugin(),
            new webpack.DefinePlugin({
                /**
                 * This flag defines how the app should handle a hot module update.
                 * "live-reload": Sends an exit signal, so will be relaunched if running via nodemon.
                 * "hmr": Applies the hot update without exiting the app (not yet implemented!).
                 * "none": The app remains alive, but doesn't apply the update.
                 * undefined: Same as "none".
                 * @type {"live-reload" | "hmr" | "none"}
                 */
                "__HMR_MODE__": argv.mode === "production" ? "\"none\"" : "\"live-reload\"",
                "__DEV__": argv.mode === "development" ? "true" : "false",
                "__TEST__": "false",
            })
        ],
        resolve: {
            extensions: [".ts", ".mjs", ".js", ".svelte", ".scss", ".css", ".json"]
        }
    };

    if (argv.mode === "development" || config.mode === "development") {
        config.mode = "development";
        config.plugins.push(new webpack.HotModuleReplacementPlugin());
        config.plugins.push(new ForkTsCheckerWebpackPlugin());
        config.devtool = "source-map";
        config.watch = true;
        config.entry.unshift("webpack/hot/poll?100");
    }

    return config;
};
</file>

<file path=".npmrc">
engine-strict=true
type=module
</file>

<file path=".prettierignore">
# Package Managers
package-lock.json
pnpm-lock.yaml
yarn.lock
</file>

<file path=".prettierrc">
{
	"useTabs": true,
	"singleQuote": true,
	"trailingComma": "none",
	"printWidth": 100,
	"plugins": ["prettier-plugin-svelte", "prettier-plugin-tailwindcss"],
	"overrides": [
		{
			"files": "*.svelte",
			"options": {
				"parser": "svelte"
			}
		}
	]
}
</file>

<file path="eslint.config.js">
import prettier from 'eslint-config-prettier';
import js from '@eslint/js';
import { includeIgnoreFile } from '@eslint/compat';
import svelte from 'eslint-plugin-svelte';
import globals from 'globals';
import { fileURLToPath } from 'node:url';
import ts from 'typescript-eslint';
const gitignorePath = fileURLToPath(new URL('./.gitignore', import.meta.url));

export default ts.config(
	includeIgnoreFile(gitignorePath),
	js.configs.recommended,
	...ts.configs.recommended,
	...svelte.configs['flat/recommended'],
	prettier,
	...svelte.configs['flat/prettier'],
	{
		languageOptions: {
			globals: {
				...globals.browser,
				...globals.node
			}
		}
	},
	{
		files: ['**/*.svelte'],

		languageOptions: {
			parserOptions: {
				parser: ts.parser
			}
		}
	}
);
</file>

<file path="playwright.config.ts">
import { defineConfig } from '@playwright/test';

export default defineConfig({
	webServer: {
		command: 'npm run build && npm run preview',
		port: 4173
	},

	testDir: 'e2e'
});
</file>

<file path="postcss.config.js">
export default {
	plugins: {
		tailwindcss: {},
		autoprefixer: {}
	}
};
</file>

<file path="README.md">
# LiveLink

LiveLink is a powerful streaming management application that allows you to watch and manage multiple streams simultaneously. It supports Twitch, YouTube, and other streaming platforms through a unified interface.

## Features

- **Multi-Stream Support**: Watch multiple streams simultaneously
- **Stream Queue**: Queue up streams to watch later
- **API Explorer**: Test and explore the available API endpoints
- **Configuration Management**: Easily configure player settings and screen layouts
- **Responsive UI**: Modern Bootstrap-based interface that works on various devices

## Getting Started

### Prerequisites

- Node.js (v16 or higher)
- npm (v7 or higher)

### Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/LiveLink.git
   cd LiveLink
   ```

2. Install dependencies:
   ```bash
   npm install
   ```

3. Configure your environment:
   - Copy `.env.example` to `.env` and fill in your API keys
   - Update configuration files in the `config` directory as needed

4. Start the development server:
   ```bash
   npm run dev:all
   ```

5. Open your browser and navigate to:
   ```
   http://localhost:5173
   ```

### Production Deployment

To build for production:

```bash
npm run build:all
npm run start:all
```

## Usage

### Stream Management

1. Navigate to the Streams page
2. Enter a stream URL and select a screen
3. Click "Add Stream" to start watching
4. Use the player controls to adjust volume, seek, or pause

### Configuration

1. Navigate to the Settings page
2. Adjust global player settings or screen-specific settings
3. Click "Save" to apply changes

### API Explorer

1. Navigate to the API Explorer tab on the home page
2. Browse available endpoints by category
3. Click "Test" on GET endpoints to see responses

## Development

### Project Structure

- `/src`: Source code
  - `/components`: Reusable UI components
  - `/lib`: Utility functions and API client
  - `/routes`: SvelteKit routes
  - `/types`: TypeScript type definitions
- `/config`: Configuration files
- `/dist`: Build output

### Available Scripts

- `npm run dev`: Start the frontend development server
- `npm run dev:server`: Start the backend server
- `npm run dev:all`: Start both frontend and backend in development mode
- `npm run build`: Build the frontend
- `npm run build:server`: Build the backend
- `npm run build:all`: Build both frontend and backend
- `npm run start`: Start the production server
- `npm run start:all`: Start both frontend and backend in production mode

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Acknowledgments

- Built with [SvelteKit](https://kit.svelte.dev/)
- UI powered by [Bootstrap](https://getbootstrap.com/)
- Icons from [Bootstrap Icons](https://icons.getbootstrap.com/)
</file>

<file path="setup.sh">
#!/bin/bash

# LiveLink Setup Script

echo "LiveLink Setup Script"
echo "====================="
echo ""

# Check if .env file exists
if [ -f .env ]; then
  echo "Found existing .env file."
  read -p "Do you want to update it? (y/n): " update_env
  if [[ $update_env != "y" ]]; then
    echo "Skipping .env update."
  else
    update_env="y"
  fi
else
  echo "No .env file found. Creating one..."
  touch .env
  update_env="y"
fi

# Update .env file if needed
if [[ $update_env == "y" ]]; then
  echo ""
  echo "Setting up API keys..."
  echo ""
  
  # Get Holodex API key
  read -p "Enter your Holodex API key (get from https://holodex.net/api): " holodex_key
  if [[ -n $holodex_key ]]; then
    grep -v "HOLODEX_API_KEY" .env > .env.tmp
    echo "HOLODEX_API_KEY=$holodex_key" >> .env.tmp
    mv .env.tmp .env
    echo "Holodex API key set."
  else
    echo "Holodex API key not set. Streams from Holodex will not be available."
  fi
  
  # Get Twitch API keys
  read -p "Enter your Twitch Client ID (get from https://dev.twitch.tv/console/apps): " twitch_id
  read -p "Enter your Twitch Client Secret: " twitch_secret
  
  if [[ -n $twitch_id && -n $twitch_secret ]]; then
    grep -v "TWITCH_CLIENT_ID" .env > .env.tmp
    echo "TWITCH_CLIENT_ID=$twitch_id" >> .env.tmp
    mv .env.tmp .env
    
    grep -v "TWITCH_CLIENT_SECRET" .env > .env.tmp
    echo "TWITCH_CLIENT_SECRET=$twitch_secret" >> .env.tmp
    mv .env.tmp .env
    
    echo "Twitch API keys set."
  else
    echo "Twitch API keys not set. Streams from Twitch will not be available."
  fi
fi

# Check if node_modules exists
if [ ! -d "node_modules" ]; then
  echo ""
  echo "Installing dependencies..."
  npm install
else
  echo ""
  echo "Dependencies already installed."
fi

# Build the server
echo ""
echo "Building the server..."
npm run build:server

echo ""
echo "Setup complete!"
echo ""
echo "To start the server, run: npm start"
echo "To start the development server, run: npm run dev"
echo ""
echo "If you encounter any issues with streams not loading, check the logs for error messages."
echo "Make sure your API keys are correctly set in the .env file."
echo ""
</file>

<file path="svelte.config.js">
import adapter from '@sveltejs/adapter-node';
import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	// Consult https://svelte.dev/docs/kit/integrations
	// for more information about preprocessors
	kit: {
		// adapter-auto only supports some environments, see https://svelte.dev/docs/kit/adapter-auto for a list.
		// If your environment is not supported, or you settled on a specific environment, switch out the adapter.
		// See https://svelte.dev/docs/kit/adapters for more information about adapters.
		adapter: adapter({
			out: 'build',
			precompress: false,
			envPrefix: '',
			polyfill: true
		})
	},

	preprocess: vitePreprocess()
};

export default config;
</file>

<file path="tailwind.config.ts">
import containerQueries from '@tailwindcss/container-queries';
import forms from '@tailwindcss/forms';
import typography from '@tailwindcss/typography';
import type { Config } from 'tailwindcss';

export default {
	content: ['./src/**/*.{html,js,svelte,ts}'],

	theme: {
		extend: {}
	},

	plugins: [typography, forms, containerQueries]
} satisfies Config;
</file>

<file path="tsconfig.build.json">
{
  "extends": "./tsconfig.server.json",
  "compilerOptions": {
    "noEmit": false,
    "incremental": true
  },
  "exclude": [
    "node_modules",
    "dist",
    "src/**/*.test.ts",
    "src/**/*.stories.ts",
    "src/**/*.svelte"
  ]
}
</file>

<file path="tsconfig.build.tsbuildinfo">
{"fileNames":["./node_modules/typescript/lib/lib.es5.d.ts","./node_modules/typescript/lib/lib.es2015.d.ts","./node_modules/typescript/lib/lib.es2016.d.ts","./node_modules/typescript/lib/lib.es2017.d.ts","./node_modules/typescript/lib/lib.es2018.d.ts","./node_modules/typescript/lib/lib.es2019.d.ts","./node_modules/typescript/lib/lib.es2020.d.ts","./node_modules/typescript/lib/lib.es2021.d.ts","./node_modules/typescript/lib/lib.es2022.d.ts","./node_modules/typescript/lib/lib.es2023.d.ts","./node_modules/typescript/lib/lib.es2024.d.ts","./node_modules/typescript/lib/lib.esnext.d.ts","./node_modules/typescript/lib/lib.dom.d.ts","./node_modules/typescript/lib/lib.dom.iterable.d.ts","./node_modules/typescript/lib/lib.es2015.core.d.ts","./node_modules/typescript/lib/lib.es2015.collection.d.ts","./node_modules/typescript/lib/lib.es2015.generator.d.ts","./node_modules/typescript/lib/lib.es2015.iterable.d.ts","./node_modules/typescript/lib/lib.es2015.promise.d.ts","./node_modules/typescript/lib/lib.es2015.proxy.d.ts","./node_modules/typescript/lib/lib.es2015.reflect.d.ts","./node_modules/typescript/lib/lib.es2015.symbol.d.ts","./node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","./node_modules/typescript/lib/lib.es2016.array.include.d.ts","./node_modules/typescript/lib/lib.es2016.intl.d.ts","./node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","./node_modules/typescript/lib/lib.es2017.date.d.ts","./node_modules/typescript/lib/lib.es2017.object.d.ts","./node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","./node_modules/typescript/lib/lib.es2017.string.d.ts","./node_modules/typescript/lib/lib.es2017.intl.d.ts","./node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","./node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","./node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","./node_modules/typescript/lib/lib.es2018.intl.d.ts","./node_modules/typescript/lib/lib.es2018.promise.d.ts","./node_modules/typescript/lib/lib.es2018.regexp.d.ts","./node_modules/typescript/lib/lib.es2019.array.d.ts","./node_modules/typescript/lib/lib.es2019.object.d.ts","./node_modules/typescript/lib/lib.es2019.string.d.ts","./node_modules/typescript/lib/lib.es2019.symbol.d.ts","./node_modules/typescript/lib/lib.es2019.intl.d.ts","./node_modules/typescript/lib/lib.es2020.bigint.d.ts","./node_modules/typescript/lib/lib.es2020.date.d.ts","./node_modules/typescript/lib/lib.es2020.promise.d.ts","./node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","./node_modules/typescript/lib/lib.es2020.string.d.ts","./node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","./node_modules/typescript/lib/lib.es2020.intl.d.ts","./node_modules/typescript/lib/lib.es2020.number.d.ts","./node_modules/typescript/lib/lib.es2021.promise.d.ts","./node_modules/typescript/lib/lib.es2021.string.d.ts","./node_modules/typescript/lib/lib.es2021.weakref.d.ts","./node_modules/typescript/lib/lib.es2021.intl.d.ts","./node_modules/typescript/lib/lib.es2022.array.d.ts","./node_modules/typescript/lib/lib.es2022.error.d.ts","./node_modules/typescript/lib/lib.es2022.intl.d.ts","./node_modules/typescript/lib/lib.es2022.object.d.ts","./node_modules/typescript/lib/lib.es2022.string.d.ts","./node_modules/typescript/lib/lib.es2022.regexp.d.ts","./node_modules/typescript/lib/lib.es2023.array.d.ts","./node_modules/typescript/lib/lib.es2023.collection.d.ts","./node_modules/typescript/lib/lib.es2023.intl.d.ts","./node_modules/typescript/lib/lib.es2024.arraybuffer.d.ts","./node_modules/typescript/lib/lib.es2024.collection.d.ts","./node_modules/typescript/lib/lib.es2024.object.d.ts","./node_modules/typescript/lib/lib.es2024.promise.d.ts","./node_modules/typescript/lib/lib.es2024.regexp.d.ts","./node_modules/typescript/lib/lib.es2024.sharedmemory.d.ts","./node_modules/typescript/lib/lib.es2024.string.d.ts","./node_modules/typescript/lib/lib.esnext.array.d.ts","./node_modules/typescript/lib/lib.esnext.collection.d.ts","./node_modules/typescript/lib/lib.esnext.intl.d.ts","./node_modules/typescript/lib/lib.esnext.disposable.d.ts","./node_modules/typescript/lib/lib.esnext.decorators.d.ts","./node_modules/typescript/lib/lib.esnext.iterator.d.ts","./node_modules/typescript/lib/lib.decorators.d.ts","./node_modules/typescript/lib/lib.decorators.legacy.d.ts","./src/app.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/pretty-format/dist/index.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/types.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/helpers.d.ts","./node_modules/@vitest/runner/node_modules/tinyrainbow/dist/index-8b61d5bc.d.ts","./node_modules/@vitest/runner/node_modules/tinyrainbow/dist/node.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/index.d.ts","./node_modules/@vitest/runner/dist/tasks-CUXfn9LM.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/types-6R1G1gkS.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/diff.d.ts","./node_modules/@vitest/runner/dist/types.d.ts","./node_modules/@vitest/runner/node_modules/@vitest/utils/dist/error.d.ts","./node_modules/@vitest/runner/dist/index.d.ts","./node_modules/vitest/dist/chunks/environment.d8YfPkTm.d.ts","./node_modules/vitest/node_modules/@vitest/utils/dist/index.d.ts","./node_modules/@types/node/compatibility/disposable.d.ts","./node_modules/@types/node/compatibility/indexable.d.ts","./node_modules/@types/node/compatibility/iterators.d.ts","./node_modules/@types/node/compatibility/index.d.ts","./node_modules/@types/node/globals.typedarray.d.ts","./node_modules/@types/node/buffer.buffer.d.ts","./node_modules/buffer/index.d.ts","./node_modules/undici-types/header.d.ts","./node_modules/undici-types/readable.d.ts","./node_modules/undici-types/file.d.ts","./node_modules/undici-types/fetch.d.ts","./node_modules/undici-types/formdata.d.ts","./node_modules/undici-types/connector.d.ts","./node_modules/undici-types/client.d.ts","./node_modules/undici-types/errors.d.ts","./node_modules/undici-types/dispatcher.d.ts","./node_modules/undici-types/global-dispatcher.d.ts","./node_modules/undici-types/global-origin.d.ts","./node_modules/undici-types/pool-stats.d.ts","./node_modules/undici-types/pool.d.ts","./node_modules/undici-types/handlers.d.ts","./node_modules/undici-types/balanced-pool.d.ts","./node_modules/undici-types/agent.d.ts","./node_modules/undici-types/mock-interceptor.d.ts","./node_modules/undici-types/mock-agent.d.ts","./node_modules/undici-types/mock-client.d.ts","./node_modules/undici-types/mock-pool.d.ts","./node_modules/undici-types/mock-errors.d.ts","./node_modules/undici-types/proxy-agent.d.ts","./node_modules/undici-types/env-http-proxy-agent.d.ts","./node_modules/undici-types/retry-handler.d.ts","./node_modules/undici-types/retry-agent.d.ts","./node_modules/undici-types/api.d.ts","./node_modules/undici-types/interceptors.d.ts","./node_modules/undici-types/util.d.ts","./node_modules/undici-types/cookies.d.ts","./node_modules/undici-types/patch.d.ts","./node_modules/undici-types/websocket.d.ts","./node_modules/undici-types/eventsource.d.ts","./node_modules/undici-types/filereader.d.ts","./node_modules/undici-types/diagnostics-channel.d.ts","./node_modules/undici-types/content-type.d.ts","./node_modules/undici-types/cache.d.ts","./node_modules/undici-types/index.d.ts","./node_modules/@types/node/globals.d.ts","./node_modules/@types/node/assert.d.ts","./node_modules/@types/node/assert/strict.d.ts","./node_modules/@types/node/async_hooks.d.ts","./node_modules/@types/node/buffer.d.ts","./node_modules/@types/node/child_process.d.ts","./node_modules/@types/node/cluster.d.ts","./node_modules/@types/node/console.d.ts","./node_modules/@types/node/constants.d.ts","./node_modules/@types/node/crypto.d.ts","./node_modules/@types/node/dgram.d.ts","./node_modules/@types/node/diagnostics_channel.d.ts","./node_modules/@types/node/dns.d.ts","./node_modules/@types/node/dns/promises.d.ts","./node_modules/@types/node/domain.d.ts","./node_modules/@types/node/dom-events.d.ts","./node_modules/@types/node/events.d.ts","./node_modules/@types/node/fs.d.ts","./node_modules/@types/node/fs/promises.d.ts","./node_modules/@types/node/http.d.ts","./node_modules/@types/node/http2.d.ts","./node_modules/@types/node/https.d.ts","./node_modules/@types/node/inspector.d.ts","./node_modules/@types/node/module.d.ts","./node_modules/@types/node/net.d.ts","./node_modules/@types/node/os.d.ts","./node_modules/@types/node/path.d.ts","./node_modules/@types/node/perf_hooks.d.ts","./node_modules/@types/node/process.d.ts","./node_modules/@types/node/punycode.d.ts","./node_modules/@types/node/querystring.d.ts","./node_modules/@types/node/readline.d.ts","./node_modules/@types/node/readline/promises.d.ts","./node_modules/@types/node/repl.d.ts","./node_modules/@types/node/sea.d.ts","./node_modules/@types/node/sqlite.d.ts","./node_modules/@types/node/stream.d.ts","./node_modules/@types/node/stream/promises.d.ts","./node_modules/@types/node/stream/consumers.d.ts","./node_modules/@types/node/stream/web.d.ts","./node_modules/@types/node/string_decoder.d.ts","./node_modules/@types/node/test.d.ts","./node_modules/@types/node/timers.d.ts","./node_modules/@types/node/timers/promises.d.ts","./node_modules/@types/node/tls.d.ts","./node_modules/@types/node/trace_events.d.ts","./node_modules/@types/node/tty.d.ts","./node_modules/@types/node/url.d.ts","./node_modules/@types/node/util.d.ts","./node_modules/@types/node/v8.d.ts","./node_modules/@types/node/vm.d.ts","./node_modules/@types/node/wasi.d.ts","./node_modules/@types/node/worker_threads.d.ts","./node_modules/@types/node/zlib.d.ts","./node_modules/@types/node/index.d.ts","./node_modules/@types/estree/index.d.ts","./node_modules/rollup/dist/rollup.d.ts","./node_modules/rollup/dist/parseAst.d.ts","./node_modules/vite/types/hmrPayload.d.ts","./node_modules/vite/types/customEvent.d.ts","./node_modules/vite/types/hot.d.ts","./node_modules/vite/dist/node/module-runner.d.ts","./node_modules/esbuild/lib/main.d.ts","./node_modules/source-map-js/source-map.d.ts","./node_modules/postcss/lib/previous-map.d.ts","./node_modules/postcss/lib/input.d.ts","./node_modules/postcss/lib/css-syntax-error.d.ts","./node_modules/postcss/lib/declaration.d.ts","./node_modules/postcss/lib/root.d.ts","./node_modules/postcss/lib/warning.d.ts","./node_modules/postcss/lib/lazy-result.d.ts","./node_modules/postcss/lib/no-work-result.d.ts","./node_modules/postcss/lib/processor.d.ts","./node_modules/postcss/lib/result.d.ts","./node_modules/postcss/lib/document.d.ts","./node_modules/postcss/lib/rule.d.ts","./node_modules/postcss/lib/node.d.ts","./node_modules/postcss/lib/comment.d.ts","./node_modules/postcss/lib/container.d.ts","./node_modules/postcss/lib/at-rule.d.ts","./node_modules/postcss/lib/list.d.ts","./node_modules/postcss/lib/postcss.d.ts","./node_modules/postcss/lib/postcss.d.mts","./node_modules/vite/types/internal/lightningcssOptions.d.ts","./node_modules/vite/types/internal/cssPreprocessorOptions.d.ts","./node_modules/vite/types/importGlob.d.ts","./node_modules/vite/types/metadata.d.ts","./node_modules/vite/dist/node/index.d.ts","./node_modules/vitest/node_modules/@vitest/utils/dist/types.d.ts","./node_modules/vitest/node_modules/@vitest/utils/dist/source-map.d.ts","./node_modules/vitest/node_modules/@vitest/pretty-format/dist/index.d.ts","./node_modules/@vitest/snapshot/node_modules/@vitest/pretty-format/dist/index.d.ts","./node_modules/@vitest/snapshot/dist/environment-Ddx0EDtY.d.ts","./node_modules/@vitest/snapshot/dist/rawSnapshot-BWAfsPv1.d.ts","./node_modules/@vitest/snapshot/dist/index.d.ts","./node_modules/@vitest/snapshot/dist/environment.d.ts","./node_modules/vitest/node_modules/@vitest/utils/dist/diff.d.ts","./node_modules/vitest/dist/chunks/config.BRtC-JeT.d.ts","./node_modules/vite-node/dist/trace-mapping.d-DLVdEqOp.d.ts","./node_modules/vite-node/dist/index-BmdeEDlf.d.ts","./node_modules/vite-node/dist/index.d.ts","./node_modules/@vitest/runner/dist/utils.d.ts","./node_modules/tinybench/dist/index.d.ts","./node_modules/vitest/dist/chunks/benchmark.CFFwLv-O.d.ts","./node_modules/@vitest/snapshot/dist/manager.d.ts","./node_modules/vitest/dist/chunks/reporters.0x019-V2.d.ts","./node_modules/vitest/dist/chunks/worker.CIpff8Eg.d.ts","./node_modules/vitest/dist/chunks/worker.B1y96qmv.d.ts","./node_modules/vitest/node_modules/@vitest/expect/dist/chai.d.cts","./node_modules/vitest/node_modules/@vitest/spy/dist/index.d.ts","./node_modules/vitest/node_modules/tinyrainbow/dist/node.d.ts","./node_modules/vitest/node_modules/@vitest/expect/dist/index.d.ts","./node_modules/vitest/node_modules/@vitest/expect/index.d.ts","./node_modules/vitest/dist/chunks/global.CnI8_G5V.d.ts","./node_modules/vitest/dist/chunks/vite.DiG-KbRF.d.ts","./node_modules/@vitest/mocker/dist/types-DZOqTgiN.d.ts","./node_modules/@vitest/mocker/dist/index.d.ts","./node_modules/vitest/dist/chunks/mocker.cRtM890J.d.ts","./node_modules/vitest/dist/chunks/suite.BJU7kdY9.d.ts","./node_modules/expect-type/dist/utils.d.ts","./node_modules/expect-type/dist/overloads.d.ts","./node_modules/expect-type/dist/branding.d.ts","./node_modules/expect-type/dist/messages.d.ts","./node_modules/expect-type/dist/index.d.ts","./node_modules/vitest/dist/index.d.ts","./src/demo.spec.ts","./node_modules/magic-string/dist/magic-string.es.d.mts","./node_modules/locate-character/types/index.d.ts","./node_modules/svelte/types/index.d.ts","./node_modules/vite/types/importMeta.d.ts","./node_modules/vite/client.d.ts","./node_modules/@sveltejs/vite-plugin-svelte-inspector/types/index.d.ts","./node_modules/@sveltejs/vite-plugin-svelte/types/index.d.ts","./node_modules/@types/cookie/index.d.ts","./node_modules/@sveltejs/kit/types/index.d.ts","./src/hooks.server.ts","./src/hooks.ts","./node_modules/commander/typings/index.d.ts","./node_modules/commander/typings/esm.d.mts","./node_modules/formdata-polyfill/esm.min.d.ts","./node_modules/fetch-blob/file.d.ts","./node_modules/fetch-blob/index.d.ts","./node_modules/fetch-blob/from.d.ts","./node_modules/node-fetch/@types/index.d.ts","./node_modules/chalk/source/vendor/ansi-styles/index.d.ts","./node_modules/chalk/source/vendor/supports-color/index.d.ts","./node_modules/chalk/source/index.d.ts","./node_modules/@d-fischer/logger/lib/LogLevel.d.ts","./node_modules/@d-fischer/logger/lib/Logger.d.ts","./node_modules/@d-fischer/logger/lib/CustomLoggerWrapper.d.ts","./node_modules/@d-fischer/logger/lib/LoggerOptions.d.ts","./node_modules/@d-fischer/logger/lib/createLogger.d.ts","./node_modules/@d-fischer/logger/lib/index.d.ts","./node_modules/@d-fischer/cross-fetch/index.d.ts","./node_modules/@twurple/api-call/lib/TwitchApiCallOptions.d.ts","./node_modules/@twurple/api-call/lib/apiCall.d.ts","./node_modules/@twurple/api-call/lib/HelixResponse.d.ts","./node_modules/@twurple/common/lib/DataObject.d.ts","./node_modules/@twurple/common/lib/relations.d.ts","./node_modules/@d-fischer/shared-utils/lib/decorators/Enumerable.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/array/flatten.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/array/immutableSplice.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/array/partitionedFlatMap.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/config/resolveConfigValue.d.ts","./node_modules/@d-fischer/shared-utils/lib/types/constructor.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/deprecate/deprecateClass.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/match/match.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/math/fib.d.ts","./node_modules/@d-fischer/shared-utils/lib/types/object.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/arrayToObject.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/entriesToObject.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/forEachObjectEntry.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/groupBy.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/indexBy.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/mapObject.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/omit.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/object/pick.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/optional/mapOptional.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/promise/delay.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/promise/withResolvers.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/string/padLeft.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/string/splitWithLimit.d.ts","./node_modules/@d-fischer/shared-utils/lib/functions/string/utf8.d.ts","./node_modules/@d-fischer/shared-utils/lib/types/MakeOptional.d.ts","./node_modules/@d-fischer/shared-utils/lib/types/NoInfer.d.ts","./node_modules/@d-fischer/shared-utils/lib/types/PickType.d.ts","./node_modules/@d-fischer/shared-utils/lib/index.d.ts","./node_modules/@twurple/common/lib/rtfm.d.ts","./node_modules/@twurple/common/lib/types.d.ts","./node_modules/@twurple/common/lib/extensions/HelixExtension.external.d.ts","./node_modules/@twurple/common/lib/extensions/HelixExtension.d.ts","./node_modules/@twurple/common/lib/errors/CustomError.d.ts","./node_modules/@twurple/common/lib/errors/HellFreezesOverError.d.ts","./node_modules/@twurple/common/lib/errors/RelationAssertionError.d.ts","./node_modules/@twurple/common/lib/userResolvers.d.ts","./node_modules/@twurple/common/lib/index.d.ts","./node_modules/@twurple/api-call/lib/helpers/queries.external.d.ts","./node_modules/@twurple/api-call/lib/helpers/transform.d.ts","./node_modules/@twurple/api-call/lib/errors/HttpStatusCodeError.d.ts","./node_modules/@twurple/api-call/lib/index.d.ts","./node_modules/@twurple/auth/lib/AccessToken.d.ts","./node_modules/@twurple/auth/lib/providers/AuthProvider.d.ts","./node_modules/@twurple/auth/lib/TokenInfo.external.d.ts","./node_modules/@twurple/auth/lib/TokenInfo.d.ts","./node_modules/@twurple/auth/lib/helpers.d.ts","./node_modules/@twurple/auth/lib/TokenFetcher.d.ts","./node_modules/@twurple/auth/lib/providers/AppTokenAuthProvider.d.ts","./node_modules/@d-fischer/typed-event-emitter/lib/Listener.d.ts","./node_modules/@d-fischer/typed-event-emitter/lib/EventEmitter.d.ts","./node_modules/@d-fischer/typed-event-emitter/lib/index.d.ts","./node_modules/@twurple/auth/lib/providers/RefreshingAuthProvider.d.ts","./node_modules/@twurple/auth/lib/providers/StaticAuthProvider.d.ts","./node_modules/@twurple/auth/lib/errors/CachedRefreshFailureError.d.ts","./node_modules/@twurple/auth/lib/errors/IntermediateUserRemovalError.d.ts","./node_modules/@twurple/auth/lib/errors/InvalidTokenError.d.ts","./node_modules/@twurple/auth/lib/errors/InvalidTokenTypeError.d.ts","./node_modules/@twurple/auth/lib/errors/UnknownIntentError.d.ts","./node_modules/@twurple/auth/lib/index.d.ts","./node_modules/@d-fischer/rate-limiter/lib/QueueEntry.d.ts","./node_modules/@d-fischer/rate-limiter/lib/RateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/RateLimiterStats.d.ts","./node_modules/@d-fischer/rate-limiter/lib/errors/CustomError.d.ts","./node_modules/@d-fischer/rate-limiter/lib/errors/RetryAfterError.d.ts","./node_modules/@d-fischer/rate-limiter/lib/errors/RateLimitReachedError.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/NullRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/PartitionedRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/TimeBasedRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/PartitionedTimeBasedRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/ResponseBasedRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/limiters/TimedPassthruRateLimiter.d.ts","./node_modules/@d-fischer/rate-limiter/lib/index.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/bits.input.d.ts","./node_modules/@twurple/api/lib/endpoints/BaseApi.d.ts","./node_modules/@twurple/api/lib/endpoints/bits/CheermoteDisplayInfo.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/generic.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/bits.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/user.external.d.ts","./node_modules/@twurple/api/lib/utils/pagination/HelixPaginatedResult.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/channel.external.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixChannelFollower.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixFollowedChannel.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/stream.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/game.external.d.ts","./node_modules/@twurple/api/lib/utils/pagination/HelixPaginatedRequest.d.ts","./node_modules/@twurple/api/lib/utils/pagination/HelixPagination.d.ts","./node_modules/@twurple/api/lib/endpoints/game/HelixGame.d.ts","./node_modules/@twurple/api/lib/endpoints/stream/HelixStream.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/subscription.external.d.ts","./node_modules/@twurple/api/lib/endpoints/subscriptions/HelixUserSubscription.d.ts","./node_modules/@twurple/api/lib/endpoints/subscriptions/HelixSubscription.d.ts","./node_modules/@twurple/api/lib/endpoints/user/HelixUser.d.ts","./node_modules/@twurple/api/lib/endpoints/bits/HelixBitsLeaderboardEntry.d.ts","./node_modules/@twurple/api/lib/endpoints/bits/HelixBitsLeaderboard.d.ts","./node_modules/@twurple/api/lib/endpoints/bits/HelixCheermoteList.d.ts","./node_modules/@twurple/api/lib/endpoints/bits/HelixBitsApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/channel.input.d.ts","./node_modules/@twurple/api/lib/relations/HelixUserRelation.d.ts","./node_modules/@twurple/api/lib/utils/pagination/HelixPaginatedRequestWithTotal.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixChannel.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixChannelEditor.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixAdSchedule.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixSnoozeNextAdResult.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixChannelApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/channelPoints.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/channelPoints.input.d.ts","./node_modules/@twurple/api/lib/endpoints/channelPoints/HelixCustomReward.d.ts","./node_modules/@twurple/api/lib/endpoints/channelPoints/HelixCustomRewardRedemption.d.ts","./node_modules/@twurple/api/lib/endpoints/channelPoints/HelixChannelPointsApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/charity.external.d.ts","./node_modules/@twurple/api/lib/endpoints/charity/HelixCharityCampaignAmount.d.ts","./node_modules/@twurple/api/lib/endpoints/charity/HelixCharityCampaign.d.ts","./node_modules/@twurple/api/lib/endpoints/charity/HelixCharityCampaignDonation.d.ts","./node_modules/@twurple/api/lib/endpoints/charity/HelixCharityApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/chat.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/chat.input.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixEmoteBase.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixEmote.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixEmoteFromSet.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChannelEmote.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChatBadgeVersion.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChatBadgeSet.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChatChatter.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChatSettings.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixUserEmote.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixPrivilegedChatSettings.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixSentChatMessage.d.ts","./node_modules/@twurple/api/lib/endpoints/chat/HelixChatApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/clip.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/clip.input.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/video.external.d.ts","./node_modules/@twurple/api/lib/endpoints/video/HelixVideo.d.ts","./node_modules/@twurple/api/lib/endpoints/clip/HelixClip.d.ts","./node_modules/@twurple/api/lib/endpoints/clip/HelixClipApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/contentClassificationLabels.external.d.ts","./node_modules/@twurple/api/lib/endpoints/contentClassificationLabels/HelixContentClassificationLabel.d.ts","./node_modules/@twurple/api/lib/endpoints/contentClassificationLabels/HelixContentClassificationLabelApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/entitlement.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/entitlement.input.d.ts","./node_modules/@twurple/api/lib/endpoints/entitlements/HelixDropsEntitlement.d.ts","./node_modules/@twurple/api/lib/endpoints/entitlements/HelixEntitlementApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/eventSub.external.d.ts","./node_modules/@twurple/api/lib/endpoints/eventSub/HelixEventSubSubscription.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/eventSub.input.d.ts","./node_modules/@twurple/api/lib/endpoints/eventSub/HelixPaginatedEventSubSubscriptionsRequest.d.ts","./node_modules/@twurple/api/lib/endpoints/eventSub/HelixEventSubConduitShard.d.ts","./node_modules/@twurple/api/lib/endpoints/eventSub/HelixEventSubConduit.d.ts","./node_modules/@twurple/api/lib/endpoints/eventSub/HelixEventSubApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/extensions.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/extensions.input.d.ts","./node_modules/@twurple/api/lib/endpoints/channel/HelixChannelReference.d.ts","./node_modules/@twurple/api/lib/endpoints/extensions/HelixExtensionBitsProduct.d.ts","./node_modules/@twurple/api/lib/endpoints/extensions/HelixExtensionTransaction.d.ts","./node_modules/@twurple/api/lib/endpoints/extensions/HelixExtensionsApi.d.ts","./node_modules/@twurple/api/lib/endpoints/game/HelixGameApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/goal.external.d.ts","./node_modules/@twurple/api/lib/endpoints/goals/HelixGoal.d.ts","./node_modules/@twurple/api/lib/endpoints/goals/HelixGoalApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/hypeTrain.external.d.ts","./node_modules/@twurple/api/lib/endpoints/hypeTrain/HelixHypeTrainContribution.d.ts","./node_modules/@twurple/api/lib/endpoints/hypeTrain/HelixHypeTrainEvent.d.ts","./node_modules/@twurple/api/lib/endpoints/hypeTrain/HelixHypeTrainApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/moderation.external.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixAutoModSettings.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/moderation.input.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixAutoModStatus.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixBanUser.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixBan.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixBlockedTerm.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixModeratedChannel.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixModerator.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixShieldModeStatus.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixUnbanRequest.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixWarning.d.ts","./node_modules/@twurple/api/lib/endpoints/moderation/HelixModerationApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/poll.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/poll.input.d.ts","./node_modules/@twurple/api/lib/endpoints/poll/HelixPollChoice.d.ts","./node_modules/@twurple/api/lib/endpoints/poll/HelixPoll.d.ts","./node_modules/@twurple/api/lib/endpoints/poll/HelixPollApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/prediction.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/prediction.input.d.ts","./node_modules/@twurple/api/lib/endpoints/prediction/HelixPredictor.d.ts","./node_modules/@twurple/api/lib/endpoints/prediction/HelixPredictionOutcome.d.ts","./node_modules/@twurple/api/lib/endpoints/prediction/HelixPrediction.d.ts","./node_modules/@twurple/api/lib/endpoints/prediction/HelixPredictionApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/raid.external.d.ts","./node_modules/@twurple/api/lib/endpoints/raids/HelixRaid.d.ts","./node_modules/@twurple/api/lib/endpoints/raids/HelixRaidApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/schedule.external.d.ts","./node_modules/@twurple/api/lib/endpoints/schedule/HelixScheduleSegment.d.ts","./node_modules/@twurple/api/lib/endpoints/schedule/HelixSchedule.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/schedule.input.d.ts","./node_modules/@twurple/api/lib/endpoints/schedule/HelixPaginatedScheduleSegmentRequest.d.ts","./node_modules/@twurple/api/lib/endpoints/schedule/HelixScheduleApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/search.external.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/search.input.d.ts","./node_modules/@twurple/api/lib/endpoints/search/HelixChannelSearchResult.d.ts","./node_modules/@twurple/api/lib/endpoints/search/HelixSearchApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/stream.input.d.ts","./node_modules/@twurple/api/lib/endpoints/stream/HelixStreamMarker.d.ts","./node_modules/@twurple/api/lib/endpoints/stream/HelixStreamMarkerWithVideo.d.ts","./node_modules/@twurple/api/lib/endpoints/stream/HelixStreamApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/subscription.input.d.ts","./node_modules/@twurple/api/lib/endpoints/subscriptions/HelixPaginatedSubscriptionsRequest.d.ts","./node_modules/@twurple/api/lib/endpoints/subscriptions/HelixSubscriptionApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/team.external.d.ts","./node_modules/@twurple/api/lib/endpoints/team/HelixTeam.d.ts","./node_modules/@twurple/api/lib/endpoints/team/HelixTeamWithUsers.d.ts","./node_modules/@twurple/api/lib/endpoints/team/HelixTeamApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/user.input.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/userExtension.input.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/userExtension.external.d.ts","./node_modules/@twurple/api/lib/endpoints/user/extensions/HelixBaseExtension.d.ts","./node_modules/@twurple/api/lib/endpoints/user/extensions/HelixInstalledExtension.d.ts","./node_modules/@twurple/api/lib/endpoints/user/extensions/HelixInstalledExtensionList.d.ts","./node_modules/@twurple/api/lib/endpoints/user/extensions/HelixUserExtension.d.ts","./node_modules/@twurple/api/lib/endpoints/user/HelixPrivilegedUser.d.ts","./node_modules/@twurple/api/lib/endpoints/user/HelixUserBlock.d.ts","./node_modules/@twurple/api/lib/endpoints/user/HelixUserApi.d.ts","./node_modules/@twurple/api/lib/interfaces/endpoints/video.input.d.ts","./node_modules/@twurple/api/lib/endpoints/video/HelixVideoApi.d.ts","./node_modules/@twurple/api/lib/endpoints/whisper/HelixWhisperApi.d.ts","./node_modules/@twurple/api/lib/reporting/ApiReportedRequest.d.ts","./node_modules/@twurple/api/lib/client/ContextApiCallOptions.d.ts","./node_modules/@twurple/api/lib/client/BaseApiClient.d.ts","./node_modules/@twurple/api/lib/client/ApiClient.d.ts","./node_modules/@twurple/api/lib/endpoints/user/HelixFollow.d.ts","./node_modules/@twurple/api/lib/errors/ConfigError.d.ts","./node_modules/@twurple/api/lib/errors/StreamNotLiveError.d.ts","./node_modules/@twurple/api/lib/index.d.ts","./node_modules/holodex.js/dist/index.d.ts","./src/types/stream.ts","./node_modules/@types/triple-beam/index.d.ts","./node_modules/logform/index.d.ts","./node_modules/winston-transport/index.d.ts","./node_modules/winston/lib/winston/config/index.d.ts","./node_modules/winston/lib/winston/transports/index.d.ts","./node_modules/winston/index.d.ts","./src/server/services/logger.ts","./src/cli/test-api.ts","./node_modules/dotenv/lib/main.d.ts","./node_modules/zod/lib/helpers/typeAliases.d.ts","./node_modules/zod/lib/helpers/util.d.ts","./node_modules/zod/lib/ZodError.d.ts","./node_modules/zod/lib/locales/en.d.ts","./node_modules/zod/lib/errors.d.ts","./node_modules/zod/lib/helpers/parseUtil.d.ts","./node_modules/zod/lib/helpers/enumUtil.d.ts","./node_modules/zod/lib/helpers/errorUtil.d.ts","./node_modules/zod/lib/helpers/partialUtil.d.ts","./node_modules/zod/lib/standard-schema.d.ts","./node_modules/zod/lib/types.d.ts","./node_modules/zod/lib/external.d.ts","./node_modules/zod/lib/index.d.ts","./node_modules/zod/index.d.ts","./src/config/env.ts","./src/config/loader.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/negotiation/language.d.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/routing/detectLanguage.d.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/routing/routeDefinitions.d.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/routing/validatePathTranslations.d.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/routing/resolveUserPathDefinitions.d.ts","./node_modules/@inlang/paraglide-js/dist/adapter-utils/index.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/strategy.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/hooks/handle.server.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/exclude.d.ts","./node_modules/@inlang/result/dist/api.d.ts","./node_modules/@inlang/result/dist/tryCatch.d.ts","./node_modules/@inlang/result/dist/index.d.ts","./node_modules/@sinclair/typebox/typebox.d.ts","./node_modules/@sinclair/typebox/errors/errors.d.ts","./node_modules/@sinclair/typebox/errors/index.d.ts","./node_modules/@inlang/sdk/dist/errors.d.ts","./node_modules/@inlang/plugin/dist/customApis/app.inlang.ideExtension.d.ts","./node_modules/@lix-js/fs/dist/NodeishFilesystemApi.d.ts","./node_modules/@lix-js/fs/dist/memoryFs.d.ts","./node_modules/@lix-js/fs/dist/utilities/helpers.d.ts","./node_modules/@lix-js/fs/dist/index.d.ts","./node_modules/@inlang/message/dist/interface.d.ts","./node_modules/@inlang/message/dist/index.d.ts","./node_modules/@inlang/json-types/dist/interface.d.ts","./node_modules/@inlang/json-types/dist/index.d.ts","./node_modules/@inlang/project-settings/dist/interface.d.ts","./node_modules/@inlang/project-settings/dist/index.d.ts","./node_modules/@inlang/plugin/dist/interface.d.ts","./node_modules/@inlang/language-tag/dist/interface.d.ts","./node_modules/@inlang/language-tag/dist/lookup.d.ts","./node_modules/@inlang/language-tag/dist/validate.d.ts","./node_modules/@inlang/language-tag/dist/index.d.ts","./node_modules/@inlang/translatable/dist/interface.d.ts","./node_modules/@inlang/translatable/dist/index.d.ts","./node_modules/@inlang/plugin/dist/index.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/plugins/errors.d.ts","./node_modules/@inlang/message-lint-rule/dist/interface.d.ts","./node_modules/@inlang/message-lint-rule/dist/index.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/message-lint-rules/errors.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/errors.d.ts","./node_modules/@inlang/sdk/dist/versionedInterfaces.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/plugins/types.d.ts","./node_modules/@inlang/sdk/dist/v2/types.d.ts","./node_modules/@inlang/sdk/dist/persistence/storeApi.d.ts","./node_modules/@inlang/sdk/dist/api.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/import.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/message-lint-rules/resolveMessageLintRules.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/types.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/resolveModules.d.ts","./node_modules/@inlang/sdk/dist/resolve-modules/index.d.ts","./node_modules/@lix-js/client/dist/repoContext.d.ts","./node_modules/@lix-js/client/dist/repoState.d.ts","./node_modules/@lix-js/client/dist/git/status-list.d.ts","./node_modules/@lix-js/client/vendored/isomorphic-git/index.d.ts","./node_modules/@lix-js/client/dist/openRepository.d.ts","./node_modules/@lix-js/client/dist/git/findRepoRoot.d.ts","./node_modules/@lix-js/client/dist/helpers.d.ts","./node_modules/@lix-js/client/dist/mockRepo.d.ts","./node_modules/@lix-js/client/dist/browser-auth.d.ts","./node_modules/@lix-js/client/dist/index.d.ts","./node_modules/@inlang/sdk/dist/createNewProject.d.ts","./node_modules/@inlang/sdk/dist/defaultProjectSettings.d.ts","./node_modules/@inlang/sdk/dist/loadProject.d.ts","./node_modules/@inlang/sdk/dist/listProjects.d.ts","./node_modules/solid-js/types/reactive/scheduler.d.ts","./node_modules/csstype/index.d.ts","./node_modules/solid-js/types/jsx.d.ts","./node_modules/solid-js/types/render/component.d.ts","./node_modules/solid-js/types/render/flow.d.ts","./node_modules/solid-js/types/render/Suspense.d.ts","./node_modules/solid-js/types/render/hydration.d.ts","./node_modules/solid-js/types/render/index.d.ts","./node_modules/solid-js/types/reactive/signal.d.ts","./node_modules/solid-js/types/reactive/observable.d.ts","./node_modules/solid-js/types/reactive/array.d.ts","./node_modules/solid-js/types/index.d.ts","./node_modules/@inlang/sdk/dist/reactivity/solid.d.ts","./node_modules/@inlang/sdk/dist/adapter/solidAdapter.d.ts","./node_modules/@inlang/sdk/dist/createMessagesQuery.d.ts","./node_modules/@inlang/sdk/dist/storage/human-id/human-readable-id.d.ts","./node_modules/@inlang/sdk/dist/storage/helper.d.ts","./node_modules/@inlang/sdk/dist/messages/errors.d.ts","./node_modules/@inlang/sdk/dist/messages/variant.d.ts","./node_modules/@inlang/module/dist/interface.d.ts","./node_modules/@inlang/module/dist/index.d.ts","./node_modules/@inlang/sdk/dist/index.d.ts","./node_modules/@inlang/paraglide-js/dist/compiler/compile.d.ts","./node_modules/@inlang/paraglide-js/dist/services/file-handling/write-output.d.ts","./node_modules/@inlang/paraglide-js/dist/services/logger/index.d.ts","./node_modules/@inlang/paraglide-js/dist/services/error-handling.d.ts","./node_modules/@inlang/paraglide-js/dist/index.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/config/pathTranslations.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/runtime.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/adapter.server.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/locals.d.ts","./node_modules/@inlang/paraglide-sveltekit/dist/runtime/index.server.d.ts","./src/lib/i18n.ts","./src/lib/index.ts","./src/lib/stores/auth.ts","./node_modules/@types/accepts/index.d.ts","./node_modules/@types/connect/index.d.ts","./node_modules/@types/mime/index.d.ts","./node_modules/@types/send/index.d.ts","./node_modules/@types/qs/index.d.ts","./node_modules/@types/range-parser/index.d.ts","./node_modules/@types/express-serve-static-core/index.d.ts","./node_modules/@types/http-errors/index.d.ts","./node_modules/@types/serve-static/index.d.ts","./node_modules/@types/body-parser/index.d.ts","./node_modules/@types/express/index.d.ts","./node_modules/@types/keygrip/index.d.ts","./node_modules/@types/cookies/index.d.ts","./node_modules/@types/http-assert/index.d.ts","./node_modules/@types/content-disposition/index.d.ts","./node_modules/@types/koa-compose/index.d.ts","./node_modules/@types/koa/index.d.ts","./node_modules/@types/koa-bodyparser/index.d.ts","./node_modules/@types/koa__cors/index.d.ts","./node_modules/@types/koa-send/index.d.ts","./node_modules/@types/koa-static/index.d.ts","./node_modules/@types/koa-router/index.d.ts","./src/types/stream_instance.ts","./node_modules/sqlite3/lib/sqlite3.d.ts","./node_modules/sqlite/build/interfaces.d.ts","./node_modules/sqlite/build/Statement.d.ts","./node_modules/sqlite/build/Database.d.ts","./node_modules/sqlite/build/index.d.ts","./src/server/db/database.ts","./src/server/services/twitch.ts","./src/server/services/holodex.ts","./src/server/services/player.ts","./src/server/stream_manager.ts","./src/server/routes/api.ts","./src/server/router.ts","./src/server/api.ts","./node_modules/@types/aria-query/index.d.ts","./node_modules/@types/aws-lambda/common/api-gateway.d.ts","./node_modules/@types/aws-lambda/common/cloudfront.d.ts","./node_modules/@types/aws-lambda/handler.d.ts","./node_modules/@types/aws-lambda/trigger/alb.d.ts","./node_modules/@types/aws-lambda/trigger/api-gateway-proxy.d.ts","./node_modules/@types/aws-lambda/trigger/api-gateway-authorizer.d.ts","./node_modules/@types/aws-lambda/trigger/appsync-resolver.d.ts","./node_modules/@types/aws-lambda/trigger/autoscaling.d.ts","./node_modules/@types/aws-lambda/trigger/cloudformation-custom-resource.d.ts","./node_modules/@types/aws-lambda/trigger/cdk-custom-resource.d.ts","./node_modules/@types/aws-lambda/trigger/cloudfront-request.d.ts","./node_modules/@types/aws-lambda/trigger/cloudfront-response.d.ts","./node_modules/@types/aws-lambda/trigger/cloudwatch-alarm.d.ts","./node_modules/@types/aws-lambda/trigger/eventbridge.d.ts","./node_modules/@types/aws-lambda/trigger/cloudwatch-events.d.ts","./node_modules/@types/aws-lambda/trigger/cloudwatch-logs.d.ts","./node_modules/@types/aws-lambda/trigger/codebuild-cloudwatch-state.d.ts","./node_modules/@types/aws-lambda/trigger/codecommit.d.ts","./node_modules/@types/aws-lambda/trigger/codepipeline.d.ts","./node_modules/@types/aws-lambda/trigger/codepipeline-cloudwatch-action.d.ts","./node_modules/@types/aws-lambda/trigger/codepipeline-cloudwatch-pipeline.d.ts","./node_modules/@types/aws-lambda/trigger/codepipeline-cloudwatch-stage.d.ts","./node_modules/@types/aws-lambda/trigger/codepipeline-cloudwatch.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/_common.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/create-auth-challenge.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/custom-email-sender.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/custom-message.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/custom-sms-sender.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/define-auth-challenge.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/post-authentication.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/post-confirmation.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/pre-authentication.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/pre-signup.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/pre-token-generation.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/pre-token-generation-v2.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/user-migration.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/verify-auth-challenge-response.d.ts","./node_modules/@types/aws-lambda/trigger/cognito-user-pool-trigger/index.d.ts","./node_modules/@types/aws-lambda/trigger/connect-contact-flow.d.ts","./node_modules/@types/aws-lambda/trigger/dynamodb-stream.d.ts","./node_modules/@types/aws-lambda/trigger/guard-duty-event-notification.d.ts","./node_modules/@types/aws-lambda/trigger/iot.d.ts","./node_modules/@types/aws-lambda/trigger/iot-authorizer.d.ts","./node_modules/@types/aws-lambda/trigger/kinesis-firehose-transformation.d.ts","./node_modules/@types/aws-lambda/trigger/kinesis-stream.d.ts","./node_modules/@types/aws-lambda/trigger/lambda-function-url.d.ts","./node_modules/@types/aws-lambda/trigger/lex.d.ts","./node_modules/@types/aws-lambda/trigger/lex-v2.d.ts","./node_modules/@types/aws-lambda/trigger/amplify-resolver.d.ts","./node_modules/@types/aws-lambda/trigger/msk.d.ts","./node_modules/@types/aws-lambda/trigger/s3.d.ts","./node_modules/@types/aws-lambda/trigger/s3-batch.d.ts","./node_modules/@types/aws-lambda/trigger/s3-event-notification.d.ts","./node_modules/@types/aws-lambda/trigger/secretsmanager.d.ts","./node_modules/@types/aws-lambda/trigger/self-managed-kafka.d.ts","./node_modules/@types/aws-lambda/trigger/ses.d.ts","./node_modules/@types/aws-lambda/trigger/sns.d.ts","./node_modules/@types/aws-lambda/trigger/sqs.d.ts","./node_modules/@types/aws-lambda/trigger/transfer-family-authorizer.d.ts","./node_modules/@types/aws-lambda/index.d.ts","./node_modules/@types/btoa-lite/index.d.ts","./node_modules/@types/json-schema/index.d.ts","./node_modules/@types/ms/index.d.ts","./node_modules/@types/jsonwebtoken/index.d.ts","./node_modules/@types/mdx/types.d.ts","./node_modules/@types/mdx/index.d.ts","./node_modules/@types/pug/index.d.ts","./node_modules/@types/react/global.d.ts","./node_modules/@types/react/index.d.ts","./node_modules/@types/resolve/index.d.ts","./node_modules/@types/unist/index.d.ts","./node_modules/@types/uuid/index.d.ts"],"fileIdsList":[[99,142],[99,142,285,286,288],[99,142,285],[99,142,285,287],[99,142,286,288],[99,142,285,286,288,289],[99,142,356],[99,142,359],[99,142,356,357,358,360,361,362,363,364,365,366,367],[99,142,357],[99,142,357,358],[99,142,357,364],[99,142,290,357,358],[99,142,290,357],[99,142,302],[99,142,306],[99,142,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],[99,142,345],[99,142,346],[99,142,345,346],[99,142,578],[99,142,567],[99,142,583,584,585],[99,142,583],[99,142,591],[99,142,567,577,579,581,586,588],[99,142,576],[99,142,638],[99,142,567,589,592],[99,142,555,556,557,558,559],[99,142,557],[99,142,640],[99,142,641,642,643,644],[99,142,575],[99,142,272,560,562,563,646,647],[99,142,645],[99,142,272,561,648],[99,142,266,648,649],[99,142,272,560],[99,142,571,577,582,586,588],[99,142,567,571,575,577,579,581],[99,142,580],[99,142,564,565],[99,142,564],[99,142,599,631,640],[99,142,566,570,594,595,596,598],[99,142,575,581,599,603],[99,142,581,614],[99,142,569],[99,142,570,594,595,599,604,615,616,617,618,632,633,634,635,637,639],[99,142,599,604,614],[99,142,566,595,636],[99,142,597],[99,142,630],[99,142,569,590,593],[99,142,589],[99,142,600,603],[99,142,569,592],[99,142,592,593],[99,142,569,589],[99,142,575,577,581,589,590],[99,142,602],[99,142,581,589,592,594,596,600,601],[99,142,595],[99,142,577,579,581,586,588,589,592],[99,142,587],[99,142,567,586],[99,142,575,609],[99,142,575,609,610,611,612,613],[99,142,575,607,608,609],[99,142,575,605,606,607,608],[99,142,575,605],[99,142,572,573,574],[99,142,572],[99,142,568],[99,142,157,225,252,266,268,270,271,272],[99,142,225,252],[99,142,225,252,266,269],[99,142,291,292],[99,142,333],[99,142,292,293,294,334,335,336],[99,142,290,333,337,355,521,522],[99,142,290,291,333,347,355,368,392,400,405,410,424,430,433,437,444,450,451,454,458,471,476,482,485,491,495,499,502,506,516,518,519,520,521,523],[99,142,337],[99,142,333,369,370,390,391],[99,142,333,373,389],[99,142,333,373,388],[99,142,333,371,373],[99,142,333,376],[99,142,333,376,383,388],[99,142,333,370,372,375,376,377,378,381,382,393,394,395,396,397,398,399],[99,142,333,376,388],[99,142,333,376,383,388,396],[99,142,333,370,375,381,401,402,403,404],[99,142,333,388,401,402],[99,142,333,388,401,403],[99,142,333,370,375,382,408,409],[99,142,333,388,406,407],[99,142,333,406],[99,142,411,414,415,522],[99,142,333,370,375,381,382,395,411,412,414,415,416,418,419,420,421,422,423],[99,142,333,411,417],[99,142,333,411,412],[99,142,333,388,411],[99,142,333,411],[99,142,411,413],[99,142,388,411,414,522],[99,142,420],[99,142,388,411,413,415,522],[99,142,333,383,388,425,428],[99,142,333,370,375,381,425,426,429],[99,142,333,431],[99,142,370,432],[99,142,333,383,388,434],[99,142,370,375,381,434,435,436],[99,142,333,337,370,381,382,438,439,440,441,442,443],[99,142,333,337,438,442],[99,142,333,438],[99,142,395,438,439],[99,142,333,445],[99,142,333,388,445],[99,142,333,370,375,376,381,382,445,446,447,448,449],[99,142,333,375,379,380,381,382,384],[99,142,370,375,380,381,382,383],[99,142,333,388,452],[99,142,333,370,453],[99,142,333,370,372,375,381,382,455,457],[99,142,333,388,455],[99,142,333,372,388,455,456],[99,142,333,459],[99,142,463],[99,142,333,388,459],[99,142,333,388,396,459],[99,142,333,370,375,381,382,459,460,461,462,463,464,465,466,467,468,469,470],[99,142,333,388,472,474],[99,142,333,370,375,381,382,472,473,475],[99,142,333,472],[99,142,333,388,477,480],[99,142,333,370,375,381,382,477,478,481],[99,142,333,477,479],[99,142,333,388,477],[99,142,333,483],[99,142,333,370,484],[99,142,381,486,487],[99,142,333,388,486,487],[99,142,333,370,487,489,490],[99,142,333,383,486],[99,142,333,383,388,492],[99,142,370,375,380,381,382,383,492,493,494],[99,142,333,379,383,388],[99,142,333,370,375,379,381,382,384,496,497,498],[99,142,333,379],[99,142,428,497],[99,142,385,387,395],[99,142,386,388],[99,142,333,370,382,386,387,500,501],[99,142,333,385,388],[99,142,333,394,503],[99,142,333,370,504,505],[99,142,394,504],[99,142,333,374,388],[99,142,388],[99,142,333,374,375,377,378,384,386,387],[99,142,333,370,374,375,381,382,388,507,508,512,513,514,515],[99,142,333,509],[99,142,509,510],[99,142,333,509,511],[99,142,333,388,427],[99,142,333,370,375,381,427,428,517],[99,142,333,370],[99,142,333,337,369,370,374,375,377,378,379,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,407,408,409,410,411,412,414,415,416,417,418,419,420,421,422,423,424,426,427,428,429,430,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,484,485,487,488,489,490,491,493,494,495,496,497,498,499,500,501,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,523,524,525,526],[99,142,337,371,372],[99,142,382],[99,142,333,382,411],[99,142,333,382,425],[99,142,333,382,434],[99,142,375,438,439],[99,142,333,382,460],[99,142,382,488],[99,142,379,382],[99,142,375,387],[99,142,372],[99,142,382,427],[99,142,333,372,388],[99,142,381],[99,142,338],[99,142,333,340],[99,142,290,338,339,341],[99,142,338,339,340,341,342,343,344,348,349,350,351,352,353,354],[99,142,338,339],[99,142,333,338],[99,142,324,333,338,339,347],[99,142,333,338,339],[99,142,329],[99,142,295,327],[99,142,295,296,325,326,327,328,329,330,331,332],[99,142,324],[99,142,157,192],[99,142,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749],[99,142,693],[99,142,693,697],[99,142,691,693,695],[99,142,691,693],[99,142,693,699],[99,142,692,693],[99,142,704],[99,142,693,710,711,712],[99,142,693,714],[99,142,693,715,716,717,718,719,720,721,722,723,724,725,726,727],[99,142,693,696],[99,142,693,695],[99,142,693,704],[99,142,157,192,655],[99,142,157,192,655,664,665],[99,142,154,157,192,657,658,659],[99,142,658,660,662,663],[99,142,147,192,753],[99,142,670],[99,142,155,670],[99,142,670,673],[99,141,142,154,157,158,162,168,185,192,654,661,665,666,667,668,669],[99,142,755,756],[99,139,142],[99,141,142],[142],[99,142,147,177],[99,142,143,148,154,155,162,174,185],[99,142,143,144,154,162],[94,95,96,99,142],[99,142,145,186],[99,142,146,147,155,163],[99,142,147,174,182],[99,142,148,150,154,162],[99,141,142,149],[99,142,150,151],[99,142,154],[99,142,152,154],[99,141,142,154],[99,142,154,155,156,174,185],[99,142,154,155,156,169,174,177],[99,137,142,190],[99,137,142,150,154,157,162,174,185],[99,142,154,155,157,158,162,174,182,185],[99,142,157,159,174,182,185],[97,98,99,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],[99,142,154,160],[99,142,161,185],[99,142,150,154,162,174],[99,142,163],[99,142,164],[99,141,142,165],[99,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],[99,142,167],[99,142,168],[99,142,154,169,170],[99,142,169,171,186,188],[99,142,154,174,175,176,177],[99,142,174,176],[99,142,174,175],[99,142,177],[99,142,178],[99,139,142,174],[99,142,154,180,181],[99,142,180,181],[99,142,147,162,174,182],[99,142,183],[99,142,162,184],[99,142,157,168,185],[99,142,147,186],[99,142,174,187],[99,142,161,188],[99,142,189],[99,142,147,154,156,165,174,185,188,190],[99,142,174,191],[99,142,620,758],[99,142,155,174,192,656],[99,142,157,192,657,661],[99,142,253],[85,86,88,89,90,99,142],[85,99,142],[85,86,88,99,142],[85,86,99,142],[80,87,99,142],[81,99,142],[80,81,82,84,99,142],[80,99,142],[83,99,142],[99,142,230],[80,99,142,230,231],[80,99,142,230],[99,142,282,283],[99,142,184],[99,142,275],[99,142,185,192],[99,142,257,258],[99,142,257,258,259,260],[99,142,257,259],[99,142,257],[99,142,278,279],[99,142,530],[99,142,157,192,277,280],[99,142,216],[99,142,214,216],[99,142,205,213,214,215,217],[99,142,203],[99,142,206,211,216,219],[99,142,202,219],[99,142,206,207,210,211,212,219],[99,142,206,207,208,210,211,219],[99,142,203,204,205,206,207,211,212,213,215,216,217,219],[99,142,219],[99,142,201,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218],[99,142,201,219],[99,142,206,208,209,211,212,219],[99,142,210,219],[99,142,211,212,216,219],[99,142,204,214],[99,142,194,224,225],[99,142,193,194],[99,142,619,621,626,627,628,629],[99,142,620],[99,142,627],[99,142,619,621,626],[99,142,621],[99,142,621,627],[99,142,622,623,624,625],[99,142,677,678,679],[99,142,677,678],[99,142,677,678,679,680],[99,142,677,679],[99,142,154,192],[99,142,193,194,264,265,266],[99,109,113,142,185],[99,109,142,174,185],[99,104,142],[99,106,109,142,182,185],[99,142,162,182],[99,142,192],[99,104,142,192],[99,106,109,142,162,185],[99,101,102,105,108,142,154,174,185],[99,109,116,142],[99,101,107,142],[99,109,130,131,142],[99,105,109,142,177,185,192],[99,130,142,192],[99,103,104,142,192],[99,109,142],[99,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,142],[99,109,124,142],[99,109,116,117,142],[99,107,109,117,118,142],[99,108,142],[99,101,104,109,142],[99,109,113,117,118,142],[99,113,142],[99,107,109,112,142,185],[99,101,106,109,116,142],[99,142,174],[99,104,109,130,142,190,192],[99,142,236],[99,142,236,237],[99,142,267],[99,142,154,155,157,158,159,162,174,182,185,191,192,194,195,196,197,199,200,220,221,222,223,224,225],[99,142,196,197,198],[99,142,196],[99,142,197],[99,142,198,223],[99,142,194,225],[91,99,142,239,240,251],[80,88,91,99,142,232,233,251],[80,91,92,99,142,232,241,250,251],[99,142,254],[80,85,88,91,92,99,142,155,174,225,227,232,235,238,241,242,246,251,252],[91,99,142,239,240,241,251],[99,142,225,243],[99,142,190,244],[91,92,99,142,232,235,238,251],[80,85,88,91,92,99,142,155,174,190,225,227,232,233,235,238,239,240,241,242,243,244,245,246,247,250,251,252,254,255,256,261],[84,85,88,99,142,247],[99,142,249],[99,142,174,192,531],[99,142,174,192,531,532,533,534],[99,142,157,192,532],[99,142,551],[99,142,539,540,551],[99,142,541,542],[99,142,539,540,541,543,544,549],[99,142,540,541],[99,142,550],[99,142,541],[99,142,539,540,541,544,545,546,547,548],[99,142,276,281,284,529,536],[99,142,538,552],[99,142,155,164,552],[99,142,262],[99,142,272],[99,142,650],[99,142,266],[99,142,164,185,670,671,672,674,682,687,688],[99,142,164,677,681],[99,142,164,185,673,675],[99,142,529,536,670,675,686],[99,142,528,529,536],[99,142,164,284,535],[99,142,143,154,529,536,676],[99,142,355,527,529,536,682],[99,142,529,536,554,676,682,683,684,685],[99,142,527,528],[99,142,143]],"fileInfos":[{"version":"e41c290ef7dd7dab3493e6cbe5909e0148edf4a8dad0271be08edec368a0f7b9","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"e12a46ce14b817d4c9e6b2b478956452330bf00c9801b79de46f7a1815b5bd40","impliedFormat":1},{"version":"4fd3f3422b2d2a3dfd5cdd0f387b3a8ec45f006c6ea896a4cb41264c2100bb2c","affectsGlobalScope":true,"impliedFormat":1},{"version":"69e65d976bf166ce4a9e6f6c18f94d2424bf116e90837ace179610dbccad9b42","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"62bb211266ee48b2d0edf0d8d1b191f0c24fc379a82bd4c1692a082c540bc6b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"f1e2a172204962276504466a6393426d2ca9c54894b1ad0a6c9dad867a65f876","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"b5ce7a470bc3628408429040c4e3a53a27755022a32fd05e2cb694e7015386c7","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"bab26767638ab3557de12c900f0b91f710c7dc40ee9793d5a27d32c04f0bf646","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"61d6a2092f48af66dbfb220e31eea8b10bc02b6932d6e529005fd2d7b3281290","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"3d450fc2fc7b0f10b6a9493a682769aac34f8b612f0f5d1bc4845a7b0bfe9f0a","affectsGlobalScope":true,"impliedFormat":99},{"version":"e50a264056a32b459417ac9f51d31ba73c672e73a6ed82b098192cd432d3d4ad","impliedFormat":99},{"version":"369ba5259e66ca8c7d35e3234f7a2a0863a770fdb8266505747c65cf346a0804","impliedFormat":99},{"version":"64d984f55025daf604f670b7dfd090ea765f2098aee871174ef2ee3e94479098","impliedFormat":99},{"version":"f9b028d3c3891dd817e24d53102132b8f696269309605e6ed4f0db2c113bbd82","impliedFormat":99},{"version":"fb7c8d90e52e2884509166f96f3d591020c7b7977ab473b746954b0c8d100960","impliedFormat":99},{"version":"9651cce552b774dd47aa930bcf57f78595dbfce277d32be829861129c37ba25e","impliedFormat":99},{"version":"65d27928c524c624e137482d0b7910b05e3c3ca4ae12db99c7c93a532704a048","impliedFormat":99},{"version":"02c8f6aff21cf65dd98a2d08f36be5f1eb859a94c242ec5999ba07510d9d4ed9","impliedFormat":99},{"version":"b57c462049b5a994dea96a0ddf45a9d2e1b807d0755a05be787b6551de3a5d3e","impliedFormat":99},{"version":"93f7f62b17af24b918028e1720737cfe4b918d78be364cbc4a51d4f26b30b17b","impliedFormat":99},{"version":"73e973b4a988435ff67545bce945b15974f55a34d5209a605af8a0bf0046dd7c","impliedFormat":99},{"version":"00099b8469cae7c73d7ce54a798681fb97dc27ce5c31b12da48d597d588a0a81","impliedFormat":99},{"version":"0622a4b34384dda296d3321e63790bcaa5bb76e60ba3f311ce38667c171f7169","impliedFormat":99},{"version":"9651cce552b774dd47aa930bcf57f78595dbfce277d32be829861129c37ba25e","impliedFormat":99},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"0fd06258805d26c72f5997e07a23155d322d5f05387adb3744a791fe6a0b042d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"f52e8dacc97d71dcc96af29e49584353f9c54cb916d132e3e768d8b8129c928d","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"53eac70430b30089a3a1959d8306b0f9cfaf0de75224b68ef25243e0b5ad1ca3","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb","impliedFormat":1},{"version":"86956cc2eb9dd371d6fab493d326a574afedebf76eef3fa7833b8e0d9b52d6f1","affectsGlobalScope":true,"impliedFormat":1},{"version":"bba5c0a40fe58ecaff0fc732bd0ba0d39cc25fe06a8d12cfb0b7372465d6ad25","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"bb4a7c36a6d56378df14a9bb0b0b571a82670ea95983626ce5ddeea846d54b23","impliedFormat":1},{"version":"eaf9ee1d90a35d56264f0bf39842282c58b9219e112ac7d0c1bce98c6c5da672","impliedFormat":1},{"version":"c15c4427ae7fd1dcd7f312a8a447ac93581b0d4664ddf151ecd07de4bf2bb9d7","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"c72ccc191348ac1933226cab7a814cfda8b29a827d1df5dbebfe516a6fd734a8","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4047ed87e765bd3bcc316a0c4c4c8b0061628460d8a5412d1c4b53a4658665a","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"3eb62baae4df08c9173e6903d3ca45942ccec8c3659b0565684a75f3292cffbb","affectsGlobalScope":true,"impliedFormat":1},{"version":"42aaa94addeed66a04b61e433c14e829c43d1efd653cf2fda480c5fb3d722ed8","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"15c5e91b5f08be34a78e3d976179bf5b7a9cc28dc0ef1ffebffeb3c7812a2dca","impliedFormat":1},{"version":"58832ded29e0094047596544ac391d68c799d7bd7d35936f47221857141628f1","impliedFormat":1},{"version":"553870e516f8c772b89f3820576152ebc70181d7994d96917bb943e37da7f8a7","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","impliedFormat":1},{"version":"745c4240220559bd340c8aeb6e3c5270a709d3565e934dc22a69c304703956bc","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"9212c6e9d80cb45441a3614e95afd7235a55a18584c2ed32d6c1aca5a0c53d93","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"6bd91a2a356600dee28eb0438082d0799a18a974a6537c4410a796bab749813c","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"ae25afbbf1ed5df63a177d67b9048bf7481067f1b8dc9c39212e59db94fc9fc6","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1},{"version":"785b9d575b49124ce01b46f5b9402157c7611e6532effa562ac6aebec0074dfc","impliedFormat":1},{"version":"1caec58c119ec3e32e181256dd8fa6dd12b081aa2399a5fcf4cccc5c6578fab2","affectsGlobalScope":true,"impliedFormat":1},{"version":"a660aa95476042d3fdcc1343cf6bb8fdf24772d31712b1db321c5a4dcc325434","impliedFormat":1},{"version":"02b1133807234b1a7d9bf9b1419ee19444dd8c26b101bc268aa8181591241f1f","impliedFormat":1},{"version":"6222e987b58abfe92597e1273ad7233626285bc2d78409d4a7b113d81a83496b","impliedFormat":1},{"version":"cbe726263ae9a7bf32352380f7e8ab66ee25b3457137e316929269c19e18a2be","impliedFormat":1},{"version":"59389e07e78bb63e00962b4a86536c5ce993e3273327dc2fee0d687820acd184","impliedFormat":99},{"version":"4536edc937015c38172e7ff9d022a16110d2c1890529132c20a7c4f6005ee2c6","affectsGlobalScope":true,"impliedFormat":1},{"version":"402e5c534fb2b85fa771170595db3ac0dd532112c8fa44fc23f233bc6967488b","impliedFormat":1},{"version":"8885cf05f3e2abf117590bbb951dcf6359e3e5ac462af1c901cfd24c6a6472e2","impliedFormat":1},{"version":"769adbb54d25963914e1d8ce4c3d9b87614bf60e6636b32027e98d4f684d5586","impliedFormat":1},{"version":"e61df3640a38d535fd4bc9f4a53aef17c296b58dc4b6394fd576b808dd2fe5e6","impliedFormat":1},{"version":"80781460eca408fe8d2937d9fdbbb780d6aac35f549621e6200c9bee1da5b8fe","impliedFormat":1},{"version":"4719c209b9c00b579553859407a7e5dcfaa1c472994bd62aa5dd3cc0757eb077","impliedFormat":1},{"version":"7ec359bbc29b69d4063fe7dad0baaf35f1856f914db16b3f4f6e3e1bca4099fa","impliedFormat":1},{"version":"b9261ac3e9944d3d72c5ee4cf888ad35d9743a5563405c6963c4e43ee3708ca4","impliedFormat":1},{"version":"c84fd54e8400def0d1ef1569cafd02e9f39a622df9fa69b57ccc82128856b916","impliedFormat":1},{"version":"a022503e75d6953d0e82c2c564508a5c7f8556fad5d7f971372d2d40479e4034","impliedFormat":1},{"version":"2ed6489ef46eb61442d067c08e87e3db501c0bfb2837eee4041a27bf3e792bb0","impliedFormat":1},{"version":"644491cde678bd462bb922c1d0cfab8f17d626b195ccb7f008612dc31f445d2d","impliedFormat":1},{"version":"495e8ce8a3b99536dcc4e695d225123534d90ab75f316befe68de4b9336aae5d","impliedFormat":1},{"version":"f45a2a8b1777ecb50ed65e1a04bb899d4b676529b7921bd5d69b08573a00c832","impliedFormat":1},{"version":"774b783046ba3d473948132d28a69f52a295b2f378f2939304118ba571b1355e","impliedFormat":1},{"version":"b5734e05c787a40e4f9efe71f16683c5f7dc3bdb0de7c04440c855bd000f8fa7","impliedFormat":1},{"version":"14ba97f0907144771331e1349fdccb5a13526eba0647e6b447e572376d811b6f","impliedFormat":1},{"version":"2a771d907aebf9391ac1f50e4ad37952943515eeea0dcc7e78aa08f508294668","impliedFormat":1},{"version":"0146fd6262c3fd3da51cb0254bb6b9a4e42931eb2f56329edd4c199cb9aaf804","impliedFormat":1},{"version":"26e629be9bbd94ea1d465af83ce5a3306890520695f07be6eb016f8d734d02be","impliedFormat":99},{"version":"4ec16d7a4e366c06a4573d299e15fe6207fc080f41beac5da06f4af33ea9761e","impliedFormat":1},{"version":"7870becb94cbc11d2d01b77c4422589adcba4d8e59f726246d40cd0d129784d8","affectsGlobalScope":true,"impliedFormat":1},{"version":"7f698624bbbb060ece7c0e51b7236520ebada74b747d7523c7df376453ed6fea","impliedFormat":1},{"version":"8f07f2b6514744ac96e51d7cb8518c0f4de319471237ea10cf688b8d0e9d0225","impliedFormat":1},{"version":"4d1f8f0cc7c0d57cbc5f51480f0f157b755f59b4ab2a69508df5f80f18c1bb40","impliedFormat":99},{"version":"369ba5259e66ca8c7d35e3234f7a2a0863a770fdb8266505747c65cf346a0804","impliedFormat":99},{"version":"ce0c4a761774090ecb47021b107d8d9efc6b690c1ed16ec6879f211c13639a5e","impliedFormat":99},{"version":"e50a264056a32b459417ac9f51d31ba73c672e73a6ed82b098192cd432d3d4ad","impliedFormat":99},{"version":"e50a264056a32b459417ac9f51d31ba73c672e73a6ed82b098192cd432d3d4ad","impliedFormat":99},{"version":"e01ea380015ed698c3c0e2ccd0db72f3fc3ef1abc4519f122aa1c1a8d419a505","impliedFormat":99},{"version":"392ffbabffc7f650207f063d1eaba11518e585dd49857150569640359c3b5d17","impliedFormat":99},{"version":"9dac5b2402368acd7741b114813deda4cb567c86c252d0fa1a788834f1ba8d2d","impliedFormat":99},{"version":"e3225dc0bec183183509d290f641786245e6652bc3dce755f7ef404060693c35","impliedFormat":99},{"version":"b57c462049b5a994dea96a0ddf45a9d2e1b807d0755a05be787b6551de3a5d3e","impliedFormat":99},{"version":"9b0b839bbfa7d4cb31e394c083b3a198b69143b10fcd11d7b77064a485a6c238","impliedFormat":99},{"version":"e6233e1c976265e85aa8ad76c3881febe6264cb06ae3136f0257e1eab4a6cc5a","impliedFormat":99},{"version":"c8563085f52ae6db536ea0eda45db30e84ecd0faf182335b7abfcdaf69e7df31","impliedFormat":99},{"version":"2a08733cbcc6f7928f4f8a0fed65c79227bd472d39db9b12a88d5802d0bff11f","impliedFormat":99},{"version":"4a6ae7e45eb9f6481ebda1797a08c15278ebc1728179326c74ce58ee708c136d","impliedFormat":99},{"version":"69bf2422313487956e4dacf049f30cb91b34968912058d244cb19e4baa24da97","impliedFormat":99},{"version":"65aadb657a741460bdefe6241510546ebbcea42205335668c364c41a75bc22cb","impliedFormat":99},{"version":"6015b01226d278552d8baf007ca405fe8c0a20b86bef6504236a216e190a7313","impliedFormat":99},{"version":"b500ef2fcd33c3a8d107d70bd3b5c295f8cb9eb92fe399ff5c1dc608330dbf18","impliedFormat":99},{"version":"fa5be5c245e3add047b851de67c1dec130d8d9e131bde00284ed685921482be2","impliedFormat":99},{"version":"ddd4a89adbe93bff897d5b7e10f7519e2d8bd8d8f84bf5b7aca599d5f9819bc4","impliedFormat":99},{"version":"48c411efce1848d1ed55de41d7deb93cbf7c04080912fd87aa517ed25ef42639","affectsGlobalScope":true,"impliedFormat":1},{"version":"8b946e90aa10b722b2a557ca4038d768c15f1b15c048a45650e20a5d80ba5056","impliedFormat":99},{"version":"fb7c8d90e52e2884509166f96f3d591020c7b7977ab473b746954b0c8d100960","impliedFormat":99},{"version":"8ce2fc648c2a516956661364c715e1d97f46a1b4309c7ab7edb9c31e340e25a3","affectsGlobalScope":true,"impliedFormat":99},{"version":"fe2d63fcfdde197391b6b70daf7be8c02a60afa90754a5f4a04bdc367f62793d","impliedFormat":99},{"version":"a5b102c88eb46be4def5c291a78141b70b03b7df482fae7dc669970785b08a9b","affectsGlobalScope":true,"impliedFormat":99},{"version":"06151bb117bc3da94f12a08ecf723ce2fe6120f8dae1682322853abf2d237513","impliedFormat":99},{"version":"cbdc781d2429935c9c42acd680f2a53a9f633e8de03290ec6ea818e4f7bff19a","impliedFormat":99},{"version":"9f6d9f5dd710922f82f69abf9a324e28122b5f31ae6f6ce78427716db30a377e","impliedFormat":99},{"version":"ac2414a284bdecfd6ab7b87578744ab056cd04dd574b17853cd76830ef5b72f2","impliedFormat":99},{"version":"416930b56bf747b9e44a7090f2284601ceaae1df723ef5379c5c0c7f386109ed","impliedFormat":99},{"version":"2330087dfe056bbfd0f5590a99d1912ce6b4b6a65cca94466cdd142d55503e84","impliedFormat":1},{"version":"72422d0bac4076912385d0c10911b82e4694fc106e2d70added091f88f0824ba","impliedFormat":1},{"version":"da251b82c25bee1d93f9fd80c5a61d945da4f708ca21285541d7aff83ecb8200","impliedFormat":1},{"version":"4c8ca51077f382498f47074cf304d654aba5d362416d4f809dfdd5d4f6b3aaca","impliedFormat":1},{"version":"bcc1a744205fcd40c6c5c5fac042307fac6f9d6055a4f4e9b96f80599b9cd4cc","impliedFormat":1},{"version":"518077b93bf0f17fc656dc83005d3e062508039718aad9090b31b0a5f4c8b96c","impliedFormat":99},{"version":"bf5a33a2cb7ff3c2795430a3cc8b5b0ffc04deb203e94405ab5a7db16310669b","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881","impliedFormat":99},{"version":"2be2227c3810dfd84e46674fd33b8d09a4a28ad9cb633ed536effd411665ea1e","impliedFormat":99},{"version":"ecd7b4429a2b12f50ef619043fca298eb99a9b7f9e8edabd60c9bbb7fa8f036b","impliedFormat":99},{"version":"0e949a1e2380e298536d7cc606e0c90876a3fd2f209fed27d7b2134079f5a1a9","affectsGlobalScope":true,"impliedFormat":99},{"version":"4025a454b1ca489b179ee8c684bdd70ff8c1967e382076ade53e7e4653e1daec","affectsGlobalScope":true,"impliedFormat":1},{"version":"0e38a1461bc498f67fd75cc12dbf745dc9894dd9f283750de60d5e516243fa24","affectsGlobalScope":true,"impliedFormat":99},{"version":"75ee0696ad8e1cefd1bd386fb58023682f061e5e3361e84df0c4410be3f1b0f5","impliedFormat":99},{"version":"7a9910f3139f025f9c04808fbf944b8615afed0f49cdd9536556f4a6e2cbd40c","impliedFormat":99},{"version":"1748c03e7a7d118f7f6648c709507971eb0d416f489958492c5ae625de445184","impliedFormat":1},{"version":"3d47fce45f40254c6ae9f3d8de6b572a83d4080e5e544f2786fe09be15a7e581","affectsGlobalScope":true,"impliedFormat":99},{"version":"fbb9f2cebd91c31eb20a97407a691b8c21d2ef2279b5b7cb9a45b06884e4aa66","signature":"458cf6861d0937a05eac8795347ad1da1db5905788b2755cbb9674285ac45f4d","impliedFormat":99},{"version":"15a481749d529b694b5185a1ea85de1e616ad93ead02ceb04b659ea83e66543f","signature":"536d1454186caa79f0793e0275d127135a938dc5697fe32bc4f77e1d82103363","impliedFormat":99},{"version":"17d716b12c230355d207d8b464a3359e13041c0cbb94c243981618e279f57670","impliedFormat":1},{"version":"b124c0624b15412ace7d54644ade38d7a69db7e25488a1a4d2a8df6e11696538","impliedFormat":99},{"version":"d782e571cb7d6ec0f0645957ed843d00e3f8577e08cc2940f400c931bc47a8df","impliedFormat":99},{"version":"9167246623f181441e6116605221268d94e33a1ebd88075e2dc80133c928ae7e","impliedFormat":99},{"version":"dc1a838d8a514b6de9fbce3bd5e6feb9ccfe56311e9338bb908eb4d0d966ecaf","impliedFormat":99},{"version":"186f09ed4b1bc1d5a5af5b1d9f42e2d798f776418e82599b3de16423a349d184","impliedFormat":99},{"version":"d692ae73951775d2448df535ce8bc8abf162dc343911fedda2c37b8de3b20d8e","impliedFormat":99},{"version":"acfed6cc001e7f7f26d2ba42222a180ba669bb966d4dd9cb4ad5596516061b13","impliedFormat":99},{"version":"f61a4dc92450609c353738f0a2daebf8cae71b24716dbd952456d80b1e1a48b6","impliedFormat":99},{"version":"f3f76db6e76bc76d13cc4bfa10e1f74390b8ebe279535f62243e8d8acd919314","impliedFormat":99},{"version":"bd4f33e03dabd1b24afdfc1440c2d13af6d5d725e0f0a39341a779c68a573c74","impliedFormat":1},{"version":"83e5797a15afe602faa225a32f142562df23b9b8c198d1df9ffc3d0a980b5935","impliedFormat":1},{"version":"b7fd8acd3f21c9b9ce86a0122ad0b5671807f255ecde33009d2b5627ec975af4","impliedFormat":1},{"version":"61818c8d2550d9e6871e814b6f400d5bae2dd53ee9b684da08afbd1d1556fc02","impliedFormat":1},{"version":"00de46f8e27cc62440e4af0c2eca188d12d47ad2f353a156a194372508e72c93","impliedFormat":1},{"version":"4935bd2407cd0380b23ad11d9a563b7e43adc0b5626e3d3149ac4b20be7bd508","impliedFormat":1},{"version":"dafeae7391e379b967e9203c389dd99fa0a9a2b1fc2712be25f833d3c9dc7f50","impliedFormat":1},{"version":"085d9620812efb3c02b720486751e138703033e0ec18c8e8a834e76c1bceb45e","impliedFormat":1},{"version":"daef8b8bbcfdf0ffd072ea7617f44f75a43d84ebfbb0285962380f5bfd47732b","impliedFormat":1},{"version":"e3b0268e54335e4ad416686dc066c1a0d5955616a7cf4e18ca9f1bd8c94298c5","impliedFormat":1},{"version":"5ef0aaf3f303deaa132533312f2c89e601e1cae1487cf9d0ffd738ecbdb5a811","impliedFormat":1},{"version":"4b9c8a0fcca10583cfa86ebeece04282fd29244ac963e53c6dd21ef6e0942d89","impliedFormat":1},{"version":"5b8dab51945a7be682bfbc3a3e8c5f15e81889a0df83224e32aef4c3806a1509","impliedFormat":1},{"version":"03863aedd294be35295b989a56bd6713301e589f50426cc3af08006071774883","impliedFormat":1},{"version":"7324bd81f9cb7a1420e39f519d2dc4992c03d9ffe3b3e3d7c1dc87e4d23287f3","impliedFormat":1},{"version":"ef9d66891a8d6dc03352db274f13fc4fd98bb8028e980bd8c594765273551fa9","impliedFormat":1},{"version":"e2e8cbf98efe31fdd8f3402ff702c263398caa977eed5f84a7b8a318f5f8ea1c","impliedFormat":1},{"version":"ad486bf2d35505ef4135a4299d2be4519816cc0ccd7062a1241eab16607baaa1","impliedFormat":1},{"version":"38470367cf9299ac928e198b2e795ef59441402766f523b94bd892055aeac5d0","impliedFormat":1},{"version":"19a0dfc65c41f7fb7686084121ee55c147a57b23ffeaf0afcd134ad8cbb9a190","impliedFormat":1},{"version":"7402d97371b9fa9755305d401f9646680e524e2e2a1e2bf49ee4afe818a5f51f","impliedFormat":1},{"version":"7e7653cd9b3d04a5ce0f1bcd9237543f5f5a1b91f99f43cddad5a75aa7d77f98","impliedFormat":1},{"version":"02f8acaa04fb73a73e4f59c9a585b196255034124a13a0e5035d012ff077ce4d","impliedFormat":1},{"version":"aeb8994b8455826bda4d99cdbd3461c276a7a421acc07896050a4a6cf72c7275","impliedFormat":1},{"version":"1bdf083d1f3fea875bd446bec9ac81349efad4f60a2a4da19a8beca0ef055d02","impliedFormat":1},{"version":"1efca43425886beb4ba6fbbe13a026bed9853a4285c4afaa7ecdce9cfaced355","impliedFormat":1},{"version":"cc7ce7f3ea2979339fd0c9fb9c403ef3af8a6ca0cc064abe78ff6138b08ad457","impliedFormat":1},{"version":"aed1beb3840fe44d494b7064d3c0fa14b14b1336a5b475cd3170679136deb810","impliedFormat":1},{"version":"9c143ea83f0df458bbb78eb12910c2513856dcc5f4613d007e4a1b622792ebc3","impliedFormat":1},{"version":"80879791ea2b950a8f3b21891a1b5d1ba786731f1b4a0094c6939508939a8a32","impliedFormat":1},{"version":"bae3b3e4bd6ce90ba58f902fae196c76de65c64017e9b26e0d9457e30576080c","impliedFormat":1},{"version":"95f8beace3ed894e3e5e3ebaae46c855dfc133e2c63d37663a760c801750f7d4","impliedFormat":1},{"version":"80936629b3b2b5d6ded0f838de90362f5ef6c35c1680881b88e75f1f34463bee","impliedFormat":1},{"version":"3d8d6ec6d5f57201d3e492ff5b6e8b66f77a465a3f963a98680616b9d9f4bac0","impliedFormat":1},{"version":"860b0ea1010e8e09cafee8d379acad651c6974af341dcdba86f69766d56d7084","impliedFormat":1},{"version":"c6f64e969a1d82b2615052301e9f5a7045433bff2f8208755eb0b72157e31dc2","impliedFormat":1},{"version":"9ead4087c4c3306dda63a6b3550d7bd24c73b7901d2a65ff6f718c7649251de7","impliedFormat":1},{"version":"d111a159859640db600ee865311c9f41344e6f9ae59663ec696ab95508034db1","impliedFormat":1},{"version":"5257c085f320c6cfab0d959cbe6942aa2bb7d2dd7dbaac684c400e7f551969dd","impliedFormat":1},{"version":"0abf11e990da90369443e8751e59dda73a48a7f50aeaec7eccae8b1f28ab8e67","impliedFormat":1},{"version":"c418dfb5872a3d40da6228282835381081402b0d97bf450b75524795635cf3b9","impliedFormat":1},{"version":"2af97203172992b9d5f9aa5351ab18a9cd1fe21eba8c0419097e7a277b3e22e4","impliedFormat":1},{"version":"0164f7dc2f3351768b314fa18e51dda3a465e7a2721222cd7b69cb8d73b809e0","impliedFormat":1},{"version":"3d79c86d4d84af58a162813fdee270b1beab00c0b78aae57a7add762defd621b","impliedFormat":1},{"version":"238a8b8681f1a417416b7c203f3f708c6f95df236e1a0995bca55318c386b434","affectsGlobalScope":true,"impliedFormat":1},{"version":"0b5d4963a6d85ac9d6b13fe63f27e14daefdd9bf4a6a6c725de9cbab8fb35771","impliedFormat":1},{"version":"5687b31cb360024de0bbb571c210db8f84891324161bd2fd49b1a5571201e2c2","impliedFormat":1},{"version":"e819166a9c42678fe69722e011ab78bf33f40a3537cfa275a7aaa46fecb41ca6","impliedFormat":1},{"version":"1570514afbdfe9ce979edcfda0d86eb6e5f6fc9958872d14a9b86f6e234075c0","impliedFormat":1},{"version":"6da38750a6393a93a461c0ba0fb84635fa72bfbe354dd63a0378d27dce3a795f","impliedFormat":1},{"version":"231f332b475f7b8604b05696c61cdeb7a4123de5926a8280eeddb4a5c9238bee","impliedFormat":1},{"version":"6bcd5e794d240cb568c7f680a11e3777c9ed3f76577029553d2241d08f1dd962","impliedFormat":1},{"version":"a0e622e977f471b660ee640bf6612189887839e79ee905a44d0ad867d28eee61","impliedFormat":1},{"version":"9f6d739dc3d17e0b836948078530e879907e03960cb87fe94d187fa39c7d2fa2","impliedFormat":1},{"version":"9867d4da6cbee36e1db4267642eb83de49924db35dbba372173144c1d00a13fa","impliedFormat":1},{"version":"d9342269b230934a8ef4841063a8697a678daa1bba4663649022d29965bfc2e4","impliedFormat":1},{"version":"31860efe0a0ee498267753218ad9eea212a2a41270495dd3e3d085c0e0fc522e","impliedFormat":1},{"version":"c22d0bb9aeb4f74da9a68754e95a0bb6d92bd09c0c9dea7e0e097911f829d382","impliedFormat":1},{"version":"8c767b858abec8d08bcf879abefb00384c6cad470e19bf806dba9caf8c36207f","impliedFormat":1},{"version":"71f884069fe81ea7588014d1d5b2593a4f2bf78f34bfd0949896f782423946a1","impliedFormat":1},{"version":"4c05e870b4db398fb59cc3054fd2e7ae3acf99ff9aacd1a32e9c2684b73d5297","impliedFormat":1},{"version":"a06f3ac54e6956add923d586e66eaac1242849037e1158160f3358261f0ceb00","impliedFormat":1},{"version":"bf9936dffdaa28c9001464de6365bcccf128da1f7c56f73934e119621d2bfb27","impliedFormat":1},{"version":"6225876b1620dd2b8cc4a1bf482d2df8551445261f03f8c8a570d371523c12a8","impliedFormat":1},{"version":"0b928751feb12dbda1141696d5252f64268305f47eca2dac8b6c4adebf5b4803","impliedFormat":1},{"version":"a0f3836d97b9b665cb0c48002d65f41096433ad7ee384b063f7e90077b726f85","impliedFormat":1},{"version":"6d8e8105cb162e35d6a64c33568d8eceddc7569d85aae6f2dcb1e5f6f56c4c5e","impliedFormat":1},{"version":"75dab9caee71a37045a1f2b3e8b3c63ffafdb8a418d52054f71e62b4b6d9c0f7","impliedFormat":1},{"version":"e42ef8f7964e5359b9d8877fd28968216c118fb65c3b687e16bcf98c9ae97b5b","impliedFormat":1},{"version":"4049a71ad85c3a83bc84474373ff0e87dde5d84bef836b49c352f65415a84ac2","impliedFormat":1},{"version":"6236cdae4c05c8a788c67838afb7748c9370bc165fec60f48fa33e6def4ff9bb","impliedFormat":1},{"version":"63547f4b0ba559310b6210a523ea85093017d463173d815ecca6299fc181e72b","impliedFormat":1},{"version":"c2d5246a3c16def66525f6015cf56a297cfc5f8a5a4487c584516a4e64532cdb","impliedFormat":1},{"version":"8f1d44aa96048e9f8755f33d8a2aabffd1f318af908789ba0d48647fb6e9e261","impliedFormat":1},{"version":"5718d0112b1c57ad128fdab19593ab293f8eec2e5b8bfb3683435eb2b1af3096","impliedFormat":1},{"version":"0a68bb561ee85dcdffb4605aed9ada3c6947df8c035e2870f0f94457c6d309be","impliedFormat":1},{"version":"878a7b54ab0f373bfb61c8daf2aafb03214f16faac129936662ce08314ae72ee","impliedFormat":1},{"version":"14b7c178927373ca2defe1ed61d0e03e3eeedb61fc9c4dbe54cc571dcfc06506","impliedFormat":1},{"version":"58c31194b583d5a66657dca956f5754f9ea26d8ca28ca728fe2d7a11332ae484","impliedFormat":1},{"version":"5cebfadb347643e3401ebc31644b0f0ca120437c6965dd189eaccd8b3956b5cb","impliedFormat":1},{"version":"e88a75fd3e7de32cab4319dc0adb3fb0f202e5f64a80a553178f164643c3ff10","impliedFormat":1},{"version":"17412600dfbc281755ef86073aedd79f7dc067d01d0f8aadb45008c4dd398e85","impliedFormat":1},{"version":"03931ec025238327c764e149a7fcbb7baaf84316f1dcc1a4b6f30ab507509b34","impliedFormat":1},{"version":"ff0d4bfe053eeb170c7fec0da7ff8f556f307a34e6b60cd522550e9f9c65d860","impliedFormat":1},{"version":"5e69282a7d63f8400d6dee7f99fa57730178e267c8511ce8757a264bdb0a208a","impliedFormat":1},{"version":"988d9bf0b8565e01a6ecaf4635618c8e472e601955044a49288f53d141dc8a90","impliedFormat":1},{"version":"6449e76ed10ee0b1d7a1c706f6ef455e458915f1f2903acc3bfc419babf00e27","impliedFormat":1},{"version":"6ee30d151fa2a2b2c493748edfc2d3419bba4fdf03e8da37c14d7af0252b94f9","impliedFormat":1},{"version":"95bd39c8f6559fd05017c615e28eafe7f48f49fa588f1d05c871c22e922e77e9","impliedFormat":1},{"version":"719e2f29911507ff67365a7f2b8141d8efafa8b230494e3abfdfe756afe0ded6","impliedFormat":1},{"version":"28fb61e37795e319092136d05c04aea71e51ad4651cf2db37a1fb57d23645670","impliedFormat":1},{"version":"7606896c2ababe232ec203893fe8a83f682c06310a9e68b28213c0e40286fe1b","impliedFormat":1},{"version":"814e4d8bcecdad6d38289111e9e46aab3e8ad661e5281e83ad94c4504d9810d1","impliedFormat":1},{"version":"cba8ee05bf962900cdf38d6d9f0841a23d307bd6b5304b6d1ce0ac6cc3bdb428","impliedFormat":1},{"version":"062b1273918ffe8945a96c761655fcdaa1010745207a284db48ff215364eea9b","impliedFormat":1},{"version":"4b48f5a342fd1bdc60a7e728dd0db0cebfbea354a1c594b2de84f9cbfde9bb88","impliedFormat":1},{"version":"8d0fb2d92cfa31e98a4761b10350611f17113c270210ab983ecec766a2cbcd64","impliedFormat":1},{"version":"d3632ea9d0fa0cd27c9e344d06080ba0c88dad82a2e3ecd2cc48dcb3d3588905","impliedFormat":1},{"version":"345d0c34dbebd13667a67d2b7967e10ec8d4328c91bb18a039bafe3b09664b2e","impliedFormat":1},{"version":"1fed7d4c6256b2a730802a871a5f416f9450dd4b1cdd70d6f4eee808fa50ae7c","impliedFormat":1},{"version":"a7ae911a16d90ed61945bdebd11cd1c7b08e9849fe0aaefb7979c0d85a5d5156","impliedFormat":1},{"version":"ee0eaf0641f70d6fef36ab1fcb5f0ff1b75ca176ade5ce0dfd8bf45dd35da69f","impliedFormat":1},{"version":"997aa1f98c927729172de47ca7a224d4fb61571531d6bbbe36e029745eeea236","impliedFormat":1},{"version":"82e6db9f441d9bda4e0ec820e7da3becc36b7ab9b2eab8e4ecfa7277d33bcd15","impliedFormat":1},{"version":"bca2d468b5a1ccc7a8a6f3109271bfca435b2e38a5ae7f0c882a42c01868563c","impliedFormat":1},{"version":"e1aff42c1a14db6f24462013e9e2a19137472f1feb4f6730cad71a51122b568e","impliedFormat":1},{"version":"13c8dad137ed54a9c2f1880ef06fa559344479faf242ea969da85d01f82f1a41","impliedFormat":1},{"version":"4a633b63441c6e5cd15ddf3820fb7fcc36cb5eb4aa6a3a69f09e9f4e2cd96c5a","impliedFormat":1},{"version":"dd941d754ff3e49dfd055a6c48723d73ab2e0e38f46b50b07c7cfbe4b2d13ff8","impliedFormat":1},{"version":"43e68612a95008c64fb90f4f7543299f08b53c72a06a04f36cdfde17e8a50b91","impliedFormat":1},{"version":"287b14b0e8dba435b1d2161ec645ee5e0a7d9f811f905339b1a8c4806274fada","impliedFormat":1},{"version":"1c975f8be9b1a8685e9237d96060659c04ca0fa86a9bf057ace45f9b6ef254e1","impliedFormat":1},{"version":"b60a8a99475c3dc7cc64664ccb58e0fec9afa07188c60e06994e2340fc096bdf","impliedFormat":1},{"version":"8f1e2a1b5bade9672c68a519429e4b26e853a7e952272b0b886cda50415ede52","impliedFormat":1},{"version":"b544dfad14c39c31ba89f9c94f1cd6ae5bd9826bd85504a21bff8fc521a59ac6","impliedFormat":1},{"version":"151445c73a2b851c8dcab1d0a7e17065a2989ceb057bfc729d75ee975f777e89","impliedFormat":1},{"version":"d02da12f49f1160f5e9f6d08aa98a69bd4357f50dc1b26d4400598ad4a050744","impliedFormat":1},{"version":"f277f96e1bda5047dea9911276e1a643dd42e1251fc1fc06379a0a12cdd5eb41","impliedFormat":1},{"version":"f99a6508fc1eddd8de0f673f18a8e76315ae686a94fbffcb7559f07d71d516f0","impliedFormat":1},{"version":"e6a83e832d2331ec278dcd547dcfbfa014f5b101644f58885f0638f6bee5e0e3","impliedFormat":1},{"version":"1f482a8ad8e711023a1c24e82ca77946a065dbd66fa73dd28a31efb20bfe922a","impliedFormat":1},{"version":"77d215b162174d0c5d719e4408cde92ec7a84d962948a5488c5a1c77fd141454","impliedFormat":1},{"version":"0b00469c70edffe7d369a4b4ef91df42e2235e324dbefe51be39cbcc0c4c644a","impliedFormat":1},{"version":"ab661232601feb296a5f98460b7d8cb36429676fdba1b6d7f87e86a5833464e7","impliedFormat":1},{"version":"b88b60c5456604970705d8c0429c628954af635736c88f6ac44e591e5d564ce0","impliedFormat":1},{"version":"9b9fafe3fc5cde51c54c69f56656ca4d306f8a226fc5a486969e6825266a1e90","impliedFormat":1},{"version":"c66f4e9ca95ad3596fff93508899938116ad332b8d03975c0feace5b18243a2b","impliedFormat":1},{"version":"6cc3fd0cbbed9c75aa64a53cc201a7a98f920e5244a623552c21c87f4c0054c5","impliedFormat":1},{"version":"ac10273bd2b15e680fa0fe95d01b671d835a4955404a5311bd55b70e8388140f","impliedFormat":1},{"version":"de444d7cfd5cd66caa7394ba5366cbe7e0dcaa2b4c5e521c9c048769998ea4be","impliedFormat":1},{"version":"4d38c7a6bc85c3aecc19c07dba99de40f5408cd369a3faafc758cce087755211","impliedFormat":1},{"version":"cdcbe6539bea943b7fb82bda155e6879509242a8df24c87e8e6f97ebb71430d3","impliedFormat":1},{"version":"3d4f2dc9b204e96c40040ebe3fbdebdffb87bc4bdb5aed158fe092e22c47f3b2","impliedFormat":1},{"version":"987b2bbf81b7d0d6a1d07b4f172ff99f2cd5beac445c2a8159887c1309fbf4f4","impliedFormat":1},{"version":"58accb02ed98ba421b6678aa1e458acb5e9dc536dfb09dfc1ca89713d924a67c","impliedFormat":1},{"version":"769e44720e5f14597590461331c03d95e3a7a7a545b5e8c0603fe7a1672d32b0","impliedFormat":1},{"version":"a42375f2c4750c6bc4bc3e43e15e878d90d17a994b51519ee08dececca90666d","impliedFormat":1},{"version":"0c281f05ab624617fb412329be4d6a62de0dcc68b6ffcceefd42fc86d9b181b8","impliedFormat":1},{"version":"a0677aae690060f1c9c80068f2a44d904e636bb4c1433a28de4e7045556225d9","impliedFormat":1},{"version":"83e1e1ccc4cea4494cc1d3ac220dcabcf21e459fb84e1a1996c57c851af2ed1e","impliedFormat":1},{"version":"3f5d74d49a5d3bd426a26d9f288707b3126958bd8450b92bd1dd98c177f30a0b","impliedFormat":1},{"version":"6abe5c60722501af1d92a6f8ac4c95247a7f8424aef268a09d6503059e6bc3e2","impliedFormat":1},{"version":"7ee32f976cdee0fde4c8fe8152cb94638c1d328d6bce4e7b868ba67c5f9c7a1e","impliedFormat":1},{"version":"884fc3c7e040b6743b796c60ae35ccabd9be7a0073ec408ac69f47789398a9ed","impliedFormat":1},{"version":"9e59c67930fe9873936dd68c5bdca5be270f4eccafb430a46d3e5cfe4f9e7cdc","impliedFormat":1},{"version":"d6cecb5a93f743cf44a83532195875d55083d180d40c9ef6810a8fdaacbf379b","impliedFormat":1},{"version":"6fcb16c4282a22cf90b866180bc5e8315f0f936220823a21f05e08c87afe5187","impliedFormat":1},{"version":"845efcd0035b56b3a5379bdb3fa95c187003873293bacdd0e334ed264f73fd71","impliedFormat":1},{"version":"6a6e4583ec09fe371730ef9ccff840d8668ef8e4bf6829fe4a88e62479b37df7","impliedFormat":1},{"version":"c759d72f581f8bd639428be65306366af2822b7f82ed975e0a3ce49e032fcb07","impliedFormat":1},{"version":"57ef246fb32b67c29c1003fbef8fd138331a2d1a1a17c2dfcf072cc3e94d4031","impliedFormat":1},{"version":"528577c75bb52e5b47ce76386a3bd29cb867fc837fefbd32a2a8625a41597fde","impliedFormat":1},{"version":"bfd3071603cbaa5e8f2b84f559ca1f6e654f587428ee2cacdd44344b3992833f","impliedFormat":1},{"version":"13e26308b5c0c078a0b504780118d38fca0a92d2293bdf6a32354803b90461fe","impliedFormat":1},{"version":"0624f06a19b37d6063608f20b431b389e3baffce7d0bd2d58d74861cd6aed796","impliedFormat":1},{"version":"dcf90041c52899dd2fe7818777a56fd9ec07c5685eac3fd670927ca7bc06ac07","impliedFormat":1},{"version":"a71b01d3f29554499466a47aa5b451d8f1a42f2d1f84d88120864ae02863468b","impliedFormat":1},{"version":"bafad086fa2ac3170a1834c0311123551b0c927a5abbe6aa7553a433f9773bc2","impliedFormat":1},{"version":"f473f41ed6062b0885ee156ec6caa4c704d95205ab8053d047c52c6c282d4e07","impliedFormat":1},{"version":"92311944f65eeb8b7f7c8aa3c53b7619f175700105299599dd4d22c444d95af4","impliedFormat":1},{"version":"10f111201760be96a105d172a29d521de397caa21be7c430bfd90bd737f9f46b","impliedFormat":1},{"version":"016aab29c0304c9271298f4940fb253ed1dbde32c91b36cf03d5ed5818ebb254","impliedFormat":1},{"version":"f9854b04350941e020741214dc2157dd03220aa14c7fc419b12f4690aca253e1","impliedFormat":1},{"version":"ebcec4ddd7964a98fac9034bb9baa9bd4bcbd0746188ec39fa3ef8421afa52b3","impliedFormat":1},{"version":"d40eefaf376158f865e4ac58bc596339cab3a8f50eff853491f1095c36b4251f","impliedFormat":1},{"version":"56b626e1dff1c66809246137d8ef2bcb143d696173a22901b4408be17df3b5e8","impliedFormat":1},{"version":"5c4e8f395f8f7e35a7d692d3705d465b99258a11b07bb1186a5c67fb8c1bf46a","impliedFormat":1},{"version":"7942a4ab316e2b4d331b73cb21330a93fea2b24fed6500de55b9b8a44883aba4","impliedFormat":1},{"version":"e7ce176eea9ba6fe51eab319aef4af27f6b7203b2f2172a635d135636d70cf06","impliedFormat":1},{"version":"28fa40627f1d98abc3e1116c2ad6cc031a224b6ad8dd66f5932902f7a4851631","impliedFormat":1},{"version":"2f0db87d0742be798135483347921cba8c287c3dfa5dfd9ed6097451d3d17dbf","impliedFormat":1},{"version":"42dcf399fe5f1fd4a043ee0b306bab23441c1c3f66b09e49e9d0e7d4473b7442","impliedFormat":1},{"version":"3395d81ada6e919ddb189cbea2f7fb26d25ba5b369119828e7c6e14a89c3a127","impliedFormat":1},{"version":"0aaeddd9f225aebb5b82ed2f410f284b61d2d48762bad64f3be547d8d65ca297","impliedFormat":1},{"version":"09f0b9105e6f793529c3d60541d3b1b69924c9a476a35e0fbddb2fc8e262ff6e","impliedFormat":1},{"version":"73834fd97087adfa6ae2c5a55e94144127565a2c6b3689016a1ce49def724983","impliedFormat":1},{"version":"ddd8a330f0b13593487cca06e1fc2df4673c56cf9209fe7177adc73fb2ab4c9b","impliedFormat":1},{"version":"0fa1e8424887c1863c8baacaba1dd422ca116e40bdab05d2e2222481282f980f","impliedFormat":1},{"version":"fa9153a5673dd4965803d96a139839490a82b83d27664dfc1d7ea33cf78ba16c","impliedFormat":1},{"version":"afe31ccab5a390a02bdeb3f1301bd60544d11e88647bbdf88ab4cd4900a6aaf5","impliedFormat":1},{"version":"87da398bcd918d8c2feea268286279e1826e771c0f23402434ee971bbd685c30","impliedFormat":1},{"version":"6018bd0416fa252bb0181408bf1d8dd39dad606919538510f19ec2c2cc7690ef","impliedFormat":1},{"version":"9e0c09fc4a8c8a6ced5dd167a74a65b89a8e8f039b230c6c632cf7e9a8a95553","impliedFormat":1},{"version":"13c48a7513338ccd62b00ad13fe1c09c99894123a06cb641c2fd7640dc976bc2","impliedFormat":1},{"version":"c197cb4952bd8ad724800e62008f3ab73aca2b7eb0e07a05004e8e2e72afcb8e","impliedFormat":1},{"version":"9835204eaa3bb24072b329c50fbe9ad1ff912a9762a1f0f8fd60cb151c4cbcaf","impliedFormat":1},{"version":"dd23da0656300b1a2597da18f978e5d539f20bef9d6f2d4bbb22f1c74dda3b79","impliedFormat":1},{"version":"7a36b728099773eeee675d9db9f171678c185e87c6ba6f74b0dd8995814e22fc","impliedFormat":1},{"version":"55afcb9aeafe7817550e03fa8a80d71955e19deb38fefc79eb802be53af8d883","impliedFormat":1},{"version":"af261be4ac8c1a8ed1e55659a68f29c06b02ead29d97684de09024ea731e961a","impliedFormat":1},{"version":"9c4e1b6254fb3b7b2debb9f147e8c7f46897672e5bc7ed1997a1f9037b0daf6b","impliedFormat":1},{"version":"6b846a95891b85f931c0e6ef141e5cabd75f1cb307fa97ae9fa74b6d648d3930","impliedFormat":1},{"version":"577bfb952ab28638882dfdc5fa7422470a7ad95b96635bfebcb7fe2185669fe9","impliedFormat":1},{"version":"4e60bef2ab6d446170afa5ddf65643947077c355dce9c51258c5f23bb9e247a5","impliedFormat":1},{"version":"184d69dcc975b870991648e71e5336797484a7070802d91bc94164c500334617","impliedFormat":1},{"version":"047f82030200be68e85dcb9c6d59fbc1ac71385553e1d51f45b88d11244cc762","impliedFormat":1},{"version":"4f154fe7b92ce0365faafb0e9dbf8eea01d90866677ee1eebf5b3930a0fe017d","impliedFormat":1},{"version":"e9132986cf10c88d2807df5e8e4a8d852cb2b9a4b9e11b6c71703a4af032f06e","impliedFormat":1},{"version":"a00f7e120a051eec7a02e9c75d209458baeb0e365cef0dabc97a8f700b9a2247","impliedFormat":1},{"version":"c665efe54f3c6cea7b29f9679c7c40b337324aef64014f72904ec9825c4e475b","impliedFormat":1},{"version":"4621e8172a701c0b909ef6c4f3ce72c8234dc371b698dfcd96e4d400a9a2bb38","impliedFormat":1},{"version":"fd480ae72dea37b571cbd8b4073a2ef4eb7c146fb99dacd7f7ef363ed8af2214","impliedFormat":1},{"version":"46e2a6f3b77aa9e50225e60a6f65f4ce44d2f04ee03948cbadc1773e00aa5f2a","impliedFormat":1},{"version":"d2a16c45ef0895e08d643657a90dddf47aaa6f0b601e6f87e02da48804a0c610","impliedFormat":1},{"version":"fbf7b9f6ab658fc4627b243a89fb156afa69eb7a4d7d7206f2855b58ed6290b9","impliedFormat":1},{"version":"baee7565c2c00933c8839d0c88c2aadebea7f14e5365daa17738b76245d50cc5","impliedFormat":1},{"version":"e2d0613bfdab703fde2962c0300d6db39cb01299e82a5685a7423aa7cdf1a08d","impliedFormat":1},{"version":"381a1862fd26faec5dc183814b2017782e6942b7943d3c425c54b463230f99a6","impliedFormat":1},{"version":"a0cfcb4a1450a4296a712581328e4b7ad0ad17df8b52cbb2dc311604bf32c97e","impliedFormat":1},{"version":"db78a621e025227248b18d770423e745a93ae76530db2d7d8e085c0c8b06e33a","impliedFormat":1},{"version":"e05a81f6e43a43a98d22aaf2b06fe9d63b32c170f2800bc35e4dbcbaaa6c41a8","impliedFormat":1},{"version":"bc86ba3d243511015a6d41eaf18b5e6c88095763a8a6a00f841f09bed60e9e49","impliedFormat":1},{"version":"8588d748473d3fc89dc1a7701a36f1ea9b50242d4d5f89a1d1c1d967fdba86c5","impliedFormat":1},{"version":"2d83721ec493d7e6bd895f3f4d0579159520aa4ee4a4c16589f4e42b736c7f13","impliedFormat":1},{"version":"d0b2be224b86ec3db15fddf4dfe1f4d52d3761a82701a1f3e432177ecdd071e3","impliedFormat":1},{"version":"f9dfb9082373b856578af7775d5c1dc36fda8117ec2c754846f31031f78e5080","impliedFormat":1},{"version":"7107798ad1322c3c77de9c1613e28ce2afa3b225851d0c601616f68fb47fb286","impliedFormat":1},{"version":"bdfe093be0bdc1e5c70627ee9089ff9aa740bb98eb1bbb0a28a10c8bad693a7a","impliedFormat":1},{"version":"c0673ae2c562c4b9ae2ca9cc03bf5caeb69f436949fa06ab253ce146629b33c6","impliedFormat":1},{"version":"d2f29d3c87df2ed76ba17aea3d64ebbd6f8c0d76c1e06b541e0dfe0ee107b6fe","impliedFormat":1},{"version":"ba1baf9502f2d7e2e9b8065ae757f10094c8275a7417f3da4464a741d6253531","impliedFormat":1},{"version":"8a37002343263bc561f988b34d09e0c76c52c97466e9f9055292b9c216edd1e7","impliedFormat":1},{"version":"5b0d5a41da1070f12c3687141bdb5cbaa529a57cb412a5499c86bee593221e25","impliedFormat":1},{"version":"34ff8d6285f1ab1f0f0e8280a8c052664861f25d331c65ddde8a090c81facd69","impliedFormat":1},{"version":"9b25a39892702b45bff61447431b9aff4d99056ee7a7f4292c571ae5b96ad7aa","impliedFormat":1},{"version":"4f07399536fda0f877310b20dfab7eb367ed8e5938319b56974740ce091e25d8","impliedFormat":1},{"version":"a2402b4718af3ccecab58527d4d08a3513139fd77e39c50a8709da231f811234","impliedFormat":1},{"version":"a30b2cdc6c8cbe3fafdcd9cfc0a4b65d2a64c5852928bdbe0f5415f9f9941227","impliedFormat":1},{"version":"f986b7ecea2f344e0631b5868ab5aba6a345ec4f2bdd4f57f4b1597917d301dc","impliedFormat":1},{"version":"53c01d8e4aef098504abb86b6b2c0576797b7e5b063561e1c0032e2aa7dd1748","impliedFormat":1},{"version":"96af85576e4e6074d39c444309efb64385b01d3d5be233b6d501cc99e0650176","impliedFormat":1},{"version":"ac98edc5d2020c5e07c289a2cf687738f6fd8324846b502c179f586c1becbd02","impliedFormat":1},{"version":"3c250bd417eb5ecd56e4e444c03ed0749ea45523b50d72bb167afcd1b9b322f2","impliedFormat":1},{"version":"1676e4bfb9877b82fa49dc4b9c492c577f6127b3333a69c040fcad9940c0d0dd","impliedFormat":1},{"version":"4019dcc9e642493c875732ddb4cb2cb88b17673640eb086415e202263b6251c7","impliedFormat":1},{"version":"ba4a783ce37fe9d2e5cdb040d164ea0784cdc2f14da71441a7571d49cec2eddd","impliedFormat":1},{"version":"e539160e8fd6e8b3141b99ffa7a36518f1c2bd7f1244284b91fe5ee525c38db3","impliedFormat":1},{"version":"19f169d0abd8c407f34d9b32ee1edc6ce0ccc305462a000cbcf15fe69b957ace","impliedFormat":1},{"version":"363358f37156bf1a91585a02200add4ac26c28272380e646e2365dd67b0e4fca","impliedFormat":1},{"version":"7a14e025295877be2627c5fa52b0b7e8d1433ae1959192736cc525f5bc58b244","impliedFormat":1},{"version":"1027439d05a850b9a51146367ed238918fee2fd45a9b65c78432d01c411a3ee8","impliedFormat":1},{"version":"9f27d5d9e313e4c4b90378ce7051ca8c8ce4b2b0ab81d1af356b1dba3acf86e7","impliedFormat":1},{"version":"c6f43b7986eddef776f0e4eaff0c379a36f5306e671b44fada4262e897a2382b","impliedFormat":1},{"version":"b25c77a1995f1e7d0e89633a92e26053612606edaa2139c30f9e19043c7d817a","impliedFormat":1},{"version":"37aba964cc339f1fb4afdb38f7f9202bc8a522025bb337d6bb54f9c58c37a184","signature":"13136a1e515dbcd55b1ab196376a7ed2b7e51f2935f864bb8aba052b47b09107","impliedFormat":99},{"version":"908217c4f2244ec402b73533ebfcc46d6dcd34fc1c807ff403d7f98702abb3bc","impliedFormat":1},{"version":"1bc5991c91bf4be8b59db501ed284a34945d95abe9b7451d02ea001f7c5621a9","impliedFormat":1},{"version":"d8b8a5a6bf623239d5374ad4a7ff6f3b195ab5ee61293f59f1957e90d2a22809","impliedFormat":1},{"version":"35d283eca7dc0a0c7b099f5fbbf0678b87f3d837572cd5e539ba297ad9837e68","impliedFormat":1},{"version":"1c8384a195a2d931cf6e2b8f656acf558ca649a3f74922d86b95889f49a7f7c5","impliedFormat":1},{"version":"cd11655f57a3558dfcee05a6e78c026f9dfd30535eaf124439c5e88a5617359b","impliedFormat":1},{"version":"6052e724c38cd06d209f64f53f5fa646f50bef63239a64bb9624058f0291f473","signature":"c9d0a1be1b941e1642b83123154ccf3bd79870ecd69fdfba597fe92c7848e1ea","impliedFormat":99},{"version":"d2b353911ef2eb07d8884e837a9f28b2f9969b8b7404c4a81358aeea40637324","signature":"51c16a3c3db744c2cc5f6aaf7733c253df2394af647001cfb62c725dfc80e9aa","impliedFormat":99},{"version":"f634e4c7d5cdba8e092d98098033b311c8ef304038d815c63ffdb9f78f3f7bb7","impliedFormat":1},{"version":"d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","impliedFormat":1},{"version":"b542939a35357458e62f8229c2d7578ae888d63d3ab837395d7bb8a3064c205e","impliedFormat":1},{"version":"3a5af4fba7b27b815bb40f52715aedebaa4b371da3e5a664e7e0798c9b638825","impliedFormat":1},{"version":"8485b6da53ec35637d072e516631d25dae53984500de70a6989058f24354666f","impliedFormat":1},{"version":"ebe80346928736532e4a822154eb77f57ef3389dbe2b3ba4e571366a15448ef2","impliedFormat":1},{"version":"49c632082dc8a916353288d3d8b2dc82b3471794249a381d090d960c8ceac908","impliedFormat":1},{"version":"f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","impliedFormat":1},{"version":"71addb585c2db7b8e53dc1b0bcfa58c6c67c6e4fa2b968942046749d66f82e7e","impliedFormat":1},{"version":"c76b0c5727302341d0bdfa2cc2cee4b19ff185b554edb6e8543f0661d8487116","impliedFormat":1},{"version":"25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","impliedFormat":1},{"version":"0320c5b275beb43649be5a818dfa83a2586ae110ac5bbb2c5eb7184e1fe3ca60","impliedFormat":1},{"version":"f5ef066942e4f0bd98200aa6a6694b831e73200c9b3ade77ad0aa2409e8fe1b1","impliedFormat":1},{"version":"b9e99cd94f4166a245f5158f7286c05406e2a4c694619bceb7a4f3519d1d768e","impliedFormat":1},{"version":"5568d7c32e5cf5f35e092649f4e5e168c3114c800b1d7545b7ae5e0415704802","impliedFormat":1},{"version":"c3ac4073e3433269d02b2e21a7eabdb5a246132293223975ba7a0759714f5539","signature":"6cde45c8bcd824e23b1261d985f5604fcc685951d4da0a50d5f4f50446834e19","impliedFormat":99},{"version":"381cc6c4dc7c3830be2365bcf74a5b594db30610ee7608706fb9bba50c0f0a24","signature":"ea2d7670113d58c53d86e72b39009bcf988da16aa8d4be2b101df6a38b42bbd4","impliedFormat":99},{"version":"37979247476904df902d99dd5426b0fab0dddc0f7123d1b32c825c48d738f408","impliedFormat":99},{"version":"c3a7275f21ca73b8f7bb1703dc5697fa252dc93eb13198b8545035f6807edf7d","impliedFormat":99},{"version":"11aee58fd698f65c2738a501b4579738f2167b7de75c9cafba7f8830a8b4073f","impliedFormat":99},{"version":"d5183f62df15ca095d22927140f58e1371f64ecdfec68b89f348266556177778","impliedFormat":99},{"version":"47c5f3c3c7df119d676fec1c1b2652c00aed4752c6f653bc1e106f12fc56e13d","impliedFormat":99},{"version":"481c0c649f045a02f73c4d8f6ea50f5248d10c7c5b92fa254083fd5a66435527","impliedFormat":99},{"version":"4f44f3875c9b21751bef0e3cba284796f3c426f88609bcdff5941199a0b70316","impliedFormat":99},{"version":"b0ac99232e48062d537a6e6bbab579d8b42a9b06c167376e098e071dd03879e2","impliedFormat":99},{"version":"dbd663ccdb4728295a40df75be385a47437417a40c6ce74b99ccce36c3d3ceb7","impliedFormat":99},{"version":"8e295e320f6ad67b38587173ab3c32facd9b853b6c681a329bfc9ac55ba100ab","impliedFormat":99},{"version":"ad9239735898aa8a567a12166c0cb9013a3bcc167a31fae146df0fef5fdf4e1d","impliedFormat":99},{"version":"b138ef3b7896286e37a3c7a6ab42ac069ebdde798d752f241cf7c0e830a1f1f8","impliedFormat":99},{"version":"fd99ee21416d6acd8e699d57d1abafc9d6f5090b80d95886fd16862e8c0c248c","impliedFormat":1},{"version":"38a3174bfa61a3b954898949c13722fb183b7c0edd8ca8acdf8e9e766ba90699","impliedFormat":1},{"version":"5dac25efb383927ec276635632c07136da2c74da3e9b5668c98c53284232769d","impliedFormat":1},{"version":"e2d9e98763ee5a3de54100457b4fdacdaf58f88a68992a560947baec716c1ce8","impliedFormat":99},{"version":"f2b0a3838b886507db4027da17836eddb8f06420c9e830897d2e91537675fb5e","impliedFormat":99},{"version":"fc3635aa0ab405dc2e5392f06238a0ad6346bca37280a1b4bc028fa4f2c977da","impliedFormat":99},{"version":"62036dd40a45a1e2d307080a2a97f99c1e1312fce637df64ee8bc0da2a6ef157","impliedFormat":99},{"version":"7247ccff09a3e0fda8bb8e03ef6d6a6a3542262f1ed4f1c588b223f7651ef2ec","impliedFormat":99},{"version":"1a7266a7e89fad422c32c074f73dc3c826b4cb353e5dc3805961b42f475628c1","impliedFormat":99},{"version":"23f6480345199aa90964c2b130add3b097e2d8a7ddca4fc8f131cd4f448b1553","impliedFormat":99},{"version":"03c199ce8d885d406ac286f77f877d877745c11d5fbf8f5a635c32268055f2db","impliedFormat":99},{"version":"8912b0dbf0917f4863adfde41dc0842bd6a843e28ab0ef041da45687357b55dc","impliedFormat":99},{"version":"f9bba04ed649bcdcc072d7ed571854c6f079a50db047103bc094bd3eaf239c32","impliedFormat":99},{"version":"fc5fd99f0167cfa49bd3ce0adc652e4417ce34ab7c317b97c6b79a50c287579e","impliedFormat":99},{"version":"c90b3934810c214e19c0097264adc6865b884d831f663493249278f8e81d725e","impliedFormat":99},{"version":"e79340889b4a8d4740980a9d300058aa9873575bd08fd799efa8021f6df3da0a","impliedFormat":99},{"version":"86c57546cfe47f71778c110a6fd60efd620f94ade5d538d2602a022cab3aeacc","impliedFormat":99},{"version":"429a6d79ccd136f62626373f9fcb5eacc075a25558843df9a26f7872d8e257c4","impliedFormat":99},{"version":"c44549736654140145d3307f0d03a96ae44c3401d7798248ad45d72b634148ed","impliedFormat":99},{"version":"6ca438bf1f2b17e5e15dd8502111f5a3ceecbec4f4e3f28a7dbde69aa96a3966","impliedFormat":99},{"version":"e4935eb53ab390e6655a38fa130bbfb52e694b08d5b7854d39254f7fd1858a2a","impliedFormat":99},{"version":"573e2f51edb181f0752a5c9915b8e47616d95c8b5cea6ac995d98dad17c21ecb","impliedFormat":99},{"version":"f9f010f9324249fe83a34e02456a17f1c4cd5b4caacff8c73a8f0de1c3a78518","impliedFormat":99},{"version":"e873c345d28cc490891adcfcbac3f14e1340dd66c434eb2572b439c613623f1a","impliedFormat":99},{"version":"1eab52967e01ec25e0977ff1a3ee80c44ecba33a2dc892684718d9e0252d93a4","impliedFormat":99},{"version":"03c199ce8d885d406ac286f77f877d877745c11d5fbf8f5a635c32268055f2db","impliedFormat":99},{"version":"acd1d91c1c6490e03ea0e6c68d8ca1c6dd953ff4e9cc46d58a27a2afe786eac6","impliedFormat":99},{"version":"2d859841667f147d4e79b5dc4112bd5b7ba6317fb18afe0b3260122580c7f113","impliedFormat":99},{"version":"6b9d6d0cd6c2af9f148e2286c56f412c5489966c4bfa39299235f9aef4168bf1","impliedFormat":99},{"version":"19f2bd84edf638cd5b978c5072f9fde124c5f6ae0900fb90bdcbd6f96011d183","impliedFormat":99},{"version":"b23d4dd7bfc561f384e5bbdf85e055e7eaaf193568e1cfec339dc3c28997c516","impliedFormat":99},{"version":"ebf4f8dc104dc28452e1374432c961fdeb7c38c16108c281cdbfd5ee1cc130a1","impliedFormat":99},{"version":"e367866ce860c4a2ed417e460bda384b1632b34da6013b5523500651232e1f14","impliedFormat":99},{"version":"9278b991d3d7f2856299c089c709b97f6a6366373ee04530197271540c778020","impliedFormat":99},{"version":"e7eb1a6927a98c3a0b021bedb9210439d759332d7f453c7d41250b5b46fd1a13","impliedFormat":99},{"version":"a49ce7d37cc28aeead2513f71c108d6b8180f7399adcf690361ed543caa4f30b","impliedFormat":99},{"version":"80ee1db7aae3dd74c34c3ef38437fc8d9f14e42b6e1088dd6d3ec0cb38241b42","impliedFormat":99},{"version":"f5bb686686ec52ab181604c752f6f026d23c36f4f76c3db4bd8f6ace3d4786c3","impliedFormat":99},{"version":"2fb2c7a261869e0d47cb0adddbe4619cfde3adbedb9a628e82a19217510901ad","impliedFormat":99},{"version":"639dae9bf2f59b6ff9ff57094a1807404bc90345ac6cbc8a48dbc6a9f2c1e735","impliedFormat":99},{"version":"498f879ade3b3f24792aef2bfc79987864ed89a65e2e04ef485dbfbcb0a7873e","impliedFormat":99},{"version":"f8137b20b7f1ddc85385334eed959756b1e6083320b8b6e45014d20011d6ff65","impliedFormat":99},{"version":"13e39f3973429d65efab2c36090c4b2ecf5d0582362c417d56194fb2482aefc5","impliedFormat":99},{"version":"d734e2a30ba9d1ebb1b5d2c5ac1085aa4fc2ac674d4805ebc99449160326aaaa","impliedFormat":99},{"version":"ddf603708d0af879dad21b894f2ac2d67f8d3aa1f0effc88e111fae8d96790a9","impliedFormat":99},{"version":"b3989fd4066cd0e85631f8b21a579b90e90c3c7a1c2b2a52db878bc0308ce08c","impliedFormat":99},{"version":"52bfce62882a210099fd039edbbcefacfa759979379489e244d44180dcad559b","impliedFormat":99},{"version":"b4f36243e14916f5787cfba214d8a45e36f3db5814f9c1a7c3bb630b37f3d394","impliedFormat":99},{"version":"519691f385f5a11fe4545e97b410017b465ba1f7e5e5dd0b3dba5f1a10806df0","impliedFormat":99},{"version":"0371bb7d1a232c1750740cd7e96f9c2c76ae9e1250058340094db2a32dc86450","impliedFormat":99},{"version":"91b905baa8bfe3c08a7feff53b74504c17a454bbfc0fca747252937eadf27c22","impliedFormat":99},{"version":"990cf1c03da8f409b47567563fcd081496ddb0205f879fe4127120675e9244fa","impliedFormat":99},{"version":"a6d2eb77f390448a229ca63b4adadbcc549d203b8c038f1f7627a118f732969d","impliedFormat":99},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"3515c7e1fec1ae522fb06bb5ab9d9af3a6b339b0c174594d7c38aff0c8c1ccc0","impliedFormat":99},{"version":"2d4d2fbf41577644a05c8d8ae3f0165398a27ac8f2b5566913b9226175e1882d","impliedFormat":99},{"version":"a55b96962f933590079e770300f5fe4b08cb2b83702cb6359a7ad9feb7f5f0db","impliedFormat":99},{"version":"8a417ef86c98bafdee6923a3efc6ec1d18625c3785baeac44274aa02ecbfa178","impliedFormat":99},{"version":"1ecd96b8b3ee6961c4945c49707a67f6611d35d212029be47477a372e98705a9","impliedFormat":99},{"version":"b642b6a4b9b670338bc50281a6dd192fb7cc0b2f9d63d38c250bb1f02e828bbc","impliedFormat":99},{"version":"20668abd21332980c0501ca9f4da3e907b7b83a918153affc90eb02b58ed3f5c","affectsGlobalScope":true,"impliedFormat":99},{"version":"5c6866d944dff619a9b2c281515f580b6ca25364fcdda5222e3d8cf29a061813","affectsGlobalScope":true,"impliedFormat":99},{"version":"ba3c6c7d58ff9cf885dfa82d96c9c33b93a00142f25f600e6c4875133f06404b","impliedFormat":99},{"version":"9b77eb2fb4cd8e8f5d23204ff5d7805926ead1456753f7b98818b06bbfbc0e25","affectsGlobalScope":true,"impliedFormat":99},{"version":"796cae04d67b69364495adaf55da84a798f9fbc39cfe8a8230e351ea70627dbf","impliedFormat":99},{"version":"84d08410e50fc91d56eceeeda30be82cb53bb433c29f877037ebbd6b41054a51","impliedFormat":99},{"version":"1a25e07c204e0a24766803e5d59638befb977212ebde7885c5d3bf4a2c276fe7","impliedFormat":99},{"version":"0a8b101469af9d824c7dbc6a64435c19d59a35a8fc3d16674eb8490c086bcaf8","impliedFormat":99},{"version":"95250b697f49d0a1e543dce87cfd9169485a079155427031a0153fb89f2f29cd","impliedFormat":99},{"version":"444a79958124b22f14da3c2c81eb236995e0bb472a13cae4e4811bff8b924744","impliedFormat":99},{"version":"9062fc64bdd804b550ad4bc07a568070e19be017d3a8cb2b28b260692820b6c7","impliedFormat":99},{"version":"53a5fb070b7ff526d36d9c6f8d325d15604812fe9ed7e386d92cc8b3fd598f2e","impliedFormat":99},{"version":"32aa6792781afa5512308572c50858a520bc4c07a0a32eab5d6b64866ce61c2c","impliedFormat":99},{"version":"38b1396af9ea71616c6f2988e63232dfe3cc241622e6618d74a5b00563831f89","impliedFormat":99},{"version":"b9610305b358c5f97a51fc0f0cb48e3fff9050618ecfc0ef4091e118a05f128d","impliedFormat":99},{"version":"07891617f48117b1107a58ea66db7e1f72561214a0847cd962dd3e9cb92e9bb5","impliedFormat":99},{"version":"80c655d77c7a3efaaa7fed24e28b685dd47a08d9dfd2d61ddfa763f9954301a1","impliedFormat":99},{"version":"72cd285619fabe5b83018da4a2cdbeb0758ffe25095a9d51e8bb6199b0421954","impliedFormat":99},{"version":"e083c2ecb5a324fb08e9bc193f13f8eca26757b6138c5f7b78ea018973ab25a5","impliedFormat":99},{"version":"9b252668d308847945aa0badd750632271c1412bd40ee98f2f51e357e4f04c3a","impliedFormat":99},{"version":"19960734d1c8e936d99c1274049a0d0c90854d93a95dba75a68d3d200750bea4","impliedFormat":99},{"version":"9a41a97a8dc48cc3a12eeaea1604e0b12522ff303eeb3b0cf5694a50fb7b8f43","impliedFormat":99},{"version":"e38f5536bd7c6fdad6b88f428bf4d441299af657d73c88806d2aa7f5501639c2","impliedFormat":99},{"version":"aed5a5d156911b40291752a142469406519b299fb4389ed97011a71fb0e2ac05","impliedFormat":99},{"version":"667bf14ac8a0917c4b300729cb87a26739038f97f8b5480c52f0ba3300b32665","signature":"07e7407f97da9edc1fec99b3924e1c42adbadef4c2b0f89ad26f06b7ca3b7baa","impliedFormat":99},{"version":"a5890b15fb943a1bd23e09d2b14bf32eb14bee4615cf4605a78ae5c4210d9049","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881","impliedFormat":99},{"version":"dd9d364180663a8728e097f8023f575da6ffeefae31fc87ff161ac90e82bf58d","signature":"30af5c243c1bcb49cff0998c5a9e3c0fbd3fd0cb5d56971d4df93bb2c37439d7","impliedFormat":99},{"version":"87f287f296f3ff07dbd14ea7853c2400d995dccd7bd83206196d6c0974774e96","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"936eb43a381712a8ec1249f2afc819f6fc7ca68f10dfec71762b428dfdc53bf1","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"10e4fe0ed6c6c5a6e411b79c6796f27107bd960f9c4e58207e0c46ab40411876","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"6847334317c1bc1e6fc4b679b0095bbd2b6ee3b85fe3f26fc26bac462f68ef5e","impliedFormat":1},{"version":"2224f3072e3cc07906eeed5c71746779511fba2dd224addc5489bcdb489bdee5","impliedFormat":1},{"version":"fbf802b3a028f5eb22ad406ee5fc7c368f0acfd3a2a6d0f805120766f5717ec8","impliedFormat":1},{"version":"0504070e7eaba788f5d0d5926782ed177f1db01cee28363c488fae94950c0bbc","impliedFormat":1},{"version":"7e8d3f08435ad2cefe67f58182618bfc9a0a29db08cf2544b94cbcae754a9bd9","impliedFormat":1},{"version":"8cf9b9045a614f883b623c2f1a631ec6a93321747e933330b2eec0ee47164a34","impliedFormat":1},{"version":"cee62e64fc4bdfb3798ab8e21486fadd2027ce4128349989acc63905366f91c5","impliedFormat":1},{"version":"643976e0b3d579304eafdb817bffc5b33bd8f99636ba9f5ee7a8d33288c1ae94","impliedFormat":1},{"version":"03e266e412f1494d4288de426268bcee43d54f47d79e09d523f28820c6aea823","impliedFormat":1},{"version":"6edfadf457598d5975d209cda1f13597ca9e124bfffeeff80e1113755612573c","impliedFormat":1},{"version":"18730c5231e656317c093558b3467d2a3b357ffc45b4e56509c98fce5a775629","impliedFormat":1},{"version":"ddf1583910fd15a1f990c6288a64748f171710ad73e9e0efa7184dc8b33a3682","signature":"7291eb26a29fa3294cf616420da5f40a54aa36c00311da3757784ee6f6adddef","impliedFormat":99},{"version":"a39db87a3a3aa954ac3f6553b9fbfc642eb22bef7586cc1f0559e676aa073fa8","impliedFormat":1},{"version":"6000f350e1ff2ffcb895ac216cbf1e33c309424feb09227685558b3c3a16e960","impliedFormat":1},{"version":"42b4502b58a2f590858ad6f7a9e7eaca58c8d6e8881dead672f3589cfd360002","impliedFormat":1},{"version":"60a00e948199a2aceec07044df812d80c067459c2b6a1dea1424088d78b5318d","impliedFormat":1},{"version":"60eaf380e7bfed4e2801eca9062b16e5462003986f8c6c19cc671169fce33af6","impliedFormat":1},{"version":"7dfb09e82895e87c2b950b9406f6aa1c28e817144e341d13603c2ec58f67e454","signature":"b774e655c4a19e389bfc3c1e3bcb2efe6373f48d242241c27c88bd3c19bd9333","impliedFormat":99},{"version":"82b796454c4be2e90d5ab79aa61ff6f5b41dbdd5b3227568635505523dda7faf","signature":"99fc745cb339de5c7cf0dac75d7cb58605f8ffcee526c3b973e870eeececb2d1","impliedFormat":99},{"version":"3e80082fa7b726ef0943b495ab80416d6e369579135325cac451da396c1bd4af","signature":"afce3a91b05d65ef13e5f9a5dba1ce11b3e2ddf0bb6f42882d9a0247bb883d0c","impliedFormat":99},{"version":"df1533b2ea249e65709ea0f10f8b7a54ad73b7c944f1f54ab5acc647978e1b1b","signature":"41356a6fad609592e9283c6a0980b718e31e3702563d27c8cc035f6c6795563e","impliedFormat":99},{"version":"09deb50731ebfd79094c02da38f07651c2535b71c68acfa283578f9d391bfd68","signature":"f00ef5141de7b533dc4929d43520d2f5c0c022e2bf6ecd7c55f89f3248fdbbdd","impliedFormat":99},{"version":"7ec7e31f5bb2da2916c1b0ce55ed1a164d29d8b01807c838efe297bf5c5859c8","signature":"e97500b10a034372dce5866b422b159600f002450c9c5947fdc1a981bc6174de","impliedFormat":99},{"version":"bc700ddb463b7a8e4eba98e2ae87705c5291d9e8f381d4e2b419a0564c1a8e41","signature":"96d0c51d3caba29db1c36f5802a9b9b0838c1a3a70feb9dbdce8ce63bef2d798","impliedFormat":99},{"version":"ad04a0db42b031c99a1fd917600a534c6012695447b0cc92e32be077d590338d","signature":"2b789fb811072b20ee3002306f94edb1c91e4449cc7dc53e5bbf2865b38e8055","impliedFormat":99},{"version":"ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","impliedFormat":1},{"version":"78ef0198c323d0f7b16f993ada3459f0e7e20567e7f56fe0c5ee78f31cb0840c","impliedFormat":1},{"version":"01dea450d742aa55ce9b8ab8877bbda8eb73bf88609e440cc34f6f59f35080db","impliedFormat":1},{"version":"5ec614ed82e045de15417a47e2568be5310d43d4764ee43d295ea38caafbfd17","impliedFormat":1},{"version":"b788ef070e70003842cbd03c3e04f87d46b67a47b71e9e7d8713fd8c58c5f5ec","impliedFormat":1},{"version":"583d365dc19f813f1e2767771e844c7c4ea9ab1a01e85e0119f2e083488379c2","impliedFormat":1},{"version":"b82fc3869c625b828dd3feac4b5ebf335ed007d586dc16176602db73bc4e7c65","impliedFormat":1},{"version":"05e30605274c26f405c411eebed776fa2102418c05beec885e5c9bd0fa716f32","impliedFormat":1},{"version":"58c7f7820dc027a539b0437be7e1f8bdf663f91fbc9e861d80bb9368a38d4a94","impliedFormat":1},{"version":"d67d6b779d0dece9450d7a4170d3ee58ea7fcae0af2ab5e1d0ad711474b4f7f5","impliedFormat":1},{"version":"1066c11177d085898185548e1b38ed15fcea50061508f7c313ab8bec35d46b95","impliedFormat":1},{"version":"bbc49fd9dc6ee162ba3d270c834398e0c1d44e657ac4edfa55ac837902b7e0da","impliedFormat":1},{"version":"6993f360de4984b6743764fad3b88246d5dc6cfa45567783fc23833ad4e50c13","impliedFormat":1},{"version":"f11eb1fb4e569b293a7cae9e7cdae57e13efc12b0e4510e927868c93ec055e82","impliedFormat":1},{"version":"715682cddbefe50e27e5e7896acf4af0ffc48f9e18f64b0a0c2f8041e3ea869b","impliedFormat":1},{"version":"6d2f5a67bfe2034aa77b38f10977a57e762fd64e53c14372bcc5f1d3175ca322","impliedFormat":1},{"version":"4ff4add7b8cf26df217f2c883292778205847aefb0fd2aee64f5a229d0ffd399","impliedFormat":1},{"version":"33859aa36b264dd91bef77c279a5a0d259c6b63684d0c6ad538e515c69a489ec","impliedFormat":1},{"version":"33fa69f400b34c83e541dd5f4474f1c6fb2788614a1790c6c7b346b5c7eaa7dd","impliedFormat":1},{"version":"be213d7cbc3e5982b22df412cf223c2ac9d841c75014eae4c263761cd9d5e4c0","impliedFormat":1},{"version":"66451f9540fdf68a5fd93898257ccd7428cf7e49029f2e71b8ce70c8d927b87a","impliedFormat":1},{"version":"8a051690018330af516fd9ea42b460d603f0839f44d3946ebb4b551fe3bc7703","impliedFormat":1},{"version":"301fb04ef91ae1340bec1ebc3acdd223861c887a4a1127303d8eef7638b2d893","impliedFormat":1},{"version":"06236dfec90a14b0c3db8249831069ea3f90b004d73d496a559a4466e5a344a4","impliedFormat":1},{"version":"fc26991e51514bfc82e0f20c25132268b1d41e8928552dbaed7cc6f3d08fc3ac","impliedFormat":1},{"version":"5d82bb58dec5014c02aaeb3da465d34f4b7d5c724afea07559e3dfca6d8da5bc","impliedFormat":1},{"version":"44448f58f4d731dc28a02b5987ab6f20b9f77ad407dcf57b68c853fe52195cd7","impliedFormat":1},{"version":"b2818e8d05d6e6ad0f1899abf90a70309240a15153ea4b8d5e0c151e117b7338","impliedFormat":1},{"version":"1c708c15bb96473ce8ec2a946bd024ecded341169a0b84846931f979172244ba","impliedFormat":1},{"version":"ed0f5e1f45dc7c3f40356e0a855e8594aa57c125a5d8dfeef118e0a3024f98ff","impliedFormat":1},{"version":"dc187f457333356ddc1ab8ec7833cd836f85e0bbcade61290dc55116244867cb","impliedFormat":1},{"version":"25525e173de74143042e824eaa786fa18c6b19e9dafb64da71a5faacc5bd2a5c","impliedFormat":1},{"version":"7a3d649f2de01db4b316cf4a0ce5d96832ee83641f1dc84d3e9981accf29c3a1","impliedFormat":1},{"version":"26e4260ee185d4af23484d8c11ef422807fb8f51d33aa68d83fab72eb568f228","impliedFormat":1},{"version":"c4d52d78e3fb4f66735d81663e351cf56037270ed7d00a9b787e35c1fc7183ce","impliedFormat":1},{"version":"864a5505d0e9db2e1837dce8d8aae8b7eeaa5450754d8a1967bf2843124cc262","impliedFormat":1},{"version":"2d045f00292ac7a14ead30d1f83269f1f0ad3e75d1f8e5a245ab87159523cf98","impliedFormat":1},{"version":"54bcb32ab0c7c72b61becd622499a0ae1c309af381801a30878667e21cba85bb","impliedFormat":1},{"version":"20666518864143f162a9a43249db66ca1d142e445e2d363d5650a524a399b992","impliedFormat":1},{"version":"28439c9ebd31185ae3353dd8524115eaf595375cd94ca157eefcf1280920436a","impliedFormat":1},{"version":"84344d56f84577d4ac1d0d59749bb2fde14c0fb460d0bfb04e57c023748c48a6","impliedFormat":1},{"version":"7700b2fe36a1f602829b7d6fa21be7aa8ef58b4e765ba26510c098de83f0835b","impliedFormat":1},{"version":"66738976a7aa2d5fb2770a1b689f8bc643af958f836b7bc08e412d4092de3ab9","impliedFormat":1},{"version":"35a0eac48984d20f6da39947cf81cd71e0818feefc03dcb28b4ac7b87a636cfd","impliedFormat":1},{"version":"f6c226d8222108b3485eb0745e8b0ee48b0b901952660db20e983741e8852654","impliedFormat":1},{"version":"93c3b758c4dc64ea499c9416b1ed0e69725133644b299b86c5435e375d823c75","impliedFormat":1},{"version":"4e85f443714cff4858fdaffed31052492fdd03ff7883b22ed938fc0e34b48093","impliedFormat":1},{"version":"0146912d3cad82e53f779a0b7663f181824bba60e32715adb0e9bd02c560b8c6","impliedFormat":1},{"version":"70754650d1eba1fc96a4ed9bbbc8458b341b41063fe79f8fa828db7059696712","impliedFormat":1},{"version":"220783c7ca903c6ce296b210fae5d7e5c5cc1942c5a469b23d537f0fbd37eb18","impliedFormat":1},{"version":"0974c67cf3e2d539d0046c84a5e816e235b81c8516b242ece2ed1bdbb5dbd3d6","impliedFormat":1},{"version":"b4186237e7787a397b6c5ae64e155e70ac2a43fdd13ff24dfb6c1e3d2f930570","impliedFormat":1},{"version":"2647784fffa95a08af418c179b7b75cf1d20c3d32ed71418f0a13259bf505c54","impliedFormat":1},{"version":"0480102d1a385b96c05316b10de45c3958512bb9e834dbecbbde9cc9c0b22db3","impliedFormat":1},{"version":"eea44cfed69c9b38cc6366bd149a5cfa186776ca2a9fb87a3746e33b7e4f5e74","impliedFormat":1},{"version":"7f375e5ef1deb2c2357cba319b51a8872063d093cab750675ac2eb1cef77bee9","impliedFormat":1},{"version":"b7f06aec971823244f909996a30ef2bbeae69a31c40b0b208d0dfd86a8c16d4f","impliedFormat":1},{"version":"0421510c9570dfae34b3911e1691f606811818df00354df7abd028cee454979f","impliedFormat":1},{"version":"1517236728263863a79500653cc15ceb286f048907b3dba3141a482ca6946bd7","impliedFormat":1},{"version":"7c7b418e467a88a714b4c6dac321923b933f82875f063f48abf952021a2c2df1","impliedFormat":1},{"version":"33120063a7e106818ce109be9238569edca74d4e8530f853bd30d298d1375fd8","impliedFormat":1},{"version":"0f5c16de9a1bdb69d07047f3a67dcdd76fbda3dbbcfc4358b0496d9910d54e18","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"f629e3d8a7d0f76967b1e873d4474dbfc2fdb8c09f82e224b88b7a981b817099","impliedFormat":1},{"version":"f8a6bb79327f4a6afc63d28624654522fc80f7536efa7a617ef48200b7a5f673","impliedFormat":1},{"version":"8e0733c50eaac49b4e84954106acc144ec1a8019922d6afcde3762523a3634af","impliedFormat":1},{"version":"37da3671586f0270f6b0772348f39a6e637a0ca9faf2a5dba0791df74ae8de6b","impliedFormat":1},{"version":"36a2e4c9a67439aca5f91bb304611d5ae6e20d420503e96c230cf8fcdc948d94","affectsGlobalScope":true,"impliedFormat":1},{"version":"51409be337d5cdf32915ace99a4c49bf62dbc124a49135120dfdff73236b0bad","impliedFormat":1},{"version":"8baa5d0febc68db886c40bf341e5c90dc215a90cd64552e47e8184be6b7e3358","impliedFormat":1},{"version":"6d09838b65c3c780513878793fc394ae29b8595d9e4729246d14ce69abc71140","impliedFormat":1},{"version":"7d2b7fe4adb76d8253f20e4dbdce044f1cdfab4902ec33c3604585f553883f7d","impliedFormat":1}],"root":[79,263,273,274,529,536,537,553,554,[651,653],676,[682,689]],"options":{"allowJs":true,"checkJs":true,"declaration":true,"esModuleInterop":true,"module":199,"outDir":"./dist","rootDir":"./src","skipLibCheck":true,"sourceMap":true,"strict":true,"target":99,"verbatimModuleSyntax":true},"referencedMap":[[291,1],[287,2],[285,1],[286,3],[288,4],[289,5],[290,6],[356,1],[357,7],[358,1],[359,1],[361,8],[360,8],[368,9],[362,10],[363,11],[365,12],[366,13],[364,14],[367,12],[297,1],[298,1],[299,1],[300,1],[301,1],[303,15],[304,1],[305,1],[307,16],[308,1],[309,1],[310,16],[311,16],[312,16],[313,1],[314,1],[315,1],[316,1],[317,1],[318,1],[319,1],[320,1],[324,17],[321,1],[322,1],[323,1],[302,1],[306,1],[346,18],[345,19],[347,20],[579,21],[578,22],[586,23],[583,22],[584,24],[585,1],[592,25],[591,26],[577,27],[576,22],[639,28],[638,29],[560,30],[555,1],[556,1],[559,31],[557,1],[558,31],[641,32],[645,33],[644,32],[642,34],[643,1],[648,35],[646,36],[563,1],[562,37],[650,38],[649,1],[647,1],[561,39],[571,22],[589,40],[582,41],[581,42],[580,22],[564,1],[566,43],[565,44],[632,45],[599,46],[633,47],[615,48],[616,1],[570,49],[640,50],[618,34],[617,51],[636,1],[637,52],[598,53],[631,54],[594,55],[600,56],[604,57],[593,58],[601,59],[590,60],[596,61],[603,62],[602,63],[635,64],[634,1],[597,22],[595,65],[588,66],[587,67],[613,1],[610,34],[607,68],[611,34],[614,69],[612,70],[609,71],[605,34],[606,72],[608,1],[572,1],[575,73],[573,74],[574,1],[568,22],[569,75],[567,1],[272,76],[269,77],[270,78],[294,1],[292,1],[293,79],[336,80],[334,80],[335,79],[337,81],[523,82],[522,83],[521,84],[370,1],[371,1],[392,85],[390,86],[389,87],[391,88],[398,89],[396,90],[400,91],[397,92],[377,92],[447,93],[378,92],[399,89],[405,94],[403,95],[404,96],[410,97],[408,98],[407,99],[409,98],[416,100],[424,101],[418,102],[417,103],[419,104],[420,105],[414,106],[413,105],[415,107],[422,108],[423,105],[421,109],[429,110],[430,111],[432,112],[433,113],[436,114],[437,115],[444,116],[443,117],[442,118],[439,118],[441,119],[448,120],[449,121],[450,122],[383,123],[451,124],[453,125],[454,126],[458,127],[456,128],[457,129],[460,130],[462,130],[464,131],[463,132],[465,130],[466,133],[471,134],[467,132],[468,132],[469,132],[470,132],[475,135],[476,136],[474,137],[481,138],[482,139],[480,140],[479,141],[484,142],[485,143],[490,144],[488,145],[491,146],[487,147],[494,148],[495,149],[384,150],[499,151],[497,152],[498,153],[501,154],[387,155],[502,156],[386,157],[504,158],[506,159],[505,160],[524,161],[514,162],[388,163],[516,164],[515,161],[510,165],[511,166],[512,167],[513,166],[428,168],[518,169],[519,170],[525,80],[526,80],[527,171],[373,172],[369,1],[376,1],[393,1],[401,1],[402,173],[406,1],[411,1],[412,174],[425,1],[426,175],[431,1],[434,1],[435,176],[438,84],[440,177],[445,1],[446,173],[380,1],[372,1],[452,1],[455,1],[459,1],[461,178],[472,1],[473,1],[477,1],[478,1],[483,1],[486,1],[489,179],[492,1],[493,173],[379,1],[496,180],[385,84],[500,181],[503,182],[374,80],[507,1],[509,1],[508,1],[427,1],[517,183],[394,184],[520,84],[381,1],[395,185],[375,1],[382,1],[338,1],[343,186],[341,187],[340,1],[350,80],[351,80],[352,80],[353,80],[354,80],[342,188],[355,189],[344,190],[339,191],[348,192],[349,193],[295,1],[329,1],[330,194],[331,194],[328,195],[327,1],[333,196],[296,1],[325,197],[326,1],[332,1],[654,198],[690,1],[691,1],[692,1],[693,1],[750,199],[694,200],[739,201],[696,202],[695,203],[697,200],[698,200],[700,204],[699,200],[701,205],[702,205],[703,200],[705,206],[706,200],[707,206],[708,200],[710,200],[711,200],[712,200],[713,207],[709,200],[714,1],[715,208],[716,208],[717,208],[718,208],[719,208],[728,209],[720,208],[721,208],[722,208],[723,208],[725,208],[724,208],[726,208],[727,208],[729,200],[730,200],[704,200],[731,206],[733,210],[732,200],[734,200],[735,200],[736,211],[738,200],[737,200],[740,200],[742,200],[743,212],[741,200],[744,200],[745,200],[746,200],[747,200],[748,200],[749,200],[663,213],[751,1],[655,198],[668,1],[271,1],[666,214],[193,1],[660,215],[664,216],[667,1],[661,1],[752,1],[754,217],[665,1],[671,218],[669,218],[675,218],[673,219],[674,220],[670,221],[672,218],[756,222],[755,1],[656,1],[753,1],[139,223],[140,223],[141,224],[99,225],[142,226],[143,227],[144,228],[94,1],[97,229],[95,1],[96,1],[145,230],[146,231],[147,232],[148,233],[149,234],[150,235],[151,235],[153,236],[152,237],[154,238],[155,239],[156,240],[138,241],[98,1],[157,242],[158,243],[159,244],[192,245],[160,246],[161,247],[162,248],[163,249],[164,250],[165,251],[166,252],[167,253],[168,254],[169,255],[170,255],[171,256],[172,1],[173,1],[174,257],[176,258],[175,259],[177,260],[178,261],[179,262],[180,263],[181,264],[182,265],[183,266],[184,267],[185,268],[186,269],[187,270],[188,271],[189,272],[190,273],[191,274],[757,1],[658,1],[659,1],[758,1],[759,275],[760,1],[657,276],[662,277],[530,1],[761,1],[762,1],[254,278],[253,1],[91,279],[86,280],[89,281],[239,282],[80,1],[88,283],[90,283],[82,284],[85,285],[87,286],[81,1],[83,1],[84,287],[230,1],[233,288],[232,289],[242,289],[231,290],[229,1],[100,1],[284,291],[282,1],[283,292],[276,293],[275,1],[620,1],[538,294],[200,1],[259,295],[261,296],[260,297],[258,298],[257,1],[278,1],[280,299],[279,1],[277,1],[528,1],[265,1],[531,300],[264,1],[281,301],[217,302],[215,303],[216,304],[204,305],[205,303],[212,306],[203,307],[208,308],[218,1],[209,309],[214,310],[220,311],[219,312],[202,313],[210,314],[211,315],[206,316],[213,302],[207,317],[195,318],[194,319],[630,320],[621,321],[629,322],[628,322],[619,1],[627,323],[624,324],[622,324],[623,325],[625,1],[626,326],[201,1],[680,327],[679,328],[681,329],[678,330],[677,331],[266,332],[240,1],[77,1],[78,1],[13,1],[14,1],[16,1],[15,1],[2,1],[17,1],[18,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[3,1],[25,1],[26,1],[4,1],[27,1],[31,1],[28,1],[29,1],[30,1],[32,1],[33,1],[34,1],[5,1],[35,1],[36,1],[37,1],[38,1],[6,1],[42,1],[39,1],[40,1],[41,1],[43,1],[7,1],[44,1],[49,1],[50,1],[45,1],[46,1],[47,1],[48,1],[8,1],[54,1],[51,1],[52,1],[53,1],[55,1],[9,1],[56,1],[57,1],[58,1],[60,1],[59,1],[61,1],[62,1],[10,1],[63,1],[64,1],[65,1],[11,1],[66,1],[67,1],[68,1],[69,1],[70,1],[1,1],[71,1],[72,1],[12,1],[75,1],[74,1],[73,1],[76,1],[116,333],[126,334],[115,333],[136,335],[107,336],[106,337],[135,338],[129,339],[134,340],[109,341],[123,342],[108,343],[132,344],[104,345],[103,338],[133,346],[105,347],[110,348],[111,1],[114,348],[101,1],[137,349],[127,350],[118,351],[119,352],[121,353],[117,354],[120,355],[130,338],[112,356],[113,357],[122,358],[102,359],[125,350],[124,348],[128,1],[131,360],[237,361],[238,362],[236,1],[268,363],[225,364],[199,365],[197,366],[196,1],[198,367],[223,1],[267,368],[222,1],[221,1],[224,369],[241,370],[235,371],[92,1],[251,372],[255,373],[243,374],[256,375],[252,376],[245,377],[244,378],[262,379],[246,1],[249,380],[250,381],[228,1],[247,1],[234,283],[93,285],[227,284],[226,1],[248,287],[532,382],[535,383],[533,338],[534,384],[552,385],[541,386],[543,387],[550,388],[545,1],[546,1],[544,389],[547,385],[539,1],[540,1],[551,390],[542,391],[548,1],[549,392],[79,1],[537,393],[553,394],[554,395],[263,396],[273,397],[274,1],[651,398],[652,1],[653,399],[689,400],[682,401],[688,402],[687,403],[684,404],[536,405],[685,406],[683,407],[686,408],[529,409],[676,410]],"semanticDiagnosticsPerFile":[[273,[{"start":66,"length":11,"messageText":"Cannot find module '$lib/i18n' or its corresponding type declarations.","category":1,"code":2307}]],[274,[{"start":21,"length":11,"messageText":"Cannot find module '$lib/i18n' or its corresponding type declarations.","category":1,"code":2307}]],[651,[{"start":25,"length":24,"messageText":"Cannot find module '$lib/paraglide/runtime' or its corresponding type declarations.","category":1,"code":2307}]]],"emitDiagnosticsPerFile":[[651,[{"start":122,"length":4,"messageText":"The inferred type of 'i18n' cannot be named without a reference to '../../node_modules/@inlang/paraglide-sveltekit/dist/runtime/adapter.server.js'. This is likely not portable. A type annotation is necessary.","category":1,"code":2742},{"start":122,"length":4,"messageText":"The inferred type of 'i18n' cannot be named without a reference to '../../node_modules/@inlang/paraglide-sveltekit/dist/runtime/hooks/handle.server.js'. This is likely not portable. A type annotation is necessary.","category":1,"code":2742}]]],"version":"5.7.3"}
</file>

<file path="tsconfig.json">
{
	"extends": "./.svelte-kit/tsconfig.json",
	"compilerOptions": {
		"allowJs": true,
		"checkJs": true,
		"esModuleInterop": true,
		"forceConsistentCasingInFileNames": true,
		"resolveJsonModule": true,
		"skipLibCheck": true,
		"sourceMap": true,
		"strict": true,
		"module": "ESNext",
		"moduleResolution": "bundler",
		"target": "ESNext",
		"paths": {
			"$components/*": ["./src/components/*"],
			"$lib/*": ["./src/lib/*"],
			"$routes/*": ["./src/routes/*"]
		}
	},
	"include": [
		".svelte-kit/types/**/$types.d.ts",
		"vite.config.ts",
		"src/**/*.js",
		"src/**/*.ts",
		"src/**/*.svelte"
	],
	"exclude": [
		"src/server/**/*",
		"src/cli/**/*"
	]
}
</file>

<file path="vite.config.ts">
import { paraglide } from '@inlang/paraglide-sveltekit/vite';
import { defineConfig } from 'vite';
import { sveltekit } from '@sveltejs/kit/vite';
import { fileURLToPath, URL } from 'url';

export default defineConfig({
	plugins: [
		sveltekit(),
		paraglide({
			project: './project.inlang',
			outdir: './src/lib/paraglide'
		})
	],

	test: {
		include: ['src/**/*.{test,spec}.{js,ts}']
	},

	resolve: {
		alias: {
			$components: fileURLToPath(new URL('./src/components', import.meta.url)),
			$lib: fileURLToPath(new URL('./src/lib', import.meta.url)),
			$routes: fileURLToPath(new URL('./src/routes', import.meta.url))
		}
	},

	server: {
		proxy: {
			'/api': {
				target: 'http://localhost:3001',
				changeOrigin: true,
				secure: false
			}
		}
	}
});
</file>

<file path="__mocks__/jest-mock-extended.js">
// Mock for jest-mock-extended
export const mock = jest.fn((obj) => ({
  ...obj,
  _isMockProxy: true,
}));

export const mockReset = jest.fn();
export const mockClear = jest.fn();

export const MockProxy = {
  create: jest.fn(),
};

export default {
  mock,
  mockReset,
  mockClear,
  MockProxy,
};
</file>

<file path="scripts/test-network-optimization.js">
#!/usr/bin/env node

/**
 * Network Optimization Test Script
 * 
 * This script tests the performance of network-related code by simulating network
 * failures and measuring recovery time, resource usage, and stability.
 */

import { spawn } from 'child_process';
import { setTimeout } from 'timers/promises';
import fs from 'fs';
import path from 'path';

// Configuration
const TEST_DURATION = 5 * 60 * 1000; // 5 minutes
const NETWORK_DISCONNECT_INTERVAL = 30 * 1000; // 30 seconds
const NETWORK_DISCONNECT_DURATION = 10 * 1000; // 10 seconds
const METRICS_INTERVAL = 5 * 1000; // 5 seconds
const RESULTS_FILE = 'network-optimization-results.json';

// Track metrics
const metrics = {
  startTime: Date.now(),
  totalDisconnects: 0,
  recoveryTimes: [],
  resourceUsage: [],
  errors: [],
  disconnectTimestamps: [],
  reconnectTimestamps: []
};

// Start the server process
console.log('Starting server process for network testing...');
const serverProcess = spawn('node', ['dist/server/api.js'], {
  stdio: ['ignore', 'pipe', 'pipe'],
  env: { ...process.env, LOG_LEVEL: 'debug', NODE_ENV: 'test' }
});

let isDisconnected = false;
let disconnectTime = 0;
let intervalId;

// Handle server process output
serverProcess.stdout.on('data', (data) => {
  const output = data.toString();
  
  // Look for network-related log messages
  if (output.includes('Network connection lost')) {
    console.log('🔴 Network disconnection detected');
    disconnectTime = Date.now();
    metrics.disconnectTimestamps.push(disconnectTime);
  } else if (output.includes('Network connection restored')) {
    const reconnectTime = Date.now();
    const recoveryTime = reconnectTime - disconnectTime;
    console.log(`🟢 Network reconnection detected (recovery took ${recoveryTime}ms)`);
    metrics.reconnectTimestamps.push(reconnectTime);
    metrics.recoveryTimes.push(recoveryTime);
  } else if (output.includes('error') || output.includes('Error')) {
    console.error('❌ Server error:', output);
    metrics.errors.push({
      timestamp: Date.now(),
      message: output
    });
  }
});

serverProcess.stderr.on('data', (data) => {
  console.error('❌ Server error:', data.toString());
  metrics.errors.push({
    timestamp: Date.now(),
    message: data.toString()
  });
});

// Simulate network disconnects
async function simulateNetworkFailure() {
  if (isDisconnected) return;
  
  console.log('🔴 Simulating network disconnect...');
  isDisconnected = true;
  metrics.totalDisconnects++;
  
  // Send SIGUSR1 to server - we'll need to add a handler for this in our app
  // that simulates a network disconnect
  serverProcess.kill('SIGUSR1');
  
  // Wait for disconnect duration
  await setTimeout(NETWORK_DISCONNECT_DURATION);
  
  // Reconnect network
  console.log('🟢 Simulating network reconnect...');
  isDisconnected = false;
  
  // Send SIGUSR2 to server - we'll need to add a handler for this in our app
  // that simulates a network reconnect
  serverProcess.kill('SIGUSR2');
}

// Collect resource usage metrics
function collectMetrics() {
  const usage = process.memoryUsage();
  const cpuUsage = process.cpuUsage();
  
  metrics.resourceUsage.push({
    timestamp: Date.now(),
    memory: {
      rss: usage.rss / 1024 / 1024, // MB
      heapTotal: usage.heapTotal / 1024 / 1024, // MB
      heapUsed: usage.heapUsed / 1024 / 1024, // MB
      external: usage.external / 1024 / 1024, // MB
    },
    cpu: {
      user: cpuUsage.user,
      system: cpuUsage.system
    }
  });
}

// Start the test
async function runTest() {
  console.log(`🧪 Starting network optimization test (duration: ${TEST_DURATION / 60000} minutes)`);
  
  // Wait for server to start up
  await setTimeout(5000);
  
  // Start metrics collection
  const metricsIntervalId = setInterval(collectMetrics, METRICS_INTERVAL);
  
  // Schedule network disconnects
  intervalId = setInterval(simulateNetworkFailure, NETWORK_DISCONNECT_INTERVAL);
  
  // Run for test duration
  await setTimeout(TEST_DURATION);
  
  // Clean up
  clearInterval(intervalId);
  clearInterval(metricsIntervalId);
  
  // Stop the server
  console.log('🛑 Stopping server process...');
  serverProcess.kill();
  
  // Wait for server to shut down
  await setTimeout(2000);
  
  // Save results
  saveResults();
  
  console.log(`✅ Test completed. Results saved to ${RESULTS_FILE}`);
  process.exit(0);
}

// Save test results
function saveResults() {
  const results = {
    ...metrics,
    summary: {
      duration: Date.now() - metrics.startTime,
      averageRecoveryTime: metrics.recoveryTimes.reduce((sum, time) => sum + time, 0) / metrics.recoveryTimes.length,
      maxRecoveryTime: Math.max(...metrics.recoveryTimes),
      minRecoveryTime: Math.min(...metrics.recoveryTimes),
      totalErrors: metrics.errors.length,
      averageMemoryUsage: metrics.resourceUsage.reduce((sum, m) => sum + m.memory.heapUsed, 0) / metrics.resourceUsage.length
    }
  };
  
  fs.writeFileSync(RESULTS_FILE, JSON.stringify(results, null, 2));
  
  // Print summary
  console.log('\n📊 Test Summary:');
  console.log(`Total test duration: ${results.summary.duration / 1000} seconds`);
  console.log(`Number of simulated disconnects: ${metrics.totalDisconnects}`);
  console.log(`Average recovery time: ${results.summary.averageRecoveryTime.toFixed(2)}ms`);
  console.log(`Max recovery time: ${results.summary.maxRecoveryTime}ms`);
  console.log(`Min recovery time: ${results.summary.minRecoveryTime}ms`);
  console.log(`Total errors: ${results.summary.totalErrors}`);
  console.log(`Average memory usage: ${results.summary.averageMemoryUsage.toFixed(2)}MB`);
}

// Handle process termination
process.on('SIGINT', async () => {
  console.log('⚠️ Test interrupted');
  clearInterval(intervalId);
  serverProcess.kill();
  await setTimeout(1000);
  saveResults();
  process.exit(0);
});

// Start the test
runTest().catch(err => {
  console.error('Test failed:', err);
  serverProcess.kill();
  process.exit(1);
});
</file>

<file path="src/__tests__/helpers/async-utils.ts">
/**
 * Async testing utilities for handling race conditions and timing-based tests
 */

/**
 * Creates a promise that resolves after the specified time
 * @param ms Time to wait in milliseconds
 */
export function delay(ms: number): Promise<void> {
  return new Promise(resolve => setTimeout(resolve, ms));
}

/**
 * Creates a deferred promise that can be resolved or rejected externally
 */
export function createDeferred<T = void>(): {
  promise: Promise<T>;
  resolve: (value: T | PromiseLike<T>) => void;
  reject: (reason?: any) => void;
} {
  let resolve!: (value: T | PromiseLike<T>) => void;
  let reject!: (reason?: any) => void;
  
  const promise = new Promise<T>((res, rej) => {
    resolve = res;
    reject = rej;
  });
  
  return { promise, resolve, reject };
}

/**
 * Executes multiple promises with controlled timing
 * @param tasks Array of functions that return promises
 * @param delayBetweenTasks Delay between starting each task in milliseconds
 */
export async function executeWithDelay<T>(
  tasks: Array<() => Promise<T>>,
  delayBetweenTasks: number
): Promise<T[]> {
  const results: T[] = [];
  
  for (const task of tasks) {
    const promise = task();
    results.push(await promise);
    
    if (delayBetweenTasks > 0 && tasks.indexOf(task) < tasks.length - 1) {
      await delay(delayBetweenTasks);
    }
  }
  
  return results;
}

/**
 * Executes tasks in parallel with a controlled start time
 * @param tasks Array of functions that return promises
 * @param staggerMs Milliseconds to stagger the start of each task
 */
export async function executeStaggered<T>(
  tasks: Array<() => Promise<T>>,
  staggerMs: number = 10
): Promise<T[]> {
  const promises: Promise<T>[] = [];
  
  for (let i = 0; i < tasks.length; i++) {
    const task = tasks[i];
    const taskPromise = delay(i * staggerMs).then(() => task());
    promises.push(taskPromise);
  }
  
  return Promise.all(promises);
}

/**
 * Retries a function until it succeeds or reaches max attempts
 * @param fn Function to retry
 * @param maxAttempts Maximum number of attempts
 * @param delayMs Delay between attempts in milliseconds
 */
export async function retry<T>(
  fn: () => Promise<T>,
  maxAttempts: number = 3,
  delayMs: number = 100
): Promise<T> {
  let lastError: any;
  
  for (let attempt = 1; attempt <= maxAttempts; attempt++) {
    try {
      return await fn();
    } catch (error) {
      lastError = error;
      if (attempt < maxAttempts) {
        await delay(delayMs);
      }
    }
  }
  
  throw lastError;
}

/**
 * Creates a promise that times out after the specified duration
 * @param promise Promise to wrap with timeout
 * @param timeoutMs Timeout duration in milliseconds
 * @param errorMessage Custom error message for timeout
 */
export function withTimeout<T>(
  promise: Promise<T>,
  timeoutMs: number,
  errorMessage: string = `Operation timed out after ${timeoutMs}ms`
): Promise<T> {
  const timeoutPromise = new Promise<never>((_, reject) => {
    setTimeout(() => reject(new Error(errorMessage)), timeoutMs);
  });
  
  return Promise.race([promise, timeoutPromise]);
}

/**
 * Tracks the order of async operations for race condition testing
 */
export class ExecutionTracker {
  private events: Array<{ name: string; timestamp: number }> = [];
  
  /**
   * Records an event with the current timestamp
   * @param name Event name
   */
  record(name: string): void {
    this.events.push({ name, timestamp: Date.now() });
  }
  
  /**
   * Gets the recorded events in order
   */
  getEvents(): string[] {
    return this.events
      .sort((a, b) => a.timestamp - b.timestamp)
      .map(event => event.name);
  }
  
  /**
   * Clears all recorded events
   */
  clear(): void {
    this.events = [];
  }
  
  /**
   * Verifies events occurred in the expected order
   * @param expectedOrder Expected order of events
   * @returns True if events match expected order
   */
  verifyOrder(expectedOrder: string[]): boolean {
    const actualOrder = this.getEvents();
    
    if (actualOrder.length !== expectedOrder.length) {
      return false;
    }
    
    return expectedOrder.every((event, index) => event === actualOrder[index]);
  }
}
</file>

<file path="src/__tests__/helpers/mock-factory.ts">
/**
 * Mock factory for creating test dependencies
 */
import { mock, MockProxy } from 'jest-mock-extended';
import { EventEmitter } from 'events';
import type { ChildProcess } from 'child_process';
import type { StreamSource, Stream } from '../../types/stream';
import type { Config } from '../../types/stream';
import type { HolodexService } from '../../server/services/holodex';
import type { TwitchService } from '../../server/services/twitch';
import type { YouTubeService } from '../../server/services/youtube';
import type { PlayerService } from '../../server/services/player';

/**
 * Creates a mock child process for testing
 */
export function createMockChildProcess(): MockProxy<ChildProcess> & { 
  stdout: EventEmitter;
  stderr: EventEmitter;
} {
  const stdout = new EventEmitter();
  const stderr = new EventEmitter();
  
  const mockProcess = mock<ChildProcess>({
    stdout,
    stderr,
    pid: 12345
  });
  
  // Mock kill method to return true by default
  mockProcess.kill.mockImplementation(() => true);
  
  return Object.assign(mockProcess, { stdout, stderr });
}

/**
 * Creates a mock event emitter for testing
 */
export function createMockEventEmitter(): MockProxy<EventEmitter> & EventEmitter {
  const realEmitter = new EventEmitter();
  const mockEmitter = mock<EventEmitter>();
  
  // Forward all event emitter methods to the real emitter
  mockEmitter.on.mockImplementation((event, listener) => {
    realEmitter.on(event, listener);
    return mockEmitter;
  });
  
  mockEmitter.once.mockImplementation((event, listener) => {
    realEmitter.once(event, listener);
    return mockEmitter;
  });
  
  mockEmitter.emit.mockImplementation((event, ...args) => {
    return realEmitter.emit(event, ...args);
  });
  
  mockEmitter.removeListener.mockImplementation((event, listener) => {
    realEmitter.removeListener(event, listener);
    return mockEmitter;
  });
  
  mockEmitter.removeAllListeners.mockImplementation((event) => {
    realEmitter.removeAllListeners(event);
    return mockEmitter;
  });
  
  return Object.assign(mockEmitter, realEmitter);
}

/**
 * Creates a mock stream source for testing
 */
export function createMockStreamSource(overrides: Partial<StreamSource> = {}): StreamSource {
  return {
    id: `stream-${Date.now()}`,
    url: `https://youtube.com/watch?v=${Date.now()}`,
    title: 'Test Stream',
    platform: 'youtube',
    viewerCount: 1000,
    thumbnail: 'https://example.com/thumbnail.jpg',
    channel: 'Test Channel',
    channelId: 'test-channel-id',
    sourceStatus: 'live',
    startTime: Date.now(),
    duration: 3600,
    priority: 100,
    tags: ['test'],
    screen: 1,
    organization: 'test-org',
    subtype: 'test',
    quality: 'best',
    volume: 50,
    status: 'playing',
    ...overrides
  };
}

/**
 * Creates a mock stream for testing
 */
export function createMockStream(overrides: Partial<Stream> = {}): Stream {
  const mockProcess = createMockChildProcess();
  
  return {
    id: `stream-${Date.now()}`,
    url: `https://youtube.com/watch?v=${Date.now()}`,
    title: 'Test Stream',
    platform: 'youtube',
    viewerCount: 1000,
    thumbnail: 'https://example.com/thumbnail.jpg',
    channel: 'Test Channel',
    channelId: 'test-channel-id',
    sourceStatus: 'live',
    startTime: Date.now(),
    duration: 3600,
    priority: 100,
    tags: ['test'],
    screen: 1,
    organization: 'test-org',
    subtype: 'test',
    quality: 'best',
    volume: 50,
    status: 'playing',
    position: 0,
    process: mockProcess,
    playerStatus: 'playing',
    ...overrides
  };
}

/**
 * Creates a mock config for testing
 */
export function createMockConfig(overrides: Partial<Config> = {}): Config {
  return {
    skipWatchedStreams: true,
    player: {
      defaultQuality: 'best',
      defaultVolume: 50,
      windowMaximized: false,
      maxStreams: 2,
      autoStart: true,
      preferStreamlink: true,
      force_player: false,
      screens: [
        {
          screen: 1,
          id: 1,
          enabled: true,
          skipWatchedStreams: true,
          volume: 50,
          quality: 'best',
          windowMaximized: false,
          sources: [
            {
              type: 'holodex',
              subtype: 'organization',
              enabled: true,
              priority: 100,
              limit: 10,
              name: 'Hololive'
            }
          ]
        },
        {
          screen: 2,
          id: 2,
          enabled: true,
          skipWatchedStreams: false, // Different setting for testing
          volume: 50,
          quality: 'best',
          windowMaximized: false,
          sources: [
            {
              type: 'twitch',
              subtype: 'vtuber',
              enabled: true,
              priority: 200,
              limit: 10
            }
          ]
        }
      ]
    },
    streams: [
      {
        screen: 1,
        id: 1,
        enabled: true,
        skipWatchedStreams: true,
        volume: 50,
        quality: 'best',
        windowMaximized: false,
        sources: [
          {
            type: 'holodex',
            subtype: 'organization',
            enabled: true,
            priority: 100,
            limit: 10,
            name: 'Hololive'
          }
        ]
      },
      {
        screen: 2,
        id: 2,
        enabled: true,
        skipWatchedStreams: false,
        volume: 50,
        quality: 'best',
        windowMaximized: false,
        sources: [
          {
            type: 'twitch',
            subtype: 'vtuber',
            enabled: true,
            priority: 200,
            limit: 10
          }
        ]
      }
    ],
    holodex: {
      apiKey: 'test-api-key'
    },
    twitch: {
      clientId: 'test-client-id',
      clientSecret: 'test-client-secret'
    },
    organizations: ['Hololive', 'Nijisanji'],
    favoriteChannels: {
      holodex: ['channel1', 'channel2'],
      twitch: ['channel3', 'channel4'],
      youtube: ['channel5', 'channel6']
    },
    ...overrides
  };
}

/**
 * Creates mock services for testing StreamManager
 */
export function createMockServices() {
  const holodexService = mock<HolodexService>();
  const twitchService = mock<TwitchService>();
  const youtubeService = mock<YouTubeService>();
  const playerService = mock<PlayerService>();
  
  // Set up default implementations
  holodexService.getLiveStreams.mockResolvedValue([]);
  twitchService.getLiveStreams.mockResolvedValue([]);
  youtubeService.getLiveStreams.mockResolvedValue([]);
  playerService.startStream.mockResolvedValue({ screen: 1, success: true });
  playerService.stopStream.mockResolvedValue(true);
  playerService.isRetrying.mockReturnValue(false);
  
  return {
    holodexService,
    twitchService,
    youtubeService,
    playerService
  };
}

/**
 * Creates a controlled fetch mock for network testing
 */
export function createFetchMock() {
  // Save the original fetch
  const originalFetch = global.fetch;
  
  // Create a mock fetch function
  const fetchMock = jest.fn();
  
  // Mock responses by URL
  const mockResponses = new Map<string, { 
    status: number; 
    body: any; 
    delay?: number;
    error?: boolean;
  }>();
  
  // Replace global fetch with our mock
  global.fetch = fetchMock;
  
  // Default implementation
  fetchMock.mockImplementation(async (url: string, options?: RequestInit) => {
    const mockResponse = mockResponses.get(url.toString());
    
    if (mockResponse) {
      if (mockResponse.delay) {
        await new Promise(resolve => setTimeout(resolve, mockResponse.delay));
      }
      
      if (mockResponse.error) {
        throw new Error(`Network error: ${url}`);
      }
      
      return {
        status: mockResponse.status,
        ok: mockResponse.status >= 200 && mockResponse.status < 300,
        json: async () => mockResponse.body,
        text: async () => JSON.stringify(mockResponse.body)
      } as Response;
    }
    
    // Default response if no mock is found
    return {
      status: 404,
      ok: false,
      json: async () => ({ error: 'Not found' }),
      text: async () => 'Not found'
    } as Response;
  });
  
  return {
    mock: fetchMock,
    mockResponses,
    restore: () => {
      global.fetch = originalFetch;
    },
    mockResponse: (url: string, response: { 
      status: number; 
      body: any; 
      delay?: number;
      error?: boolean;
    }) => {
      mockResponses.set(url, response);
    },
    reset: () => {
      fetchMock.mockClear();
      mockResponses.clear();
    }
  };
}
</file>

<file path="src/__tests__/helpers/timer-mock.ts">
/**
 * Timer mock for testing time-based operations
 * 
 * This utility allows precise control over timers in tests by:
 * 1. Replacing setTimeout/setInterval with controlled versions
 * 2. Allowing manual advancement of time
 * 3. Tracking all timer operations for verification
 */

type TimerFunction = (...args: any[]) => void;

interface MockTimer {
  id: number;
  callback: TimerFunction;
  delay: number;
  args: any[];
  type: 'timeout' | 'interval';
  scheduledTime: number;
  callCount: number;
  isCleared: boolean;
}

export class TimerMock {
  private timers: Map<number> = new Map();
  private timerCounter: number = 1;
  private currentTime: number = 0;
  private originalSetTimeout: typeof setTimeout;
  private originalClearTimeout: typeof clearTimeout;
  private originalSetInterval: typeof setInterval;
  private originalClearInterval: typeof clearInterval;
  private originalDateNow: typeof Date.now;

  constructor() {
    // Store original timer functions
    this.originalSetTimeout = global.setTimeout;
    this.originalClearTimeout = global.clearTimeout;
    this.originalSetInterval = global.setInterval;
    this.originalClearInterval = global.clearInterval;
    this.originalDateNow = Date.now;
  }

  /**
   * Install mock timers
   */
  install(): void {
    // Replace global timer functions with mocks
    global.setTimeout = this.mockSetTimeout.bind(this);
    global.clearTimeout = this.mockClearTimeout.bind(this);
    global.setInterval = this.mockSetInterval.bind(this);
    global.clearInterval = this.mockClearInterval.bind(this);
    Date.now = () => this.currentTime;
  }

  /**
   * Restore original timer functions
   */
  restore(): void {
    global.setTimeout = this.originalSetTimeout;
    global.clearTimeout = this.originalClearTimeout;
    global.setInterval = this.originalSetInterval;
    global.clearInterval = this.originalClearInterval;
    Date.now = this.originalDateNow;
  }

  /**
   * Reset all timers and time
   */
  reset(): void {
    this.timers.clear();
    this.timerCounter = 1;
    this.currentTime = 0;
  }

  /**
   * Mock implementation of setTimeout
   */
  private mockSetTimeout(callback: TimerFunction, delay: number, ...args: any[]): NodeJS.Timeout {
    const id = this.timerCounter++;
    
    this.timers.set(id, {
      id,
      callback,
      delay,
      args,
      type: 'timeout',
      scheduledTime: this.currentTime + delay,
      callCount: 0,
      isCleared: false
    });
    
    return id as unknown as NodeJS.Timeout;
  }

  /**
   * Mock implementation of clearTimeout
   */
  private mockClearTimeout(id: NodeJS.Timeout): void {
    const numericId = id as unknown as number;
    const timer = this.timers.get(numericId);
    
    if (timer) {
      timer.isCleared = true;
    }
  }

  /**
   * Mock implementation of setInterval
   */
  private mockSetInterval(callback: TimerFunction, delay: number, ...args: any[]): NodeJS.Timeout {
    const id = this.timerCounter++;
    
    this.timers.set(id, {
      id,
      callback,
      delay,
      args,
      type: 'interval',
      scheduledTime: this.currentTime + delay,
      callCount: 0,
      isCleared: false
    });
    
    return id as unknown as NodeJS.Timeout;
  }

  /**
   * Mock implementation of clearInterval
   */
  private mockClearInterval(id: NodeJS.Timeout): void {
    this.mockClearTimeout(id);
  }

  /**
   * Advance time by the specified amount and run due timers
   * @param ms Milliseconds to advance
   */
  advanceTime(ms: number): void {
    const targetTime = this.currentTime + ms;
    this.runTimersToTime(targetTime);
    this.currentTime = targetTime;
  }

  /**
   * Run all timers that are due by the target time
   * @param targetTime Target time to run timers up to
   */
  private runTimersToTime(targetTime: number): void {
    // Get all timers sorted by scheduled time
    const sortedTimers = Array.from(this.timers.values())
      .filter(timer => !timer.isCleared)
      .sort((a, b) => a.scheduledTime - b.scheduledTime);
    
    for (const timer of sortedTimers) {
      if (timer.isCleared || timer.scheduledTime > targetTime) {
        continue;
      }
      
      // Set current time to the timer's scheduled time
      this.currentTime = timer.scheduledTime;
      
      // Execute the timer callback
      timer.callback(...timer.args);
      timer.callCount++;
      
      // For intervals, reschedule
      if (timer.type === 'interval') {
        timer.scheduledTime = this.currentTime + timer.delay;
      } else {
        timer.isCleared = true;
      }
    }
  }

  /**
   * Run all pending timers immediately
   */
  runAllTimers(): void {
    // Find the latest scheduled timer
    const latestTimer = Array.from(this.timers.values())
      .filter(timer => !timer.isCleared)
      .reduce((latest, timer) => {
        return timer.scheduledTime > latest ? timer.scheduledTime : latest;
      }, this.currentTime);
    
    this.runTimersToTime(latestTimer);
    this.currentTime = latestTimer;
  }

  /**
   * Run only pending timers, but not newly created ones
   */
  runOnlyPendingTimers(): void {
    const pendingTimers = Array.from(this.timers.values())
      .filter(timer => !timer.isCleared && timer.scheduledTime > this.currentTime);
    
    const timerIds = new Set(pendingTimers.map(timer => timer.id));
    
    let timer: MockTimer | undefined;
    while ((timer = this.getNextTimer()) !== undefined) {
      if (!timerIds.has(timer.id)) {
        continue;
      }
      
      this.currentTime = timer.scheduledTime;
      
      if (!timer.isCleared) {
        timer.callback(...timer.args);
        timer.callCount++;
        
        if (timer.type === 'interval') {
          timer.scheduledTime = this.currentTime + timer.delay;
        } else {
          timer.isCleared = true;
        }
      }
    }
  }

  /**
   * Get the next timer that should be executed
   */
  private getNextTimer(): MockTimer | undefined {
    let nextTimer: MockTimer | undefined;
    let nextTime = Infinity;
    
    for (const timer of this.timers.values()) {
      if (!timer.isCleared && timer.scheduledTime < nextTime) {
        nextTime = timer.scheduledTime;
        nextTimer = timer;
      }
    }
    
    return nextTimer;
  }

  /**
   * Get all active timers
   */
  getTimers(): MockTimer[] {
    return Array.from(this.timers.values())
      .filter(timer => !timer.isCleared);
  }

  /**
   * Get the current mock time
   */
  getCurrentTime(): number {
    return this.currentTime;
  }

  /**
   * Set the current mock time
   */
  setCurrentTime(time: number): void {
    this.currentTime = time;
  }
}
</file>

<file path="src/__tests__/integration/skipWatchedStreams.test.ts">
/**
 * Integration tests for skipWatchedStreams feature
 * 
 * These tests verify that the skipWatchedStreams option works correctly
 * across multiple components of the LiveLink application.
 */
import { describe, test, expect, beforeEach, afterEach, jest } from '@jest/globals';
import { StreamManager } from '../../server/stream_manager';
import { QueueService } from '../../server/services/queue_service';
import { PlayerService } from '../../server/services/player';
import { 
  createMockConfig, 
  createMockServices,
  createMockStreamSource
} from '../helpers/mock-factory';
import { ExecutionTracker } from '../helpers/async-utils';
import { TimerMock } from '../helpers/timer-mock';

// Mock the queue service
jest.mock('../../server/services/queue_service', () => {
  // Create a real instance for testing
  const QueueService = jest.requireActual('../../server/services/queue_service').QueueService;
  const queueService = new QueueService();
  
  // Spy on methods
  jest.spyOn(queueService, 'setQueue');
  jest.spyOn(queueService, 'getQueue');
  jest.spyOn(queueService, 'addToQueue');
  jest.spyOn(queueService, 'clearQueue');
  jest.spyOn(queueService, 'clearAllQueues');
  jest.spyOn(queueService, 'getNextStream');
  jest.spyOn(queueService, 'removeFromQueue');
  jest.spyOn(queueService, 'markStreamAsWatched');
  jest.spyOn(queueService, 'isStreamWatched');
  jest.spyOn(queueService, 'getWatchedStreams');
  jest.spyOn(queueService, 'clearWatchedStreams');
  jest.spyOn(queueService, 'hasUnwatchedStreams');
  jest.spyOn(queueService, 'filterUnwatchedStreams');
  
  return { queueService, QueueService };
});

// Mock the logger to reduce noise
jest.mock('../../server/services/logger', () => {
  return {
    logger: {
      info: jest.fn(),
      debug: jest.fn(),
      warn: jest.fn(),
      error: jest.fn()
    }
  };
});

// Mock keyboard events
jest.mock('../../server/services/keyboard_events', () => {
  const mockEmitter = {
    on: jest.fn(),
    off: jest.fn(),
    emit: jest.fn()
  };
  
  return { keyboardEvents: mockEmitter };
});

describe('skipWatchedStreams Integration Tests', () => {
  let streamManager: StreamManager;
  let mockServices: ReturnType<typeof createMockServices>;
  let mockConfig: ReturnType<typeof createMockConfig>;
  let timerMock: TimerMock;
  let executionTracker: ExecutionTracker;
  let queueService: QueueService;
  
  beforeEach(() => {
    // Reset all mocks
    jest.clearAllMocks();
    
    // Get the real queue service instance
    queueService = require('../../server/services/queue_service').queueService;
    queueService.clearAllQueues();
    queueService.clearWatchedStreams();
    
    // Create mock dependencies
    mockServices = createMockServices();
    mockConfig = createMockConfig();
    
    // Set up timer mock
    timerMock = new TimerMock();
    timerMock.install();
    
    // Create execution tracker for tracking operations
    executionTracker = new ExecutionTracker();
    
    // Create StreamManager instance with mocked dependencies
    streamManager = new StreamManager(
      mockConfig,
      mockServices.holodexService,
      mockServices.twitchService,
      mockServices.youtubeService,
      mockServices.playerService
    );
  });
  
  afterEach(() => {
    // Restore timers
    timerMock.restore();
  });
  
  /**
   * Test that skipWatchedStreams: true prevents watched streams from being played
   */
  test('should skip watched streams when skipWatchedStreams is true', async () => {
    // Configure screen 1 with skipWatchedStreams: true
    mockConfig.player.screens[0].skipWatchedStreams = true;
    
    // Create mock streams
    const stream1 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/1',
      priority: 900 // Not a favorite
    });
    
    const stream2 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/2',
      priority: 900 // Not a favorite
    });
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([stream1, stream2]);
    
    // Mark stream1 as watched
    queueService.markStreamAsWatched(stream1.url);
    
    // Set up the queue with both streams
    queueService.setQueue(1, [stream1, stream2]);
    
    // Handle stream end for screen 1
    await streamManager.handleStreamEnd(1);
    
    // Verify that stream1 was skipped and stream2 was started
    expect(mockServices.playerService.startStream).toHaveBeenCalledTimes(1);
    expect(mockServices.playerService.startStream).toHaveBeenCalledWith(
      expect.objectContaining({
        url: stream2.url,
        screen: 1
      })
    );
    
    // Verify that stream1 was removed from the queue
    expect(queueService.removeFromQueue).toHaveBeenCalledWith(1, 0);
  });
  
  /**
   * Test that skipWatchedStreams: false allows watched streams to be played
   */
  test('should not skip watched streams when skipWatchedStreams is false', async () => {
    // Configure screen 2 with skipWatchedStreams: false
    mockConfig.player.screens[1].skipWatchedStreams = false;
    
    // Create mock streams
    const stream1 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/1',
      priority: 900 // Not a favorite
    });
    
    const stream2 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/2',
      priority: 900 // Not a favorite
    });
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([stream1, stream2]);
    
    // Mark stream1 as watched
    queueService.markStreamAsWatched(stream1.url);
    
    // Set up the queue with both streams
    queueService.setQueue(2, [stream1, stream2]);
    
    // Handle stream end for screen 2
    await streamManager.handleStreamEnd(2);
    
    // Verify that stream1 was started despite being watched
    expect(mockServices.playerService.startStream).toHaveBeenCalledTimes(1);
    expect(mockServices.playerService.startStream).toHaveBeenCalledWith(
      expect.objectContaining({
        url: stream1.url,
        screen: 2
      })
    );
  });
  
  /**
   * Test that favorite streams are always played regardless of skipWatchedStreams
   */
  test('should always play favorite streams regardless of skipWatchedStreams', async () => {
    // Configure screen 1 with skipWatchedStreams: true
    mockConfig.player.screens[0].skipWatchedStreams = true;
    
    // Create mock streams
    const favoriteStream = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/favorite',
      priority: 100 // Low priority = favorite
    });
    
    const normalStream = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/normal',
      priority: 900 // High priority = not favorite
    });
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([favoriteStream, normalStream]);
    
    // Mark both streams as watched
    queueService.markStreamAsWatched(favoriteStream.url);
    queueService.markStreamAsWatched(normalStream.url);
    
    // Set up the queue with both streams
    queueService.setQueue(1, [favoriteStream, normalStream]);
    
    // Handle stream end for screen 1
    await streamManager.handleStreamEnd(1);
    
    // Verify that favoriteStream was started despite being watched
    expect(mockServices.playerService.startStream).toHaveBeenCalledTimes(1);
    expect(mockServices.playerService.startStream).toHaveBeenCalledWith(
      expect.objectContaining({
        url: favoriteStream.url,
        screen: 1
      })
    );
  });
  
  /**
   * Test that the global skipWatchedStreams setting is used as a fallback
   */
  test('should use global skipWatchedStreams setting as fallback', async () => {
    // Remove screen-specific skipWatchedStreams setting
    delete mockConfig.player.screens[0].skipWatchedStreams;
    
    // Set global skipWatchedStreams to false
    mockConfig.skipWatchedStreams = false;
    
    // Create mock streams
    const stream1 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/1',
      priority: 900 // Not a favorite
    });
    
    const stream2 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/2',
      priority: 900 // Not a favorite
    });
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([stream1, stream2]);
    
    // Mark stream1 as watched
    queueService.markStreamAsWatched(stream1.url);
    
    // Set up the queue with both streams
    queueService.setQueue(1, [stream1, stream2]);
    
    // Handle stream end for screen 1
    await streamManager.handleStreamEnd(1);
    
    // Verify that stream1 was started despite being watched
    // because global skipWatchedStreams is false
    expect(mockServices.playerService.startStream).toHaveBeenCalledTimes(1);
    expect(mockServices.playerService.startStream).toHaveBeenCalledWith(
      expect.objectContaining({
        url: stream1.url,
        screen: 1
      })
    );
  });
  
  /**
   * Test that the queue filtering respects skipWatchedStreams when updating queues
   */
  test('should respect skipWatchedStreams when updating queues', async () => {
    // Configure screens with different skipWatchedStreams settings
    mockConfig.player.screens[0].skipWatchedStreams = true;  // Screen 1
    mockConfig.player.screens[1].skipWatchedStreams = false; // Screen 2
    
    // Create mock streams
    const stream1 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/1',
      priority: 900 // Not a favorite
    });
    
    const stream2 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/2',
      priority: 900 // Not a favorite
    });
    
    const stream3 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/3',
      priority: 900 // Not a favorite
    });
    
    const stream4 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/4',
      priority: 900 // Not a favorite
    });
    
    // Mark stream1 and stream3 as watched
    queueService.markStreamAsWatched(stream1.url);
    queueService.markStreamAsWatched(stream3.url);
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([
      stream1, stream2, stream3, stream4
    ]);
    
    // Update queues for both screens
    await streamManager.updateAllQueues(true);
    
    // Get the queues
    const queue1 = queueService.getQueue(1);
    const queue2 = queueService.getQueue(2);
    
    // Screen 1 (skipWatchedStreams: true) should only have unwatched streams
    expect(queue1).toHaveLength(1);
    expect(queue1[0].url).toBe(stream2.url);
    
    // Screen 2 (skipWatchedStreams: false) should have all streams
    expect(queue2).toHaveLength(2);
    expect(queue2.map(s => s.url)).toContain(stream3.url);
    expect(queue2.map(s => s.url)).toContain(stream4.url);
  });
  
  /**
   * Test that handleEmptyQueue respects skipWatchedStreams when fetching new streams
   */
  test('should respect skipWatchedStreams when handling empty queues', async () => {
    // Configure screens with different skipWatchedStreams settings
    mockConfig.player.screens[0].skipWatchedStreams = true;  // Screen 1
    mockConfig.player.screens[1].skipWatchedStreams = false; // Screen 2
    
    // Create mock streams
    const stream1 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/1',
      priority: 900 // Not a favorite
    });
    
    const stream2 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/2',
      priority: 900 // Not a favorite
    });
    
    // Mark both streams as watched
    queueService.markStreamAsWatched(stream1.url);
    queueService.markStreamAsWatched(stream2.url);
    
    // Mock getLiveStreams to return our test streams
    mockServices.holodexService.getLiveStreams.mockResolvedValue([stream1, stream2]);
    
    // Handle empty queue for screen 1 (skipWatchedStreams: true)
    await streamManager.handleEmptyQueue(1);
    
    // Verify that no stream was started for screen 1
    // because all streams are watched and skipWatchedStreams is true
    expect(mockServices.playerService.startStream).not.toHaveBeenCalled();
    
    // Reset mocks
    jest.clearAllMocks();
    
    // Handle empty queue for screen 2 (skipWatchedStreams: false)
    await streamManager.handleEmptyQueue(2);
    
    // Verify that stream2 was started for screen 2
    // despite being watched because skipWatchedStreams is false
    expect(mockServices.playerService.startStream).toHaveBeenCalledTimes(1);
    expect(mockServices.playerService.startStream).toHaveBeenCalledWith(
      expect.objectContaining({
        url: stream2.url,
        screen: 2
      })
    );
  });
});
</file>

<file path="src/__tests__/server/services/player.race.test.ts">
/**
 * Race condition tests for PlayerService
 * 
 * These tests focus on verifying proper handling of concurrent operations,
 * race conditions, and network resilience in the PlayerService class.
 */
import { describe, test, expect, beforeEach, afterEach, jest } from '@jest/globals';
import { mock } from 'jest-mock-extended';
import { PlayerService } from '../../../server/services/player';
import { 
  createMockConfig, 
  createMockChildProcess,
  createFetchMock
} from '../../helpers/mock-factory';
import { 
  delay, 
  executeStaggered,
  ExecutionTracker,
  createDeferred
} from '../../helpers/async-utils';
import { TimerMock } from '../../helpers/timer-mock';
import { EventEmitter } from 'events';
import * as fs from 'fs';
import * as path from 'path';
import { ChildProcess } from 'child_process';

// Mock fs module
jest.mock('fs', () => ({
  existsSync: jest.fn().mockReturnValue(true),
  mkdirSync: jest.fn(),
  readdirSync: jest.fn().mockReturnValue([]),
  statSync: jest.fn().mockReturnValue({
    isFile: () => true,
    mtime: new Date(),
    size: 1000
  }),
  unlinkSync: jest.fn(),
  writeFileSync: jest.fn()
}));

// Mock child_process module
jest.mock('child_process', () => {
  const mockSpawn = jest.fn().mockImplementation(() => {
    const mockProcess = new EventEmitter() as any;
    mockProcess.stdout = new EventEmitter();
    mockProcess.stderr = new EventEmitter();
    mockProcess.kill = jest.fn().mockReturnValue(true);
    mockProcess.pid = 12345;
    return mockProcess;
  });
  
  return { spawn: mockSpawn };
});

// Mock path module
jest.mock('path', () => {
  const originalPath = jest.requireActual('path');
  return {
    ...originalPath,
    join: jest.fn().mockImplementation((...args) => args.join('/'))
  };
});

// Mock the logger to reduce noise
jest.mock('../../../server/services/logger', () => {
  return {
    logger: {
      info: jest.fn(),
      debug: jest.fn(),
      warn: jest.fn(),
      error: jest.fn()
    }
  };
});

describe('PlayerService Race Condition Tests', () => {
  let playerService: PlayerService;
  let mockConfig: ReturnType<typeof createMockConfig>;
  let timerMock: TimerMock;
  let executionTracker: ExecutionTracker;
  let fetchMock: ReturnType<typeof createFetchMock>;
  let mockProcesses: Map<number, ChildProcess> = new Map();
  
  beforeEach(() => {
    // Reset all mocks
    jest.clearAllMocks();
    mockProcesses.clear();
    
    // Create mock dependencies
    mockConfig = createMockConfig();
    
    // Set up timer mock
    timerMock = new TimerMock();
    timerMock.install();
    
    // Set up fetch mock
    fetchMock = createFetchMock();
    
    // Create execution tracker for tracking async operations
    executionTracker = new ExecutionTracker();
    
    // Mock spawn to create tracked processes
    const mockSpawn = require('child_process').spawn as jest.Mock;
    mockSpawn.mockImplementation(() => {
      const mockProcess = new EventEmitter() as any;
      mockProcess.stdout = new EventEmitter();
      mockProcess.stderr = new EventEmitter();
      mockProcess.kill = jest.fn().mockReturnValue(true);
      mockProcess.pid = Math.floor(Math.random() * 10000) + 1000;
      
      // Track the process
      mockProcesses.set(mockProcess.pid, mockProcess);
      
      return mockProcess;
    });
    
    // Create PlayerService instance with mocked dependencies
    playerService = new PlayerService(mockConfig);
    
    // Mock the testConnection method to control network availability
    (playerService as any).testConnection = jest.fn().mockResolvedValue(true);
  });
  
  afterEach(() => {
    // Restore timers
    timerMock.restore();
    
    // Restore fetch
    fetchMock.restore();
  });
  
  /**
   * Test that the PlayerService prevents multiple streams from starting simultaneously
   */
  test('should prevent multiple streams from starting simultaneously on the same screen', async () => {
    // Create deferred promises to control when processes emit events
    const startDeferred1 = createDeferred<void>();
    const startDeferred2 = createDeferred<void>();
    
    // Set up stream options
    const streamOptions1 = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1,
      quality: 'best'
    };
    
    const streamOptions2 = {
      url: 'https://youtube.com/watch?v=2',
      screen: 1, // Same screen
      quality: 'best'
    };
    
    // Start first stream (don't await)
    const stream1Promise = playerService.startStream(streamOptions1).then(() => {
      executionTracker.record('stream1:completed');
    });
    
    // Wait a bit to ensure first stream has started
    await delay(10);
    
    // Start second stream (should be blocked until first completes)
    const stream2Promise = playerService.startStream(streamOptions2).then(() => {
      executionTracker.record('stream2:completed');
    });
    
    // Wait a bit more
    await delay(10);
    
    // Get the processes
    const processes = Array.from(mockProcesses.values());
    expect(processes.length).toBe(1);
    
    // Emit 'data' event to indicate stream started
    processes[0].stdout.emit('data', 'Stream started successfully');
    
    // Resolve the first stream start
    startDeferred1.resolve();
    
    // Wait for the first stream to complete
    await stream1Promise;
    
    // Now the second stream should start
    // Wait a bit
    await delay(10);
    
    // Now there should be two processes
    expect(mockProcesses.size).toBe(2);
    
    // Emit 'data' event for the second process
    const processes2 = Array.from(mockProcesses.values());
    processes2[1].stdout.emit('data', 'Stream started successfully');
    
    // Resolve the second stream start
    startDeferred2.resolve();
    
    // Wait for both streams to complete
    await Promise.all([stream1Promise, stream2Promise]);
    
    // Verify the execution order
    const events = executionTracker.getEvents();
    expect(events[0]).toBe('stream1:completed');
    expect(events[1]).toBe('stream2:completed');
  });
  
  /**
   * Test that the PlayerService properly handles network errors and retries
   */
  test('should retry streams with exponential backoff when network errors occur', async () => {
    // Mock testConnection to simulate network outage and recovery
    (playerService as any).testConnection = jest.fn()
      .mockResolvedValueOnce(false)  // First check: network down
      .mockResolvedValueOnce(false)  // Second check: still down
      .mockResolvedValueOnce(true);  // Third check: network back
    
    // Set up stream options
    const streamOptions = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1,
      quality: 'best'
    };
    
    // Start stream
    const startPromise = playerService.startStream(streamOptions);
    
    // Wait a bit for the stream to start
    await delay(10);
    
    // Get the process
    const processes = Array.from(mockProcesses.values());
    expect(processes.length).toBe(1);
    
    // Emit 'data' event to indicate stream started
    processes[0].stdout.emit('data', 'Stream started successfully');
    
    // Complete the start promise
    await startPromise;
    
    // Now trigger a network error
    processes[0].emit('exit', 2); // Code 2 is a network-related error
    
    // Advance time to trigger retry logic
    timerMock.advanceTime(1500); // First backoff: 1.5s
    
    // Network is still down, so no new process yet
    expect(mockProcesses.size).toBe(1);
    
    // Advance time again
    timerMock.advanceTime(2250); // Second backoff: 1.5s * 1.5 = 2.25s
    
    // Network is now up, should have started a new process
    expect(mockProcesses.size).toBe(2);
    
    // Verify testConnection was called the expected number of times
    expect((playerService as any).testConnection).toHaveBeenCalledTimes(3);
  });
  
  /**
   * Test that the PlayerService properly handles multiple concurrent network errors
   */
  test('should handle multiple concurrent network errors without race conditions', async () => {
    // Mock testConnection to simulate network outage and recovery
    (playerService as any).testConnection = jest.fn()
      .mockResolvedValue(true); // Network is up
    
    // Set up stream options for multiple screens
    const streamOptions1 = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1,
      quality: 'best'
    };
    
    const streamOptions2 = {
      url: 'https://youtube.com/watch?v=2',
      screen: 2,
      quality: 'best'
    };
    
    // Start both streams
    await Promise.all([
      playerService.startStream(streamOptions1),
      playerService.startStream(streamOptions2)
    ]);
    
    // Should have two processes
    expect(mockProcesses.size).toBe(2);
    
    // Get the processes
    const processes = Array.from(mockProcesses.values());
    
    // Trigger network errors on both streams simultaneously
    processes.forEach(process => {
      process.emit('exit', 2); // Code 2 is a network-related error
    });
    
    // Advance time to trigger retry logic
    timerMock.advanceTime(1500); // First backoff: 1.5s
    
    // Should have started two new processes
    expect(mockProcesses.size).toBe(4);
    
    // Verify testConnection was called for both screens
    expect((playerService as any).testConnection).toHaveBeenCalledTimes(2);
    
    // Check that the retry counters are maintained separately for each screen
    expect((playerService as any).streamRetries.get(1)).toBe(2);
    expect((playerService as any).streamRetries.get(2)).toBe(2);
  });
  
  /**
   * Test that the PlayerService properly handles frozen streams
   */
  test('should detect and restart frozen streams based on output silence', async () => {
    // Set up stream options
    const streamOptions = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1,
      quality: 'best'
    };
    
    // Start stream
    await playerService.startStream(streamOptions);
    
    // Should have one process
    expect(mockProcesses.size).toBe(1);
    
    // Get the process
    const process = Array.from(mockProcesses.values())[0];
    
    // Emit some initial output
    process.stdout.emit('data', 'Stream started successfully');
    
    // Advance time past the output silence threshold (15s)
    timerMock.advanceTime(20000);
    
    // First check should increment the failure counter but not restart yet
    // Advance time for next health check (5s)
    timerMock.advanceTime(5000);
    
    // Second check
    timerMock.advanceTime(5000);
    
    // Third check should trigger restart (after 3 consecutive failures)
    timerMock.advanceTime(5000);
    
    // Should have started a new process
    expect(mockProcesses.size).toBe(2);
    
    // The old process should have been killed
    expect(process.kill).toHaveBeenCalled();
  });
  
  /**
   * Test that the PlayerService properly handles skipWatchedStreams option
   */
  test('should respect skipWatchedStreams setting during network retries', async () => {
    // Mock handleProcessExit to track calls
    const originalHandleProcessExit = (playerService as any).handleProcessExit;
    (playerService as any).handleProcessExit = jest.fn().mockImplementation(async function(screen: number, code: number) {
      executionTracker.record(`handleProcessExit:${screen}:${code}`);
      return originalHandleProcessExit.call(this, screen, code);
    });
    
    // Set up stream options for two screens with different skipWatchedStreams settings
    const streamOptions1 = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1, // Screen 1 has skipWatchedStreams: true
      quality: 'best'
    };
    
    const streamOptions2 = {
      url: 'https://youtube.com/watch?v=2',
      screen: 2, // Screen 2 has skipWatchedStreams: false
      quality: 'best'
    };
    
    // Start both streams
    await Promise.all([
      playerService.startStream(streamOptions1),
      playerService.startStream(streamOptions2)
    ]);
    
    // Should have two processes
    expect(mockProcesses.size).toBe(2);
    
    // Get the processes
    const processes = Array.from(mockProcesses.values());
    
    // Trigger network errors on both streams
    processes.forEach((process, index) => {
      const screen = index + 1;
      process.emit('exit', 2); // Code 2 is a network-related error
      executionTracker.record(`process:exit:${screen}`);
    });
    
    // Advance time to trigger retry logic
    timerMock.advanceTime(1500);
    
    // Both streams should be retried regardless of skipWatchedStreams setting
    // because this is a network error, not a watched stream check
    expect(mockProcesses.size).toBe(4);
    
    // Verify handleProcessExit was called for both screens
    expect((playerService as any).handleProcessExit).toHaveBeenCalledTimes(2);
    
    // Verify the execution order
    const events = executionTracker.getEvents();
    expect(events).toContain('process:exit:1');
    expect(events).toContain('process:exit:2');
    expect(events).toContain('handleProcessExit:1:2');
    expect(events).toContain('handleProcessExit:2:2');
  });
  
  /**
   * Test that the PlayerService properly handles cleanup to prevent memory leaks
   */
  test('should properly clean up resources to prevent memory leaks', async () => {
    // Set up stream options
    const streamOptions = {
      url: 'https://youtube.com/watch?v=1',
      screen: 1,
      quality: 'best'
    };
    
    // Start stream
    await playerService.startStream(streamOptions);
    
    // Should have one process
    expect(mockProcesses.size).toBe(1);
    
    // Spy on clearMonitoring and clearRetryTimer
    const clearMonitoringSpy = jest.spyOn(playerService as any, 'clearMonitoring');
    const clearRetryTimerSpy = jest.spyOn(playerService as any, 'clearRetryTimer');
    
    // Stop the stream
    await playerService.stopStream(1);
    
    // Verify clearMonitoring and clearRetryTimer were called
    expect(clearMonitoringSpy).toHaveBeenCalledWith(1);
    expect(clearRetryTimerSpy).toHaveBeenCalledWith(1);
    
    // Verify that all maps are cleared for this screen
    expect((playerService as any).streams.has(1)).toBe(false);
    expect((playerService as any).streamRetries.has(1)).toBe(false);
    expect((playerService as any).retryTimers.has(1)).toBe(false);
    expect((playerService as any).streamRefreshTimers.has(1)).toBe(false);
    expect((playerService as any).inactiveTimers.has(1)).toBe(false);
    expect((playerService as any).ipcPaths.has(1)).toBe(false);
    expect((playerService as any).healthCheckIntervals.has(1)).toBe(false);
  });
});
</file>

<file path="src/__tests__/server/services/queue_service.test.ts">
/**
 * Unit tests for QueueService
 * 
 * These tests focus on verifying the behavior of the QueueService,
 * particularly around handling watched streams and the skipWatchedStreams option.
 */
import { describe, test, expect, beforeEach, afterEach, jest } from '@jest/globals';
import { QueueService } from '../../../server/services/queue_service';
import { createMockStreamSource } from '../../helpers/mock-factory';
import { ExecutionTracker } from '../../helpers/async-utils';

// Mock the logger to reduce noise
jest.mock('../../../server/services/logger', () => {
  return {
    logger: {
      info: jest.fn(),
      debug: jest.fn(),
      warn: jest.fn(),
      error: jest.fn()
    }
  };
});

describe('QueueService Tests', () => {
  let queueService: QueueService;
  let executionTracker: ExecutionTracker;
  
  beforeEach(() => {
    // Reset all mocks
    jest.clearAllMocks();
    
    // Create execution tracker for tracking operations
    executionTracker = new ExecutionTracker();
    
    // Create QueueService instance
    queueService = new QueueService();
  });
  
  /**
   * Test basic queue operations
   */
  test('should manage queues for different screens', () => {
    // Create mock stream sources
    const stream1 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/1' });
    const stream2 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/2' });
    const stream3 = createMockStreamSource({ screen: 2, url: 'https://youtube.com/3' });
    
    // Set up queues
    queueService.setQueue(1, [stream1, stream2]);
    queueService.setQueue(2, [stream3]);
    
    // Verify queues
    expect(queueService.getQueue(1)).toHaveLength(2);
    expect(queueService.getQueue(2)).toHaveLength(1);
    
    // Verify getNextStream
    expect(queueService.getNextStream(1)).toEqual(stream1);
    expect(queueService.getNextStream(2)).toEqual(stream3);
    
    // Remove from queue
    queueService.removeFromQueue(1, 0);
    
    // Verify queue after removal
    expect(queueService.getQueue(1)).toHaveLength(1);
    expect(queueService.getNextStream(1)).toEqual(stream2);
    
    // Clear queue
    queueService.clearQueue(1);
    
    // Verify queue is empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    expect(queueService.getNextStream(1)).toBeUndefined();
    
    // Clear all queues
    queueService.clearAllQueues();
    
    // Verify all queues are empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    expect(queueService.getQueue(2)).toHaveLength(0);
  });
  
  /**
   * Test watched streams management
   */
  test('should track watched streams correctly', () => {
    // Create mock stream sources
    const stream1 = createMockStreamSource({ url: 'https://youtube.com/1' });
    const stream2 = createMockStreamSource({ url: 'https://youtube.com/2' });
    
    // Initially no streams are watched
    expect(queueService.isStreamWatched(stream1.url)).toBe(false);
    expect(queueService.isStreamWatched(stream2.url)).toBe(false);
    expect(queueService.getWatchedStreams()).toHaveLength(0);
    
    // Mark stream1 as watched
    queueService.markStreamAsWatched(stream1.url);
    
    // Verify stream1 is watched
    expect(queueService.isStreamWatched(stream1.url)).toBe(true);
    expect(queueService.isStreamWatched(stream2.url)).toBe(false);
    expect(queueService.getWatchedStreams()).toHaveLength(1);
    expect(queueService.getWatchedStreams()).toContain(stream1.url);
    
    // Mark stream2 as watched
    queueService.markStreamAsWatched(stream2.url);
    
    // Verify both streams are watched
    expect(queueService.isStreamWatched(stream1.url)).toBe(true);
    expect(queueService.isStreamWatched(stream2.url)).toBe(true);
    expect(queueService.getWatchedStreams()).toHaveLength(2);
    expect(queueService.getWatchedStreams()).toContain(stream1.url);
    expect(queueService.getWatchedStreams()).toContain(stream2.url);
    
    // Clear watched streams
    queueService.clearWatchedStreams();
    
    // Verify no streams are watched
    expect(queueService.isStreamWatched(stream1.url)).toBe(false);
    expect(queueService.isStreamWatched(stream2.url)).toBe(false);
    expect(queueService.getWatchedStreams()).toHaveLength(0);
  });
  
  /**
   * Test filtering unwatched streams
   */
  test('should filter unwatched streams correctly', () => {
    // Create mock stream sources with different priorities
    const favoriteStream = createMockStreamSource({ 
      url: 'https://youtube.com/favorite', 
      priority: 100  // Lower priority = higher importance (favorite)
    });
    
    const normalStream1 = createMockStreamSource({ 
      url: 'https://youtube.com/normal1', 
      priority: 900  // Higher priority = lower importance (not favorite)
    });
    
    const normalStream2 = createMockStreamSource({ 
      url: 'https://youtube.com/normal2', 
      priority: 900  // Higher priority = lower importance (not favorite)
    });
    
    // Initially no streams are watched
    const allStreams = [favoriteStream, normalStream1, normalStream2];
    let filteredStreams = queueService.filterUnwatchedStreams(allStreams);
    
    // All streams should be included since none are watched
    expect(filteredStreams).toHaveLength(3);
    
    // Mark normalStream1 as watched
    queueService.markStreamAsWatched(normalStream1.url);
    
    // Filter again
    filteredStreams = queueService.filterUnwatchedStreams(allStreams);
    
    // normalStream1 should be excluded
    expect(filteredStreams).toHaveLength(2);
    expect(filteredStreams).toContainEqual(expect.objectContaining({ url: favoriteStream.url }));
    expect(filteredStreams).toContainEqual(expect.objectContaining({ url: normalStream2.url }));
    expect(filteredStreams).not.toContainEqual(expect.objectContaining({ url: normalStream1.url }));
    
    // Mark all normal streams as watched
    queueService.markStreamAsWatched(normalStream2.url);
    
    // Filter again
    filteredStreams = queueService.filterUnwatchedStreams(allStreams);
    
    // Only favorite stream should be included even though it's not watched
    // This is because all non-favorites are watched
    expect(filteredStreams).toHaveLength(1);
    expect(filteredStreams).toContainEqual(expect.objectContaining({ url: favoriteStream.url }));
    
    // Mark favorite stream as watched
    queueService.markStreamAsWatched(favoriteStream.url);
    
    // Filter again
    filteredStreams = queueService.filterUnwatchedStreams(allStreams);
    
    // Favorite stream should still be included even though it's watched
    // This is because all streams are watched, so we include favorites
    expect(filteredStreams).toHaveLength(1);
    expect(filteredStreams).toContainEqual(expect.objectContaining({ url: favoriteStream.url }));
  });
  
  /**
   * Test hasUnwatchedStreams method
   */
  test('should correctly determine if there are unwatched streams', () => {
    // Create mock stream sources
    const stream1 = createMockStreamSource({ url: 'https://youtube.com/1' });
    const stream2 = createMockStreamSource({ url: 'https://youtube.com/2' });
    const stream3 = createMockStreamSource({ url: 'https://youtube.com/3' });
    
    // Initially all streams are unwatched
    const streams = [stream1, stream2, stream3];
    expect(queueService.hasUnwatchedStreams(streams)).toBe(true);
    
    // Mark all streams as watched
    queueService.markStreamAsWatched(stream1.url);
    queueService.markStreamAsWatched(stream2.url);
    queueService.markStreamAsWatched(stream3.url);
    
    // Now there should be no unwatched streams
    expect(queueService.hasUnwatchedStreams(streams)).toBe(false);
    
    // Clear watched streams
    queueService.clearWatchedStreams();
    
    // Now all streams should be unwatched again
    expect(queueService.hasUnwatchedStreams(streams)).toBe(true);
  });
  
  /**
   * Test events emitted by the queue service
   */
  test('should emit appropriate events when queue changes', () => {
    // Create mock stream sources
    const stream1 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/1' });
    const stream2 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/2' });
    
    // Set up event listeners
    const queueUpdatedHandler = jest.fn();
    const queueEmptyHandler = jest.fn();
    const allWatchedHandler = jest.fn();
    
    queueService.on('queue:updated', queueUpdatedHandler);
    queueService.on('queue:empty', queueEmptyHandler);
    queueService.on('all:watched', allWatchedHandler);
    
    // Set queue with streams
    queueService.setQueue(1, [stream1, stream2]);
    
    // Verify queue:updated was emitted
    expect(queueUpdatedHandler).toHaveBeenCalledWith(1, [stream1, stream2]);
    expect(queueEmptyHandler).not.toHaveBeenCalled();
    expect(allWatchedHandler).not.toHaveBeenCalled();
    
    // Reset mocks
    queueUpdatedHandler.mockReset();
    
    // Remove all streams from queue
    queueService.removeFromQueue(1, 0);
    queueService.removeFromQueue(1, 0);
    
    // Verify queue:empty was emitted
    expect(queueUpdatedHandler).toHaveBeenCalledTimes(2);
    expect(queueEmptyHandler).toHaveBeenCalledWith(1);
    
    // Reset mocks
    queueUpdatedHandler.mockReset();
    queueEmptyHandler.mockReset();
    
    // Set empty queue
    queueService.setQueue(1, []);
    
    // Verify all:watched was emitted
    expect(queueUpdatedHandler).toHaveBeenCalledWith(1, []);
    expect(allWatchedHandler).toHaveBeenCalledWith(1);
  });
  
  /**
   * Test edge cases with invalid inputs
   */
  test('should handle invalid inputs gracefully', () => {
    // Set queue with null
    queueService.setQueue(1, null as any);
    
    // Verify queue is empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    
    // Set queue with undefined
    queueService.setQueue(1, undefined as any);
    
    // Verify queue is empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    
    // Set queue with invalid items
    queueService.setQueue(1, [null, undefined, { notAStream: true } as any]);
    
    // Verify queue is empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    
    // Add invalid stream to queue
    queueService.addToQueue(1, null as any);
    queueService.addToQueue(1, undefined as any);
    queueService.addToQueue(1, { notAStream: true } as any);
    
    // Verify queue is empty
    expect(queueService.getQueue(1)).toHaveLength(0);
    
    // Remove from invalid index
    queueService.removeFromQueue(1, -1);
    queueService.removeFromQueue(1, 100);
    
    // Should not throw errors
  });
});
</file>

<file path="src/components/ConfigEditor.svelte">
<script lang="ts">
  import { createEventDispatcher } from 'svelte';
  import type { StreamSourceConfig } from '$types/stream';
  
  let { config } = $props<{
    config: {
      streams: Array<{
        id: number;
        enabled: boolean;
        screen: number;
        sources: StreamSourceConfig[];
        sorting: {
          field: string;
          order: 'asc' | 'desc';
        };
        refresh: number;
        autoStart: boolean;
        quality: string;
        volume: number;
        windowMaximized: boolean;
      }>;
      organizations: string[];
      favoriteChannels: {
        holodex: string[];
        twitch: string[];
      };
      holodex: {
        apiKey: string;
      };
      twitch: {
        clientId: string;
        clientSecret: string;
        streamersFile: string;
      };
    };
  }>();

  const dispatch = createEventDispatcher();
  
  let editingStream = $state<number | null>(null);
  let editingSource = $state<number | null>(null);
  
  const sourceTypes = ['holodex', 'twitch'] as const;
  const sourceSubtypes = ['favorites', 'organization'] as const;
  const sortFields = ['viewerCount', 'startTime', 'title'] as const;
  const sortOrders = ['asc', 'desc'] as const;
  const qualities = ['best', '1080p', '720p', '480p', 'worst'] as const;

  function addStream() {
    config.streams = [
      ...config.streams,
      {
        id: Math.max(0, ...config.streams.map(s => s.id)) + 1,
        enabled: true,
        screen: config.streams.length + 1,
        sources: [],
        sorting: {
          field: 'viewerCount',
          order: 'desc'
        },
        refresh: 300,
        autoStart: true,
        quality: 'best',
        volume: 50,
        windowMaximized: true
      }
    ];
  }

  function removeStream(index: number) {
    config.streams = config.streams.filter((_, i) => i !== index);
  }

  function addSource(streamIndex: number) {
    const stream = config.streams[streamIndex];
    stream.sources = [
      ...stream.sources,
      {
        type: 'holodex',
        subtype: 'favorites',
        enabled: true,
        limit: 25,
        priority: stream.sources.length + 1
      }
    ];
    config.streams = [...config.streams];
  }

  function removeSource(streamIndex: number, sourceIndex: number) {
    const stream = config.streams[streamIndex];
    stream.sources = stream.sources.filter((_, i) => i !== sourceIndex);
    config.streams = [...config.streams];
  }

  function addOrganization() {
    config.organizations = [...config.organizations, ''];
  }

  function removeOrganization(index: number) {
    config.organizations = config.organizations.filter((_, i) => i !== index);
  }

  function addFavoriteChannel(platform: 'holodex' | 'twitch') {
    config.favoriteChannels[platform] = [...config.favoriteChannels[platform], ''];
  }

  function removeFavoriteChannel(platform: 'holodex' | 'twitch', index: number) {
    config.favoriteChannels[platform] = config.favoriteChannels[platform].filter((_, i) => i !== index);
  }

  function save() {
    dispatch('save', config);
  }
</script>

<div class="space-y-8">
  <!-- Streams Configuration -->
  <div class="bg-gray-800 rounded-lg p-6">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-xl font-semibold">Streams</h2>
      <button
        class="px-3 py-1.5 bg-green-600 hover:bg-green-700 rounded text-sm"
        onclick={addStream}
      >
        Add Stream
      </button>
    </div>

    <div class="space-y-6">
      {#each config.streams as stream, streamIndex}
        <div class="border-t border-gray-700 pt-4 first:border-0 first:pt-0">
          <div class="flex justify-between items-start mb-4">
            <div>
              <h3 class="text-lg font-medium">Stream {stream.id}</h3>
              <p class="text-sm text-gray-400">Screen {stream.screen}</p>
            </div>
            <div class="flex items-center space-x-2">
              <button
                class="p-1.5 hover:bg-gray-700 rounded"
                onclick={() => editingStream = streamIndex}
                aria-label="Edit stream"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                </svg>
              </button>
              <button
                class="p-1.5 hover:bg-red-600 rounded"
                onclick={() => removeStream(streamIndex)}
                aria-label="Remove stream"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
          </div>

          {#if editingStream === streamIndex}
            <div class="grid grid-cols-2 gap-4 mb-4">
              <label class="block">
                <span class="text-sm text-gray-300">Screen</span>
                <input
                  type="number"
                  class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                  bind:value={stream.screen}
                />
              </label>

              <label class="block">
                <span class="text-sm text-gray-300">Refresh (seconds)</span>
                <input
                  type="number"
                  class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                  bind:value={stream.refresh}
                />
              </label>

              <label class="block">
                <span class="text-sm text-gray-300">Quality</span>
                <select
                  class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
                  bind:value={stream.quality}
                >
                  {#each qualities as quality}
                    <option value={quality}>{quality}</option>
                  {/each}
                </select>
              </label>

              <label class="block">
                <span class="text-sm text-gray-300">Volume</span>
                <input
                  type="range"
                  min="0"
                  max="100"
                  class="mt-1 block w-full"
                  bind:value={stream.volume}
                />
              </label>

              <div class="col-span-2 flex items-center space-x-4">
                <label class="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    class="rounded bg-gray-700 border-gray-600"
                    bind:checked={stream.enabled}
                  />
                  <span class="text-sm text-gray-300">Enabled</span>
                </label>

                <label class="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    class="rounded bg-gray-700 border-gray-600"
                    bind:checked={stream.autoStart}
                  />
                  <span class="text-sm text-gray-300">Auto Start</span>
                </label>

                <label class="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    class="rounded bg-gray-700 border-gray-600"
                    bind:checked={stream.windowMaximized}
                  />
                  <span class="text-sm text-gray-300">Maximized</span>
                </label>
              </div>

              <div class="col-span-2">
                <span class="block text-sm text-gray-300 mb-2">Sorting</span>
                <div class="flex space-x-4">
                  <label class="sr-only" for="sort-field-{streamIndex}">Sort field</label>
                  <select
                    id="sort-field-{streamIndex}"
                    class="rounded-md bg-gray-700 border-gray-600"
                    bind:value={stream.sorting.field}
                  >
                    {#each sortFields as field}
                      <option value={field}>{field}</option>
                    {/each}
                  </select>

                  <label class="sr-only" for="sort-order-{streamIndex}">Sort order</label>
                  <select
                    id="sort-order-{streamIndex}"
                    class="rounded-md bg-gray-700 border-gray-600"
                    bind:value={stream.sorting.order}
                  >
                    {#each sortOrders as order}
                      <option value={order}>{order}</option>
                    {/each}
                  </select>
                </div>
              </div>
            </div>
          {/if}

          <!-- Sources -->
          <div class="mt-4">
            <div class="flex justify-between items-center mb-2">
              <h4 class="text-sm font-medium text-gray-300">Sources</h4>
              <button
                class="px-2 py-1 bg-blue-600 hover:bg-blue-700 rounded text-xs"
                onclick={() => addSource(streamIndex)}
              >
                Add Source
              </button>
            </div>

            <div class="space-y-2">
              {#each stream.sources as source, sourceIndex}
                <div class="bg-gray-700 p-3 rounded-lg">
                  <div class="flex justify-between items-start">
                    <div>
                      <div class="text-sm font-medium">
                        {source.type} {source.subtype ? `(${source.subtype})` : ''}
                      </div>
                      <div class="text-xs text-gray-400">
                        Priority: {source.priority}, Limit: {source.limit}
                      </div>
                    </div>

                    <div class="flex items-center space-x-2">
                      <button
                        class="p-1 hover:bg-gray-600 rounded"
                        onclick={() => editingSource = sourceIndex}
                        aria-label="Edit source"
                      >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                        </svg>
                      </button>
                      <button
                        class="p-1 hover:bg-red-600 rounded"
                        onclick={() => removeSource(streamIndex, sourceIndex)}
                        aria-label="Remove source"
                      >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                      </button>
                    </div>
                  </div>

                  {#if editingSource === sourceIndex}
                    <div class="grid grid-cols-2 gap-4 mt-4">
                      <label class="block">
                        <span class="text-xs text-gray-400">Type</span>
                        <select
                          class="mt-1 block w-full rounded-md bg-gray-600 border-gray-500 text-sm"
                          bind:value={source.type}
                        >
                          {#each sourceTypes as type}
                            <option value={type}>{type}</option>
                          {/each}
                        </select>
                      </label>

                      <label class="block">
                        <span class="text-xs text-gray-400">Subtype</span>
                        <select
                          class="mt-1 block w-full rounded-md bg-gray-600 border-gray-500 text-sm"
                          bind:value={source.subtype}
                        >
                          <option value="">None</option>
                          {#each sourceSubtypes as subtype}
                            <option value={subtype}>{subtype}</option>
                          {/each}
                        </select>
                      </label>

                      <label class="block">
                        <span class="text-xs text-gray-400">Priority</span>
                        <input
                          type="number"
                          class="mt-1 block w-full rounded-md bg-gray-600 border-gray-500 text-sm"
                          bind:value={source.priority}
                        />
                      </label>

                      <label class="block">
                        <span class="text-xs text-gray-400">Limit</span>
                        <input
                          type="number"
                          class="mt-1 block w-full rounded-md bg-gray-600 border-gray-500 text-sm"
                          bind:value={source.limit}
                        />
                      </label>

                      {#if source.subtype === 'organization'}
                        <label class="block col-span-2">
                          <span class="text-xs text-gray-400">Organization Name</span>
                          <input
                            type="text"
                            class="mt-1 block w-full rounded-md bg-gray-600 border-gray-500 text-sm"
                            bind:value={source.name}
                          />
                        </label>
                      {/if}

                      <label class="flex items-center space-x-2 col-span-2">
                        <input
                          type="checkbox"
                          class="rounded bg-gray-600 border-gray-500"
                          bind:checked={source.enabled}
                        />
                        <span class="text-sm text-gray-300">Enabled</span>
                      </label>
                    </div>
                  {/if}
                </div>
              {/each}
            </div>
          </div>
        </div>
      {/each}
    </div>
  </div>

  <!-- Organizations -->
  <div class="bg-gray-800 rounded-lg p-6">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-xl font-semibold">Organizations</h2>
      <button
        class="px-3 py-1.5 bg-green-600 hover:bg-green-700 rounded text-sm"
        onclick={addOrganization}
      >
        Add Organization
      </button>
    </div>

    <div class="space-y-2">
      {#each config.organizations as org, i}
        <div class="flex items-center space-x-2">
          <input
            type="text"
            class="flex-1 rounded-md bg-gray-700 border-gray-600"
            bind:value={config.organizations[i]}
          />
          <button
            class="p-1.5 hover:bg-red-600 rounded"
            onclick={() => removeOrganization(i)}
            aria-label="Remove organization"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
      {/each}
    </div>
  </div>

  <!-- API Configuration -->
  <div class="bg-gray-800 rounded-lg p-6">
    <h2 class="text-xl font-semibold mb-6">API Configuration</h2>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Holodex -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Holodex</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">API Key</span>
          <input
            type="password"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={config.holodex.apiKey}
          />
        </label>

        <div>
          <div class="flex justify-between items-center mb-2">
            <span class="text-sm text-gray-300">Favorite Channels</span>
            <button
              class="px-2 py-1 bg-blue-600 hover:bg-blue-700 rounded text-xs"
              onclick={() => addFavoriteChannel('holodex')}
            >
              Add Channel
            </button>
          </div>

          <div class="space-y-2">
            {#each config.favoriteChannels.holodex as channel, i}
              <div class="flex items-center space-x-2">
                <input
                  type="text"
                  class="flex-1 rounded-md bg-gray-700 border-gray-600"
                  bind:value={config.favoriteChannels.holodex[i]}
                />
                <button
                  class="p-1.5 hover:bg-red-600 rounded"
                  onclick={() => removeFavoriteChannel('holodex', i)}
                  aria-label="Remove Holodex channel"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            {/each}
          </div>
        </div>
      </div>

      <!-- Twitch -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Twitch</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Client ID</span>
          <input
            type="password"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={config.twitch.clientId}
          />
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Client Secret</span>
          <input
            type="password"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={config.twitch.clientSecret}
          />
        </label>

        <div>
          <div class="flex justify-between items-center mb-2">
            <span class="text-sm text-gray-300">Favorite Channels</span>
            <button
              class="px-2 py-1 bg-blue-600 hover:bg-blue-700 rounded text-xs"
              onclick={() => addFavoriteChannel('twitch')}
            >
              Add Channel
            </button>
          </div>

          <div class="space-y-2">
            {#each config.favoriteChannels.twitch as channel, i}
              <div class="flex items-center space-x-2">
                <input
                  type="text"
                  class="flex-1 rounded-md bg-gray-700 border-gray-600"
                  bind:value={config.favoriteChannels.twitch[i]}
                />
                <button
                  class="p-1.5 hover:bg-red-600 rounded"
                  onclick={() => removeFavoriteChannel('twitch', i)}
                  aria-label="Remove Twitch channel"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            {/each}
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Save Button -->
  <div class="flex justify-end">
    <button
      class="px-6 py-2 bg-green-600 hover:bg-green-700 rounded text-white font-medium"
      onclick={save}
    >
      Save Configuration
    </button>
  </div>
</div>
</file>

<file path="src/components/LayerConfig.svelte">
<script lang="ts">
  import type { LayerConfig } from '../types/config';
  import { createEventDispatcher } from 'svelte';

  let { layer } = $props<{ layer: LayerConfig }>();
  
  const dispatch = createEventDispatcher();

  const blendModes = ['normal', 'multiply', 'screen', 'overlay'];

  function updateLayer() {
    dispatch('update', layer);
  }
</script>

<div class="bg-gray-800 rounded-lg p-6">
  <h2 class="text-xl font-semibold mb-6">Layer Configuration</h2>
  
  <div class="space-y-4">
    <label class="block">
      <span class="text-sm text-gray-300">Z-Index</span>
      <input
        type="number"
        class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
        bind:value={layer.zIndex}
        min="0"
        onchange={updateLayer}
      />
    </label>

    <label class="block">
      <span class="text-sm text-gray-300">Opacity</span>
      <div class="flex items-center space-x-4">
        <input
          type="range"
          class="flex-1"
          bind:value={layer.opacity}
          min="0"
          max="1"
          step="0.1"
          onchange={updateLayer}
        />
        <span class="text-sm text-gray-300 w-12 text-right">
          {Math.round(layer.opacity * 100)}%
        </span>
      </div>
    </label>

    <label class="flex items-center space-x-2">
      <input
        type="checkbox"
        class="rounded bg-gray-700 border-gray-600"
        bind:checked={layer.visible}
        onchange={updateLayer}
      />
      <span class="text-sm text-gray-300">Visible</span>
    </label>

    <label class="block">
      <span class="text-sm text-gray-300">Blend Mode</span>
      <select
        class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
        bind:value={layer.blendMode}
        onchange={updateLayer}
      >
        {#each blendModes as mode}
          <option value={mode}>{mode}</option>
        {/each}
      </select>
    </label>
  </div>
</div>
</file>

<file path="src/components/Navigation.svelte">
<script lang="ts">
    import { page } from '$app/stores';
</script>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">LiveLink</a>
        <button 
            class="navbar-toggler" 
            type="button" 
            data-bs-toggle="collapse" 
            data-bs-target="#navbarNav"
            aria-label="Toggle navigation"
        >
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a 
                        href="/" 
                        class="nav-link {$page.url.pathname === '/' ? 'active' : ''}"
                    >
                        Home
                    </a>
                </li>
                <li class="nav-item">
                    <a 
                        href="/streams" 
                        class="nav-link {$page.url.pathname === '/streams' ? 'active' : ''}"
                    >
                        Streams
                    </a>
                </li>
                <li class="nav-item">
                    <a 
                        href="/settings" 
                        class="nav-link {$page.url.pathname === '/settings' ? 'active' : ''}"
                    >
                        Settings
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>
</file>

<file path="src/components/PlayerConfig.svelte">
<script lang="ts">
  import type { MPVConfig, StreamlinkConfig } from '../types/config';
  import { createEventDispatcher } from 'svelte';

  let { mpvConfig = {}, streamlinkConfig = {} } = $props<{
    mpvConfig: MPVConfig;
    streamlinkConfig: StreamlinkConfig;
  }>();

  const dispatch = createEventDispatcher();

  const videoOutputs = ['gpu', 'gpu-next', 'libmpv', 'null'];
  const hwdecOptions = ['auto', 'auto-copy', 'no', 'vaapi', 'vdpau', 'cuda'];
  const gpuApiOptions = ['auto', 'opengl', 'vulkan', 'directx11'];
  const videoSyncOptions = ['audio', 'display-resample', 'display-resample-vdrop', 'display-vdrop'];
  const tscaleOptions = ['oversample', 'linear', 'catmull_rom', 'mitchell', 'gaussian', 'bicubic'];
  const audioChannelOptions = ['auto', 'stereo', '5.1', '7.1'];

  function updateMPVConfig() {
    dispatch('mpvupdate', mpvConfig);
  }

  function updateStreamlinkConfig() {
    dispatch('streamlinkupdate', streamlinkConfig);
  }
</script>

<div class="space-y-8">
  <!-- MPV Configuration -->
  <div class="bg-gray-800 rounded-lg p-6">
    <h2 class="text-xl font-semibold mb-6">MPV Configuration</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Core Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Core Settings</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Video Output</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.vo}
            onchange={updateMPVConfig}
          >
            <option value="">Auto</option>
            {#each videoOutputs as output}
              <option value={output}>{output}</option>
            {/each}
          </select>
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Hardware Decoding</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.hwdec}
            onchange={updateMPVConfig}
          >
            <option value="">Auto</option>
            {#each hwdecOptions as option}
              <option value={option}>{option}</option>
            {/each}
          </select>
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">GPU API</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig['gpu-api']}
            onchange={updateMPVConfig}
          >
            <option value="">Auto</option>
            {#each gpuApiOptions as api}
              <option value={api}>{api}</option>
            {/each}
          </select>
        </label>
      </div>

      <!-- Video Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Video Settings</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Video Sync</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.video_sync}
            onchange={updateMPVConfig}
          >
            <option value="">Default</option>
            {#each videoSyncOptions as sync}
              <option value={sync}>{sync}</option>
            {/each}
          </select>
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Temporal Scale</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.tscale}
            onchange={updateMPVConfig}
          >
            <option value="">Default</option>
            {#each tscaleOptions as scale}
              <option value={scale}>{scale}</option>
            {/each}
          </select>
        </label>

        <label class="flex items-center space-x-2">
          <input
            type="checkbox"
            class="rounded bg-gray-700 border-gray-600"
            bind:checked={mpvConfig.interpolation}
            onchange={updateMPVConfig}
          />
          <span class="text-sm text-gray-300">Enable Interpolation</span>
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Deband</span>
          <input
            type="range"
            bind:value={mpvConfig.deband}
            min="0"
            max="32"
            onchange={updateMPVConfig}
          />
        </label>
      </div>

      <!-- Audio Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Audio Settings</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Audio Channels</span>
          <select
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.audio_channels}
            onchange={updateMPVConfig}
          >
            <option value="">Auto</option>
            {#each audioChannelOptions as channels}
              <option value={channels}>{channels}</option>
            {/each}
          </select>
        </label>
      </div>

      <!-- Performance Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Performance Settings</h3>
        
        <label class="flex items-center space-x-2">
          <input
            type="checkbox"
            class="rounded bg-gray-700 border-gray-600"
            bind:checked={mpvConfig.gpu_dumb_mode}
            onchange={updateMPVConfig}
          />
          <span class="text-sm text-gray-300">GPU Dumb Mode</span>
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Video Decoder Threads</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={mpvConfig.vd_lavc_threads}
            min="0"
            max="32"
            onchange={updateMPVConfig}
          />
        </label>
      </div>
    </div>
  </div>

  <!-- Streamlink Configuration -->
  <div class="bg-gray-800 rounded-lg p-6">
    <h2 class="text-xl font-semibold mb-6">Streamlink Configuration</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Stream Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Stream Settings</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Retry Open</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.retry_open}
            min="0"
            onchange={updateStreamlinkConfig}
          />
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Retry Streams</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.retry_streams}
            min="0"
            onchange={updateStreamlinkConfig}
          />
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Stream Timeout (seconds)</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.stream_timeout}
            min="0"
            onchange={updateStreamlinkConfig}
          />
        </label>
      </div>

      <!-- Buffer Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Buffer Settings</h3>
        
        <label class="block">
          <span class="text-sm text-gray-300">Ring Buffer Size</span>
          <input
            type="text"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.ringbuffer_size}
            placeholder="e.g., 32M"
            onchange={updateStreamlinkConfig}
          />
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Segment Threads</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.stream_segment_threads}
            min="1"
            max="10"
            onchange={updateStreamlinkConfig}
          />
        </label>

        <label class="block">
          <span class="text-sm text-gray-300">Segment Timeout (seconds)</span>
          <input
            type="number"
            class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600"
            bind:value={streamlinkConfig.stream_segment_timeout}
            min="0"
            onchange={updateStreamlinkConfig}
          />
        </label>
      </div>

      <!-- Platform Settings -->
      <div class="space-y-4">
        <h3 class="text-lg font-medium">Platform Settings</h3>
        
        <label class="flex items-center space-x-2">
          <input
            type="checkbox"
            class="rounded bg-gray-700 border-gray-600"
            bind:checked={streamlinkConfig.twitch_disable_hosting}
            onchange={updateStreamlinkConfig}
          />
          <span class="text-sm text-gray-300">Disable Twitch Hosting</span>
        </label>

        <label class="flex items-center space-x-2">
          <input
            type="checkbox"
            class="rounded bg-gray-700 border-gray-600"
            bind:checked={streamlinkConfig.twitch_disable_ads}
            onchange={updateStreamlinkConfig}
          />
          <span class="text-sm text-gray-300">Disable Twitch Ads</span>
        </label>
      </div>
    </div>
  </div>
</div>
</file>

<file path="src/components/StreamCard.svelte">
<script lang="ts">
  import type { Stream } from '../types/stream';
  import { createEventDispatcher } from 'svelte';

  const dispatch = createEventDispatcher();

  let { stream } = $props<{ stream: Stream }>();
  
  let volume = $state(50);
  let showControls = $state(false);

  async function sendCommand(command: string) {
    try {
      await fetch(`/api/player/command/${stream.screen}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ command })
      });
    } catch (error) {
      console.error('Failed to send command:', error);
    }
  }

  async function setVolume(value: number) {
    volume = value;
    await sendCommand(`set volume ${value}`);
  }

  async function togglePause() {
    await sendCommand('cycle pause');
  }

  async function seek(seconds: number) {
    await sendCommand(`seek ${seconds}`);
  }
</script>

<div class="bg-gray-700 rounded-lg p-4 relative group">
  <div class="flex justify-between items-start">
    <div class="space-y-2">
      <h3 class="font-semibold truncate max-w-[300px]">
        {stream.title || 'Untitled Stream'}
      </h3>
      <p class="text-sm text-gray-300 truncate max-w-[300px]">
        {stream.url}
      </p>
      <p class="text-sm text-gray-400">
        Quality: {stream.quality}
      </p>
    </div>

    <div class="flex space-x-2">
      <button
        class="p-2 rounded hover:bg-gray-600 transition-colors"
        onclick={() => showControls = !showControls}
        aria-label="Toggle controls"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" />
        </svg>
      </button>
      
      <button
        class="p-2 rounded bg-red-500 hover:bg-red-600 transition-colors"
        onclick={() => dispatch('stop')}
        aria-label="Stop stream"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  {#if showControls}
    <div class="mt-4 space-y-4">
      <div class="flex items-center space-x-4">
        <button
          class="p-2 rounded hover:bg-gray-600 transition-colors"
          onclick={togglePause}
          aria-label="Play/Pause"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </button>

        <button
          class="p-2 rounded hover:bg-gray-600 transition-colors"
          onclick={() => seek(-10)}
          aria-label="Rewind 10 seconds"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z" />
          </svg>
        </button>

        <button
          class="p-2 rounded hover:bg-gray-600 transition-colors"
          onclick={() => seek(10)}
          aria-label="Forward 10 seconds"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.933 12.8a1 1 0 000-1.6l-5.334-4A1 1 0 005 8v8a1 1 0 001.6.8l5.334-4zM19.933 12.8a1 1 0 000-1.6l-5.334-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.334-4z" />
          </svg>
        </button>
      </div>

      <div class="flex items-center space-x-4">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072M12 9.5l-3-3m0 0l-3 3m3-3v12" />
        </svg>
        
        <input
          type="range"
          min="0"
          max="100"
          bind:value={volume}
          onchange={() => setVolume(volume)}
          class="w-full h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer"
        />
        
        <span class="text-sm text-gray-300 min-w-[3ch]">
          {volume}
        </span>
      </div>
    </div>
  {/if}
</div>
</file>

<file path="src/config/default/filters.json">
{
  "filters": [
    "Holostars",
    "HOLOSTARS",
    "HoloStars",
    "holostarsen",
    "holostarsJP",
    "花咲みやび",
    "奏手イヅル",
    "アルランディス",
    "律可",
    "アステル・レダ",
    "岸堂天真",
    "夕刻ロベル",
    "影山シエン",
    "荒咬オウガ",
    "夜十神封魔",
    "羽継烏有",
    "水無世燐央",
    "緋崎ガンマ",
    "Hanasaki Miyabi",
    "HanasakiMiyabi",
    "Kanade Izuru",
    "KanadeIzuru",
    "Arurandeisu",
    "Rikka",
    "Astel Leda",
    "AstelLeda",
    "Kishido Temma",
    "KishidoTemma",
    "Yukoku Roberu",
    "YukokuRoberu",
    "Kageyama Shien",
    "KageyamaShien",
    "Aragami Oga",
    "AragamiOga",
    "Yatogami Fuma",
    "YatogamiFuma",
    "Utsugi Uyu",
    "UtsugiUyu",
    "Minase Rio",
    "MinaseRio",
    "Hizaki Gamma",
    "HizakiGamma",
    "Regis Altare",
    "RegisAltare",
    "Magni Dezmond",
    "MagniDezmond",
    "Axel Syrios",
    "AxelSyrios",
    "Noir Vesper",
    "NoirVesper",
    "Gavis Bettel",
    "GavisBettel",
    "Machina X Flayon",
    "MachinaXFlayon",
    "Banzoin Hakka",
    "BanzoinHakka",
    "Josuiji Shinri",
    "JosuijiShinri"
  ]
}
</file>

<file path="src/lib/api.ts">
import type { Stream, StreamSource, PlayerSettings, ScreenConfig } from '../types/stream.js';

class ApiClient {
  private baseUrl = '/api';
  private useCaching = true;

  // Helper method to safely parse JSON
  private async safeJsonParse(response: Response): Promise<any> {
    try {
      return await response.json();
    } catch (error) {
      console.error('JSON parsing error:', error);
      throw new Error('Invalid JSON response from server');
    }
  }

  // Helper method to make API requests with error handling and caching
  private async request<T>(
    endpoint: string, 
    options?: RequestInit, 
    useCache: boolean = true
  ): Promise<T> {
    const url = `${this.baseUrl}${endpoint}`;
    
    try {
      let response: Response;
      
      // For GET requests, use caching or debouncing if enabled
      if (options?.method === undefined || options?.method === 'GET') {
        if (this.useCaching && typeof window !== 'undefined') {
          // Check if window.cachedFetch exists
          if (typeof (window as any).cachedFetch === 'function') {
            return await (window as any).cachedFetch(url, options);
          }
          // Check if window.debouncedFetch exists
          if (typeof (window as any).debouncedFetch === 'function') {
            return await (window as any).debouncedFetch(url, options);
          }
        }
        
        // Fall back to regular fetch if caching is disabled or the functions don't exist
        response = await fetch(url, options);
      } else {
        // For non-GET requests, use regular fetch
        response = await fetch(url, options);
      }
      
      if (!response.ok) {
        const errorText = await response.text();
        let errorMessage = `API error (${response.status}): `;
        
        try {
          // Try to parse error as JSON
          const errorJson = JSON.parse(errorText);
          errorMessage += errorJson.error || errorJson.message || errorText;
        } catch {
          // If not JSON, use text
          errorMessage += errorText || response.statusText;
        }
        
        throw new Error(errorMessage);
      }
      
      return await this.safeJsonParse(response);
    } catch (error) {
      console.error(`API request failed for ${endpoint}:`, error);
      throw error;
    }
  }

  // Stream Management
  async getActiveStreams(): Promise<Stream[]> {
    return this.request<Stream[]>('/streams/active');
  }

  async startStream(url: string, screen?: number, quality?: string): Promise<any> {
    return this.request<any>('/streams/start', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ url, screen, quality })
    }, false);
  }

  async stopStream(screen: number): Promise<void> {
    await this.request<void>(`/streams/${screen}`, {
      method: 'DELETE'
    }, false);
  }

  async restartStream(screen: number): Promise<void> {
    await this.request<void>('/streams/restart', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ screen })
    }, false);
  }

  // Queue Management
  async getQueue(screen: number): Promise<StreamSource[]> {
    return this.request<StreamSource[]>(`/streams/queue/${screen}`);
  }

  async addToQueue(screen: number, stream: StreamSource): Promise<void> {
    await this.request<void>(`/streams/queue/${screen}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(stream)
    }, false);
  }

  async removeFromQueue(screen: number, index: number): Promise<void> {
    await this.request<void>(`/streams/queue/${screen}/${index}`, {
      method: 'DELETE'
    }, false);
  }

  async reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise<void> {
    await this.request<void>('/streams/reorder', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ screen, sourceIndex, targetIndex })
    }, false);
  }

  // Player Controls
  async sendCommand(screen: number, command: string): Promise<void> {
    await this.request<void>(`/player/command/${screen}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ command })
    }, false);
  }

  async sendCommandToAll(command: string): Promise<void> {
    await this.request<void>('/player/command/all', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ command })
    }, false);
  }

  async setVolume(target: number | 'all', level: number): Promise<void> {
    await this.request<void>(`/player/volume/${target}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ level })
    }, false);
  }

  async togglePause(target: number | 'all'): Promise<void> {
    await this.request<void>(`/player/pause/${target}`, {
      method: 'POST'
    }, false);
  }

  async seek(target: number | 'all', seconds: number): Promise<void> {
    await this.request<void>(`/player/seek/${target}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ seconds })
    }, false);
  }

  // Settings
  async getPlayerSettings(): Promise<PlayerSettings> {
    return this.request<PlayerSettings>('/player/settings');
  }

  async updatePlayerSettings(settings: Partial<PlayerSettings>): Promise<void> {
    await this.request<void>('/player/settings', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(settings)
    }, false);
  }

  async getScreenConfigs(): Promise<ScreenConfig[]> {
    return this.request<ScreenConfig[]>('/screens');
  }

  async updateScreenConfig(screen: number, config: Partial<ScreenConfig>): Promise<void> {
    await this.request<void>(`/screens/${screen}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(config)
    }, false);
  }

  // Watched Streams
  async getWatchedStreams(): Promise<string[]> {
    return this.request<string[]>('/streams/watched');
  }

  async markStreamAsWatched(url: string): Promise<void> {
    await this.request<void>('/streams/watched', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ url })
    }, false);
  }

  async clearWatchedStreams(): Promise<void> {
    await this.request<void>('/streams/watched', {
      method: 'DELETE'
    }, false);
  }

  // Server Control
  async stopServer(): Promise<void> {
    await this.request<void>('/server/stop', {
      method: 'POST'
    }, false);
  }

  // Get all streams
  async getAllStreams(options: { organization?: string, limit?: number } = {}): Promise<StreamSource[]> {
    const params = new URLSearchParams();
    if (options.organization) params.append('organization', options.organization);
    if (options.limit) params.append('limit', options.limit.toString());
    
    const queryString = params.toString() ? `?${params.toString()}` : '';
    return this.request<StreamSource[]>(`/streams${queryString}`);
  }

  // Get organizations
  async getOrganizations(): Promise<string[]> {
    return this.request<string[]>('/organizations');
  }

  // Auto-start streams
  async autoStartStreams(): Promise<void> {
    await this.request<void>('/streams/autostart', {
      method: 'POST'
    }, false);
  }

  // Enable/disable caching
  setCaching(enabled: boolean): void {
    this.useCaching = enabled;
  }

  async getStreamStatus(screen: number) {
    const response = await fetch(`${this.baseUrl}/streams/${screen}/status`);
    if (!response.ok) {
      throw new Error('Failed to get stream status');
    }
    return response.json();
  }
}

export const api = new ApiClient();
</file>

<file path="src/routes/api/+page.svelte">
<script lang="ts">
    import { page } from '$app/stores';
    import { goto } from '$app/navigation';
    
    let activeTab = $state('overview'); // or whatever default tab you want
    
    // Persist the active tab when navigating
    $effect(() => {
        if ($page.url.searchParams.get('tab')) {
            activeTab = $page.url.searchParams.get('tab')!;
        }
    });
    
    function switchTab(tab: string) {
        activeTab = tab;
        // Update URL without full page reload
        goto(`?tab=${tab}`, { replaceState: true });
    }
</script>

<div class="tabs">
    <button 
        class="tab {activeTab === 'overview' ? 'active' : ''}"
        onclick={() => switchTab('overview')}
    >
        Overview
    </button>
    <button 
        class="tab {activeTab === 'endpoints' ? 'active' : ''}"
        onclick={() => switchTab('endpoints')}
    >
        Endpoints
    </button>
    <!-- Add more tabs as needed -->
</div>

<div class="tab-content">
    {#if activeTab === 'overview'}
        <div class="tab-pane">
            <!-- Overview content -->
        </div>
    {:else if activeTab === 'endpoints'}
        <div class="tab-pane">
            <!-- Endpoints content -->
        </div>
    {/if}
</div>

<style>
    .tabs {
        display: flex;
        gap: 1rem;
        border-bottom: 1px solid #444;
        padding: 1rem;
    }
    
    .tab {
        padding: 0.5rem 1rem;
        border: none;
        background: none;
        color: #fff;
        cursor: pointer;
        border-bottom: 2px solid transparent;
    }
    
    .tab.active {
        border-bottom-color: #fff;
    }
    
    .tab-content {
        padding: 1rem;
    }
    
    .tab-pane {
        animation: fadeIn 0.2s ease-in-out;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
</style>
</file>

<file path="src/routes/+page.svelte">
<script lang="ts">
  import { onMount, onDestroy } from 'svelte';
  import { twitchUser } from '$lib/stores/auth';
  import { page } from '$app/stores';

  interface StreamSource {
    url: string;
    title: string;
    platform?: string;
    viewerCount?: number;
    organization?: string;
    channelId?: string;
    thumbnail?: string;
  }

  interface ApiRoute {
    method: string;
    path: string;
    description: string;
    testable: boolean;
  }

  interface ConfigSection {
    title: string;
    description: string;
    fields: ConfigField[];
  }

  interface ConfigField {
    name: string;
    type: 'text' | 'number' | 'boolean' | 'select';
    label: string;
    value: any;
    options?: string[];
    description?: string;
  }

  let twitchStreams: StreamSource[] = [];
  let holodexStreams: StreamSource[] = [];
  let selectedOrg = 'Hololive';
  let organizations: string[] = [];
  let loading = true;
  let error: string | null = null;
  let refreshInterval: number | null = null;
  let activeTab = 'streams';
  
  // API routes organized by category
  const apiRoutes: Record<string, ApiRoute[]> = {
    'Streams': [
      { method: 'GET', path: '/api/streams', description: 'Get all streams', testable: true },
      { method: 'GET', path: '/api/streams/active', description: 'Get active streams', testable: true },
      { method: 'GET', path: '/api/streams/vtubers', description: 'Get VTuber streams', testable: true },
      { method: 'GET', path: '/api/streams/japanese', description: 'Get Japanese streams', testable: true },
      { method: 'POST', path: '/api/streams/start', description: 'Start a stream', testable: false },
      { method: 'POST', path: '/api/streams/autostart', description: 'Auto-start streams', testable: false }
    ],
    'Player': [
      { method: 'GET', path: '/api/player/settings', description: 'Get player settings', testable: true },
      { method: 'POST', path: '/api/player/command/:screen', description: 'Send command to screen', testable: false },
      { method: 'POST', path: '/api/player/volume/:target', description: 'Set volume', testable: false },
      { method: 'POST', path: '/api/player/pause/:target', description: 'Toggle pause', testable: false }
    ],
    'Screens': [
      { method: 'GET', path: '/api/screens', description: 'Get all screen configs', testable: true },
      { method: 'PUT', path: '/api/screens/:screen', description: 'Update screen config', testable: false },
      { method: 'POST', path: '/api/screens/:screen/enable', description: 'Enable screen', testable: false },
      { method: 'POST', path: '/api/screens/:screen/disable', description: 'Disable screen', testable: false }
    ],
    'Config': [
      { method: 'GET', path: '/api/config', description: 'Get app config', testable: true },
      { method: 'PUT', path: '/api/config', description: 'Update app config', testable: false },
      { method: 'GET', path: '/api/organizations', description: 'Get organizations', testable: true }
    ],
    'Queue': [
      { method: 'GET', path: '/api/streams/queue/:screen', description: 'Get queue for screen', testable: true },
      { method: 'POST', path: '/api/streams/queue/:screen', description: 'Add to queue', testable: false },
      { method: 'DELETE', path: '/api/streams/queue/:screen/:index', description: 'Remove from queue', testable: false },
      { method: 'POST', path: '/api/streams/reorder', description: 'Reorder queue', testable: false }
    ],
    'Watched': [
      { method: 'GET', path: '/api/streams/watched', description: 'Get watched streams', testable: true },
      { method: 'POST', path: '/api/streams/watched', description: 'Mark stream as watched', testable: false },
      { method: 'DELETE', path: '/api/streams/watched', description: 'Clear watched streams', testable: false }
    ]
  };

  // Configuration sections
  const configSections: ConfigSection[] = [
    {
      title: 'Player Settings',
      description: 'Configure global player settings',
      fields: [
        { name: 'defaultQuality', type: 'select', label: 'Default Quality', value: 'best', options: ['best', 'high', 'medium', 'low'] },
        { name: 'defaultVolume', type: 'number', label: 'Default Volume', value: 50 },
        { name: 'processPriority', type: 'select', label: 'Process Priority', value: 'normal', options: ['normal', 'high', 'realtime', 'above_normal', 'below_normal', 'low', 'idle'] },
        { name: 'windowMode', type: 'select', label: 'Window Mode', value: 'windowed', options: ['windowed', 'fullscreen', 'borderless'] },
        { name: 'preferStreamlink', type: 'boolean', label: 'Prefer Streamlink', value: false },
        { name: 'windowMaximized', type: 'boolean', label: 'Maximize Window', value: true },
        { name: 'maxStreams', type: 'number', label: 'Max Streams', value: 4 },
        { name: 'autoStart', type: 'boolean', label: 'Auto-Start Streams', value: true }
      ]
    },
    {
      title: 'Twitch Settings',
      description: 'Configure Twitch API settings',
      fields: [
        { name: 'clientId', type: 'text', label: 'Client ID', value: '' },
        { name: 'clientSecret', type: 'text', label: 'Client Secret', value: '' },
        { name: 'streamersFile', type: 'text', label: 'Streamers File', value: 'config/streamers.txt' }
      ]
    },
    {
      title: 'Holodex Settings',
      description: 'Configure Holodex API settings',
      fields: [
        { name: 'apiKey', type: 'text', label: 'API Key', value: '' }
      ]
    },
    {
      title: 'MPV Settings',
      description: 'Configure MPV player settings',
      fields: [
        { name: 'priority', type: 'select', label: 'Priority', value: 'normal', options: ['normal', 'high', 'realtime', 'above_normal', 'below_normal', 'low', 'idle'] },
        { name: 'gpu-context', type: 'text', label: 'GPU Context', value: 'auto' }
      ]
    }
  ];

  let testResults: Record<string, { data: any, error: string | null }> = {};
  let expandedConfig: string | null = null;

  async function fetchData() {
    loading = true;
    error = null;
    
    try {
      // Fetch organizations
      try {
        const orgResponse = await fetch('/api/organizations');
        if (orgResponse.ok) {
          organizations = await orgResponse.json();
        } else {
          console.warn('Failed to fetch organizations:', orgResponse.status);
          organizations = ['Hololive', 'Nijisanji', 'VSpo', 'Independents'];
        }
      } catch (err) {
        console.warn('Error fetching organizations:', err);
        organizations = ['Hololive', 'Nijisanji', 'VSpo', 'Independents'];
      }

      // Fetch Twitch VTuber streams
      try {
        const twitchResponse = await fetch('/api/streams/vtubers?limit=10');
        if (twitchResponse.ok) {
          twitchStreams = await twitchResponse.json();
        } else {
          console.warn('Failed to fetch Twitch streams:', twitchResponse.status);
          twitchStreams = [];
        }
      } catch (err) {
        console.warn('Error fetching Twitch streams:', err);
        twitchStreams = [];
      }

      // Fetch Holodex streams for selected organization
      try {
        const holodexResponse = await fetch(`/api/streams?organization=${selectedOrg}&limit=10`);
        if (holodexResponse.ok) {
          holodexStreams = await holodexResponse.json();
        } else {
          console.warn('Failed to fetch Holodex streams:', holodexResponse.status);
          holodexStreams = [];
        }
      } catch (err) {
        console.warn('Error fetching Holodex streams:', err);
        holodexStreams = [];
      }
    } catch (err) {
      error = err instanceof Error ? err.message : 'An unknown error occurred';
      console.error('Error fetching data:', err);
    } finally {
      loading = false;
    }
  }

  async function testApiRoute(route: ApiRoute) {
    if (!route.testable) return;
    
    try {
      const response = await fetch(route.path);
      if (response.ok) {
        const data = await response.json();
        testResults[route.path] = { data, error: null };
      } else {
        testResults[route.path] = { 
          data: null, 
          error: `Status: ${response.status} - ${response.statusText}` 
        };
      }
    } catch (err) {
      testResults[route.path] = { 
        data: null, 
        error: err instanceof Error ? err.message : 'An unknown error occurred' 
      };
    }
    
    // Force update
    testResults = {...testResults};
  }

  function login() {
    window.location.href = '/api/auth/twitch';
  }

  function setRefreshInterval(seconds: number) {
    if (refreshInterval) {
      clearInterval(refreshInterval);
      refreshInterval = null;
    }
    
    if (seconds > 0) {
      refreshInterval = setInterval(fetchData, seconds * 1000) as unknown as number;
    }
  }

  function toggleConfigSection(title: string) {
    expandedConfig = expandedConfig === title ? null : title;
  }

  onMount(() => {
    fetchData();
    setRefreshInterval(60); // Refresh every 60 seconds by default
  });

  onDestroy(() => {
    if (refreshInterval) {
      clearInterval(refreshInterval);
    }
  });
</script>

<div class="container-fluid py-4">
  <header class="mb-4">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark rounded">
      <div class="container-fluid">
        <a class="navbar-brand" href={$page.url.pathname !== '/login' &&
                                      $page.url.pathname !== '/register' ? (
                                      currentUser && currentUser.admin ?
                                      '/admin' :
                                      '/'
                                  ) : '/'}>LiveLink</a>
        <button 
          class="navbar-toggler" 
          type="button" 
          data-bs-toggle="collapse" 
          data-bs-target="#navbarNav"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <a class="nav-link" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/streams">Streams</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/settings">Settings</a>
            </li>
          </ul>
          {#if !$twitchUser.isAuthenticated}
            <button 
              class="btn btn-outline-light"
              onclick={login}
            >
              Login with Twitch
            </button>
          {:else}
            <span class="navbar-text">Welcome, {$twitchUser.username}!</span>
          {/if}
        </div>
      </div>
    </nav>
  </header>

  <main>
    <!-- Tab Navigation -->
    <ul class="nav nav-tabs mb-4">
      <li class="nav-item">
        <button 
          class="nav-link {activeTab === 'streams' ? 'active' : ''}"
          onclick={() => activeTab = 'streams'}
        >
          Live Streams
        </button>
      </li>
      <li class="nav-item">
        <button 
          class="nav-link {activeTab === 'api' ? 'active' : ''}"
          onclick={() => activeTab = 'api'}
        >
          API Explorer
        </button>
      </li>
      <li class="nav-item">
        <button 
          class="nav-link {activeTab === 'config' ? 'active' : ''}"
          onclick={() => activeTab = 'config'}
        >
          Configuration
        </button>
      </li>
    </ul>

    {#if error}
      <div class="alert alert-danger alert-dismissible fade show mb-4">
        <strong>Error!</strong> {error}
        <button 
          type="button" 
          class="btn-close" 
          onclick={() => error = null}
          aria-label="Close"
        ></button>
      </div>
    {/if}

    <!-- Streams Tab -->
    {#if activeTab === 'streams'}
      <div class="mb-4 d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
          <label for="orgSelect" class="me-2">Organization:</label>
          <select 
            id="orgSelect"
            class="form-select"
            bind:value={selectedOrg}
            onchange={() => fetchData()}
          >
            {#each organizations as org}
              <option value={org}>{org}</option>
            {/each}
          </select>
        </div>
        <div>
          <button 
            class="btn btn-primary"
            onclick={fetchData}
            disabled={loading}
          >
            {loading ? 'Loading...' : 'Refresh'}
          </button>
        </div>
      </div>

      <!-- Stream Grid -->
      <div class="row g-4">
        <!-- Twitch Streams -->
        <div class="col-md-6">
          <div class="card card-dark h-100">
            <div class="card-header card-header-dark d-flex justify-content-between align-items-center">
              <h5 class="mb-0">Twitch VTubers</h5>
              <span class="badge bg-info">{twitchStreams.length}</span>
            </div>
            <div class="card-body">
              {#if loading && twitchStreams.length === 0}
                <div class="d-flex justify-content-center">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>
                </div>
              {:else if twitchStreams.length === 0}
                <div class="alert alert-secondary">No streams available</div>
              {:else}
                <div class="list-group">
                  {#each twitchStreams as stream}
                    <div class="list-group-item list-group-item-action bg-dark text-light border-secondary">
                      <div class="d-flex justify-content-between align-items-start">
                        <div>
                          <h6 class="mb-1 text-truncate" style="max-width: 300px;">{stream.title || 'Untitled Stream'}</h6>
                          <p class="mb-1 text-muted small">{stream.url ? new URL(stream.url).pathname.slice(1) : 'Unknown'}</p>
                          <div class="d-flex align-items-center">
                            <span class="badge bg-secondary me-2">
                              {stream.viewerCount?.toLocaleString() || 0} viewers
                            </span>
                            {#if stream.platform}
                              <span class="badge bg-primary">{stream.platform}</span>
                            {/if}
                          </div>
                        </div>
                        <a 
                          href={`/streams?url=${stream.url}`}
                          class="btn btn-sm btn-primary"
                        >
                          Watch
                        </a>
                      </div>
                    </div>
                  {/each}
                </div>
              {/if}
            </div>
          </div>
        </div>

        <!-- Holodex Streams -->
        <div class="col-md-6">
          <div class="card card-dark h-100">
            <div class="card-header card-header-dark d-flex justify-content-between align-items-center">
              <h5 class="mb-0">{selectedOrg} Streams</h5>
              <span class="badge bg-info">{holodexStreams.length}</span>
            </div>
            <div class="card-body">
              {#if loading && holodexStreams.length === 0}
                <div class="d-flex justify-content-center">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>
                </div>
              {:else if holodexStreams.length === 0}
                <div class="alert alert-secondary">No streams available</div>
              {:else}
                <div class="list-group">
                  {#each holodexStreams as stream}
                    <div class="list-group-item list-group-item-action bg-dark text-light border-secondary">
                      <div class="d-flex justify-content-between align-items-start">
                        <div>
                          <h6 class="mb-1 text-truncate" style="max-width: 300px;">{stream.title || 'Untitled Stream'}</h6>
                          <p class="mb-1 text-muted small">{stream.channelId || 'Unknown channel'}</p>
                          <div class="d-flex align-items-center">
                            <span class="badge bg-secondary me-2">
                              {stream.viewerCount?.toLocaleString() || 0} viewers
                            </span>
                            {#if stream.platform}
                              <span class="badge bg-danger">{stream.platform}</span>
                            {/if}
                          </div>
                        </div>
                        <a 
                          href={`/streams?url=${stream.url}`}
                          class="btn btn-sm btn-primary"
                        >
                          Watch
                        </a>
                      </div>
                    </div>
                  {/each}
                </div>
              {/if}
            </div>
          </div>
        </div>
      </div>
    {/if}

    <!-- API Explorer Tab -->
    {#if activeTab === 'api'}
      <div class="card card-dark mb-4">
        <div class="card-header card-header-dark">
          <h4 class="mb-0">API Explorer</h4>
        </div>
        <div class="card-body">
          <p class="text-muted mb-4">
            This page allows you to explore the available API endpoints. Click "Test" to see the response from GET endpoints.
          </p>
          
          <div class="accordion" id="apiAccordion">
            {#each Object.entries(apiRoutes) as [category, routes], i}
              <div class="accordion-item bg-dark text-light border-secondary">
                <h2 class="accordion-header" id="heading{i}">
                  <button 
                    class="accordion-button bg-dark text-light collapsed" 
                    type="button" 
                    data-bs-toggle="collapse" 
                    data-bs-target="#collapse{i}"
                  >
                    {category} <span class="badge bg-secondary ms-2">{routes.length}</span>
                  </button>
                </h2>
                <div 
                  id="collapse{i}" 
                  class="accordion-collapse collapse" 
                  data-bs-parent="#apiAccordion"
                >
                  <div class="accordion-body p-0">
                    <div class="table-responsive">
                      <table class="table table-dark table-hover mb-0">
                        <thead>
                          <tr>
                            <th>Method</th>
                            <th>Path</th>
                            <th>Description</th>
                            <th class="text-end">Actions</th>
                          </tr>
                        </thead>
                        <tbody>
                          {#each routes as route}
                            <tr>
                              <td>
                                <span class="badge {route.method === 'GET' ? 'bg-success' : route.method === 'POST' ? 'bg-primary' : route.method === 'PUT' ? 'bg-warning text-dark' : 'bg-danger'}">
                                  {route.method}
                                </span>
                              </td>
                              <td><code>{route.path}</code></td>
                              <td>{route.description}</td>
                              <td class="text-end">
                                {#if route.testable}
                                  <button 
                                    class="btn btn-sm btn-outline-primary"
                                    onclick={() => testApiRoute(route)}
                                  >
                                    Test
                                  </button>
                                {/if}
                              </td>
                            </tr>
                            {#if testResults[route.path]}
                              <tr>
                                <td colspan="4" class="p-0">
                                  <div class="p-3 bg-dark">
                                    {#if testResults[route.path].error}
                                      <div class="alert alert-danger mb-0">
                                        Error: {testResults[route.path].error}
                                      </div>
                                    {:else}
                                      <div class="bg-dark border border-secondary rounded p-2">
                                        <pre class="text-success mb-0" style="max-height: 300px; overflow-y: auto;">{JSON.stringify(testResults[route.path].data, null, 2)}</pre>
                                      </div>
                                    {/if}
                                  </div>
                                </td>
                              </tr>
                            {/if}
                          {/each}
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            {/each}
          </div>
        </div>
      </div>
    {/if}

    <!-- Configuration Tab -->
    {#if activeTab === 'config'}
      <div class="row g-4">
        {#each configSections as section}
          <div class="col-md-6">
            <div class="card card-dark h-100">
              <div class="card-header card-header-dark">
                <h5 class="mb-0">{section.title}</h5>
              </div>
              <div class="card-body">
                <p class="text-muted mb-3">{section.description}</p>
                
                <div class="list-group">
                  {#each section.fields as field}
                    <div class="list-group-item bg-dark text-light border-secondary">
                      <div class="mb-3">
                        <label for="{field.name}" class="form-label">{field.label}</label>
                        
                        {#if field.type === 'text'}
                          <input 
                            type="text" 
                            class="form-control bg-dark text-light border-secondary" 
                            id="{field.name}" 
                            bind:value={field.value}
                          />
                        {:else if field.type === 'number'}
                          <input 
                            type="number" 
                            class="form-control bg-dark text-light border-secondary" 
                            id="{field.name}" 
                            bind:value={field.value}
                          />
                        {:else if field.type === 'boolean'}
                          <div class="form-check form-switch">
                            <input 
                              class="form-check-input" 
                              type="checkbox" 
                              id="{field.name}" 
                              bind:checked={field.value}
                            />
                          </div>
                        {:else if field.type === 'select' && field.options}
                          <select 
                            class="form-select bg-dark text-light border-secondary" 
                            id="{field.name}" 
                            bind:value={field.value}
                          >
                            {#each field.options as option}
                              <option value={option}>{option}</option>
                            {/each}
                          </select>
                        {/if}
                        
                        {#if field.description}
                          <div class="form-text text-muted">{field.description}</div>
                        {/if}
                      </div>
                    </div>
                  {/each}
                </div>
                
                <div class="d-flex justify-content-end mt-3">
                  <button class="btn btn-primary">Save {section.title}</button>
                </div>
              </div>
            </div>
          </div>
        {/each}
      </div>
    {/if}
  </main>
</div>

<style>
  pre {
    max-height: 300px;
    overflow-y: auto;
  }
  
  .card-dark {
    background-color: #2c2c2c;
    border-color: #444;
    color: #f8f9fa;
  }
  
  .card-header-dark {
    background-color: #222;
    border-color: #444;
    color: #f8f9fa;
  }
  
  /* Override Bootstrap dark theme */
  .bg-dark {
    background-color: #222 !important;
  }
  
  .text-light {
    color: #f8f9fa !important;
  }
  
  .border-secondary {
    border-color: #444 !important;
  }
  
  /* Custom scrollbar for dark theme */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #333;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #666;
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #888;
  }
</style>
</file>

<file path="src/server/services/__tests__/player.catch.test.ts">
import { jest } from '@jest/globals';
import * as fs from 'fs';
import { PlayerService } from '../player';
import type { Config } from '../../../types/stream';

// Mock fs module
jest.mock('fs', () => ({
  existsSync: jest.fn(),
  unlinkSync: jest.fn(),
  mkdirSync: jest.fn(),
  writeFileSync: jest.fn(),
  readFileSync: jest.fn()
}));

// Mock child_process module
jest.mock('child_process', () => ({
  spawn: jest.fn(() => {
    const mockProcess = {
      on: jest.fn(),
      stdout: { on: jest.fn() },
      stderr: { on: jest.fn() },
      kill: jest.fn(),
      pid: 12345
    };
    return mockProcess;
  })
}));

describe('PlayerService Catch Blocks', () => {
  let playerService: PlayerService;
  let mockConfig: Config;

  beforeEach(() => {
    jest.clearAllMocks();

    // Mock process.cwd()
    jest.spyOn(process, 'cwd').mockReturnValue('/fake/path');

    // Setup mock config
    mockConfig = {
      player: {
        defaultVolume: 50,
        defaultQuality: 'best',
        windowMaximized: true,
        screens: [
          { screen: 1, enabled: true, id: 'screen1' }
        ]
      }
    } as Config;

    // Create PlayerService instance
    playerService = new PlayerService(mockConfig);
  });

  test('should handle unlink errors gracefully', async () => {
    // Set up the test to trigger the catch block
    const fsModule = require('fs');
    fsModule.existsSync.mockReturnValue(true);
    fsModule.unlinkSync.mockImplementation(() => {
      throw new Error('Cannot unlink file');
    });

    // This should not throw an error even though unlinkSync fails
    expect(() => {
      // Access the private startMpvProcess method through type assertion
      (playerService as any).startMpvProcess({
        screen: 1,
        url: 'https://example.com/stream',
        quality: 'best'
      });
    }).not.toThrow();

    // Verify the catch block was triggered
    expect(fsModule.unlinkSync).toHaveBeenCalled();
  });

  test('should handle IPC command failures gracefully', async () => {
    // Mock sendMpvCommand to throw an error
    jest.spyOn(playerService as any, 'sendMpvCommand').mockImplementation(() => {
      throw new Error('IPC command failed');
    });

    // Mock isProcessRunning
    jest.spyOn(playerService as any, 'isProcessRunning').mockReturnValue(false);

    // Set up a fake stream in the instance
    (playerService as any).streams.set(1, {
      process: { pid: 12345 },
      screen: 1,
      url: 'https://example.com/stream'
    });

    // This should not throw even though sendMpvCommand fails
    await playerService.stopStream(1);

    // Verify the sendMpvCommand was called and its error was handled
    expect((playerService as any).sendMpvCommand).toHaveBeenCalled();
  });
});
</file>

<file path="src/server/services/__tests__/player.network.test.ts">
import { jest } from '@jest/globals';
import { PlayerService } from '../player';
import type { Config } from '../../../types/stream';
import EventEmitter from 'events';
import { ChildProcess } from 'child_process';

// Mock the child_process module
jest.mock('child_process', () => ({
  spawn: jest.fn(() => {
    const mockProcess = new EventEmitter() as any;
    mockProcess.kill = jest.fn();
    mockProcess.stdout = new EventEmitter();
    mockProcess.stderr = new EventEmitter();
    mockProcess.pid = 12345;
    return mockProcess;
  })
}));

// Mock fs module
jest.mock('fs', () => ({
  existsSync: jest.fn(),
  unlinkSync: jest.fn(),
  mkdirSync: jest.fn(),
  writeFileSync: jest.fn(),
  readFileSync: jest.fn(),
  createWriteStream: jest.fn().mockReturnValue({
    write: jest.fn(),
    end: jest.fn(),
    on: jest.fn()
  })
}));

describe('PlayerService Network Error Handling', () => {
  let playerService: PlayerService;
  let mockConfig: Config;
  let mockProcess: any;
  let errorCallback: jest.Mock;
  let childProcess = require('child_process');
  let fs = require('fs');

  beforeEach(() => {
    jest.clearAllMocks();
    jest.useFakeTimers();

    // Mock process.cwd()
    jest.spyOn(process, 'cwd').mockReturnValue('/fake/path');

    // Setup fs mock responses
    fs.existsSync.mockImplementation((path: string) => {
      if (path.includes('mpv-socket')) {
        return false;
      }
      return true;
    });

    // Setup mock config
    mockConfig = {
      player: {
        defaultVolume: 50,
        defaultQuality: 'best',
        windowMaximized: true,
        screens: [
          { screen: 1, enabled: true, id: 'screen1' }
        ]
      }
    } as Config;

    // Create PlayerService instance
    playerService = new PlayerService(mockConfig);

    // Add error callback
    errorCallback = jest.fn();
    playerService.onStreamError(errorCallback);

    // Get the mock process reference
    mockProcess = childProcess.spawn();
  });

  afterEach(() => {
    jest.useRealTimers();
  });

  test('should retry on network errors with linear-capped backoff', async () => {
    // Mock isProcessRunning to return false (process not running)
    jest.spyOn(playerService as any, 'isProcessRunning').mockReturnValue(false);

    // Start a stream
    await playerService.startStream({
      screen: 1,
      url: 'https://example.com/stream',
      quality: 'best'
    });

    // Verify we have a stream
    expect((playerService as any).streams.get(1)).toBeDefined();

    // Simulate a network error (code 2 is a common network error code)
    mockProcess.emit('exit', 2);

    // Verify error callback was not called yet (we're retrying)
    expect(errorCallback).not.toHaveBeenCalled();

    // Verify retry timer was set
    expect((playerService as any).retryTimers.get(1)).toBeDefined();

    // Verify network retry count was incremented
    expect((playerService as any).networkRetries.get(1)).toBe(1);

    // Fast-forward time to trigger the retry
    jest.advanceTimersByTime(5000); // First retry should be at 5s

    // Verify a second attempt was made to start the stream
    expect(childProcess.spawn).toHaveBeenCalledTimes(2);

    // Simulate another network error
    mockProcess.emit('exit', 2);

    // Verify network retry count was incremented again
    expect((playerService as any).networkRetries.get(1)).toBe(2);

    // Verify a longer backoff was used (check time to trigger second retry)
    jest.advanceTimersByTime(10000); // Second retry should be at 10s

    // Verify a third attempt was made
    expect(childProcess.spawn).toHaveBeenCalledTimes(3);

    // Verify the maximum backoff is capped
    mockProcess.emit('exit', 2);
    expect((playerService as any).networkRetries.get(1)).toBe(3);

    // This should use a 15s backoff
    jest.advanceTimersByTime(15000);
    expect(childProcess.spawn).toHaveBeenCalledTimes(4);

    // One more error should use 20s backoff (capped max)
    mockProcess.emit('exit', 2);
    expect((playerService as any).networkRetries.get(1)).toBe(4);

    // Verify the backoff is capped at 20s
    jest.advanceTimersByTime(20000);
    expect(childProcess.spawn).toHaveBeenCalledTimes(5);

    // Final error should now give up
    mockProcess.emit('exit', 2);
    expect((playerService as any).networkRetries.get(1)).toBe(5);

    // Verify it's now giving up and calling the error callback
    expect(errorCallback).toHaveBeenCalledWith(expect.objectContaining({
      screen: 1,
      code: 2,
      moveToNext: true
    }));
  });

  test('should reset retry count after 5 minutes of successful streaming', async () => {
    // Mock isProcessRunning to return false (process not running)
    jest.spyOn(playerService as any, 'isProcessRunning').mockReturnValue(false);

    // Start a stream
    await playerService.startStream({
      screen: 1,
      url: 'https://example.com/stream',
      quality: 'best'
    });

    // Simulate a network error
    mockProcess.emit('exit', 2);

    // Verify network retry count was set
    expect((playerService as any).networkRetries.get(1)).toBe(1);
    
    // Record the time of the error
    const errorTime = Date.now();
    jest.spyOn(Date, 'now').mockReturnValue(errorTime);

    // Fast-forward timer to trigger retry
    jest.advanceTimersByTime(5000);

    // Second stream starts successfully
    expect(childProcess.spawn).toHaveBeenCalledTimes(2);

    // Now simulate a long period of successful streaming (over 5 minutes)
    jest.spyOn(Date, 'now').mockReturnValue(errorTime + 5 * 60 * 1000 + 1000);

    // Another network error occurs much later
    mockProcess.emit('exit', 2);

    // Verify retry count was reset to 1 (not incremented to 2)
    expect((playerService as any).networkRetries.get(1)).toBe(1);
  });

  test('should correctly identify network-related error codes', () => {
    // Access the private method using type casting
    const isNetworkErrorCode = (playerService as any).isNetworkErrorCode.bind(playerService);

    // Test with common network error codes
    expect(isNetworkErrorCode(2)).toBe(true);  // Streamlink network error
    expect(isNetworkErrorCode(1)).toBe(true);  // General error (could be network)
    expect(isNetworkErrorCode(9)).toBe(true);  // Killed (during network fluctuations)
    
    // Test with non-network error codes
    expect(isNetworkErrorCode(0)).toBe(false); // Normal exit
    expect(isNetworkErrorCode(null)).toBe(false); // No code
  });

  test('should clear retry timers on manual stop', async () => {
    // Mock isProcessRunning to return false
    jest.spyOn(playerService as any, 'isProcessRunning').mockReturnValue(false);

    // Start a stream
    await playerService.startStream({
      screen: 1,
      url: 'https://example.com/stream',
      quality: 'best'
    });

    // Simulate a network error
    mockProcess.emit('exit', 2);

    // Verify retry timer was set
    expect((playerService as any).retryTimers.get(1)).toBeDefined();

    // Manually stop the stream
    await playerService.stopStream(1, false, true);

    // Verify retry timer was cleared
    expect((playerService as any).retryTimers.get(1)).toBeUndefined();
  });
});
</file>

<file path="src/server/services/logger.ts">
import chalk from 'chalk';
import { createLogger, format, transports } from 'winston';
import path from 'path';

const { combine, timestamp, printf } = format;

export enum LogLevel {
  ERROR = 'error',
  WARN = 'warn',
  INFO = 'info',
  DEBUG = 'debug'
}

interface LogMessage {
  level: LogLevel;
  message: string;
  timestamp?: string;
  context?: string;
  error?: Error | unknown;
}

// Parse command line arguments
const args = process.argv.slice(2);
const isDebug = args.includes('-d') || args.includes('--debug');
const isVerbose = args.includes('-v') || args.includes('--verbose');
const envDebug = process.env.DEBUG === '1' || process.env.VERBOSE === '1';

// Create a custom format for consistent logging
const customFormat = printf(({ level, message, timestamp, context, error, trace }) => {
  const colorize = {
    [LogLevel.ERROR]: chalk.red,
    [LogLevel.WARN]: chalk.yellow,
    [LogLevel.INFO]: chalk.blue,
    [LogLevel.DEBUG]: chalk.gray
  };

  const colorFn = colorize[level as LogLevel] || chalk.white;
  const contextStr = context ? `[${context}] ` : '';
  const timestampStr = isVerbose 
    ? String(timestamp) 
    : (String(timestamp).split('T')[1] || '').split('.')[0];
  const baseMessage = `${timestampStr} [${level.toUpperCase()}] ${contextStr}${message}`;
  
  let fullMessage = colorFn(baseMessage);
  
  if (error instanceof Error) {
    fullMessage += '\n' + chalk.red(error.stack);
  }

  if (isVerbose && trace) {
    fullMessage += '\n' + chalk.gray(trace);
  }
  
  return fullMessage;
});

export class Logger {
  private logger;
  private currentLevel: LogLevel;

  constructor() {
    // Set initial log level based on arguments and environment
    this.currentLevel = (isDebug || isVerbose || envDebug) ? LogLevel.DEBUG : LogLevel.INFO;

    this.logger = createLogger({
      level: this.currentLevel,
      format: combine(
        timestamp(),
        format.errors({ stack: true }),
        customFormat
      ),
      transports: [
        new transports.Console({
          level: this.currentLevel
        }),
        new transports.File({ 
          filename: path.join('logs', 'error.log'), 
          level: 'error',
          format: format.uncolorize() // Remove colors for file output
        }),
        new transports.File({ 
          filename: path.join('logs', 'combined.log'),
          format: format.uncolorize() // Remove colors for file output
        })
      ]
    });

    // Log initial debug state
    if (this.currentLevel === LogLevel.DEBUG) {
      const reason = [];
      if (isDebug) reason.push('--debug flag');
      if (isVerbose) reason.push('--verbose flag');
      if (envDebug) reason.push('DEBUG/VERBOSE environment variable');
      this.debug('Debug logging enabled via: %s', reason.join(', '));
    }
  }

  setLevel(level: LogLevel | string) {
    this.currentLevel = level.toLowerCase() as LogLevel;
    this.logger.level = this.currentLevel;
    this.debug('Log level set to %s', this.currentLevel);
  }

  shouldLog(level: LogLevel): boolean {
    const levels = {
      [LogLevel.ERROR]: 0,
      [LogLevel.WARN]: 1,
      [LogLevel.INFO]: 2,
      [LogLevel.DEBUG]: 3
    };
    return levels[level] <= levels[this.currentLevel];
  }

  private formatMessage(message: string, ...args: (string | number)[]): string {
    if (args.length === 0) return message;
    
    try {
      return message.replace(/%[sdj%]/g, (match: string): string => {
        if (match === '%%') return '%';
        if (args.length === 0) return match;
        const arg = args.shift();
        switch (match) {
          case '%s': return String(arg);
          case '%d': return String(Number(arg));
          case '%j': return JSON.stringify(arg);
          default: return match;
        }
      });
    } catch (error) {
      return message;
    }
  }

  private getStackTrace(): string | undefined {
    if (!isVerbose) return undefined;
    const stack = new Error().stack;
    if (!stack) return undefined;
    
    // Get the calling function's location
    const lines = stack.split('\n').slice(3); // Skip Error, getStackTrace, and log calls
    return lines.join('\n');
  }

  log(logData: LogMessage) {
    if (!this.shouldLog(logData.level)) return;

    this.logger.log({
      level: logData.level,
      message: logData.message,
      context: logData.context,
      error: logData.error,
      timestamp: new Date().toISOString(),
      trace: this.getStackTrace()
    });
  }

  error(message: string, context?: string, error?: Error | unknown) {
    this.log({ 
      level: LogLevel.ERROR, 
      message: this.formatMessage(message), 
      context, 
      error 
    });
  }

  warn(message: string, context?: string, ...args: (string | number)[]) {
    this.log({ 
      level: LogLevel.WARN, 
      message: this.formatMessage(message, ...args), 
      context 
    });
  }

  info(message: string, context?: string, ...args: (string | number)[]) {
    this.log({ 
      level: LogLevel.INFO, 
      message: this.formatMessage(message, ...args), 
      context 
    });
  }

  debug(message: string, context?: string, ...args: (string | number)[]) {
    this.log({ 
      level: LogLevel.DEBUG, 
      message: this.formatMessage(message, ...args), 
      context 
    });
  }
}

export const logger = new Logger();
</file>

<file path="src/server/stream_manager.network.test.ts">
import { jest } from '@jest/globals';
import { StreamManager } from './stream_manager';
import type { Config } from '../types/stream';
import EventEmitter from 'events';

// Mock services
jest.mock('./services/holodex', () => ({
  HolodexService: jest.fn().mockImplementation(() => ({
    getLiveStreams: jest.fn().mockResolvedValue([]),
    getUpcomingStreams: jest.fn().mockResolvedValue([]),
    getTopStreams: jest.fn().mockResolvedValue([])
  }))
}));

jest.mock('./services/twitch', () => ({
  TwitchService: jest.fn().mockImplementation(() => ({
    getLiveStreams: jest.fn().mockResolvedValue([]),
    getFollowedStreams: jest.fn().mockResolvedValue([])
  }))
}));

jest.mock('./services/youtube', () => ({
  YouTubeService: jest.fn().mockImplementation(() => ({
    getLiveStreams: jest.fn().mockResolvedValue([])
  }))
}));

jest.mock('./services/player', () => ({
  PlayerService: jest.fn().mockImplementation(() => ({
    startStream: jest.fn().mockResolvedValue({ success: true }),
    stopStream: jest.fn().mockResolvedValue(true),
    getActiveStreams: jest.fn().mockReturnValue([]),
    onStreamError: jest.fn(),
    onStreamEnd: jest.fn(),
    onStreamOutput: jest.fn(),
    disableScreen: jest.fn(),
    enableScreen: jest.fn(),
    sendCommandToScreen: jest.fn(),
    sendCommandToAll: jest.fn(),
    cleanup: jest.fn().mockResolvedValue(undefined),
    DUMMY_SOURCE: ''
  }))
}));

jest.mock('./services/keyboard', () => ({
  KeyboardService: jest.fn().mockImplementation(() => ({
    startListening: jest.fn(),
    stopListening: jest.fn()
  }))
}));

// Mock fetch for network status tests
global.fetch = jest.fn();

// Mock setTimeout
jest.mock('node:timers/promises', () => ({
  setTimeout: jest.fn().mockResolvedValue(undefined)
}));

describe('StreamManager Network Recovery', () => {
  let streamManager: StreamManager;
  let mockConfig: Config;
  let mockHolodexService: any;
  let mockTwitchService: any;
  let mockYouTubeService: any;
  let mockPlayerService: any;
  let mockKeyboardService: any;

  beforeEach(() => {
    jest.clearAllMocks();
    jest.useFakeTimers();

    // Reset fetch mock
    (global.fetch as jest.Mock).mockReset();

    // Create mock services
    mockHolodexService = require('./services/holodex').HolodexService();
    mockTwitchService = require('./services/twitch').TwitchService();
    mockYouTubeService = require('./services/youtube').YouTubeService();
    mockPlayerService = require('./services/player').PlayerService();
    mockKeyboardService = require('./services/keyboard').KeyboardService();

    // Create mock config
    mockConfig = {
      player: {
        defaultVolume: 50,
        defaultQuality: 'best',
        windowMaximized: true,
        screens: [
          { screen: 1, enabled: true, id: 'screen1' }
        ]
      },
      twitch: {},
      holodex: {},
      youtube: {},
      streamlink: {}
    } as Config;

    // Create StreamManager instance
    streamManager = new StreamManager(
      mockConfig,
      mockHolodexService,
      mockTwitchService,
      mockYouTubeService,
      mockPlayerService,
      mockKeyboardService
    );
  });

  afterEach(() => {
    jest.useRealTimers();
  });

  test('should detect network going offline', async () => {
    // Mock fetch to simulate network down
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));

    // Trigger network check by advancing timer
    jest.advanceTimersByTime(20000);

    // Access private isOffline flag using type assertion
    expect((streamManager as any).isOffline).toBe(true);
  });

  test('should detect network coming back online', async () => {
    // First set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Now simulate network coming back online
    (global.fetch as jest.Mock).mockResolvedValue({
      ok: true,
      status: 200
    });

    // Advance timer to trigger next check
    jest.advanceTimersByTime(20000);

    // Network should be back online
    expect((streamManager as any).isOffline).toBe(false);
  });

  test('should skip queue updates when offline', async () => {
    // Set up spy on updateAllQueues method
    const updateQueuesSpy = jest.spyOn(streamManager as any, 'updateAllQueues');

    // Set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Trigger queue update interval
    jest.advanceTimersByTime(15 * 60 * 1000);

    // Verify updateQueues was not called
    expect(updateQueuesSpy).not.toHaveBeenCalled();
  });

  test('should perform recovery actions when network comes back online', async () => {
    // Set up spies
    const forceQueueRefreshSpy = jest.spyOn(streamManager as any, 'forceQueueRefresh')
      .mockResolvedValue(undefined);
    const updateQueueSpy = jest.spyOn(streamManager as any, 'updateQueue')
      .mockResolvedValue(undefined);
    const handleEmptyQueueSpy = jest.spyOn(streamManager as any, 'handleEmptyQueue')
      .mockResolvedValue(undefined);

    // Mock getEnabledScreens
    jest.spyOn(streamManager as any, 'getEnabledScreens')
      .mockReturnValue([1]);

    // First set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Mock getActiveStreams to return empty array (no active streams)
    mockPlayerService.getActiveStreams.mockReturnValue([]);

    // Now simulate network coming back online
    (global.fetch as jest.Mock).mockResolvedValue({
      ok: true,
      status: 200
    });

    // Advance timer to trigger next check
    jest.advanceTimersByTime(20000);

    // Network should be back online
    expect((streamManager as any).isOffline).toBe(false);

    // Fast forward to trigger the recovery process
    jest.advanceTimersByTime(3000);

    // Verify recovery actions were called
    expect(forceQueueRefreshSpy).toHaveBeenCalled();
    
    // Wait for all promises to resolve
    await Promise.resolve();
    await Promise.resolve();
    
    // Verify attempt to start new streams
    expect(handleEmptyQueueSpy).toHaveBeenCalledWith(1);
  });

  test('should not perform recovery if a stream is still active', async () => {
    // Set up spies
    const forceQueueRefreshSpy = jest.spyOn(streamManager as any, 'forceQueueRefresh')
      .mockResolvedValue(undefined);

    // First set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Mock getActiveStreams to return an active stream
    mockPlayerService.getActiveStreams.mockReturnValue([
      { screen: 1, url: 'https://example.com', status: 'playing' }
    ]);

    // Now simulate network coming back online
    (global.fetch as jest.Mock).mockResolvedValue({
      ok: true,
      status: 200
    });

    // Advance timer to trigger next check
    jest.advanceTimersByTime(20000);

    // Network should be back online
    expect((streamManager as any).isOffline).toBe(false);

    // Fast forward to trigger the recovery process
    jest.advanceTimersByTime(3000);

    // Verify forceQueueRefresh was not called because stream is still active
    expect(forceQueueRefreshSpy).not.toHaveBeenCalled();
  });

  test('should perform full reset after long outage', async () => {
    // Set up spies
    const forceQueueRefreshSpy = jest.spyOn(streamManager as any, 'forceQueueRefresh')
      .mockResolvedValue(undefined);

    // First set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Mock getActiveStreams to return empty array
    mockPlayerService.getActiveStreams.mockReturnValue([]);

    // Mock Date.now to simulate a very long outage (more than 1 hour)
    const originalNow = Date.now;
    const currentTime = Date.now();
    Date.now = jest.fn().mockReturnValue(currentTime + 3600000 + 1000);

    // Now simulate network coming back online
    (global.fetch as jest.Mock).mockResolvedValue({
      ok: true,
      status: 200
    });

    // Advance timer to trigger next check
    jest.advanceTimersByTime(20000);

    // Fast forward to trigger the recovery process
    jest.advanceTimersByTime(3000);

    // Verify cachedStreams was cleared for long outage
    expect((streamManager as any).cachedStreams).toEqual([]);
    expect((streamManager as any).lastStreamFetch).toBe(0);

    // Restore Date.now
    Date.now = originalNow;
  });

  test('should not perform recovery if already performed recently', async () => {
    // Set up spies
    const forceQueueRefreshSpy = jest.spyOn(streamManager as any, 'forceQueueRefresh')
      .mockResolvedValue(undefined);

    // First set network as offline
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    expect((streamManager as any).isOffline).toBe(true);

    // Now simulate network coming back online
    (global.fetch as jest.Mock).mockResolvedValue({
      ok: true,
      status: 200
    });

    // Advance timer to trigger next check
    jest.advanceTimersByTime(20000);
    
    // Fast forward to trigger the recovery process
    jest.advanceTimersByTime(3000);
    
    // Reset the spy to check if it's called again
    forceQueueRefreshSpy.mockClear();
    
    // Set network offline and online again quickly
    (global.fetch as jest.Mock).mockRejectedValue(new Error('Network error'));
    jest.advanceTimersByTime(20000);
    (global.fetch as jest.Mock).mockResolvedValue({ ok: true, status: 200 });
    jest.advanceTimersByTime(20000);
    
    // Fast forward to trigger the recovery process
    jest.advanceTimersByTime(3000);
    
    // Verify refresh was skipped because we just did one
    expect(forceQueueRefreshSpy).not.toHaveBeenCalled();
  });
});
</file>

<file path="src/hooks.client.ts">
import type { HandleClientError } from '@sveltejs/kit';

// Cache for API responses
const apiCache = new Map<string, { data: any; timestamp: number }>();
const CACHE_TTL = 30000; // 30 seconds cache lifetime

// Debounce timers for API requests
const debounceTimers = new Map<string, NodeJS.Timeout>();
const DEBOUNCE_TIME = 300; // 300ms debounce time

// Initialize client hooks
export function init() {
  // This function is required by SvelteKit
  return {
    version: '1.0.0'
  };
}

// Handle client-side errors
export const handleError: HandleClientError = ({ error, event }) => {
  const errorId = crypto.randomUUID();
  
  // Log the error with a unique ID
  console.error(`[${errorId}] Client error:`, error);
  
  // Return a user-friendly error
  return {
    message: 'An unexpected error occurred',
    errorId
  };
};

// Add these functions to the window object for use in components
if (typeof window !== 'undefined') {
  // Cached fetch function to reduce API calls
  window.cachedFetch = async (url: string, options?: RequestInit) => {
    const cacheKey = `${options?.method || 'GET'}:${url}`;
    
    // Return cached data if it's still valid
    const cached = apiCache.get(cacheKey);
    if (cached && Date.now() - cached.timestamp < CACHE_TTL) {
      return { ...cached.data, fromCache: true };
    }
    
    // Make the actual fetch request
    const response = await fetch(url, options);
    
    // Only cache successful GET requests
    if (response.ok && (!options?.method || options.method === 'GET')) {
      try {
        const data = await response.clone().json();
        apiCache.set(cacheKey, { data, timestamp: Date.now() });
        return data;
      } catch (error) {
        console.warn('Failed to cache response:', error);
        return await response.json();
      }
    }
    
    return await response.json();
  };
  
  // Debounced fetch to prevent rapid API calls
  window.debouncedFetch = (url: string, options?: RequestInit) => {
    return new Promise((resolve, reject) => {
      const cacheKey = `${options?.method || 'GET'}:${url}`;
      
      // Clear existing timer
      if (debounceTimers.has(cacheKey)) {
        clearTimeout(debounceTimers.get(cacheKey));
      }
      
      // Set new timer
      debounceTimers.set(
        cacheKey,
        setTimeout(async () => {
          try {
            const response = await fetch(url, options);
            const data = await response.json();
            resolve(data);
          } catch (error) {
            reject(error);
          } finally {
            debounceTimers.delete(cacheKey);
          }
        }, DEBOUNCE_TIME)
      );
    });
  };
}

// Add type definitions
declare global {
  interface Window {
    cachedFetch: (url: string, options?: RequestInit) => Promise<any>;
    debouncedFetch: (url: string, options?: RequestInit) => Promise<any>;
  }
}
</file>

<file path="src/hooks.ts">
import { locale } from '$lib/i18n/index.js';

export const prerender = true;
export const trailingSlash = 'always';

// Initialize with default locale
locale.set('en');

// Add missing exports required by SvelteKit
export function reroute() {
  // This function is required by SvelteKit
  return null;
}

export function transport() {
  // This function is required by SvelteKit
  return null;
}
</file>

<file path="diff">
diff --git a/DOCS.md b/DOCS.md
index 45afd92..9e1a6f9 100644
--- a/DOCS.md
+++ b/DOCS.md
@@ -171,8 +171,8 @@ interface ApiResponse<T> {
   "player": {
     "preferStreamlink": false,
     "defaultQuality": "best",
-    "defaultVolume": 50,
-    "maxStreams": 4,
+    "defaultVolume": 0,
+    "maxStreams": 2,
     "screens": []
   }
 }
diff --git a/coverage/base.css b/coverage/base.css
new file mode 100644
index 0000000..f418035
--- /dev/null
+++ b/coverage/base.css
@@ -0,0 +1,224 @@
+body, html {
+  margin:0; padding: 0;
+  height: 100%;
+}
+body {
+    font-family: Helvetica Neue, Helvetica, Arial;
+    font-size: 14px;
+    color:#333;
+}
+.small { font-size: 12px; }
+*, *:after, *:before {
+  -webkit-box-sizing:border-box;
+     -moz-box-sizing:border-box;
+          box-sizing:border-box;
+  }
+h1 { font-size: 20px; margin: 0;}
+h2 { font-size: 14px; }
+pre {
+    font: 12px/1.4 Consolas, "Liberation Mono", Menlo, Courier, monospace;
+    margin: 0;
+    padding: 0;
+    -moz-tab-size: 2;
+    -o-tab-size:  2;
+    tab-size: 2;
+}
+a { color:#0074D9; text-decoration:none; }
+a:hover { text-decoration:underline; }
+.strong { font-weight: bold; }
+.space-top1 { padding: 10px 0 0 0; }
+.pad2y { padding: 20px 0; }
+.pad1y { padding: 10px 0; }
+.pad2x { padding: 0 20px; }
+.pad2 { padding: 20px; }
+.pad1 { padding: 10px; }
+.space-left2 { padding-left:55px; }
+.space-right2 { padding-right:20px; }
+.center { text-align:center; }
+.clearfix { display:block; }
+.clearfix:after {
+  content:'';
+  display:block;
+  height:0;
+  clear:both;
+  visibility:hidden;
+  }
+.fl { float: left; }
+@media only screen and (max-width:640px) {
+  .col3 { width:100%; max-width:100%; }
+  .hide-mobile { display:none!important; }
+}
+
+.quiet {
+  color: #7f7f7f;
+  color: rgba(0,0,0,0.5);
+}
+.quiet a { opacity: 0.7; }
+
+.fraction {
+  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
+  font-size: 10px;
+  color: #555;
+  background: #E8E8E8;
+  padding: 4px 5px;
+  border-radius: 3px;
+  vertical-align: middle;
+}
+
+div.path a:link, div.path a:visited { color: #333; }
+table.coverage {
+  border-collapse: collapse;
+  margin: 10px 0 0 0;
+  padding: 0;
+}
+
+table.coverage td {
+  margin: 0;
+  padding: 0;
+  vertical-align: top;
+}
+table.coverage td.line-count {
+    text-align: right;
+    padding: 0 5px 0 20px;
+}
+table.coverage td.line-coverage {
+    text-align: right;
+    padding-right: 10px;
+    min-width:20px;
+}
+
+table.coverage td span.cline-any {
+    display: inline-block;
+    padding: 0 5px;
+    width: 100%;
+}
+.missing-if-branch {
+    display: inline-block;
+    margin-right: 5px;
+    border-radius: 3px;
+    position: relative;
+    padding: 0 4px;
+    background: #333;
+    color: yellow;
+}
+
+.skip-if-branch {
+    display: none;
+    margin-right: 10px;
+    position: relative;
+    padding: 0 4px;
+    background: #ccc;
+    color: white;
+}
+.missing-if-branch .typ, .skip-if-branch .typ {
+    color: inherit !important;
+}
+.coverage-summary {
+  border-collapse: collapse;
+  width: 100%;
+}
+.coverage-summary tr { border-bottom: 1px solid #bbb; }
+.keyline-all { border: 1px solid #ddd; }
+.coverage-summary td, .coverage-summary th { padding: 10px; }
+.coverage-summary tbody { border: 1px solid #bbb; }
+.coverage-summary td { border-right: 1px solid #bbb; }
+.coverage-summary td:last-child { border-right: none; }
+.coverage-summary th {
+  text-align: left;
+  font-weight: normal;
+  white-space: nowrap;
+}
+.coverage-summary th.file { border-right: none !important; }
+.coverage-summary th.pct { }
+.coverage-summary th.pic,
+.coverage-summary th.abs,
+.coverage-summary td.pct,
+.coverage-summary td.abs { text-align: right; }
+.coverage-summary td.file { white-space: nowrap;  }
+.coverage-summary td.pic { min-width: 120px !important;  }
+.coverage-summary tfoot td { }
+
+.coverage-summary .sorter {
+    height: 10px;
+    width: 7px;
+    display: inline-block;
+    margin-left: 0.5em;
+    background: url(sort-arrow-sprite.png) no-repeat scroll 0 0 transparent;
+}
+.coverage-summary .sorted .sorter {
+    background-position: 0 -20px;
+}
+.coverage-summary .sorted-desc .sorter {
+    background-position: 0 -10px;
+}
+.status-line {  height: 10px; }
+/* yellow */
+.cbranch-no { background: yellow !important; color: #111; }
+/* dark red */
+.red.solid, .status-line.low, .low .cover-fill { background:#C21F39 }
+.low .chart { border:1px solid #C21F39 }
+.highlighted,
+.highlighted .cstat-no, .highlighted .fstat-no, .highlighted .cbranch-no{
+  background: #C21F39 !important;
+}
+/* medium red */
+.cstat-no, .fstat-no, .cbranch-no, .cbranch-no { background:#F6C6CE }
+/* light red */
+.low, .cline-no { background:#FCE1E5 }
+/* light green */
+.high, .cline-yes { background:rgb(230,245,208) }
+/* medium green */
+.cstat-yes { background:rgb(161,215,106) }
+/* dark green */
+.status-line.high, .high .cover-fill { background:rgb(77,146,33) }
+.high .chart { border:1px solid rgb(77,146,33) }
+/* dark yellow (gold) */
+.status-line.medium, .medium .cover-fill { background: #f9cd0b; }
+.medium .chart { border:1px solid #f9cd0b; }
+/* light yellow */
+.medium { background: #fff4c2; }
+
+.cstat-skip { background: #ddd; color: #111; }
+.fstat-skip { background: #ddd; color: #111 !important; }
+.cbranch-skip { background: #ddd !important; color: #111; }
+
+span.cline-neutral { background: #eaeaea; }
+
+.coverage-summary td.empty {
+    opacity: .5;
+    padding-top: 4px;
+    padding-bottom: 4px;
+    line-height: 1;
+    color: #888;
+}
+
+.cover-fill, .cover-empty {
+  display:inline-block;
+  height: 12px;
+}
+.chart {
+  line-height: 0;
+}
+.cover-empty {
+    background: white;
+}
+.cover-full {
+    border-right: none !important;
+}
+pre.prettyprint {
+    border: none !important;
+    padding: 0 !important;
+    margin: 0 !important;
+}
+.com { color: #999 !important; }
+.ignore-none { color: #999; font-weight: normal; }
+
+.wrapper {
+  min-height: 100%;
+  height: auto !important;
+  height: 100%;
+  margin: 0 auto -48px;
+}
+.footer, .push {
+  height: 48px;
+}
diff --git a/coverage/block-navigation.js b/coverage/block-navigation.js
new file mode 100644
index 0000000..cc12130
--- /dev/null
+++ b/coverage/block-navigation.js
@@ -0,0 +1,87 @@
+/* eslint-disable */
+var jumpToCode = (function init() {
+    // Classes of code we would like to highlight in the file view
+    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];
+
+    // Elements to highlight in the file listing view
+    var fileListingElements = ['td.pct.low'];
+
+    // We don't want to select elements that are direct descendants of another match
+    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `
+
+    // Selecter that finds elements on the page to which we can jump
+    var selector =
+        fileListingElements.join(', ') +
+        ', ' +
+        notSelector +
+        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`
+
+    // The NodeList of matching elements
+    var missingCoverageElements = document.querySelectorAll(selector);
+
+    var currentIndex;
+
+    function toggleClass(index) {
+        missingCoverageElements
+            .item(currentIndex)
+            .classList.remove('highlighted');
+        missingCoverageElements.item(index).classList.add('highlighted');
+    }
+
+    function makeCurrent(index) {
+        toggleClass(index);
+        currentIndex = index;
+        missingCoverageElements.item(index).scrollIntoView({
+            behavior: 'smooth',
+            block: 'center',
+            inline: 'center'
+        });
+    }
+
+    function goToPrevious() {
+        var nextIndex = 0;
+        if (typeof currentIndex !== 'number' || currentIndex === 0) {
+            nextIndex = missingCoverageElements.length - 1;
+        } else if (missingCoverageElements.length > 1) {
+            nextIndex = currentIndex - 1;
+        }
+
+        makeCurrent(nextIndex);
+    }
+
+    function goToNext() {
+        var nextIndex = 0;
+
+        if (
+            typeof currentIndex === 'number' &&
+            currentIndex < missingCoverageElements.length - 1
+        ) {
+            nextIndex = currentIndex + 1;
+        }
+
+        makeCurrent(nextIndex);
+    }
+
+    return function jump(event) {
+        if (
+            document.getElementById('fileSearch') === document.activeElement &&
+            document.activeElement != null
+        ) {
+            // if we're currently focused on the search input, we don't want to navigate
+            return;
+        }
+
+        switch (event.which) {
+            case 78: // n
+            case 74: // j
+                goToNext();
+                break;
+            case 66: // b
+            case 75: // k
+            case 80: // p
+                goToPrevious();
+                break;
+        }
+    };
+})();
+window.addEventListener('keydown', jumpToCode);
diff --git a/coverage/clover.xml b/coverage/clover.xml
new file mode 100644
index 0000000..1837bd4
--- /dev/null
+++ b/coverage/clover.xml
@@ -0,0 +1,3272 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<coverage generated="1744442775302" clover="3.2.0">
+  <project timestamp="1744442775302" name="All files">
+    <metrics statements="3143" coveredstatements="0" conditionals="1543" coveredconditionals="0" methods="533" coveredmethods="0" elements="5219" coveredelements="0" complexity="0" loc="3143" ncloc="3143" packages="12" files="29" classes="29"/>
+    <package name="src">
+      <metrics statements="51" coveredstatements="0" conditionals="29" coveredconditionals="0" methods="9" coveredmethods="0"/>
+      <file name="hooks.client.ts" path="/home/all/repos/LiveLink/src/hooks.client.ts">
+        <metrics statements="37" coveredstatements="0" conditionals="25" coveredconditionals="0" methods="6" coveredmethods="0"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="14" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="34" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="40" count="0" type="stmt"/>
+        <line num="41" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="49" count="0" type="cond" truecount="0" falsecount="8"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="55" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="66" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="69" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="74" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="84" count="0" type="stmt"/>
+      </file>
+      <file name="hooks.server.ts" path="/home/all/repos/LiveLink/src/hooks.server.ts">
+        <metrics statements="6" coveredstatements="0" conditionals="4" coveredconditionals="0" methods="1" coveredmethods="0"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="8" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+      </file>
+      <file name="hooks.ts" path="/home/all/repos/LiveLink/src/hooks.ts">
+        <metrics statements="8" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="2" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="15" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.cli">
+      <metrics statements="507" coveredstatements="0" conditionals="165" coveredconditionals="0" methods="65" coveredmethods="0"/>
+      <file name="livelink.ts" path="/home/all/repos/LiveLink/src/cli/livelink.ts">
+        <metrics statements="507" coveredstatements="0" conditionals="165" coveredconditionals="0" methods="65" coveredmethods="0"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="16" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="22" count="0" type="stmt"/>
+        <line num="24" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="34" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="69" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="73" count="0" type="stmt"/>
+        <line num="74" count="0" type="stmt"/>
+        <line num="76" count="0" type="stmt"/>
+        <line num="77" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="91" count="0" type="stmt"/>
+        <line num="97" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="98" count="0" type="stmt"/>
+        <line num="101" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="109" count="0" type="stmt"/>
+        <line num="113" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+        <line num="119" count="0" type="stmt"/>
+        <line num="120" count="0" type="stmt"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="124" count="0" type="stmt"/>
+        <line num="126" count="0" type="stmt"/>
+        <line num="130" count="0" type="stmt"/>
+        <line num="135" count="0" type="stmt"/>
+        <line num="136" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="137" count="0" type="stmt"/>
+        <line num="139" count="0" type="stmt"/>
+        <line num="142" count="0" type="stmt"/>
+        <line num="147" count="0" type="stmt"/>
+        <line num="148" count="0" type="stmt"/>
+        <line num="150" count="0" type="stmt"/>
+        <line num="155" count="0" type="stmt"/>
+        <line num="160" count="0" type="stmt"/>
+        <line num="161" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="162" count="0" type="stmt"/>
+        <line num="164" count="0" type="stmt"/>
+        <line num="167" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="169" count="0" type="stmt"/>
+        <line num="172" count="0" type="stmt"/>
+        <line num="173" count="0" type="stmt"/>
+        <line num="175" count="0" type="stmt"/>
+        <line num="180" count="0" type="stmt"/>
+        <line num="185" count="0" type="stmt"/>
+        <line num="186" count="0" type="stmt"/>
+        <line num="187" count="0" type="stmt"/>
+        <line num="188" count="0" type="stmt"/>
+        <line num="190" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="191" count="0" type="stmt"/>
+        <line num="192" count="0" type="stmt"/>
+        <line num="195" count="0" type="stmt"/>
+        <line num="196" count="0" type="stmt"/>
+        <line num="197" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="198" count="0" type="stmt"/>
+        <line num="199" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="202" count="0" type="stmt"/>
+        <line num="206" count="0" type="stmt"/>
+        <line num="211" count="0" type="stmt"/>
+        <line num="212" count="0" type="stmt"/>
+        <line num="213" count="0" type="stmt"/>
+        <line num="214" count="0" type="stmt"/>
+        <line num="216" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="217" count="0" type="stmt"/>
+        <line num="218" count="0" type="stmt"/>
+        <line num="221" count="0" type="stmt"/>
+        <line num="222" count="0" type="stmt"/>
+        <line num="223" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="224" count="0" type="stmt"/>
+        <line num="225" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="228" count="0" type="stmt"/>
+        <line num="233" count="0" type="stmt"/>
+        <line num="238" count="0" type="stmt"/>
+        <line num="239" count="0" type="stmt"/>
+        <line num="240" count="0" type="stmt"/>
+        <line num="243" count="0" type="stmt"/>
+        <line num="244" count="0" type="stmt"/>
+        <line num="246" count="0" type="stmt"/>
+        <line num="250" count="0" type="stmt"/>
+        <line num="255" count="0" type="stmt"/>
+        <line num="256" count="0" type="stmt"/>
+        <line num="257" count="0" type="stmt"/>
+        <line num="260" count="0" type="stmt"/>
+        <line num="261" count="0" type="stmt"/>
+        <line num="263" count="0" type="stmt"/>
+        <line num="267" count="0" type="stmt"/>
+        <line num="272" count="0" type="stmt"/>
+        <line num="273" count="0" type="stmt"/>
+        <line num="274" count="0" type="stmt"/>
+        <line num="275" count="0" type="stmt"/>
+        <line num="276" count="0" type="stmt"/>
+        <line num="277" count="0" type="stmt"/>
+        <line num="279" count="0" type="stmt"/>
+        <line num="283" count="0" type="stmt"/>
+        <line num="287" count="0" type="stmt"/>
+        <line num="288" count="0" type="stmt"/>
+        <line num="289" count="0" type="stmt"/>
+        <line num="290" count="0" type="stmt"/>
+        <line num="291" count="0" type="stmt"/>
+        <line num="292" count="0" type="stmt"/>
+        <line num="294" count="0" type="stmt"/>
+        <line num="298" count="0" type="stmt"/>
+        <line num="303" count="0" type="stmt"/>
+        <line num="304" count="0" type="stmt"/>
+        <line num="305" count="0" type="stmt"/>
+        <line num="308" count="0" type="stmt"/>
+        <line num="309" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="311" count="0" type="stmt"/>
+        <line num="315" count="0" type="stmt"/>
+        <line num="320" count="0" type="stmt"/>
+        <line num="321" count="0" type="stmt"/>
+        <line num="322" count="0" type="stmt"/>
+        <line num="325" count="0" type="stmt"/>
+        <line num="326" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="327" count="0" type="stmt"/>
+        <line num="329" count="0" type="stmt"/>
+        <line num="332" count="0" type="stmt"/>
+        <line num="337" count="0" type="stmt"/>
+        <line num="341" count="0" type="stmt"/>
+        <line num="343" count="0" type="stmt"/>
+        <line num="350" count="0" type="stmt"/>
+        <line num="351" count="0" type="stmt"/>
+        <line num="352" count="0" type="stmt"/>
+        <line num="361" count="0" type="stmt"/>
+        <line num="362" count="0" type="stmt"/>
+        <line num="364" count="0" type="stmt"/>
+        <line num="368" count="0" type="stmt"/>
+        <line num="373" count="0" type="stmt"/>
+        <line num="374" count="0" type="stmt"/>
+        <line num="375" count="0" type="stmt"/>
+        <line num="378" count="0" type="stmt"/>
+        <line num="379" count="0" type="stmt"/>
+        <line num="381" count="0" type="stmt"/>
+        <line num="386" count="0" type="stmt"/>
+        <line num="390" count="0" type="stmt"/>
+        <line num="391" count="0" type="stmt"/>
+        <line num="392" count="0" type="stmt"/>
+        <line num="393" count="0" type="stmt"/>
+        <line num="395" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="396" count="0" type="stmt"/>
+        <line num="397" count="0" type="stmt"/>
+        <line num="400" count="0" type="stmt"/>
+        <line num="401" count="0" type="stmt"/>
+        <line num="402" count="0" type="stmt"/>
+        <line num="405" count="0" type="stmt"/>
+        <line num="409" count="0" type="stmt"/>
+        <line num="413" count="0" type="stmt"/>
+        <line num="414" count="0" type="stmt"/>
+        <line num="415" count="0" type="stmt"/>
+        <line num="418" count="0" type="stmt"/>
+        <line num="419" count="0" type="stmt"/>
+        <line num="421" count="0" type="stmt"/>
+        <line num="425" count="0" type="stmt"/>
+        <line num="430" count="0" type="stmt"/>
+        <line num="431" count="0" type="stmt"/>
+        <line num="432" count="0" type="stmt"/>
+        <line num="437" count="0" type="stmt"/>
+        <line num="438" count="0" type="stmt"/>
+        <line num="440" count="0" type="stmt"/>
+        <line num="445" count="0" type="stmt"/>
+        <line num="450" count="0" type="stmt"/>
+        <line num="451" count="0" type="stmt"/>
+        <line num="452" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="453" count="0" type="stmt"/>
+        <line num="454" count="0" type="stmt"/>
+        <line num="457" count="0" type="stmt"/>
+        <line num="458" count="0" type="stmt"/>
+        <line num="463" count="0" type="stmt"/>
+        <line num="464" count="0" type="stmt"/>
+        <line num="466" count="0" type="stmt"/>
+        <line num="470" count="0" type="stmt"/>
+        <line num="477" count="0" type="stmt"/>
+        <line num="478" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="479" count="0" type="stmt"/>
+        <line num="480" count="0" type="stmt"/>
+        <line num="483" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="484" count="0" type="stmt"/>
+        <line num="486" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="490" count="0" type="stmt"/>
+        <line num="496" count="0" type="stmt"/>
+        <line num="497" count="0" type="stmt"/>
+        <line num="499" count="0" type="stmt"/>
+        <line num="503" count="0" type="stmt"/>
+        <line num="508" count="0" type="stmt"/>
+        <line num="509" count="0" type="stmt"/>
+        <line num="510" count="0" type="stmt"/>
+        <line num="515" count="0" type="stmt"/>
+        <line num="516" count="0" type="stmt"/>
+        <line num="518" count="0" type="stmt"/>
+        <line num="522" count="0" type="stmt"/>
+        <line num="528" count="0" type="stmt"/>
+        <line num="529" count="0" type="stmt"/>
+        <line num="530" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="531" count="0" type="stmt"/>
+        <line num="532" count="0" type="stmt"/>
+        <line num="535" count="0" type="stmt"/>
+        <line num="536" count="0" type="stmt"/>
+        <line num="541" count="0" type="stmt"/>
+        <line num="542" count="0" type="stmt"/>
+        <line num="544" count="0" type="stmt"/>
+        <line num="549" count="0" type="stmt"/>
+        <line num="554" count="0" type="stmt"/>
+        <line num="556" count="0" type="stmt"/>
+        <line num="559" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="560" count="0" type="stmt"/>
+        <line num="561" count="0" type="stmt"/>
+        <line num="562" count="0" type="stmt"/>
+        <line num="567" count="0" type="stmt"/>
+        <line num="568" count="0" type="stmt"/>
+        <line num="570" count="0" type="stmt"/>
+        <line num="571" count="0" type="stmt"/>
+        <line num="575" count="0" type="stmt"/>
+        <line num="579" count="0" type="stmt"/>
+        <line num="580" count="0" type="stmt"/>
+        <line num="583" count="0" type="stmt"/>
+        <line num="584" count="0" type="stmt"/>
+        <line num="586" count="0" type="stmt"/>
+        <line num="587" count="0" type="stmt"/>
+        <line num="592" count="0" type="stmt"/>
+        <line num="594" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="595" count="0" type="stmt"/>
+        <line num="597" count="0" type="stmt"/>
+        <line num="598" count="0" type="stmt"/>
+        <line num="600" count="0" type="stmt"/>
+        <line num="601" count="0" type="stmt"/>
+        <line num="602" count="0" type="stmt"/>
+        <line num="605" count="0" type="stmt"/>
+        <line num="606" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="607" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="608" count="0" type="stmt"/>
+        <line num="610" count="0" type="stmt"/>
+        <line num="613" count="0" type="stmt"/>
+        <line num="615" count="0" type="stmt"/>
+        <line num="618" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="619" count="0" type="stmt"/>
+        <line num="623" count="0" type="stmt"/>
+        <line num="627" count="0" type="stmt"/>
+        <line num="628" count="0" type="stmt"/>
+        <line num="631" count="0" type="stmt"/>
+        <line num="632" count="0" type="stmt"/>
+        <line num="634" count="0" type="stmt"/>
+        <line num="635" count="0" type="stmt"/>
+        <line num="640" count="0" type="stmt"/>
+        <line num="642" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="643" count="0" type="stmt"/>
+        <line num="644" count="0" type="stmt"/>
+        <line num="646" count="0" type="stmt"/>
+        <line num="647" count="0" type="stmt"/>
+        <line num="649" count="0" type="stmt"/>
+        <line num="650" count="0" type="stmt"/>
+        <line num="651" count="0" type="stmt"/>
+        <line num="654" count="0" type="stmt"/>
+        <line num="655" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="656" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="657" count="0" type="stmt"/>
+        <line num="659" count="0" type="stmt"/>
+        <line num="662" count="0" type="stmt"/>
+        <line num="664" count="0" type="stmt"/>
+        <line num="667" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="668" count="0" type="stmt"/>
+        <line num="672" count="0" type="stmt"/>
+        <line num="676" count="0" type="stmt"/>
+        <line num="677" count="0" type="stmt"/>
+        <line num="678" count="0" type="stmt"/>
+        <line num="679" count="0" type="stmt"/>
+        <line num="681" count="0" type="stmt"/>
+        <line num="682" count="0" type="stmt"/>
+        <line num="686" count="0" type="stmt"/>
+        <line num="688" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="689" count="0" type="stmt"/>
+        <line num="690" count="0" type="stmt"/>
+        <line num="691" count="0" type="stmt"/>
+        <line num="693" count="0" type="stmt"/>
+        <line num="696" count="0" type="stmt"/>
+        <line num="697" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="698" count="0" type="stmt"/>
+        <line num="699" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="700" count="0" type="stmt"/>
+        <line num="702" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="706" count="0" type="stmt"/>
+        <line num="711" count="0" type="stmt"/>
+        <line num="713" count="0" type="stmt"/>
+        <line num="717" count="0" type="stmt"/>
+        <line num="718" count="0" type="stmt"/>
+        <line num="719" count="0" type="stmt"/>
+        <line num="720" count="0" type="stmt"/>
+        <line num="722" count="0" type="stmt"/>
+        <line num="723" count="0" type="stmt"/>
+        <line num="727" count="0" type="stmt"/>
+        <line num="731" count="0" type="stmt"/>
+        <line num="732" count="0" type="stmt"/>
+        <line num="733" count="0" type="stmt"/>
+        <line num="734" count="0" type="stmt"/>
+        <line num="736" count="0" type="stmt"/>
+        <line num="737" count="0" type="stmt"/>
+        <line num="742" count="0" type="stmt"/>
+        <line num="747" count="0" type="stmt"/>
+        <line num="749" count="0" type="stmt"/>
+        <line num="752" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="753" count="0" type="stmt"/>
+        <line num="754" count="0" type="stmt"/>
+        <line num="755" count="0" type="stmt"/>
+        <line num="760" count="0" type="stmt"/>
+        <line num="761" count="0" type="stmt"/>
+        <line num="762" count="0" type="stmt"/>
+        <line num="763" count="0" type="stmt"/>
+        <line num="765" count="0" type="stmt"/>
+        <line num="766" count="0" type="stmt"/>
+        <line num="771" count="0" type="stmt"/>
+        <line num="775" count="0" type="stmt"/>
+        <line num="776" count="0" type="stmt"/>
+        <line num="777" count="0" type="stmt"/>
+        <line num="778" count="0" type="stmt"/>
+        <line num="779" count="0" type="stmt"/>
+        <line num="781" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="782" count="0" type="stmt"/>
+        <line num="783" count="0" type="stmt"/>
+        <line num="786" count="0" type="stmt"/>
+        <line num="787" count="0" type="stmt"/>
+        <line num="788" count="0" type="stmt"/>
+        <line num="789" count="0" type="stmt"/>
+        <line num="790" count="0" type="stmt"/>
+        <line num="791" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="792" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="793" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="796" count="0" type="stmt"/>
+        <line num="800" count="0" type="stmt"/>
+        <line num="807" count="0" type="stmt"/>
+        <line num="808" count="0" type="stmt"/>
+        <line num="809" count="0" type="stmt"/>
+        <line num="812" count="0" type="stmt"/>
+        <line num="813" count="0" type="stmt"/>
+        <line num="815" count="0" type="stmt"/>
+        <line num="816" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="817" count="0" type="stmt"/>
+        <line num="818" count="0" type="stmt"/>
+        <line num="819" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="820" count="0" type="stmt"/>
+        <line num="821" count="0" type="stmt"/>
+        <line num="825" count="0" type="stmt"/>
+        <line num="834" count="0" type="stmt"/>
+        <line num="835" count="0" type="stmt"/>
+        <line num="837" count="0" type="stmt"/>
+        <line num="842" count="0" type="stmt"/>
+        <line num="843" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="844" count="0" type="stmt"/>
+        <line num="845" count="0" type="stmt"/>
+        <line num="849" count="0" type="stmt"/>
+        <line num="852" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="854" count="0" type="stmt"/>
+        <line num="855" count="0" type="stmt"/>
+        <line num="858" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="859" count="0" type="stmt"/>
+        <line num="860" count="0" type="stmt"/>
+        <line num="861" count="0" type="stmt"/>
+        <line num="866" count="0" type="stmt"/>
+        <line num="867" count="0" type="stmt"/>
+        <line num="868" count="0" type="stmt"/>
+        <line num="869" count="0" type="stmt"/>
+        <line num="871" count="0" type="stmt"/>
+        <line num="872" count="0" type="stmt"/>
+        <line num="874" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="876" count="0" type="stmt"/>
+        <line num="879" count="0" type="stmt"/>
+        <line num="886" count="0" type="stmt"/>
+        <line num="887" count="0" type="stmt"/>
+        <line num="888" count="0" type="stmt"/>
+        <line num="891" count="0" type="stmt"/>
+        <line num="892" count="0" type="stmt"/>
+        <line num="894" count="0" type="stmt"/>
+        <line num="895" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="897" count="0" type="stmt"/>
+        <line num="902" count="0" type="stmt"/>
+        <line num="906" count="0" type="stmt"/>
+        <line num="911" count="0" type="stmt"/>
+        <line num="920" count="0" type="stmt"/>
+        <line num="921" count="0" type="stmt"/>
+        <line num="923" count="0" type="stmt"/>
+        <line num="933" count="0" type="stmt"/>
+        <line num="934" count="0" type="stmt"/>
+        <line num="936" count="0" type="stmt"/>
+        <line num="937" count="0" type="stmt"/>
+        <line num="938" count="0" type="stmt"/>
+        <line num="940" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="941" count="0" type="stmt"/>
+        <line num="942" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="943" count="0" type="stmt"/>
+        <line num="944" count="0" type="stmt"/>
+        <line num="945" count="0" type="stmt"/>
+        <line num="946" count="0" type="stmt"/>
+        <line num="950" count="0" type="stmt"/>
+        <line num="951" count="0" type="stmt"/>
+        <line num="955" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="956" count="0" type="stmt"/>
+        <line num="958" count="0" type="stmt"/>
+        <line num="962" count="0" type="stmt"/>
+        <line num="963" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="964" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="965" count="0" type="stmt"/>
+        <line num="966" count="0" type="stmt"/>
+        <line num="968" count="0" type="stmt"/>
+        <line num="971" count="0" type="stmt"/>
+        <line num="972" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="973" count="0" type="stmt"/>
+        <line num="974" count="0" type="stmt"/>
+        <line num="978" count="0" type="stmt"/>
+        <line num="979" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="982" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="983" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="984" count="0" type="stmt"/>
+        <line num="987" count="0" type="stmt"/>
+        <line num="988" count="0" type="stmt"/>
+        <line num="990" count="0" type="stmt"/>
+        <line num="992" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="995" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="998" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="999" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1000" count="0" type="stmt"/>
+        <line num="1001" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1002" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1003" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1004" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1007" count="0" type="stmt"/>
+        <line num="1009" count="0" type="stmt"/>
+        <line num="1013" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="1014" count="0" type="stmt"/>
+        <line num="1018" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1019" count="0" type="stmt"/>
+        <line num="1022" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1027" count="0" type="stmt"/>
+        <line num="1028" count="0" type="stmt"/>
+        <line num="1029" count="0" type="stmt"/>
+        <line num="1030" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1031" count="0" type="stmt"/>
+        <line num="1034" count="0" type="stmt"/>
+        <line num="1035" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1036" count="0" type="stmt"/>
+        <line num="1037" count="0" type="stmt"/>
+        <line num="1040" count="0" type="stmt"/>
+        <line num="1042" count="0" type="stmt"/>
+        <line num="1044" count="0" type="stmt"/>
+        <line num="1045" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1047" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1048" count="0" type="cond" truecount="0" falsecount="7"/>
+        <line num="1049" count="0" type="stmt"/>
+        <line num="1050" count="0" type="stmt"/>
+        <line num="1051" count="0" type="stmt"/>
+        <line num="1052" count="0" type="stmt"/>
+        <line num="1054" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1055" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1056" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1057" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1058" count="0" type="stmt"/>
+        <line num="1059" count="0" type="stmt"/>
+        <line num="1062" count="0" type="stmt"/>
+        <line num="1065" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1069" count="0" type="stmt"/>
+        <line num="1075" count="0" type="stmt"/>
+        <line num="1076" count="0" type="stmt"/>
+        <line num="1077" count="0" type="stmt"/>
+        <line num="1090" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1091" count="0" type="stmt"/>
+        <line num="1094" count="0" type="stmt"/>
+        <line num="1095" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1096" count="0" type="stmt"/>
+        <line num="1098" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1101" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1106" count="0" type="stmt"/>
+        <line num="1110" count="0" type="stmt"/>
+        <line num="1111" count="0" type="stmt"/>
+        <line num="1112" count="0" type="stmt"/>
+        <line num="1116" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1117" count="0" type="stmt"/>
+        <line num="1120" count="0" type="stmt"/>
+        <line num="1122" count="0" type="cond" truecount="0" falsecount="2"/>
+      </file>
+    </package>
+    <package name="src.lib">
+      <metrics statements="61" coveredstatements="0" conditionals="30" coveredconditionals="0" methods="29" coveredmethods="0"/>
+      <file name="api.ts" path="/home/all/repos/LiveLink/src/lib/api.ts">
+        <metrics statements="61" coveredstatements="0" conditionals="30" coveredconditionals="0" methods="29" coveredmethods="0"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="29" count="0" type="cond" truecount="0" falsecount="12"/>
+        <line num="30" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="32" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="36" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="48" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="55" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="58" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="66" count="0" type="stmt"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="73" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="85" count="0" type="stmt"/>
+        <line num="91" count="0" type="stmt"/>
+        <line num="100" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+        <line num="127" count="0" type="stmt"/>
+        <line num="135" count="0" type="stmt"/>
+        <line num="143" count="0" type="stmt"/>
+        <line num="151" count="0" type="stmt"/>
+        <line num="157" count="0" type="stmt"/>
+        <line num="166" count="0" type="stmt"/>
+        <line num="170" count="0" type="stmt"/>
+        <line num="178" count="0" type="stmt"/>
+        <line num="182" count="0" type="stmt"/>
+        <line num="191" count="0" type="stmt"/>
+        <line num="195" count="0" type="stmt"/>
+        <line num="203" count="0" type="stmt"/>
+        <line num="210" count="0" type="stmt"/>
+        <line num="217" count="0" type="stmt"/>
+        <line num="218" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="219" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="221" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="222" count="0" type="stmt"/>
+        <line num="227" count="0" type="stmt"/>
+        <line num="232" count="0" type="stmt"/>
+        <line num="239" count="0" type="stmt"/>
+        <line num="243" count="0" type="stmt"/>
+        <line num="244" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="245" count="0" type="stmt"/>
+        <line num="247" count="0" type="stmt"/>
+        <line num="251" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.lib.i18n">
+      <metrics statements="13" coveredstatements="0" conditionals="4" coveredconditionals="0" methods="5" coveredmethods="0"/>
+      <file name="helpers.ts" path="/home/all/repos/LiveLink/src/lib/i18n/helpers.ts">
+        <metrics statements="9" coveredstatements="0" conditionals="4" coveredconditionals="0" methods="4" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="14" count="0" type="stmt"/>
+        <line num="15" count="0" type="cond" truecount="0" falsecount="4"/>
+      </file>
+      <file name="index.ts" path="/home/all/repos/LiveLink/src/lib/i18n/index.ts">
+        <metrics statements="4" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="1" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.lib.stores">
+      <metrics statements="48" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="7" coveredmethods="0"/>
+      <file name="auth.ts" path="/home/all/repos/LiveLink/src/lib/stores/auth.ts">
+        <metrics statements="2" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+      </file>
+      <file name="index.ts" path="/home/all/repos/LiveLink/src/lib/stores/index.ts">
+        <metrics statements="46" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="7" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="41" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="66" count="0" type="stmt"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="68" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="73" count="0" type="stmt"/>
+        <line num="78" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="84" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="87" count="0" type="stmt"/>
+        <line num="88" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="89" count="0" type="stmt"/>
+        <line num="91" count="0" type="stmt"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="95" count="0" type="stmt"/>
+        <line num="98" count="0" type="stmt"/>
+        <line num="99" count="0" type="stmt"/>
+        <line num="100" count="0" type="stmt"/>
+        <line num="102" count="0" type="stmt"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="116" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server">
+      <metrics statements="876" coveredstatements="0" conditionals="420" coveredconditionals="0" methods="172" coveredmethods="0"/>
+      <file name="api.ts" path="/home/all/repos/LiveLink/src/server/api.ts">
+        <metrics statements="73" coveredstatements="0" conditionals="10" coveredconditionals="0" methods="15" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="14" count="0" type="stmt"/>
+        <line num="15" count="0" type="stmt"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="19" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="52" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="59" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="72" count="0" type="stmt"/>
+        <line num="73" count="0" type="stmt"/>
+        <line num="74" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="85" count="0" type="stmt"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="87" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="88" count="0" type="stmt"/>
+        <line num="89" count="0" type="stmt"/>
+        <line num="91" count="0" type="stmt"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="95" count="0" type="stmt"/>
+        <line num="96" count="0" type="stmt"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="98" count="0" type="stmt"/>
+        <line num="103" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="108" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="115" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="116" count="0" type="stmt"/>
+        <line num="119" count="0" type="stmt"/>
+        <line num="125" count="0" type="stmt"/>
+        <line num="126" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="129" count="0" type="stmt"/>
+        <line num="132" count="0" type="stmt"/>
+      </file>
+      <file name="config.ts" path="/home/all/repos/LiveLink/src/server/config.ts">
+        <metrics statements="1" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="0" coveredmethods="0"/>
+        <line num="51" count="0" type="stmt"/>
+      </file>
+      <file name="index.ts" path="/home/all/repos/LiveLink/src/server/index.ts">
+        <metrics statements="62" coveredstatements="0" conditionals="15" coveredconditionals="0" methods="12" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="14" count="0" type="stmt"/>
+        <line num="15" count="0" type="stmt"/>
+        <line num="17" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="19" count="0" type="stmt"/>
+        <line num="22" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="28" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="31" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="38" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="41" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="68" count="0" type="stmt"/>
+        <line num="71" count="0" type="stmt"/>
+        <line num="72" count="0" type="stmt"/>
+        <line num="73" count="0" type="stmt"/>
+        <line num="74" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="87" count="0" type="stmt"/>
+        <line num="88" count="0" type="stmt"/>
+        <line num="89" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="90" count="0" type="stmt"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="101" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="108" count="0" type="stmt"/>
+        <line num="109" count="0" type="stmt"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="115" count="0" type="stmt"/>
+        <line num="116" count="0" type="stmt"/>
+        <line num="117" count="0" type="stmt"/>
+        <line num="122" count="0" type="stmt"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="124" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="129" count="0" type="stmt"/>
+        <line num="130" count="0" type="stmt"/>
+      </file>
+      <file name="router.ts" path="/home/all/repos/LiveLink/src/server/router.ts">
+        <metrics statements="13" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="28" count="0" type="stmt"/>
+      </file>
+      <file name="stream_manager.ts" path="/home/all/repos/LiveLink/src/server/stream_manager.ts">
+        <metrics statements="697" coveredstatements="0" conditionals="387" coveredconditionals="0" methods="129" coveredmethods="0"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="19" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="28" count="0" type="stmt"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="55" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="59" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="62" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="stmt"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="83" count="0" type="stmt"/>
+        <line num="84" count="0" type="stmt"/>
+        <line num="89" count="0" type="stmt"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="99" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="100" count="0" type="stmt"/>
+        <line num="104" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="110" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="112" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="114" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="115" count="0" type="stmt"/>
+        <line num="117" count="0" type="stmt"/>
+        <line num="121" count="0" type="stmt"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="125" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="127" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="129" count="0" type="stmt"/>
+        <line num="140" count="0" type="stmt"/>
+        <line num="143" count="0" type="stmt"/>
+        <line num="144" count="0" type="stmt"/>
+        <line num="145" count="0" type="stmt"/>
+        <line num="146" count="0" type="stmt"/>
+        <line num="147" count="0" type="stmt"/>
+        <line num="148" count="0" type="stmt"/>
+        <line num="149" count="0" type="stmt"/>
+        <line num="150" count="0" type="stmt"/>
+        <line num="160" count="0" type="stmt"/>
+        <line num="163" count="0" type="stmt"/>
+        <line num="164" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="165" count="0" type="stmt"/>
+        <line num="169" count="0" type="stmt"/>
+        <line num="170" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="171" count="0" type="stmt"/>
+        <line num="176" count="0" type="stmt"/>
+        <line num="177" count="0" type="stmt"/>
+        <line num="178" count="0" type="stmt"/>
+        <line num="180" count="0" type="stmt"/>
+        <line num="188" count="0" type="stmt"/>
+        <line num="189" count="0" type="stmt"/>
+        <line num="190" count="0" type="stmt"/>
+        <line num="191" count="0" type="stmt"/>
+        <line num="192" count="0" type="stmt"/>
+        <line num="195" count="0" type="stmt"/>
+        <line num="205" count="0" type="stmt"/>
+        <line num="207" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="208" count="0" type="stmt"/>
+        <line num="209" count="0" type="stmt"/>
+        <line num="213" count="0" type="stmt"/>
+        <line num="216" count="0" type="stmt"/>
+        <line num="217" count="0" type="stmt"/>
+        <line num="218" count="0" type="stmt"/>
+        <line num="219" count="0" type="stmt"/>
+        <line num="220" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="224" count="0" type="stmt"/>
+        <line num="225" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="226" count="0" type="stmt"/>
+        <line num="227" count="0" type="stmt"/>
+        <line num="228" count="0" type="stmt"/>
+        <line num="231" count="0" type="stmt"/>
+        <line num="234" count="0" type="stmt"/>
+        <line num="235" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="238" count="0" type="stmt"/>
+        <line num="239" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="240" count="0" type="stmt"/>
+        <line num="241" count="0" type="stmt"/>
+        <line num="242" count="0" type="stmt"/>
+        <line num="246" count="0" type="stmt"/>
+        <line num="249" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="250" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="251" count="0" type="stmt"/>
+        <line num="253" count="0" type="stmt"/>
+        <line num="254" count="0" type="stmt"/>
+        <line num="255" count="0" type="stmt"/>
+        <line num="259" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="260" count="0" type="stmt"/>
+        <line num="264" count="0" type="stmt"/>
+        <line num="265" count="0" type="stmt"/>
+        <line num="266" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="270" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="271" count="0" type="stmt"/>
+        <line num="276" count="0" type="stmt"/>
+        <line num="277" count="0" type="stmt"/>
+        <line num="278" count="0" type="stmt"/>
+        <line num="284" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="285" count="0" type="stmt"/>
+        <line num="286" count="0" type="stmt"/>
+        <line num="287" count="0" type="stmt"/>
+        <line num="292" count="0" type="stmt"/>
+        <line num="293" count="0" type="stmt"/>
+        <line num="296" count="0" type="stmt"/>
+        <line num="299" count="0" type="stmt"/>
+        <line num="312" count="0" type="stmt"/>
+        <line num="313" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="315" count="0" type="stmt"/>
+        <line num="319" count="0" type="stmt"/>
+        <line num="321" count="0" type="stmt"/>
+        <line num="327" count="0" type="stmt"/>
+        <line num="329" count="0" type="stmt"/>
+        <line num="335" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="336" count="0" type="stmt"/>
+        <line num="337" count="0" type="stmt"/>
+        <line num="341" count="0" type="stmt"/>
+        <line num="342" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="343" count="0" type="stmt"/>
+        <line num="344" count="0" type="stmt"/>
+        <line num="348" count="0" type="stmt"/>
+        <line num="350" count="0" type="stmt"/>
+        <line num="352" count="0" type="stmt"/>
+        <line num="353" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="354" count="0" type="stmt"/>
+        <line num="355" count="0" type="stmt"/>
+        <line num="356" count="0" type="stmt"/>
+        <line num="359" count="0" type="stmt"/>
+        <line num="360" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="361" count="0" type="stmt"/>
+        <line num="364" count="0" type="stmt"/>
+        <line num="365" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="366" count="0" type="stmt"/>
+        <line num="367" count="0" type="stmt"/>
+        <line num="368" count="0" type="stmt"/>
+        <line num="369" count="0" type="stmt"/>
+        <line num="371" count="0" type="stmt"/>
+        <line num="375" count="0" type="stmt"/>
+        <line num="376" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="377" count="0" type="stmt"/>
+        <line num="378" count="0" type="stmt"/>
+        <line num="379" count="0" type="stmt"/>
+        <line num="383" count="0" type="stmt"/>
+        <line num="385" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="386" count="0" type="stmt"/>
+        <line num="387" count="0" type="stmt"/>
+        <line num="391" count="0" type="stmt"/>
+        <line num="392" count="0" type="stmt"/>
+        <line num="395" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="396" count="0" type="stmt"/>
+        <line num="397" count="0" type="stmt"/>
+        <line num="401" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="402" count="0" type="stmt"/>
+        <line num="403" count="0" type="stmt"/>
+        <line num="406" count="0" type="stmt"/>
+        <line num="409" count="0" type="stmt"/>
+        <line num="411" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="413" count="0" type="stmt"/>
+        <line num="415" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="416" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="417" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="420" count="0" type="stmt"/>
+        <line num="424" count="0" type="stmt"/>
+        <line num="425" count="0" type="stmt"/>
+        <line num="426" count="0" type="stmt"/>
+        <line num="433" count="0" type="stmt"/>
+        <line num="435" count="0" type="stmt"/>
+        <line num="436" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="438" count="0" type="stmt"/>
+        <line num="439" count="0" type="stmt"/>
+        <line num="440" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="443" count="0" type="stmt"/>
+        <line num="444" count="0" type="stmt"/>
+        <line num="447" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="448" count="0" type="stmt"/>
+        <line num="450" count="0" type="stmt"/>
+        <line num="456" count="0" type="stmt"/>
+        <line num="468" count="0" type="stmt"/>
+        <line num="471" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="472" count="0" type="stmt"/>
+        <line num="473" count="0" type="stmt"/>
+        <line num="479" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="481" count="0" type="stmt"/>
+        <line num="482" count="0" type="stmt"/>
+        <line num="483" count="0" type="stmt"/>
+        <line num="485" count="0" type="stmt"/>
+        <line num="489" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="492" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="493" count="0" type="stmt"/>
+        <line num="494" count="0" type="stmt"/>
+        <line num="496" count="0" type="stmt"/>
+        <line num="497" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="498" count="0" type="stmt"/>
+        <line num="499" count="0" type="stmt"/>
+        <line num="500" count="0" type="stmt"/>
+        <line num="509" count="0" type="stmt"/>
+        <line num="510" count="0" type="stmt"/>
+        <line num="511" count="0" type="stmt"/>
+        <line num="515" count="0" type="stmt"/>
+        <line num="522" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="523" count="0" type="stmt"/>
+        <line num="529" count="0" type="stmt"/>
+        <line num="532" count="0" type="stmt"/>
+        <line num="533" count="0" type="stmt"/>
+        <line num="536" count="0" type="stmt"/>
+        <line num="537" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="538" count="0" type="stmt"/>
+        <line num="540" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="542" count="0" type="stmt"/>
+        <line num="545" count="0" type="stmt"/>
+        <line num="547" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="548" count="0" type="stmt"/>
+        <line num="551" count="0" type="stmt"/>
+        <line num="561" count="0" type="stmt"/>
+        <line num="562" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="563" count="0" type="stmt"/>
+        <line num="564" count="0" type="stmt"/>
+        <line num="565" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="566" count="0" type="stmt"/>
+        <line num="567" count="0" type="stmt"/>
+        <line num="572" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="573" count="0" type="stmt"/>
+        <line num="580" count="0" type="stmt"/>
+        <line num="581" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="582" count="0" type="stmt"/>
+        <line num="590" count="0" type="stmt"/>
+        <line num="592" count="0" type="stmt"/>
+        <line num="594" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="598" count="0" type="stmt"/>
+        <line num="600" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="601" count="0" type="stmt"/>
+        <line num="602" count="0" type="stmt"/>
+        <line num="604" count="0" type="stmt"/>
+        <line num="607" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="611" count="0" type="stmt"/>
+        <line num="623" count="0" type="stmt"/>
+        <line num="625" count="0" type="stmt"/>
+        <line num="632" count="0" type="stmt"/>
+        <line num="633" count="0" type="stmt"/>
+        <line num="634" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="636" count="0" type="stmt"/>
+        <line num="645" count="0" type="stmt"/>
+        <line num="649" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="650" count="0" type="stmt"/>
+        <line num="651" count="0" type="stmt"/>
+        <line num="655" count="0" type="stmt"/>
+        <line num="656" count="0" type="stmt"/>
+        <line num="657" count="0" type="stmt"/>
+        <line num="660" count="0" type="stmt"/>
+        <line num="663" count="0" type="stmt"/>
+        <line num="671" count="0" type="stmt"/>
+        <line num="672" count="0" type="stmt"/>
+        <line num="673" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="674" count="0" type="stmt"/>
+        <line num="675" count="0" type="stmt"/>
+        <line num="678" count="0" type="stmt"/>
+        <line num="680" count="0" type="stmt"/>
+        <line num="682" count="0" type="stmt"/>
+        <line num="685" count="0" type="stmt"/>
+        <line num="686" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="687" count="0" type="stmt"/>
+        <line num="689" count="0" type="stmt"/>
+        <line num="694" count="0" type="stmt"/>
+        <line num="702" count="0" type="stmt"/>
+        <line num="706" count="0" type="stmt"/>
+        <line num="710" count="0" type="stmt"/>
+        <line num="717" count="0" type="stmt"/>
+        <line num="725" count="0" type="stmt"/>
+        <line num="726" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="727" count="0" type="stmt"/>
+        <line num="728" count="0" type="stmt"/>
+        <line num="731" count="0" type="stmt"/>
+        <line num="732" count="0" type="stmt"/>
+        <line num="733" count="0" type="stmt"/>
+        <line num="734" count="0" type="stmt"/>
+        <line num="736" count="0" type="stmt"/>
+        <line num="737" count="0" type="stmt"/>
+        <line num="738" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="739" count="0" type="stmt"/>
+        <line num="740" count="0" type="stmt"/>
+        <line num="744" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="746" count="0" type="stmt"/>
+        <line num="747" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="750" count="0" type="stmt"/>
+        <line num="753" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="756" count="0" type="stmt"/>
+        <line num="757" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="758" count="0" type="stmt"/>
+        <line num="760" count="0" type="stmt"/>
+        <line num="761" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="762" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="763" count="0" type="stmt"/>
+        <line num="768" count="0" type="stmt"/>
+        <line num="776" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="777" count="0" type="stmt"/>
+        <line num="778" count="0" type="stmt"/>
+        <line num="780" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="781" count="0" type="stmt"/>
+        <line num="787" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="788" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="789" count="0" type="stmt"/>
+        <line num="795" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="796" count="0" type="stmt"/>
+        <line num="797" count="0" type="stmt"/>
+        <line num="799" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="800" count="0" type="stmt"/>
+        <line num="802" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="804" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="805" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="806" count="0" type="stmt"/>
+        <line num="812" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="813" count="0" type="stmt"/>
+        <line num="814" count="0" type="stmt"/>
+        <line num="820" count="0" type="stmt"/>
+        <line num="828" count="0" type="stmt"/>
+        <line num="830" count="0" type="stmt"/>
+        <line num="835" count="0" type="stmt"/>
+        <line num="840" count="0" type="stmt"/>
+        <line num="841" count="0" type="stmt"/>
+        <line num="842" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="845" count="0" type="stmt"/>
+        <line num="846" count="0" type="stmt"/>
+        <line num="848" count="0" type="stmt"/>
+        <line num="850" count="0" type="stmt"/>
+        <line num="856" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="857" count="0" type="stmt"/>
+        <line num="858" count="0" type="stmt"/>
+        <line num="859" count="0" type="stmt"/>
+        <line num="862" count="0" type="stmt"/>
+        <line num="870" count="0" type="stmt"/>
+        <line num="877" count="0" type="stmt"/>
+        <line num="884" count="0" type="stmt"/>
+        <line num="891" count="0" type="stmt"/>
+        <line num="895" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="897" count="0" type="stmt"/>
+        <line num="899" count="0" type="stmt"/>
+        <line num="901" count="0" type="stmt"/>
+        <line num="902" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="903" count="0" type="stmt"/>
+        <line num="905" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="906" count="0" type="stmt"/>
+        <line num="909" count="0" type="stmt"/>
+        <line num="910" count="0" type="stmt"/>
+        <line num="913" count="0" type="stmt"/>
+        <line num="916" count="0" type="stmt"/>
+        <line num="918" count="0" type="stmt"/>
+        <line num="922" count="0" type="stmt"/>
+        <line num="923" count="0" type="stmt"/>
+        <line num="926" count="0" type="stmt"/>
+        <line num="929" count="0" type="stmt"/>
+        <line num="931" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="936" count="0" type="stmt"/>
+        <line num="937" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="938" count="0" type="stmt"/>
+        <line num="943" count="0" type="stmt"/>
+        <line num="946" count="0" type="stmt"/>
+        <line num="947" count="0" type="stmt"/>
+        <line num="948" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="949" count="0" type="stmt"/>
+        <line num="952" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="953" count="0" type="stmt"/>
+        <line num="954" count="0" type="stmt"/>
+        <line num="959" count="0" type="stmt"/>
+        <line num="960" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="961" count="0" type="stmt"/>
+        <line num="962" count="0" type="stmt"/>
+        <line num="963" count="0" type="stmt"/>
+        <line num="965" count="0" type="stmt"/>
+        <line num="970" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="971" count="0" type="stmt"/>
+        <line num="972" count="0" type="stmt"/>
+        <line num="976" count="0" type="stmt"/>
+        <line num="979" count="0" type="stmt"/>
+        <line num="980" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="981" count="0" type="stmt"/>
+        <line num="983" count="0" type="stmt"/>
+        <line num="984" count="0" type="stmt"/>
+        <line num="986" count="0" type="stmt"/>
+        <line num="990" count="0" type="stmt"/>
+        <line num="994" count="0" type="stmt"/>
+        <line num="995" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="996" count="0" type="stmt"/>
+        <line num="999" count="0" type="stmt"/>
+        <line num="1002" count="0" type="stmt"/>
+        <line num="1004" count="0" type="stmt"/>
+        <line num="1007" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1008" count="0" type="stmt"/>
+        <line num="1016" count="0" type="stmt"/>
+        <line num="1023" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1025" count="0" type="stmt"/>
+        <line num="1026" count="0" type="stmt"/>
+        <line num="1029" count="0" type="stmt"/>
+        <line num="1030" count="0" type="stmt"/>
+        <line num="1031" count="0" type="stmt"/>
+        <line num="1032" count="0" type="stmt"/>
+        <line num="1038" count="0" type="stmt"/>
+        <line num="1039" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="1041" count="0" type="stmt"/>
+        <line num="1045" count="0" type="stmt"/>
+        <line num="1046" count="0" type="stmt"/>
+        <line num="1047" count="0" type="stmt"/>
+        <line num="1049" count="0" type="stmt"/>
+        <line num="1053" count="0" type="stmt"/>
+        <line num="1058" count="0" type="stmt"/>
+        <line num="1059" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1060" count="0" type="stmt"/>
+        <line num="1064" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1065" count="0" type="stmt"/>
+        <line num="1067" count="0" type="stmt"/>
+        <line num="1070" count="0" type="stmt"/>
+        <line num="1071" count="0" type="stmt"/>
+        <line num="1075" count="0" type="stmt"/>
+        <line num="1076" count="0" type="stmt"/>
+        <line num="1080" count="0" type="stmt"/>
+        <line num="1084" count="0" type="stmt"/>
+        <line num="1085" count="0" type="stmt"/>
+        <line num="1089" count="0" type="stmt"/>
+        <line num="1091" count="0" type="stmt"/>
+        <line num="1093" count="0" type="stmt"/>
+        <line num="1096" count="0" type="stmt"/>
+        <line num="1099" count="0" type="stmt"/>
+        <line num="1100" count="0" type="stmt"/>
+        <line num="1101" count="0" type="stmt"/>
+        <line num="1110" count="0" type="stmt"/>
+        <line num="1113" count="0" type="stmt"/>
+        <line num="1114" count="0" type="stmt"/>
+        <line num="1117" count="0" type="stmt"/>
+        <line num="1118" count="0" type="stmt"/>
+        <line num="1122" count="0" type="stmt"/>
+        <line num="1125" count="0" type="stmt"/>
+        <line num="1126" count="0" type="stmt"/>
+        <line num="1127" count="0" type="stmt"/>
+        <line num="1130" count="0" type="stmt"/>
+        <line num="1133" count="0" type="stmt"/>
+        <line num="1134" count="0" type="stmt"/>
+        <line num="1137" count="0" type="stmt"/>
+        <line num="1139" count="0" type="stmt"/>
+        <line num="1141" count="0" type="stmt"/>
+        <line num="1146" count="0" type="stmt"/>
+        <line num="1151" count="0" type="stmt"/>
+        <line num="1155" count="0" type="stmt"/>
+        <line num="1159" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1160" count="0" type="stmt"/>
+        <line num="1161" count="0" type="stmt"/>
+        <line num="1162" count="0" type="stmt"/>
+        <line num="1166" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1167" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1168" count="0" type="stmt"/>
+        <line num="1169" count="0" type="stmt"/>
+        <line num="1170" count="0" type="stmt"/>
+        <line num="1175" count="0" type="stmt"/>
+        <line num="1187" count="0" type="stmt"/>
+        <line num="1190" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1191" count="0" type="stmt"/>
+        <line num="1192" count="0" type="stmt"/>
+        <line num="1195" count="0" type="stmt"/>
+        <line num="1196" count="0" type="stmt"/>
+        <line num="1200" count="0" type="stmt"/>
+        <line num="1204" count="0" type="stmt"/>
+        <line num="1205" count="0" type="stmt"/>
+        <line num="1210" count="0" type="stmt"/>
+        <line num="1212" count="0" type="stmt"/>
+        <line num="1213" count="0" type="stmt"/>
+        <line num="1218" count="0" type="stmt"/>
+        <line num="1222" count="0" type="stmt"/>
+        <line num="1223" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1224" count="0" type="stmt"/>
+        <line num="1228" count="0" type="stmt"/>
+        <line num="1231" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1232" count="0" type="stmt"/>
+        <line num="1233" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1234" count="0" type="stmt"/>
+        <line num="1236" count="0" type="stmt"/>
+        <line num="1243" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1248" count="0" type="stmt"/>
+        <line num="1249" count="0" type="stmt"/>
+        <line num="1253" count="0" type="stmt"/>
+        <line num="1269" count="0" type="stmt"/>
+        <line num="1270" count="0" type="stmt"/>
+        <line num="1271" count="0" type="stmt"/>
+        <line num="1275" count="0" type="stmt"/>
+        <line num="1276" count="0" type="stmt"/>
+        <line num="1279" count="0" type="stmt"/>
+        <line num="1280" count="0" type="stmt"/>
+        <line num="1281" count="0" type="stmt"/>
+        <line num="1283" count="0" type="stmt"/>
+        <line num="1289" count="0" type="stmt"/>
+        <line num="1293" count="0" type="stmt"/>
+        <line num="1297" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1298" count="0" type="stmt"/>
+        <line num="1301" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1302" count="0" type="stmt"/>
+        <line num="1303" count="0" type="stmt"/>
+        <line num="1308" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1309" count="0" type="stmt"/>
+        <line num="1310" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1311" count="0" type="stmt"/>
+        <line num="1312" count="0" type="stmt"/>
+        <line num="1318" count="0" type="stmt"/>
+        <line num="1319" count="0" type="stmt"/>
+        <line num="1332" count="0" type="stmt"/>
+        <line num="1333" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1334" count="0" type="stmt"/>
+        <line num="1338" count="0" type="stmt"/>
+        <line num="1341" count="0" type="stmt"/>
+        <line num="1343" count="0" type="stmt"/>
+        <line num="1363" count="0" type="stmt"/>
+        <line num="1364" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1365" count="0" type="stmt"/>
+        <line num="1366" count="0" type="stmt"/>
+        <line num="1371" count="0" type="stmt"/>
+        <line num="1372" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1373" count="0" type="stmt"/>
+        <line num="1374" count="0" type="stmt"/>
+        <line num="1379" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1380" count="0" type="stmt"/>
+        <line num="1383" count="0" type="stmt"/>
+        <line num="1384" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1385" count="0" type="stmt"/>
+        <line num="1388" count="0" type="stmt"/>
+        <line num="1391" count="0" type="stmt"/>
+        <line num="1392" count="0" type="stmt"/>
+        <line num="1393" count="0" type="stmt"/>
+        <line num="1396" count="0" type="stmt"/>
+        <line num="1397" count="0" type="stmt"/>
+        <line num="1399" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1400" count="0" type="stmt"/>
+        <line num="1401" count="0" type="stmt"/>
+        <line num="1405" count="0" type="stmt"/>
+        <line num="1407" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1409" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1410" count="0" type="stmt"/>
+        <line num="1411" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1412" count="0" type="stmt"/>
+        <line num="1415" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1416" count="0" type="stmt"/>
+        <line num="1418" count="0" type="stmt"/>
+        <line num="1419" count="0" type="stmt"/>
+        <line num="1420" count="0" type="stmt"/>
+        <line num="1422" count="0" type="stmt"/>
+        <line num="1425" count="0" type="stmt"/>
+        <line num="1428" count="0" type="stmt"/>
+        <line num="1432" count="0" type="stmt"/>
+        <line num="1435" count="0" type="stmt"/>
+        <line num="1436" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1437" count="0" type="stmt"/>
+        <line num="1439" count="0" type="stmt"/>
+        <line num="1440" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1441" count="0" type="stmt"/>
+        <line num="1442" count="0" type="stmt"/>
+        <line num="1443" count="0" type="stmt"/>
+        <line num="1445" count="0" type="stmt"/>
+        <line num="1448" count="0" type="stmt"/>
+        <line num="1450" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1452" count="0" type="stmt"/>
+        <line num="1455" count="0" type="stmt"/>
+        <line num="1458" count="0" type="stmt"/>
+        <line num="1460" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1462" count="0" type="stmt"/>
+        <line num="1464" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1466" count="0" type="stmt"/>
+        <line num="1467" count="0" type="stmt"/>
+        <line num="1468" count="0" type="stmt"/>
+        <line num="1473" count="0" type="stmt"/>
+        <line num="1476" count="0" type="stmt"/>
+        <line num="1481" count="0" type="stmt"/>
+        <line num="1491" count="0" type="stmt"/>
+        <line num="1494" count="0" type="stmt"/>
+        <line num="1495" count="0" type="stmt"/>
+        <line num="1498" count="0" type="stmt"/>
+        <line num="1502" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1503" count="0" type="stmt"/>
+        <line num="1504" count="0" type="stmt"/>
+        <line num="1505" count="0" type="stmt"/>
+        <line num="1510" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1511" count="0" type="stmt"/>
+        <line num="1517" count="0" type="stmt"/>
+        <line num="1520" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1521" count="0" type="stmt"/>
+        <line num="1522" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1524" count="0" type="stmt"/>
+        <line num="1525" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1526" count="0" type="stmt"/>
+        <line num="1527" count="0" type="stmt"/>
+        <line num="1531" count="0" type="stmt"/>
+        <line num="1542" count="0" type="stmt"/>
+        <line num="1543" count="0" type="stmt"/>
+        <line num="1547" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1548" count="0" type="stmt"/>
+        <line num="1549" count="0" type="stmt"/>
+        <line num="1553" count="0" type="stmt"/>
+        <line num="1566" count="0" type="stmt"/>
+        <line num="1572" count="0" type="stmt"/>
+        <line num="1580" count="0" type="stmt"/>
+        <line num="1581" count="0" type="stmt"/>
+        <line num="1582" count="0" type="stmt"/>
+        <line num="1590" count="0" type="stmt"/>
+        <line num="1592" count="0" type="stmt"/>
+        <line num="1593" count="0" type="stmt"/>
+        <line num="1603" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1604" count="0" type="stmt"/>
+        <line num="1608" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1609" count="0" type="stmt"/>
+        <line num="1610" count="0" type="stmt"/>
+        <line num="1613" count="0" type="stmt"/>
+        <line num="1615" count="0" type="stmt"/>
+        <line num="1617" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1619" count="0" type="stmt"/>
+        <line num="1620" count="0" type="stmt"/>
+        <line num="1623" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1625" count="0" type="stmt"/>
+        <line num="1626" count="0" type="stmt"/>
+        <line num="1627" count="0" type="stmt"/>
+        <line num="1629" count="0" type="stmt"/>
+        <line num="1631" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1633" count="0" type="stmt"/>
+        <line num="1636" count="0" type="stmt"/>
+        <line num="1637" count="0" type="stmt"/>
+        <line num="1639" count="0" type="stmt"/>
+        <line num="1641" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1643" count="0" type="stmt"/>
+        <line num="1646" count="0" type="stmt"/>
+        <line num="1649" count="0" type="stmt"/>
+        <line num="1651" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1653" count="0" type="stmt"/>
+        <line num="1654" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1655" count="0" type="stmt"/>
+        <line num="1656" count="0" type="stmt"/>
+        <line num="1660" count="0" type="stmt"/>
+        <line num="1663" count="0" type="stmt"/>
+        <line num="1664" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1666" count="0" type="stmt"/>
+        <line num="1667" count="0" type="stmt"/>
+        <line num="1669" count="0" type="stmt"/>
+        <line num="1672" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1674" count="0" type="stmt"/>
+        <line num="1675" count="0" type="stmt"/>
+        <line num="1676" count="0" type="stmt"/>
+        <line num="1681" count="0" type="stmt"/>
+        <line num="1684" count="0" type="stmt"/>
+        <line num="1690" count="0" type="stmt"/>
+        <line num="1691" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1692" count="0" type="stmt"/>
+        <line num="1694" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1695" count="0" type="stmt"/>
+        <line num="1696" count="0" type="stmt"/>
+        <line num="1698" count="0" type="stmt"/>
+        <line num="1702" count="0" type="stmt"/>
+        <line num="1715" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1716" count="0" type="stmt"/>
+        <line num="1719" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1722" count="0" type="stmt"/>
+        <line num="1725" count="0" type="stmt"/>
+        <line num="1726" count="0" type="stmt"/>
+        <line num="1734" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1737" count="0" type="stmt"/>
+        <line num="1738" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1739" count="0" type="stmt"/>
+        <line num="1740" count="0" type="stmt"/>
+        <line num="1747" count="0" type="stmt"/>
+        <line num="1748" count="0" type="stmt"/>
+        <line num="1749" count="0" type="stmt"/>
+        <line num="1751" count="0" type="cond" truecount="0" falsecount="8"/>
+        <line num="1755" count="0" type="stmt"/>
+        <line num="1758" count="0" type="cond" truecount="0" falsecount="8"/>
+        <line num="1760" count="0" type="stmt"/>
+        <line num="1764" count="0" type="stmt"/>
+      </file>
+      <file name="websocket.ts" path="/home/all/repos/LiveLink/src/server/websocket.ts">
+        <metrics statements="30" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="13" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="55" count="0" type="stmt"/>
+        <line num="62" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="71" count="0" type="stmt"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="stmt"/>
+        <line num="81" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="88" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="89" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.db">
+      <metrics statements="33" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="5" coveredmethods="0"/>
+      <file name="database.ts" path="/home/all/repos/LiveLink/src/server/db/database.ts">
+        <metrics statements="33" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="5" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="72" count="0" type="stmt"/>
+        <line num="77" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="stmt"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="91" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="99" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="101" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.routes">
+      <metrics statements="470" coveredstatements="0" conditionals="112" coveredconditionals="0" methods="48" coveredmethods="0"/>
+      <file name="api.ts" path="/home/all/repos/LiveLink/src/server/routes/api.ts">
+        <metrics statements="470" coveredstatements="0" conditionals="112" coveredconditionals="0" methods="48" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="59" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="71" count="0" type="stmt"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="76" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="87" count="0" type="stmt"/>
+        <line num="88" count="0" type="stmt"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="95" count="0" type="stmt"/>
+        <line num="96" count="0" type="stmt"/>
+        <line num="98" count="0" type="stmt"/>
+        <line num="103" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="108" count="0" type="stmt"/>
+        <line num="109" count="0" type="stmt"/>
+        <line num="110" count="0" type="stmt"/>
+        <line num="111" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="113" count="0" type="stmt"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="117" count="0" type="stmt"/>
+        <line num="124" count="0" type="stmt"/>
+        <line num="126" count="0" type="stmt"/>
+        <line num="127" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="132" count="0" type="stmt"/>
+        <line num="133" count="0" type="stmt"/>
+        <line num="134" count="0" type="stmt"/>
+        <line num="135" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="136" count="0" type="stmt"/>
+        <line num="137" count="0" type="stmt"/>
+        <line num="138" count="0" type="stmt"/>
+        <line num="140" count="0" type="stmt"/>
+        <line num="141" count="0" type="stmt"/>
+        <line num="143" count="0" type="stmt"/>
+        <line num="148" count="0" type="stmt"/>
+        <line num="149" count="0" type="stmt"/>
+        <line num="154" count="0" type="stmt"/>
+        <line num="155" count="0" type="stmt"/>
+        <line num="156" count="0" type="stmt"/>
+        <line num="157" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="158" count="0" type="stmt"/>
+        <line num="159" count="0" type="stmt"/>
+        <line num="160" count="0" type="stmt"/>
+        <line num="162" count="0" type="stmt"/>
+        <line num="163" count="0" type="stmt"/>
+        <line num="165" count="0" type="stmt"/>
+        <line num="166" count="0" type="stmt"/>
+        <line num="170" count="0" type="stmt"/>
+        <line num="171" count="0" type="stmt"/>
+        <line num="172" count="0" type="stmt"/>
+        <line num="173" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="174" count="0" type="stmt"/>
+        <line num="175" count="0" type="stmt"/>
+        <line num="176" count="0" type="stmt"/>
+        <line num="178" count="0" type="stmt"/>
+        <line num="179" count="0" type="stmt"/>
+        <line num="181" count="0" type="stmt"/>
+        <line num="182" count="0" type="stmt"/>
+        <line num="187" count="0" type="stmt"/>
+        <line num="188" count="0" type="stmt"/>
+        <line num="189" count="0" type="stmt"/>
+        <line num="196" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="197" count="0" type="stmt"/>
+        <line num="198" count="0" type="stmt"/>
+        <line num="199" count="0" type="stmt"/>
+        <line num="203" count="0" type="stmt"/>
+        <line num="204" count="0" type="stmt"/>
+        <line num="205" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="206" count="0" type="stmt"/>
+        <line num="207" count="0" type="stmt"/>
+        <line num="211" count="0" type="stmt"/>
+        <line num="212" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="214" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="215" count="0" type="stmt"/>
+        <line num="216" count="0" type="stmt"/>
+        <line num="220" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="221" count="0" type="stmt"/>
+        <line num="222" count="0" type="stmt"/>
+        <line num="225" count="0" type="stmt"/>
+        <line num="230" count="0" type="stmt"/>
+        <line num="232" count="0" type="stmt"/>
+        <line num="233" count="0" type="stmt"/>
+        <line num="237" count="0" type="stmt"/>
+        <line num="238" count="0" type="stmt"/>
+        <line num="239" count="0" type="stmt"/>
+        <line num="240" count="0" type="stmt"/>
+        <line num="241" count="0" type="stmt"/>
+        <line num="243" count="0" type="stmt"/>
+        <line num="244" count="0" type="stmt"/>
+        <line num="249" count="0" type="stmt"/>
+        <line num="250" count="0" type="stmt"/>
+        <line num="251" count="0" type="stmt"/>
+        <line num="252" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="253" count="0" type="stmt"/>
+        <line num="254" count="0" type="stmt"/>
+        <line num="255" count="0" type="stmt"/>
+        <line num="258" count="0" type="stmt"/>
+        <line num="259" count="0" type="stmt"/>
+        <line num="261" count="0" type="stmt"/>
+        <line num="262" count="0" type="stmt"/>
+        <line num="266" count="0" type="stmt"/>
+        <line num="267" count="0" type="stmt"/>
+        <line num="268" count="0" type="stmt"/>
+        <line num="269" count="0" type="stmt"/>
+        <line num="271" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="272" count="0" type="stmt"/>
+        <line num="273" count="0" type="stmt"/>
+        <line num="274" count="0" type="stmt"/>
+        <line num="277" count="0" type="stmt"/>
+        <line num="283" count="0" type="stmt"/>
+        <line num="284" count="0" type="stmt"/>
+        <line num="286" count="0" type="stmt"/>
+        <line num="287" count="0" type="stmt"/>
+        <line num="291" count="0" type="stmt"/>
+        <line num="292" count="0" type="stmt"/>
+        <line num="293" count="0" type="stmt"/>
+        <line num="294" count="0" type="stmt"/>
+        <line num="296" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="297" count="0" type="stmt"/>
+        <line num="298" count="0" type="stmt"/>
+        <line num="299" count="0" type="stmt"/>
+        <line num="302" count="0" type="stmt"/>
+        <line num="303" count="0" type="stmt"/>
+        <line num="305" count="0" type="stmt"/>
+        <line num="306" count="0" type="stmt"/>
+        <line num="310" count="0" type="stmt"/>
+        <line num="311" count="0" type="stmt"/>
+        <line num="312" count="0" type="stmt"/>
+        <line num="314" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="315" count="0" type="stmt"/>
+        <line num="316" count="0" type="stmt"/>
+        <line num="317" count="0" type="stmt"/>
+        <line num="320" count="0" type="stmt"/>
+        <line num="321" count="0" type="stmt"/>
+        <line num="323" count="0" type="stmt"/>
+        <line num="324" count="0" type="stmt"/>
+        <line num="329" count="0" type="stmt"/>
+        <line num="330" count="0" type="stmt"/>
+        <line num="331" count="0" type="stmt"/>
+        <line num="332" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="333" count="0" type="stmt"/>
+        <line num="334" count="0" type="stmt"/>
+        <line num="335" count="0" type="stmt"/>
+        <line num="338" count="0" type="stmt"/>
+        <line num="339" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="340" count="0" type="stmt"/>
+        <line num="341" count="0" type="stmt"/>
+        <line num="342" count="0" type="stmt"/>
+        <line num="345" count="0" type="stmt"/>
+        <line num="346" count="0" type="stmt"/>
+        <line num="348" count="0" type="stmt"/>
+        <line num="349" count="0" type="stmt"/>
+        <line num="353" count="0" type="stmt"/>
+        <line num="354" count="0" type="stmt"/>
+        <line num="355" count="0" type="stmt"/>
+        <line num="356" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="357" count="0" type="stmt"/>
+        <line num="358" count="0" type="stmt"/>
+        <line num="359" count="0" type="stmt"/>
+        <line num="362" count="0" type="stmt"/>
+        <line num="363" count="0" type="stmt"/>
+        <line num="365" count="0" type="stmt"/>
+        <line num="366" count="0" type="stmt"/>
+        <line num="371" count="0" type="stmt"/>
+        <line num="372" count="0" type="stmt"/>
+        <line num="373" count="0" type="stmt"/>
+        <line num="374" count="0" type="stmt"/>
+        <line num="375" count="0" type="stmt"/>
+        <line num="377" count="0" type="stmt"/>
+        <line num="378" count="0" type="stmt"/>
+        <line num="383" count="0" type="stmt"/>
+        <line num="384" count="0" type="stmt"/>
+        <line num="385" count="0" type="stmt"/>
+        <line num="387" count="0" type="stmt"/>
+        <line num="388" count="0" type="stmt"/>
+        <line num="392" count="0" type="stmt"/>
+        <line num="393" count="0" type="stmt"/>
+        <line num="394" count="0" type="stmt"/>
+        <line num="395" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="396" count="0" type="stmt"/>
+        <line num="397" count="0" type="stmt"/>
+        <line num="398" count="0" type="stmt"/>
+        <line num="402" count="0" type="stmt"/>
+        <line num="403" count="0" type="stmt"/>
+        <line num="405" count="0" type="stmt"/>
+        <line num="406" count="0" type="stmt"/>
+        <line num="410" count="0" type="stmt"/>
+        <line num="411" count="0" type="stmt"/>
+        <line num="412" count="0" type="stmt"/>
+        <line num="413" count="0" type="stmt"/>
+        <line num="415" count="0" type="stmt"/>
+        <line num="416" count="0" type="stmt"/>
+        <line num="421" count="0" type="stmt"/>
+        <line num="422" count="0" type="stmt"/>
+        <line num="423" count="0" type="stmt"/>
+        <line num="426" count="0" type="stmt"/>
+        <line num="429" count="0" type="stmt"/>
+        <line num="430" count="0" type="stmt"/>
+        <line num="433" count="0" type="stmt"/>
+        <line num="436" count="0" type="stmt"/>
+        <line num="437" count="0" type="stmt"/>
+        <line num="438" count="0" type="stmt"/>
+        <line num="439" count="0" type="stmt"/>
+        <line num="440" count="0" type="stmt"/>
+        <line num="441" count="0" type="stmt"/>
+        <line num="443" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="444" count="0" type="stmt"/>
+        <line num="448" count="0" type="stmt"/>
+        <line num="449" count="0" type="stmt"/>
+        <line num="454" count="0" type="stmt"/>
+        <line num="455" count="0" type="stmt"/>
+        <line num="456" count="0" type="stmt"/>
+        <line num="459" count="0" type="stmt"/>
+        <line num="462" count="0" type="stmt"/>
+        <line num="463" count="0" type="stmt"/>
+        <line num="466" count="0" type="stmt"/>
+        <line num="469" count="0" type="stmt"/>
+        <line num="470" count="0" type="stmt"/>
+        <line num="471" count="0" type="stmt"/>
+        <line num="474" count="0" type="stmt"/>
+        <line num="475" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="476" count="0" type="stmt"/>
+        <line num="478" count="0" type="stmt"/>
+        <line num="479" count="0" type="stmt"/>
+        <line num="480" count="0" type="stmt"/>
+        <line num="484" count="0" type="stmt"/>
+        <line num="485" count="0" type="stmt"/>
+        <line num="487" count="0" type="stmt"/>
+        <line num="491" count="0" type="stmt"/>
+        <line num="492" count="0" type="stmt"/>
+        <line num="493" count="0" type="stmt"/>
+        <line num="494" count="0" type="stmt"/>
+        <line num="496" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="497" count="0" type="stmt"/>
+        <line num="501" count="0" type="stmt"/>
+        <line num="502" count="0" type="stmt"/>
+        <line num="507" count="0" type="stmt"/>
+        <line num="508" count="0" type="stmt"/>
+        <line num="509" count="0" type="stmt"/>
+        <line num="510" count="0" type="stmt"/>
+        <line num="512" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="513" count="0" type="stmt"/>
+        <line num="514" count="0" type="stmt"/>
+        <line num="515" count="0" type="stmt"/>
+        <line num="518" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="519" count="0" type="stmt"/>
+        <line num="520" count="0" type="stmt"/>
+        <line num="521" count="0" type="stmt"/>
+        <line num="524" count="0" type="stmt"/>
+        <line num="525" count="0" type="stmt"/>
+        <line num="527" count="0" type="stmt"/>
+        <line num="528" count="0" type="stmt"/>
+        <line num="532" count="0" type="stmt"/>
+        <line num="533" count="0" type="stmt"/>
+        <line num="534" count="0" type="stmt"/>
+        <line num="536" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="537" count="0" type="stmt"/>
+        <line num="538" count="0" type="stmt"/>
+        <line num="539" count="0" type="stmt"/>
+        <line num="542" count="0" type="stmt"/>
+        <line num="543" count="0" type="stmt"/>
+        <line num="545" count="0" type="stmt"/>
+        <line num="546" count="0" type="stmt"/>
+        <line num="551" count="0" type="stmt"/>
+        <line num="552" count="0" type="stmt"/>
+        <line num="553" count="0" type="stmt"/>
+        <line num="554" count="0" type="stmt"/>
+        <line num="556" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="557" count="0" type="stmt"/>
+        <line num="558" count="0" type="stmt"/>
+        <line num="559" count="0" type="stmt"/>
+        <line num="562" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="563" count="0" type="stmt"/>
+        <line num="565" count="0" type="stmt"/>
+        <line num="566" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="567" count="0" type="stmt"/>
+        <line num="568" count="0" type="stmt"/>
+        <line num="569" count="0" type="stmt"/>
+        <line num="571" count="0" type="stmt"/>
+        <line num="574" count="0" type="stmt"/>
+        <line num="576" count="0" type="stmt"/>
+        <line num="577" count="0" type="stmt"/>
+        <line num="581" count="0" type="stmt"/>
+        <line num="582" count="0" type="stmt"/>
+        <line num="583" count="0" type="stmt"/>
+        <line num="585" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="586" count="0" type="stmt"/>
+        <line num="588" count="0" type="stmt"/>
+        <line num="589" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="590" count="0" type="stmt"/>
+        <line num="591" count="0" type="stmt"/>
+        <line num="592" count="0" type="stmt"/>
+        <line num="594" count="0" type="stmt"/>
+        <line num="597" count="0" type="stmt"/>
+        <line num="599" count="0" type="stmt"/>
+        <line num="600" count="0" type="stmt"/>
+        <line num="604" count="0" type="stmt"/>
+        <line num="605" count="0" type="stmt"/>
+        <line num="606" count="0" type="stmt"/>
+        <line num="607" count="0" type="stmt"/>
+        <line num="609" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="610" count="0" type="stmt"/>
+        <line num="611" count="0" type="stmt"/>
+        <line num="612" count="0" type="stmt"/>
+        <line num="615" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="616" count="0" type="stmt"/>
+        <line num="618" count="0" type="stmt"/>
+        <line num="619" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="620" count="0" type="stmt"/>
+        <line num="621" count="0" type="stmt"/>
+        <line num="622" count="0" type="stmt"/>
+        <line num="624" count="0" type="stmt"/>
+        <line num="627" count="0" type="stmt"/>
+        <line num="629" count="0" type="stmt"/>
+        <line num="630" count="0" type="stmt"/>
+        <line num="635" count="0" type="stmt"/>
+        <line num="636" count="0" type="stmt"/>
+        <line num="637" count="0" type="stmt"/>
+        <line num="639" count="0" type="stmt"/>
+        <line num="640" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="645" count="0" type="stmt"/>
+        <line num="646" count="0" type="stmt"/>
+        <line num="647" count="0" type="stmt"/>
+        <line num="648" count="0" type="stmt"/>
+        <line num="649" count="0" type="stmt"/>
+        <line num="651" count="0" type="stmt"/>
+        <line num="652" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="657" count="0" type="stmt"/>
+        <line num="658" count="0" type="stmt"/>
+        <line num="661" count="0" type="stmt"/>
+        <line num="662" count="0" type="stmt"/>
+        <line num="663" count="0" type="stmt"/>
+        <line num="664" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="665" count="0" type="stmt"/>
+        <line num="666" count="0" type="stmt"/>
+        <line num="667" count="0" type="stmt"/>
+        <line num="670" count="0" type="stmt"/>
+        <line num="671" count="0" type="stmt"/>
+        <line num="672" count="0" type="stmt"/>
+        <line num="674" count="0" type="stmt"/>
+        <line num="675" count="0" type="stmt"/>
+        <line num="680" count="0" type="stmt"/>
+        <line num="681" count="0" type="stmt"/>
+        <line num="684" count="0" type="stmt"/>
+        <line num="685" count="0" type="stmt"/>
+        <line num="686" count="0" type="stmt"/>
+        <line num="687" count="0" type="stmt"/>
+        <line num="688" count="0" type="stmt"/>
+        <line num="690" count="0" type="stmt"/>
+        <line num="691" count="0" type="stmt"/>
+        <line num="696" count="0" type="stmt"/>
+        <line num="697" count="0" type="stmt"/>
+        <line num="698" count="0" type="stmt"/>
+        <line num="699" count="0" type="stmt"/>
+        <line num="701" count="0" type="stmt"/>
+        <line num="702" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="707" count="0" type="stmt"/>
+        <line num="708" count="0" type="stmt"/>
+        <line num="709" count="0" type="stmt"/>
+        <line num="711" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="713" count="0" type="stmt"/>
+        <line num="714" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="715" count="0" type="stmt"/>
+        <line num="716" count="0" type="stmt"/>
+        <line num="717" count="0" type="stmt"/>
+        <line num="721" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="722" count="0" type="stmt"/>
+        <line num="726" count="0" type="stmt"/>
+        <line num="729" count="0" type="stmt"/>
+        <line num="730" count="0" type="stmt"/>
+        <line num="733" count="0" type="stmt"/>
+        <line num="734" count="0" type="stmt"/>
+        <line num="737" count="0" type="stmt"/>
+        <line num="738" count="0" type="stmt"/>
+        <line num="743" count="0" type="stmt"/>
+        <line num="744" count="0" type="stmt"/>
+        <line num="746" count="0" type="stmt"/>
+        <line num="749" count="0" type="stmt"/>
+        <line num="750" count="0" type="stmt"/>
+        <line num="753" count="0" type="stmt"/>
+        <line num="755" count="0" type="stmt"/>
+        <line num="756" count="0" type="stmt"/>
+        <line num="761" count="0" type="stmt"/>
+        <line num="762" count="0" type="stmt"/>
+        <line num="763" count="0" type="stmt"/>
+        <line num="765" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="766" count="0" type="stmt"/>
+        <line num="767" count="0" type="stmt"/>
+        <line num="768" count="0" type="stmt"/>
+        <line num="771" count="0" type="stmt"/>
+        <line num="772" count="0" type="stmt"/>
+        <line num="774" count="0" type="stmt"/>
+        <line num="775" count="0" type="stmt"/>
+        <line num="780" count="0" type="stmt"/>
+        <line num="781" count="0" type="stmt"/>
+        <line num="782" count="0" type="stmt"/>
+        <line num="791" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="792" count="0" type="stmt"/>
+        <line num="793" count="0" type="stmt"/>
+        <line num="794" count="0" type="stmt"/>
+        <line num="798" count="0" type="stmt"/>
+        <line num="799" count="0" type="stmt"/>
+        <line num="801" count="0" type="stmt"/>
+        <line num="802" count="0" type="stmt"/>
+        <line num="807" count="0" type="stmt"/>
+        <line num="808" count="0" type="stmt"/>
+        <line num="809" count="0" type="stmt"/>
+        <line num="812" count="0" type="stmt"/>
+        <line num="813" count="0" type="stmt"/>
+        <line num="816" count="0" type="stmt"/>
+        <line num="818" count="0" type="stmt"/>
+        <line num="820" count="0" type="stmt"/>
+        <line num="825" count="0" type="stmt"/>
+        <line num="826" count="0" type="stmt"/>
+        <line num="831" count="0" type="stmt"/>
+        <line num="832" count="0" type="stmt"/>
+        <line num="833" count="0" type="stmt"/>
+        <line num="835" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="836" count="0" type="stmt"/>
+        <line num="837" count="0" type="stmt"/>
+        <line num="838" count="0" type="stmt"/>
+        <line num="841" count="0" type="stmt"/>
+        <line num="844" count="0" type="stmt"/>
+        <line num="847" count="0" type="stmt"/>
+        <line num="849" count="0" type="stmt"/>
+        <line num="851" count="0" type="stmt"/>
+        <line num="856" count="0" type="stmt"/>
+        <line num="857" count="0" type="stmt"/>
+        <line num="862" count="0" type="stmt"/>
+        <line num="863" count="0" type="stmt"/>
+        <line num="864" count="0" type="stmt"/>
+        <line num="865" count="0" type="stmt"/>
+        <line num="867" count="0" type="stmt"/>
+        <line num="868" count="0" type="stmt"/>
+        <line num="870" count="0" type="stmt"/>
+        <line num="885" count="0" type="stmt"/>
+        <line num="890" count="0" type="stmt"/>
+        <line num="891" count="0" type="stmt"/>
+        <line num="897" count="0" type="stmt"/>
+        <line num="898" count="0" type="stmt"/>
+        <line num="899" count="0" type="stmt"/>
+        <line num="900" count="0" type="stmt"/>
+        <line num="902" count="0" type="stmt"/>
+        <line num="903" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="904" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="905" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="906" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="908" count="0" type="stmt"/>
+        <line num="911" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.services">
+      <metrics statements="1038" coveredstatements="0" conditionals="733" coveredconditionals="0" methods="184" coveredmethods="0"/>
+      <file name="holodex.ts" path="/home/all/repos/LiveLink/src/server/services/holodex.ts">
+        <metrics statements="105" coveredstatements="0" conditionals="168" coveredconditionals="0" methods="18" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="19" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="28" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="31" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="54" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="55" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="60" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="62" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="68" count="0" type="stmt"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="76" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="84" count="0" type="stmt"/>
+        <line num="85" count="0" type="stmt"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="88" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="90" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="93" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="94" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="95" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="101" count="0" type="stmt"/>
+        <line num="104" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="108" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="109" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="113" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="124" count="0" type="stmt"/>
+        <line num="125" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="126" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="127" count="0" type="stmt"/>
+        <line num="129" count="0" type="stmt"/>
+        <line num="131" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="132" count="0" type="stmt"/>
+        <line num="135" count="0" type="stmt"/>
+        <line num="136" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="137" count="0" type="cond" truecount="0" falsecount="8"/>
+        <line num="139" count="0" type="stmt"/>
+        <line num="157" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="162" count="0" type="stmt"/>
+        <line num="164" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="165" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="166" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="169" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="170" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="173" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="180" count="0" type="stmt"/>
+        <line num="181" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="182" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="184" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="185" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="188" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="189" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="190" count="0" type="stmt"/>
+        <line num="194" count="0" type="stmt"/>
+        <line num="196" count="0" type="stmt"/>
+        <line num="197" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="198" count="0" type="stmt"/>
+        <line num="203" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="205" count="0" type="stmt"/>
+        <line num="206" count="0" type="stmt"/>
+        <line num="207" count="0" type="stmt"/>
+        <line num="214" count="0" type="stmt"/>
+        <line num="215" count="0" type="stmt"/>
+        <line num="217" count="0" type="stmt"/>
+        <line num="226" count="0" type="stmt"/>
+        <line num="231" count="0" type="stmt"/>
+        <line num="236" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="237" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="238" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="241" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="242" count="0" type="stmt"/>
+        <line num="243" count="0" type="stmt"/>
+        <line num="247" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="248" count="0" type="stmt"/>
+        <line num="252" count="0" type="stmt"/>
+        <line num="258" count="0" type="stmt"/>
+        <line num="259" count="0" type="stmt"/>
+        <line num="262" count="0" type="stmt"/>
+        <line num="264" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="265" count="0" type="stmt"/>
+        <line num="269" count="0" type="stmt"/>
+        <line num="275" count="0" type="stmt"/>
+        <line num="279" count="0" type="stmt"/>
+        <line num="283" count="0" type="stmt"/>
+      </file>
+      <file name="keyboard_service.ts" path="/home/all/repos/LiveLink/src/server/services/keyboard_service.ts">
+        <metrics statements="60" coveredstatements="0" conditionals="25" coveredconditionals="0" methods="12" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="28" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="38" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="68" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="69" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="72" count="0" type="stmt"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="76" count="0" type="stmt"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="90" count="0" type="stmt"/>
+        <line num="91" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="98" count="0" type="stmt"/>
+        <line num="103" count="0" type="stmt"/>
+        <line num="104" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="115" count="0" type="stmt"/>
+        <line num="120" count="0" type="stmt"/>
+        <line num="126" count="0" type="stmt"/>
+        <line num="127" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="132" count="0" type="stmt"/>
+        <line num="133" count="0" type="stmt"/>
+        <line num="134" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="136" count="0" type="stmt"/>
+        <line num="138" count="0" type="stmt"/>
+        <line num="139" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="140" count="0" type="stmt"/>
+      </file>
+      <file name="keyboard_worker.ts" path="/home/all/repos/LiveLink/src/server/services/keyboard_worker.ts">
+        <metrics statements="39" coveredstatements="0" conditionals="59" coveredconditionals="0" methods="6" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="10" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="13" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="14" count="0" type="stmt"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="19" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="32" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="45" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="46" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="57" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="67" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="68" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="72" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="73" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="77" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="78" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="86" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="87" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="88" count="0" type="stmt"/>
+        <line num="89" count="0" type="stmt"/>
+        <line num="94" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="96" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="100" count="0" type="stmt"/>
+      </file>
+      <file name="logger.ts" path="/home/all/repos/LiveLink/src/server/services/logger.ts">
+        <metrics statements="63" coveredstatements="0" conditionals="39" coveredconditionals="0" methods="13" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="7" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="10" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="25" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="38" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="39" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="46" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="50" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="63" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="89" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="90" count="0" type="stmt"/>
+        <line num="91" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="92" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="93" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="99" count="0" type="stmt"/>
+        <line num="100" count="0" type="stmt"/>
+        <line num="101" count="0" type="stmt"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="111" count="0" type="stmt"/>
+        <line num="115" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="117" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+        <line num="119" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="120" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="121" count="0" type="stmt"/>
+        <line num="122" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="124" count="0" type="stmt"/>
+        <line num="125" count="0" type="stmt"/>
+        <line num="126" count="0" type="stmt"/>
+        <line num="130" count="0" type="stmt"/>
+        <line num="135" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="136" count="0" type="stmt"/>
+        <line num="137" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="140" count="0" type="stmt"/>
+        <line num="141" count="0" type="stmt"/>
+        <line num="145" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="147" count="0" type="stmt"/>
+        <line num="158" count="0" type="stmt"/>
+        <line num="167" count="0" type="stmt"/>
+        <line num="175" count="0" type="stmt"/>
+        <line num="183" count="0" type="stmt"/>
+        <line num="191" count="0" type="stmt"/>
+      </file>
+      <file name="player.ts" path="/home/all/repos/LiveLink/src/server/services/player.ts">
+        <metrics statements="568" coveredstatements="0" conditionals="332" coveredconditionals="0" methods="89" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="7" count="0" type="stmt"/>
+        <line num="8" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="32" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="stmt"/>
+        <line num="41" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="stmt"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="49" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="54" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="61" count="0" type="stmt"/>
+        <line num="62" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="66" count="0" type="stmt"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="76" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="79" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="82" count="0" type="stmt"/>
+        <line num="85" count="0" type="stmt"/>
+        <line num="86" count="0" type="stmt"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="94" count="0" type="stmt"/>
+        <line num="96" count="0" type="stmt"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="102" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="112" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="113" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="115" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="116" count="0" type="stmt"/>
+        <line num="121" count="0" type="stmt"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="133" count="0" type="stmt"/>
+        <line num="134" count="0" type="stmt"/>
+        <line num="136" count="0" type="stmt"/>
+        <line num="137" count="0" type="stmt"/>
+        <line num="138" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="140" count="0" type="stmt"/>
+        <line num="141" count="0" type="stmt"/>
+        <line num="142" count="0" type="stmt"/>
+        <line num="143" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="145" count="0" type="stmt"/>
+        <line num="146" count="0" type="stmt"/>
+        <line num="147" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="148" count="0" type="stmt"/>
+        <line num="149" count="0" type="stmt"/>
+        <line num="153" count="0" type="stmt"/>
+        <line num="163" count="0" type="stmt"/>
+        <line num="164" count="0" type="stmt"/>
+        <line num="165" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="166" count="0" type="stmt"/>
+        <line num="167" count="0" type="stmt"/>
+        <line num="174" count="0" type="stmt"/>
+        <line num="177" count="0" type="stmt"/>
+        <line num="178" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="179" count="0" type="stmt"/>
+        <line num="188" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="189" count="0" type="stmt"/>
+        <line num="197" count="0" type="stmt"/>
+        <line num="198" count="0" type="stmt"/>
+        <line num="199" count="0" type="stmt"/>
+        <line num="202" count="0" type="stmt"/>
+        <line num="204" count="0" type="stmt"/>
+        <line num="207" count="0" type="stmt"/>
+        <line num="208" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="209" count="0" type="stmt"/>
+        <line num="213" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="214" count="0" type="stmt"/>
+        <line num="218" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="219" count="0" type="stmt"/>
+        <line num="223" count="0" type="stmt"/>
+        <line num="227" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="232" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="235" count="0" type="stmt"/>
+        <line num="238" count="0" type="stmt"/>
+        <line num="239" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="240" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="242" count="0" type="stmt"/>
+        <line num="248" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="253" count="0" type="stmt"/>
+        <line num="271" count="0" type="stmt"/>
+        <line num="274" count="0" type="stmt"/>
+        <line num="276" count="0" type="stmt"/>
+        <line num="282" count="0" type="stmt"/>
+        <line num="287" count="0" type="stmt"/>
+        <line num="293" count="0" type="stmt"/>
+        <line num="294" count="0" type="stmt"/>
+        <line num="301" count="0" type="stmt"/>
+        <line num="302" count="0" type="stmt"/>
+        <line num="305" count="0" type="stmt"/>
+        <line num="306" count="0" type="stmt"/>
+        <line num="307" count="0" type="stmt"/>
+        <line num="310" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="312" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="313" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="318" count="0" type="stmt"/>
+        <line num="319" count="0" type="stmt"/>
+        <line num="321" count="0" type="stmt"/>
+        <line num="322" count="0" type="stmt"/>
+        <line num="324" count="0" type="stmt"/>
+        <line num="329" count="0" type="stmt"/>
+        <line num="330" count="0" type="stmt"/>
+        <line num="336" count="0" type="stmt"/>
+        <line num="337" count="0" type="stmt"/>
+        <line num="338" count="0" type="stmt"/>
+        <line num="340" count="0" type="stmt"/>
+        <line num="341" count="0" type="stmt"/>
+        <line num="343" count="0" type="stmt"/>
+        <line num="348" count="0" type="stmt"/>
+        <line num="349" count="0" type="stmt"/>
+        <line num="350" count="0" type="stmt"/>
+        <line num="351" count="0" type="stmt"/>
+        <line num="352" count="0" type="stmt"/>
+        <line num="353" count="0" type="stmt"/>
+        <line num="354" count="0" type="stmt"/>
+        <line num="357" count="0" type="stmt"/>
+        <line num="358" count="0" type="stmt"/>
+        <line num="359" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="360" count="0" type="stmt"/>
+        <line num="361" count="0" type="stmt"/>
+        <line num="362" count="0" type="stmt"/>
+        <line num="365" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="366" count="0" type="stmt"/>
+        <line num="370" count="0" type="stmt"/>
+        <line num="371" count="0" type="stmt"/>
+        <line num="372" count="0" type="stmt"/>
+        <line num="373" count="0" type="stmt"/>
+        <line num="376" count="0" type="stmt"/>
+        <line num="377" count="0" type="stmt"/>
+        <line num="378" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="379" count="0" type="stmt"/>
+        <line num="382" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="383" count="0" type="stmt"/>
+        <line num="384" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="385" count="0" type="stmt"/>
+        <line num="386" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="387" count="0" type="stmt"/>
+        <line num="388" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="389" count="0" type="stmt"/>
+        <line num="390" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="391" count="0" type="stmt"/>
+        <line num="392" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="393" count="0" type="stmt"/>
+        <line num="394" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="395" count="0" type="stmt"/>
+        <line num="398" count="0" type="stmt"/>
+        <line num="402" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="403" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="404" count="0" type="stmt"/>
+        <line num="405" count="0" type="stmt"/>
+        <line num="407" count="0" type="stmt"/>
+        <line num="408" count="0" type="stmt"/>
+        <line num="411" count="0" type="stmt"/>
+        <line num="416" count="0" type="stmt"/>
+        <line num="421" count="0" type="stmt"/>
+        <line num="422" count="0" type="stmt"/>
+        <line num="424" count="0" type="stmt"/>
+        <line num="425" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="426" count="0" type="stmt"/>
+        <line num="427" count="0" type="stmt"/>
+        <line num="429" count="0" type="stmt"/>
+        <line num="430" count="0" type="stmt"/>
+        <line num="431" count="0" type="stmt"/>
+        <line num="434" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="435" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="436" count="0" type="stmt"/>
+        <line num="437" count="0" type="stmt"/>
+        <line num="438" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="444" count="0" type="stmt"/>
+        <line num="448" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="449" count="0" type="stmt"/>
+        <line num="450" count="0" type="stmt"/>
+        <line num="451" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="453" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="454" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="455" count="0" type="stmt"/>
+        <line num="459" count="0" type="stmt"/>
+        <line num="460" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="461" count="0" type="stmt"/>
+        <line num="468" count="0" type="stmt"/>
+        <line num="469" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="476" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="483" count="0" type="stmt"/>
+        <line num="489" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="490" count="0" type="stmt"/>
+        <line num="491" count="0" type="stmt"/>
+        <line num="492" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="494" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="495" count="0" type="stmt"/>
+        <line num="498" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="499" count="0" type="stmt"/>
+        <line num="503" count="0" type="stmt"/>
+        <line num="505" count="0" type="stmt"/>
+        <line num="506" count="0" type="stmt"/>
+        <line num="513" count="0" type="stmt"/>
+        <line num="514" count="0" type="stmt"/>
+        <line num="515" count="0" type="stmt"/>
+        <line num="518" count="0" type="stmt"/>
+        <line num="519" count="0" type="stmt"/>
+        <line num="520" count="0" type="stmt"/>
+        <line num="530" count="0" type="stmt"/>
+        <line num="531" count="0" type="stmt"/>
+        <line num="532" count="0" type="stmt"/>
+        <line num="533" count="0" type="stmt"/>
+        <line num="534" count="0" type="stmt"/>
+        <line num="537" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="538" count="0" type="stmt"/>
+        <line num="539" count="0" type="stmt"/>
+        <line num="540" count="0" type="stmt"/>
+        <line num="543" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="544" count="0" type="stmt"/>
+        <line num="545" count="0" type="stmt"/>
+        <line num="546" count="0" type="stmt"/>
+        <line num="551" count="0" type="stmt"/>
+        <line num="552" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="553" count="0" type="stmt"/>
+        <line num="554" count="0" type="stmt"/>
+        <line num="557" count="0" type="stmt"/>
+        <line num="559" count="0" type="stmt"/>
+        <line num="562" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="563" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="564" count="0" type="stmt"/>
+        <line num="568" count="0" type="stmt"/>
+        <line num="569" count="0" type="stmt"/>
+        <line num="570" count="0" type="stmt"/>
+        <line num="574" count="0" type="stmt"/>
+        <line num="575" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="576" count="0" type="stmt"/>
+        <line num="577" count="0" type="stmt"/>
+        <line num="583" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="584" count="0" type="stmt"/>
+        <line num="588" count="0" type="stmt"/>
+        <line num="589" count="0" type="stmt"/>
+        <line num="594" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="595" count="0" type="stmt"/>
+        <line num="596" count="0" type="stmt"/>
+        <line num="597" count="0" type="stmt"/>
+        <line num="607" count="0" type="stmt"/>
+        <line num="610" count="0" type="stmt"/>
+        <line num="611" count="0" type="stmt"/>
+        <line num="612" count="0" type="stmt"/>
+        <line num="613" count="0" type="stmt"/>
+        <line num="617" count="0" type="stmt"/>
+        <line num="618" count="0" type="stmt"/>
+        <line num="623" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="624" count="0" type="stmt"/>
+        <line num="628" count="0" type="stmt"/>
+        <line num="631" count="0" type="stmt"/>
+        <line num="634" count="0" type="stmt"/>
+        <line num="637" count="0" type="stmt"/>
+        <line num="640" count="0" type="stmt"/>
+        <line num="641" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="642" count="0" type="stmt"/>
+        <line num="643" count="0" type="stmt"/>
+        <line num="644" count="0" type="stmt"/>
+        <line num="645" count="0" type="stmt"/>
+        <line num="651" count="0" type="stmt"/>
+        <line num="655" count="0" type="stmt"/>
+        <line num="658" count="0" type="stmt"/>
+        <line num="659" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="662" count="0" type="stmt"/>
+        <line num="665" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="666" count="0" type="stmt"/>
+        <line num="669" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="670" count="0" type="stmt"/>
+        <line num="671" count="0" type="stmt"/>
+        <line num="674" count="0" type="stmt"/>
+        <line num="675" count="0" type="stmt"/>
+        <line num="684" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="686" count="0" type="stmt"/>
+        <line num="687" count="0" type="stmt"/>
+        <line num="691" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="696" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="698" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="699" count="0" type="stmt"/>
+        <line num="700" count="0" type="stmt"/>
+        <line num="703" count="0" type="stmt"/>
+        <line num="709" count="0" type="stmt"/>
+        <line num="712" count="0" type="stmt"/>
+        <line num="713" count="0" type="stmt"/>
+        <line num="715" count="0" type="stmt"/>
+        <line num="717" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="718" count="0" type="stmt"/>
+        <line num="724" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="725" count="0" type="stmt"/>
+        <line num="727" count="0" type="stmt"/>
+        <line num="734" count="0" type="stmt"/>
+        <line num="740" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="741" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="742" count="0" type="stmt"/>
+        <line num="746" count="0" type="stmt"/>
+        <line num="747" count="0" type="stmt"/>
+        <line num="750" count="0" type="stmt"/>
+        <line num="751" count="0" type="stmt"/>
+        <line num="761" count="0" type="stmt"/>
+        <line num="762" count="0" type="stmt"/>
+        <line num="766" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="774" count="0" type="stmt"/>
+        <line num="780" count="0" type="stmt"/>
+        <line num="781" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="790" count="0" type="stmt"/>
+        <line num="793" count="0" type="stmt"/>
+        <line num="794" count="0" type="stmt"/>
+        <line num="798" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="806" count="0" type="stmt"/>
+        <line num="807" count="0" type="stmt"/>
+        <line num="811" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="821" count="0" type="stmt"/>
+        <line num="822" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="823" count="0" type="stmt"/>
+        <line num="824" count="0" type="stmt"/>
+        <line num="831" count="0" type="stmt"/>
+        <line num="840" count="0" type="stmt"/>
+        <line num="841" count="0" type="stmt"/>
+        <line num="842" count="0" type="stmt"/>
+        <line num="845" count="0" type="stmt"/>
+        <line num="846" count="0" type="stmt"/>
+        <line num="848" count="0" type="stmt"/>
+        <line num="856" count="0" type="stmt"/>
+        <line num="857" count="0" type="stmt"/>
+        <line num="862" count="0" type="stmt"/>
+        <line num="863" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="864" count="0" type="stmt"/>
+        <line num="865" count="0" type="stmt"/>
+        <line num="869" count="0" type="stmt"/>
+        <line num="870" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="871" count="0" type="stmt"/>
+        <line num="872" count="0" type="stmt"/>
+        <line num="876" count="0" type="stmt"/>
+        <line num="877" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="878" count="0" type="stmt"/>
+        <line num="879" count="0" type="stmt"/>
+        <line num="883" count="0" type="stmt"/>
+        <line num="884" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="885" count="0" type="stmt"/>
+        <line num="886" count="0" type="stmt"/>
+        <line num="890" count="0" type="stmt"/>
+        <line num="899" count="0" type="stmt"/>
+        <line num="901" count="0" type="stmt"/>
+        <line num="902" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="903" count="0" type="stmt"/>
+        <line num="904" count="0" type="stmt"/>
+        <line num="908" count="0" type="stmt"/>
+        <line num="909" count="0" type="stmt"/>
+        <line num="910" count="0" type="stmt"/>
+        <line num="913" count="0" type="stmt"/>
+        <line num="916" count="0" type="stmt"/>
+        <line num="917" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="918" count="0" type="stmt"/>
+        <line num="920" count="0" type="stmt"/>
+        <line num="926" count="0" type="stmt"/>
+        <line num="933" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="934" count="0" type="stmt"/>
+        <line num="935" count="0" type="stmt"/>
+        <line num="938" count="0" type="stmt"/>
+        <line num="941" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="942" count="0" type="stmt"/>
+        <line num="943" count="0" type="stmt"/>
+        <line num="946" count="0" type="stmt"/>
+        <line num="954" count="0" type="stmt"/>
+        <line num="956" count="0" type="stmt"/>
+        <line num="964" count="0" type="stmt"/>
+        <line num="965" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="966" count="0" type="stmt"/>
+        <line num="967" count="0" type="stmt"/>
+        <line num="971" count="0" type="stmt"/>
+        <line num="972" count="0" type="stmt"/>
+        <line num="973" count="0" type="stmt"/>
+        <line num="974" count="0" type="stmt"/>
+        <line num="975" count="0" type="stmt"/>
+        <line num="976" count="0" type="stmt"/>
+        <line num="978" count="0" type="stmt"/>
+        <line num="985" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="987" count="0" type="stmt"/>
+        <line num="990" count="0" type="stmt"/>
+        <line num="991" count="0" type="stmt"/>
+        <line num="993" count="0" type="stmt"/>
+        <line num="998" count="0" type="stmt"/>
+        <line num="999" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1000" count="0" type="stmt"/>
+        <line num="1003" count="0" type="stmt"/>
+        <line num="1004" count="0" type="stmt"/>
+        <line num="1009" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1010" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1013" count="0" type="stmt"/>
+        <line num="1016" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1018" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1021" count="0" type="stmt"/>
+        <line num="1024" count="0" type="stmt"/>
+        <line num="1027" count="0" type="stmt"/>
+        <line num="1047" count="0" type="stmt"/>
+        <line num="1052" count="0" type="stmt"/>
+        <line num="1056" count="0" type="stmt"/>
+        <line num="1057" count="0" type="stmt"/>
+        <line num="1058" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1059" count="0" type="stmt"/>
+        <line num="1062" count="0" type="stmt"/>
+        <line num="1063" count="0" type="stmt"/>
+        <line num="1064" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1065" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1068" count="0" type="stmt"/>
+        <line num="1071" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1073" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1074" count="0" type="stmt"/>
+        <line num="1075" count="0" type="stmt"/>
+        <line num="1078" count="0" type="stmt"/>
+        <line num="1098" count="0" type="stmt"/>
+        <line num="1120" count="0" type="stmt"/>
+        <line num="1124" count="0" type="stmt"/>
+        <line num="1126" count="0" type="stmt"/>
+        <line num="1137" count="0" type="stmt"/>
+        <line num="1147" count="0" type="stmt"/>
+        <line num="1148" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1149" count="0" type="stmt"/>
+        <line num="1150" count="0" type="stmt"/>
+        <line num="1153" count="0" type="stmt"/>
+        <line num="1154" count="0" type="stmt"/>
+        <line num="1155" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1156" count="0" type="stmt"/>
+        <line num="1164" count="0" type="stmt"/>
+        <line num="1173" count="0" type="stmt"/>
+        <line num="1174" count="0" type="stmt"/>
+        <line num="1179" count="0" type="stmt"/>
+        <line num="1183" count="0" type="stmt"/>
+        <line num="1187" count="0" type="cond" truecount="0" falsecount="5"/>
+        <line num="1188" count="0" type="stmt"/>
+        <line num="1193" count="0" type="stmt"/>
+        <line num="1201" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1203" count="0" type="stmt"/>
+        <line num="1204" count="0" type="stmt"/>
+        <line num="1206" count="0" type="stmt"/>
+        <line num="1208" count="0" type="stmt"/>
+        <line num="1209" count="0" type="stmt"/>
+        <line num="1212" count="0" type="stmt"/>
+        <line num="1213" count="0" type="stmt"/>
+        <line num="1217" count="0" type="stmt"/>
+        <line num="1218" count="0" type="stmt"/>
+        <line num="1219" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1220" count="0" type="stmt"/>
+        <line num="1223" count="0" type="stmt"/>
+        <line num="1231" count="0" type="stmt"/>
+        <line num="1232" count="0" type="stmt"/>
+        <line num="1233" count="0" type="stmt"/>
+        <line num="1234" count="0" type="stmt"/>
+        <line num="1236" count="0" type="stmt"/>
+        <line num="1238" count="0" type="stmt"/>
+        <line num="1243" count="0" type="stmt"/>
+        <line num="1248" count="0" type="stmt"/>
+        <line num="1252" count="0" type="stmt"/>
+        <line num="1254" count="0" type="stmt"/>
+        <line num="1256" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1261" count="0" type="stmt"/>
+        <line num="1265" count="0" type="stmt"/>
+        <line num="1269" count="0" type="stmt"/>
+        <line num="1270" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1271" count="0" type="stmt"/>
+        <line num="1275" count="0" type="stmt"/>
+        <line num="1282" count="0" type="stmt"/>
+        <line num="1283" count="0" type="stmt"/>
+        <line num="1284" count="0" type="stmt"/>
+        <line num="1286" count="0" type="stmt"/>
+        <line num="1294" count="0" type="stmt"/>
+        <line num="1303" count="0" type="stmt"/>
+        <line num="1304" count="0" type="stmt"/>
+        <line num="1307" count="0" type="stmt"/>
+        <line num="1308" count="0" type="stmt"/>
+        <line num="1313" count="0" type="stmt"/>
+        <line num="1314" count="0" type="stmt"/>
+        <line num="1315" count="0" type="stmt"/>
+        <line num="1323" count="0" type="stmt"/>
+        <line num="1325" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="1326" count="0" type="stmt"/>
+        <line num="1329" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1330" count="0" type="stmt"/>
+        <line num="1331" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1332" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1333" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1334" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1335" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1336" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1337" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1340" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1344" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1345" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1346" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1350" count="0" type="stmt"/>
+        <line num="1351" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1353" count="0" type="stmt"/>
+        <line num="1358" count="0" type="stmt"/>
+        <line num="1366" count="0" type="stmt"/>
+        <line num="1367" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1368" count="0" type="stmt"/>
+        <line num="1369" count="0" type="stmt"/>
+        <line num="1370" count="0" type="stmt"/>
+        <line num="1373" count="0" type="stmt"/>
+        <line num="1374" count="0" type="stmt"/>
+        <line num="1375" count="0" type="stmt"/>
+        <line num="1376" count="0" type="stmt"/>
+        <line num="1379" count="0" type="stmt"/>
+        <line num="1381" count="0" type="stmt"/>
+        <line num="1382" count="0" type="stmt"/>
+        <line num="1383" count="0" type="stmt"/>
+        <line num="1385" count="0" type="stmt"/>
+        <line num="1386" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1387" count="0" type="stmt"/>
+        <line num="1388" count="0" type="stmt"/>
+        <line num="1389" count="0" type="stmt"/>
+        <line num="1395" count="0" type="stmt"/>
+        <line num="1396" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1397" count="0" type="stmt"/>
+        <line num="1398" count="0" type="stmt"/>
+        <line num="1399" count="0" type="stmt"/>
+        <line num="1404" count="0" type="stmt"/>
+        <line num="1408" count="0" type="stmt"/>
+        <line num="1409" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1410" count="0" type="stmt"/>
+        <line num="1411" count="0" type="stmt"/>
+        <line num="1412" count="0" type="stmt"/>
+        <line num="1413" count="0" type="stmt"/>
+        <line num="1418" count="0" type="stmt"/>
+        <line num="1423" count="0" type="stmt"/>
+        <line num="1424" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1425" count="0" type="stmt"/>
+        <line num="1426" count="0" type="stmt"/>
+        <line num="1427" count="0" type="stmt"/>
+        <line num="1432" count="0" type="stmt"/>
+        <line num="1433" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1434" count="0" type="stmt"/>
+        <line num="1435" count="0" type="stmt"/>
+        <line num="1439" count="0" type="stmt"/>
+        <line num="1444" count="0" type="stmt"/>
+        <line num="1450" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1451" count="0" type="stmt"/>
+        <line num="1457" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1458" count="0" type="stmt"/>
+        <line num="1467" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="1469" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="1470" count="0" type="stmt"/>
+        <line num="1476" count="0" type="stmt"/>
+        <line num="1483" count="0" type="stmt"/>
+        <line num="1487" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="1488" count="0" type="stmt"/>
+      </file>
+      <file name="player_manager.ts" path="/home/all/repos/LiveLink/src/server/services/player_manager.ts">
+        <metrics statements="41" coveredstatements="0" conditionals="9" coveredconditionals="0" methods="8" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="31" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="42" count="0" type="stmt"/>
+        <line num="43" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="54" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="59" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="68" count="0" type="stmt"/>
+        <line num="78" count="0" type="stmt"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="81" count="0" type="stmt"/>
+        <line num="84" count="0" type="stmt"/>
+        <line num="90" count="0" type="stmt"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="97" count="0" type="stmt"/>
+        <line num="102" count="0" type="stmt"/>
+        <line num="103" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="105" count="0" type="stmt"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="113" count="0" type="stmt"/>
+        <line num="117" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+      </file>
+      <file name="queue_service.ts" path="/home/all/repos/LiveLink/src/server/services/queue_service.ts">
+        <metrics statements="74" coveredstatements="0" conditionals="36" coveredconditionals="0" methods="20" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="22" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="28" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="32" count="0" type="stmt"/>
+        <line num="33" count="0" type="stmt"/>
+        <line num="35" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="stmt"/>
+        <line num="45" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="47" count="0" type="stmt"/>
+        <line num="51" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="53" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="59" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="64" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="66" count="0" type="stmt"/>
+        <line num="70" count="0" type="stmt"/>
+        <line num="71" count="0" type="stmt"/>
+        <line num="76" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="77" count="0" type="stmt"/>
+        <line num="78" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="83" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="86" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="87" count="0" type="stmt"/>
+        <line num="88" count="0" type="stmt"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="93" count="0" type="stmt"/>
+        <line num="95" count="0" type="stmt"/>
+        <line num="96" count="0" type="stmt"/>
+        <line num="99" count="0" type="stmt"/>
+        <line num="102" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="103" count="0" type="stmt"/>
+        <line num="104" count="0" type="stmt"/>
+        <line num="110" count="0" type="stmt"/>
+        <line num="114" count="0" type="stmt"/>
+        <line num="118" count="0" type="stmt"/>
+        <line num="122" count="0" type="stmt"/>
+        <line num="123" count="0" type="stmt"/>
+        <line num="128" count="0" type="stmt"/>
+        <line num="129" count="0" type="stmt"/>
+        <line num="133" count="0" type="stmt"/>
+        <line num="134" count="0" type="stmt"/>
+        <line num="139" count="0" type="stmt"/>
+        <line num="145" count="0" type="stmt"/>
+        <line num="146" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="147" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="150" count="0" type="stmt"/>
+        <line num="151" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="152" count="0" type="stmt"/>
+        <line num="155" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="156" count="0" type="stmt"/>
+        <line num="160" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="161" count="0" type="stmt"/>
+        <line num="162" count="0" type="stmt"/>
+        <line num="166" count="0" type="stmt"/>
+        <line num="167" count="0" type="stmt"/>
+        <line num="173" count="0" type="stmt"/>
+      </file>
+      <file name="twitch.ts" path="/home/all/repos/LiveLink/src/server/services/twitch.ts">
+        <metrics statements="74" coveredstatements="0" conditionals="51" coveredconditionals="0" methods="14" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="15" count="0" type="stmt"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="19" count="0" type="stmt"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="25" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="28" count="0" type="stmt"/>
+        <line num="30" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="35" count="0" type="stmt"/>
+        <line num="37" count="0" type="stmt"/>
+        <line num="38" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="43" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="45" count="0" type="stmt"/>
+        <line num="46" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="47" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="48" count="0" type="stmt"/>
+        <line num="51" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="52" count="0" type="stmt"/>
+        <line num="55" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="stmt"/>
+        <line num="59" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="75" count="0" type="stmt"/>
+        <line num="78" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="79" count="0" type="stmt"/>
+        <line num="80" count="0" type="stmt"/>
+        <line num="85" count="0" type="stmt"/>
+        <line num="92" count="0" type="stmt"/>
+        <line num="104" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="106" count="0" type="stmt"/>
+        <line num="107" count="0" type="stmt"/>
+        <line num="108" count="0" type="stmt"/>
+        <line num="112" count="0" type="stmt"/>
+        <line num="113" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="114" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="117" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="118" count="0" type="stmt"/>
+        <line num="122" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="126" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="127" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="130" count="0" type="stmt"/>
+        <line num="131" count="0" type="stmt"/>
+        <line num="133" count="0" type="stmt"/>
+        <line num="138" count="0" type="stmt"/>
+        <line num="143" count="0" type="stmt"/>
+        <line num="150" count="0" type="stmt"/>
+        <line num="157" count="0" type="cond" truecount="0" falsecount="3"/>
+        <line num="158" count="0" type="stmt"/>
+        <line num="159" count="0" type="stmt"/>
+        <line num="162" count="0" type="stmt"/>
+        <line num="163" count="0" type="stmt"/>
+        <line num="165" count="0" type="stmt"/>
+        <line num="166" count="0" type="stmt"/>
+        <line num="168" count="0" type="stmt"/>
+        <line num="169" count="0" type="stmt"/>
+        <line num="171" count="0" type="stmt"/>
+        <line num="178" count="0" type="stmt"/>
+        <line num="183" count="0" type="stmt"/>
+        <line num="188" count="0" type="stmt"/>
+        <line num="189" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="190" count="0" type="stmt"/>
+        <line num="193" count="0" type="stmt"/>
+        <line num="200" count="0" type="stmt"/>
+        <line num="202" count="0" type="stmt"/>
+        <line num="203" count="0" type="cond" truecount="0" falsecount="2"/>
+        <line num="204" count="0" type="stmt"/>
+        <line num="209" count="0" type="stmt"/>
+      </file>
+      <file name="youtube.ts" path="/home/all/repos/LiveLink/src/server/services/youtube.ts">
+        <metrics statements="14" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="4" coveredmethods="0"/>
+        <line num="3" count="0" type="stmt"/>
+        <line num="5" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="9" count="0" type="stmt"/>
+        <line num="13" count="0" type="stmt"/>
+        <line num="14" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="15" count="0" type="cond" truecount="0" falsecount="6"/>
+        <line num="18" count="0" type="stmt"/>
+        <line num="26" count="0" type="stmt"/>
+        <line num="27" count="0" type="stmt"/>
+        <line num="29" count="0" type="stmt"/>
+        <line num="34" count="0" type="stmt"/>
+        <line num="39" count="0" type="stmt"/>
+        <line num="40" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.services.logger">
+      <metrics statements="18" coveredstatements="0" conditionals="3" coveredconditionals="0" methods="6" coveredmethods="0"/>
+      <file name="index.ts" path="/home/all/repos/LiveLink/src/server/services/logger/index.ts">
+        <metrics statements="18" coveredstatements="0" conditionals="3" coveredconditionals="0" methods="6" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="4" count="0" type="stmt"/>
+        <line num="6" count="0" type="stmt"/>
+        <line num="21" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="22" count="0" type="stmt"/>
+        <line num="43" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="44" count="0" type="stmt"/>
+        <line num="50" count="0" type="stmt"/>
+        <line num="56" count="0" type="stmt"/>
+        <line num="57" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="58" count="0" type="stmt"/>
+        <line num="60" count="0" type="stmt"/>
+        <line num="63" count="0" type="stmt"/>
+        <line num="65" count="0" type="stmt"/>
+        <line num="68" count="0" type="stmt"/>
+        <line num="71" count="0" type="stmt"/>
+        <line num="74" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.types">
+      <metrics statements="1" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
+      <file name="events.ts" path="/home/all/repos/LiveLink/src/server/types/events.ts">
+        <metrics statements="1" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+      </file>
+    </package>
+    <package name="src.server.workers">
+      <metrics statements="27" coveredstatements="0" conditionals="35" coveredconditionals="0" methods="3" coveredmethods="0"/>
+      <file name="player_worker.ts" path="/home/all/repos/LiveLink/src/server/workers/player_worker.ts">
+        <metrics statements="27" coveredstatements="0" conditionals="35" coveredconditionals="0" methods="3" coveredmethods="0"/>
+        <line num="1" count="0" type="stmt"/>
+        <line num="2" count="0" type="stmt"/>
+        <line num="11" count="0" type="stmt"/>
+        <line num="12" count="0" type="stmt"/>
+        <line num="14" count="0" type="cond" truecount="0" falsecount="1"/>
+        <line num="15" count="0" type="stmt"/>
+        <line num="16" count="0" type="stmt"/>
+        <line num="17" count="0" type="stmt"/>
+        <line num="19" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="20" count="0" type="stmt"/>
+        <line num="21" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="23" count="0" type="stmt"/>
+        <line num="24" count="0" type="stmt"/>
+        <line num="28" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="32" count="0" type="stmt"/>
+        <line num="36" count="0" type="stmt"/>
+        <line num="37" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="41" count="0" type="stmt"/>
+        <line num="46" count="0" type="stmt"/>
+        <line num="51" count="0" type="stmt"/>
+        <line num="55" count="0" type="stmt"/>
+        <line num="60" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="67" count="0" type="stmt"/>
+        <line num="68" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="74" count="0" type="stmt"/>
+        <line num="75" count="0" type="cond" truecount="0" falsecount="4"/>
+        <line num="81" count="0" type="stmt"/>
+      </file>
+    </package>
+  </project>
+</coverage>
diff --git a/coverage/index.html b/coverage/index.html
new file mode 100644
index 0000000..8c95357
--- /dev/null
+++ b/coverage/index.html
@@ -0,0 +1,281 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for All files</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="prettify.css" />
+    <link rel="stylesheet" href="base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1>All files</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/3268</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/1543</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/533</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/3143</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="src"><a href="src/index.html">src</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="53" class="abs low">0/53</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="51" class="abs low">0/51</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/cli"><a href="src/cli/index.html">src/cli</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="527" class="abs low">0/527</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="165" class="abs low">0/165</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="507" class="abs low">0/507</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib"><a href="src/lib/index.html">src/lib</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="61" class="abs low">0/61</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib/i18n"><a href="src/lib/i18n/index.html">src/lib/i18n</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib/stores"><a href="src/lib/stores/index.html">src/lib/stores</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="49" class="abs low">0/49</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server"><a href="src/server/index.html">src/server</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="918" class="abs low">0/918</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="420" class="abs low">0/420</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="172" class="abs low">0/172</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="876" class="abs low">0/876</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/db"><a href="src/server/db/index.html">src/server/db</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="33" class="abs low">0/33</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/routes"><a href="src/server/routes/index.html">src/server/routes</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="475" class="abs low">0/475</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="112" class="abs low">0/112</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="470" class="abs low">0/470</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/services"><a href="src/server/services/index.html">src/server/services</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1088" class="abs low">0/1088</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="733" class="abs low">0/733</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="184" class="abs low">0/184</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1038" class="abs low">0/1038</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/services/logger"><a href="src/server/services/logger/index.html">src/server/services/logger</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/types"><a href="src/server/types/index.html">src/server/types</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/workers"><a href="src/server/workers/index.html">src/server/workers</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="sorter.js"></script>
+        <script src="block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/base.css b/coverage/lcov-report/base.css
new file mode 100644
index 0000000..f418035
--- /dev/null
+++ b/coverage/lcov-report/base.css
@@ -0,0 +1,224 @@
+body, html {
+  margin:0; padding: 0;
+  height: 100%;
+}
+body {
+    font-family: Helvetica Neue, Helvetica, Arial;
+    font-size: 14px;
+    color:#333;
+}
+.small { font-size: 12px; }
+*, *:after, *:before {
+  -webkit-box-sizing:border-box;
+     -moz-box-sizing:border-box;
+          box-sizing:border-box;
+  }
+h1 { font-size: 20px; margin: 0;}
+h2 { font-size: 14px; }
+pre {
+    font: 12px/1.4 Consolas, "Liberation Mono", Menlo, Courier, monospace;
+    margin: 0;
+    padding: 0;
+    -moz-tab-size: 2;
+    -o-tab-size:  2;
+    tab-size: 2;
+}
+a { color:#0074D9; text-decoration:none; }
+a:hover { text-decoration:underline; }
+.strong { font-weight: bold; }
+.space-top1 { padding: 10px 0 0 0; }
+.pad2y { padding: 20px 0; }
+.pad1y { padding: 10px 0; }
+.pad2x { padding: 0 20px; }
+.pad2 { padding: 20px; }
+.pad1 { padding: 10px; }
+.space-left2 { padding-left:55px; }
+.space-right2 { padding-right:20px; }
+.center { text-align:center; }
+.clearfix { display:block; }
+.clearfix:after {
+  content:'';
+  display:block;
+  height:0;
+  clear:both;
+  visibility:hidden;
+  }
+.fl { float: left; }
+@media only screen and (max-width:640px) {
+  .col3 { width:100%; max-width:100%; }
+  .hide-mobile { display:none!important; }
+}
+
+.quiet {
+  color: #7f7f7f;
+  color: rgba(0,0,0,0.5);
+}
+.quiet a { opacity: 0.7; }
+
+.fraction {
+  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
+  font-size: 10px;
+  color: #555;
+  background: #E8E8E8;
+  padding: 4px 5px;
+  border-radius: 3px;
+  vertical-align: middle;
+}
+
+div.path a:link, div.path a:visited { color: #333; }
+table.coverage {
+  border-collapse: collapse;
+  margin: 10px 0 0 0;
+  padding: 0;
+}
+
+table.coverage td {
+  margin: 0;
+  padding: 0;
+  vertical-align: top;
+}
+table.coverage td.line-count {
+    text-align: right;
+    padding: 0 5px 0 20px;
+}
+table.coverage td.line-coverage {
+    text-align: right;
+    padding-right: 10px;
+    min-width:20px;
+}
+
+table.coverage td span.cline-any {
+    display: inline-block;
+    padding: 0 5px;
+    width: 100%;
+}
+.missing-if-branch {
+    display: inline-block;
+    margin-right: 5px;
+    border-radius: 3px;
+    position: relative;
+    padding: 0 4px;
+    background: #333;
+    color: yellow;
+}
+
+.skip-if-branch {
+    display: none;
+    margin-right: 10px;
+    position: relative;
+    padding: 0 4px;
+    background: #ccc;
+    color: white;
+}
+.missing-if-branch .typ, .skip-if-branch .typ {
+    color: inherit !important;
+}
+.coverage-summary {
+  border-collapse: collapse;
+  width: 100%;
+}
+.coverage-summary tr { border-bottom: 1px solid #bbb; }
+.keyline-all { border: 1px solid #ddd; }
+.coverage-summary td, .coverage-summary th { padding: 10px; }
+.coverage-summary tbody { border: 1px solid #bbb; }
+.coverage-summary td { border-right: 1px solid #bbb; }
+.coverage-summary td:last-child { border-right: none; }
+.coverage-summary th {
+  text-align: left;
+  font-weight: normal;
+  white-space: nowrap;
+}
+.coverage-summary th.file { border-right: none !important; }
+.coverage-summary th.pct { }
+.coverage-summary th.pic,
+.coverage-summary th.abs,
+.coverage-summary td.pct,
+.coverage-summary td.abs { text-align: right; }
+.coverage-summary td.file { white-space: nowrap;  }
+.coverage-summary td.pic { min-width: 120px !important;  }
+.coverage-summary tfoot td { }
+
+.coverage-summary .sorter {
+    height: 10px;
+    width: 7px;
+    display: inline-block;
+    margin-left: 0.5em;
+    background: url(sort-arrow-sprite.png) no-repeat scroll 0 0 transparent;
+}
+.coverage-summary .sorted .sorter {
+    background-position: 0 -20px;
+}
+.coverage-summary .sorted-desc .sorter {
+    background-position: 0 -10px;
+}
+.status-line {  height: 10px; }
+/* yellow */
+.cbranch-no { background: yellow !important; color: #111; }
+/* dark red */
+.red.solid, .status-line.low, .low .cover-fill { background:#C21F39 }
+.low .chart { border:1px solid #C21F39 }
+.highlighted,
+.highlighted .cstat-no, .highlighted .fstat-no, .highlighted .cbranch-no{
+  background: #C21F39 !important;
+}
+/* medium red */
+.cstat-no, .fstat-no, .cbranch-no, .cbranch-no { background:#F6C6CE }
+/* light red */
+.low, .cline-no { background:#FCE1E5 }
+/* light green */
+.high, .cline-yes { background:rgb(230,245,208) }
+/* medium green */
+.cstat-yes { background:rgb(161,215,106) }
+/* dark green */
+.status-line.high, .high .cover-fill { background:rgb(77,146,33) }
+.high .chart { border:1px solid rgb(77,146,33) }
+/* dark yellow (gold) */
+.status-line.medium, .medium .cover-fill { background: #f9cd0b; }
+.medium .chart { border:1px solid #f9cd0b; }
+/* light yellow */
+.medium { background: #fff4c2; }
+
+.cstat-skip { background: #ddd; color: #111; }
+.fstat-skip { background: #ddd; color: #111 !important; }
+.cbranch-skip { background: #ddd !important; color: #111; }
+
+span.cline-neutral { background: #eaeaea; }
+
+.coverage-summary td.empty {
+    opacity: .5;
+    padding-top: 4px;
+    padding-bottom: 4px;
+    line-height: 1;
+    color: #888;
+}
+
+.cover-fill, .cover-empty {
+  display:inline-block;
+  height: 12px;
+}
+.chart {
+  line-height: 0;
+}
+.cover-empty {
+    background: white;
+}
+.cover-full {
+    border-right: none !important;
+}
+pre.prettyprint {
+    border: none !important;
+    padding: 0 !important;
+    margin: 0 !important;
+}
+.com { color: #999 !important; }
+.ignore-none { color: #999; font-weight: normal; }
+
+.wrapper {
+  min-height: 100%;
+  height: auto !important;
+  height: 100%;
+  margin: 0 auto -48px;
+}
+.footer, .push {
+  height: 48px;
+}
diff --git a/coverage/lcov-report/block-navigation.js b/coverage/lcov-report/block-navigation.js
new file mode 100644
index 0000000..cc12130
--- /dev/null
+++ b/coverage/lcov-report/block-navigation.js
@@ -0,0 +1,87 @@
+/* eslint-disable */
+var jumpToCode = (function init() {
+    // Classes of code we would like to highlight in the file view
+    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];
+
+    // Elements to highlight in the file listing view
+    var fileListingElements = ['td.pct.low'];
+
+    // We don't want to select elements that are direct descendants of another match
+    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `
+
+    // Selecter that finds elements on the page to which we can jump
+    var selector =
+        fileListingElements.join(', ') +
+        ', ' +
+        notSelector +
+        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`
+
+    // The NodeList of matching elements
+    var missingCoverageElements = document.querySelectorAll(selector);
+
+    var currentIndex;
+
+    function toggleClass(index) {
+        missingCoverageElements
+            .item(currentIndex)
+            .classList.remove('highlighted');
+        missingCoverageElements.item(index).classList.add('highlighted');
+    }
+
+    function makeCurrent(index) {
+        toggleClass(index);
+        currentIndex = index;
+        missingCoverageElements.item(index).scrollIntoView({
+            behavior: 'smooth',
+            block: 'center',
+            inline: 'center'
+        });
+    }
+
+    function goToPrevious() {
+        var nextIndex = 0;
+        if (typeof currentIndex !== 'number' || currentIndex === 0) {
+            nextIndex = missingCoverageElements.length - 1;
+        } else if (missingCoverageElements.length > 1) {
+            nextIndex = currentIndex - 1;
+        }
+
+        makeCurrent(nextIndex);
+    }
+
+    function goToNext() {
+        var nextIndex = 0;
+
+        if (
+            typeof currentIndex === 'number' &&
+            currentIndex < missingCoverageElements.length - 1
+        ) {
+            nextIndex = currentIndex + 1;
+        }
+
+        makeCurrent(nextIndex);
+    }
+
+    return function jump(event) {
+        if (
+            document.getElementById('fileSearch') === document.activeElement &&
+            document.activeElement != null
+        ) {
+            // if we're currently focused on the search input, we don't want to navigate
+            return;
+        }
+
+        switch (event.which) {
+            case 78: // n
+            case 74: // j
+                goToNext();
+                break;
+            case 66: // b
+            case 75: // k
+            case 80: // p
+                goToPrevious();
+                break;
+        }
+    };
+})();
+window.addEventListener('keydown', jumpToCode);
diff --git a/coverage/lcov-report/index.html b/coverage/lcov-report/index.html
new file mode 100644
index 0000000..34db5d7
--- /dev/null
+++ b/coverage/lcov-report/index.html
@@ -0,0 +1,281 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for All files</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="prettify.css" />
+    <link rel="stylesheet" href="base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1>All files</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/3268</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/1543</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/533</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/3143</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="src"><a href="src/index.html">src</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="53" class="abs low">0/53</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="51" class="abs low">0/51</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/cli"><a href="src/cli/index.html">src/cli</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="527" class="abs low">0/527</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="165" class="abs low">0/165</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="507" class="abs low">0/507</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib"><a href="src/lib/index.html">src/lib</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="61" class="abs low">0/61</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib/i18n"><a href="src/lib/i18n/index.html">src/lib/i18n</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/lib/stores"><a href="src/lib/stores/index.html">src/lib/stores</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="49" class="abs low">0/49</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server"><a href="src/server/index.html">src/server</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="918" class="abs low">0/918</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="420" class="abs low">0/420</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="172" class="abs low">0/172</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="876" class="abs low">0/876</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/db"><a href="src/server/db/index.html">src/server/db</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="33" class="abs low">0/33</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/routes"><a href="src/server/routes/index.html">src/server/routes</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="475" class="abs low">0/475</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="112" class="abs low">0/112</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="470" class="abs low">0/470</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/services"><a href="src/server/services/index.html">src/server/services</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1088" class="abs low">0/1088</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="733" class="abs low">0/733</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="184" class="abs low">0/184</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1038" class="abs low">0/1038</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/services/logger"><a href="src/server/services/logger/index.html">src/server/services/logger</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/types"><a href="src/server/types/index.html">src/server/types</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="src/server/workers"><a href="src/server/workers/index.html">src/server/workers</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="sorter.js"></script>
+        <script src="block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/prettify.css b/coverage/lcov-report/prettify.css
new file mode 100644
index 0000000..b317a7c
--- /dev/null
+++ b/coverage/lcov-report/prettify.css
@@ -0,0 +1 @@
+.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun,.opn,.clo{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}
diff --git a/coverage/lcov-report/prettify.js b/coverage/lcov-report/prettify.js
new file mode 100644
index 0000000..b322523
--- /dev/null
+++ b/coverage/lcov-report/prettify.js
@@ -0,0 +1,2 @@
+/* eslint-disable */
+window.PR_SHOULD_USE_CONTINUATION=true;(function(){var h=["break,continue,do,else,for,if,return,while"];var u=[h,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];var p=[u,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"];var l=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];var x=[p,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];var R=[x,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];var r="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes";var w=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"];var s="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END";var I=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];var f=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];var H=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"];var A=[l,R,w,s+I,f,H];var e=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;var C="str";var z="kwd";var j="com";var O="typ";var G="lit";var L="pun";var F="pln";var m="tag";var E="dec";var J="src";var P="atn";var n="atv";var N="nocode";var M="(?:^^\\.?|[+-]|\\!|\\!=|\\!==|\\#|\\%|\\%=|&|&&|&&=|&=|\\(|\\*|\\*=|\\+=|\\,|\\-=|\\->|\\/|\\/=|:|::|\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\@|\\[|\\^|\\^=|\\^\\^|\\^\\^=|\\{|\\||\\|=|\\|\\||\\|\\|=|\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*";function k(Z){var ad=0;var S=false;var ac=false;for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.ignoreCase){ac=true}else{if(/[a-z]/i.test(ae.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){S=true;ac=false;break}}}var Y={b:8,t:9,n:10,v:11,f:12,r:13};function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if("0"<=af&&af<="7"){return parseInt(ah.substring(1),8)}else{if(af==="u"||af==="x"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}}function T(af){if(af<32){return(af<16?"\\x0":"\\x")+af.toString(16)}var ag=String.fromCharCode(af);if(ag==="\\"||ag==="-"||ag==="["||ag==="]"){ag="\\"+ag}return ag}function X(am){var aq=am.substring(1,am.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));var ak=[];var af=[];var ao=aq[0]==="^";for(var ar=ao?1:0,aj=aq.length;ar<aj;++ar){var ah=aq[ar];if(/\\[bdsw]/i.test(ah)){ak.push(ah)}else{var ag=ab(ah);var al;if(ar+2<aj&&"-"===aq[ar+1]){al=ab(aq[ar+2]);ar+=2}else{al=ag}af.push([ag,al]);if(!(al<65||ag>122)){if(!(al<65||ag>90)){af.push([Math.max(65,ag)|32,Math.min(al,90)|32])}if(!(al<97||ag>122)){af.push([Math.max(97,ag)&~32,Math.min(al,122)&~32])}}}}af.sort(function(av,au){return(av[0]-au[0])||(au[1]-av[1])});var ai=[];var ap=[NaN,NaN];for(var ar=0;ar<af.length;++ar){var at=af[ar];if(at[0]<=ap[1]+1){ap[1]=Math.max(ap[1],at[1])}else{ai.push(ap=at)}}var an=["["];if(ao){an.push("^")}an.push.apply(an,ak);for(var ar=0;ar<ai.length;++ar){var at=ai[ar];an.push(T(at[0]));if(at[1]>at[0]){if(at[1]+1>at[0]){an.push("-")}an.push(T(at[1]))}}an.push("]");return an.join("")}function W(al){var aj=al.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g"));var ah=aj.length;var an=[];for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}}}for(var ak=1;ak<an.length;++ak){if(-1===an[ak]){an[ak]=++ad}}for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am;if(an[am]===undefined){aj[ak]="(?:"}}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]="\\"+an[am]}}}}for(var ak=0,am=0;ak<ah;++ak){if("^"===aj[ak]&&"^"!==aj[ak+1]){aj[ak]=""}}if(al.ignoreCase&&S){for(var ak=0;ak<ah;++ak){var ag=aj[ak];var ai=ag.charAt(0);if(ag.length>=2&&ai==="["){aj[ak]=X(ag)}else{if(ai!=="\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return"["+String.fromCharCode(ap&~32,ap|32)+"]"})}}}}return aj.join("")}var aa=[];for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.global||ae.multiline){throw new Error(""+ae)}aa.push("(?:"+W(ae)+")")}return new RegExp(aa.join("|"),ac?"gi":"g")}function a(V){var U=/(?:^|\s)nocode(?:\s|$)/;var X=[];var T=0;var Z=[];var W=0;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Y=S&&"pre"===S.substring(0,3);function aa(ab){switch(ab.nodeType){case 1:if(U.test(ab.className)){return}for(var ae=ab.firstChild;ae;ae=ae.nextSibling){aa(ae)}var ad=ab.nodeName;if("BR"===ad||"LI"===ad){X[W]="\n";Z[W<<1]=T++;Z[(W++<<1)|1]=ab}break;case 3:case 4:var ac=ab.nodeValue;if(ac.length){if(!Y){ac=ac.replace(/[ \t\r\n]+/g," ")}else{ac=ac.replace(/\r\n?/g,"\n")}X[W]=ac;Z[W<<1]=T;T+=ac.length;Z[(W++<<1)|1]=ab}break}}aa(V);return{sourceCode:X.join("").replace(/\n$/,""),spans:Z}}function B(S,U,W,T){if(!U){return}var V={sourceCode:U,basePos:S};W(V);T.push.apply(T,V.decorations)}var v=/\S/;function o(S){var V=undefined;for(var U=S.firstChild;U;U=U.nextSibling){var T=U.nodeType;V=(T===1)?(V?S:U):(T===3)?(v.test(U.nodeValue)?S:V):V}return V===S?undefined:V}function g(U,T){var S={};var V;(function(){var ad=U.concat(T);var ah=[];var ag={};for(var ab=0,Z=ad.length;ab<Z;++ab){var Y=ad[ab];var ac=Y[3];if(ac){for(var ae=ac.length;--ae>=0;){S[ac.charAt(ae)]=Y}}var af=Y[1];var aa=""+af;if(!ag.hasOwnProperty(aa)){ah.push(af);ag[aa]=null}}ah.push(/[\0-\uffff]/);V=k(ah)})();var X=T.length;var W=function(ah){var Z=ah.sourceCode,Y=ah.basePos;var ad=[Y,F];var af=0;var an=Z.match(V)||[];var aj={};for(var ae=0,aq=an.length;ae<aq;++ae){var ag=an[ae];var ap=aj[ag];var ai=void 0;var am;if(typeof ap==="string"){am=false}else{var aa=S[ag.charAt(0)];if(aa){ai=ag.match(aa[1]);ap=aa[0]}else{for(var ao=0;ao<X;++ao){aa=T[ao];ai=ag.match(aa[1]);if(ai){ap=aa[0];break}}if(!ai){ap=F}}am=ap.length>=5&&"lang-"===ap.substring(0,5);if(am&&!(ai&&typeof ai[1]==="string")){am=false;ap=J}if(!am){aj[ag]=ap}}var ab=af;af+=ag.length;if(!am){ad.push(Y+ab,ap)}else{var al=ai[1];var ak=ag.indexOf(al);var ac=ak+al.length;if(ai[2]){ac=ag.length-ai[2].length;ak=ac-al.length}var ar=ap.substring(5);B(Y+ab,ag.substring(0,ak),W,ad);B(Y+ab+ak,al,q(ar,al),ad);B(Y+ab+ac,ag.substring(ac),W,ad)}}ah.decorations=ad};return W}function i(T){var W=[],S=[];if(T.tripleQuotedStrings){W.push([C,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""])}else{if(T.multiLineStrings){W.push([C,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"])}else{W.push([C,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"])}}if(T.verbatimStrings){S.push([C,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null])}var Y=T.hashComments;if(Y){if(T.cStyleComments){if(Y>1){W.push([j,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"])}else{W.push([j,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"])}S.push([C,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,null])}else{W.push([j,/^#[^\r\n]*/,null,"#"])}}if(T.cStyleComments){S.push([j,/^\/\/[^\r\n]*/,null]);S.push([j,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(T.regexLiterals){var X=("/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/");S.push(["lang-regex",new RegExp("^"+M+"("+X+")")])}var V=T.types;if(V){S.push([O,V])}var U=(""+T.keywords).replace(/^ | $/g,"");if(U.length){S.push([z,new RegExp("^(?:"+U.replace(/[\s,]+/g,"|")+")\\b"),null])}W.push([F,/^\s+/,null," \r\n\t\xA0"]);S.push([G,/^@[a-z_$][a-z_$@0-9]*/i,null],[O,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[F,/^[a-z_$][a-z_$@0-9]*/i,null],[G,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[F,/^\\[\s\S]?/,null],[L,/^.[^\s\w\.$@\'\"\`\/\#\\]*/,null]);return g(W,S)}var K=i({keywords:A,hashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true});function Q(V,ag){var U=/(?:^|\s)nocode(?:\s|$)/;var ab=/\r\n?|\n/;var ac=V.ownerDocument;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Z=S&&"pre"===S.substring(0,3);var af=ac.createElement("LI");while(V.firstChild){af.appendChild(V.firstChild)}var W=[af];function ae(al){switch(al.nodeType){case 1:if(U.test(al.className)){break}if("BR"===al.nodeName){ad(al);if(al.parentNode){al.parentNode.removeChild(al)}}else{for(var an=al.firstChild;an;an=an.nextSibling){ae(an)}}break;case 3:case 4:if(Z){var am=al.nodeValue;var aj=am.match(ab);if(aj){var ai=am.substring(0,aj.index);al.nodeValue=ai;var ah=am.substring(aj.index+aj[0].length);if(ah){var ak=al.parentNode;ak.insertBefore(ac.createTextNode(ah),al.nextSibling)}ad(al);if(!ai){al.parentNode.removeChild(al)}}}break}}function ad(ak){while(!ak.nextSibling){ak=ak.parentNode;if(!ak){return}}function ai(al,ar){var aq=ar?al.cloneNode(false):al;var ao=al.parentNode;if(ao){var ap=ai(ao,1);var an=al.nextSibling;ap.appendChild(aq);for(var am=an;am;am=an){an=am.nextSibling;ap.appendChild(am)}}return aq}var ah=ai(ak.nextSibling,0);for(var aj;(aj=ah.parentNode)&&aj.nodeType===1;){ah=aj}W.push(ah)}for(var Y=0;Y<W.length;++Y){ae(W[Y])}if(ag===(ag|0)){W[0].setAttribute("value",ag)}var aa=ac.createElement("OL");aa.className="linenums";var X=Math.max(0,((ag-1))|0)||0;for(var Y=0,T=W.length;Y<T;++Y){af=W[Y];af.className="L"+((Y+X)%10);if(!af.firstChild){af.appendChild(ac.createTextNode("\xA0"))}aa.appendChild(af)}V.appendChild(aa)}function D(ac){var aj=/\bMSIE\b/.test(navigator.userAgent);var am=/\n/g;var al=ac.sourceCode;var an=al.length;var V=0;var aa=ac.spans;var T=aa.length;var ah=0;var X=ac.decorations;var Y=X.length;var Z=0;X[Y]=an;var ar,aq;for(aq=ar=0;aq<Y;){if(X[aq]!==X[aq+2]){X[ar++]=X[aq++];X[ar++]=X[aq++]}else{aq+=2}}Y=ar;for(aq=ar=0;aq<Y;){var at=X[aq];var ab=X[aq+1];var W=aq+2;while(W+2<=Y&&X[W+1]===ab){W+=2}X[ar++]=at;X[ar++]=ab;aq=W}Y=X.length=ar;var ae=null;while(ah<T){var af=aa[ah];var S=aa[ah+2]||an;var ag=X[Z];var ap=X[Z+2]||an;var W=Math.min(S,ap);var ak=aa[ah+1];var U;if(ak.nodeType!==1&&(U=al.substring(V,W))){if(aj){U=U.replace(am,"\r")}ak.nodeValue=U;var ai=ak.ownerDocument;var ao=ai.createElement("SPAN");ao.className=X[Z+1];var ad=ak.parentNode;ad.replaceChild(ao,ak);ao.appendChild(ak);if(V<S){aa[ah+1]=ak=ai.createTextNode(al.substring(W,S));ad.insertBefore(ak,ao.nextSibling)}}V=W;if(V>=S){ah+=2}if(V>=ap){Z+=2}}}var t={};function c(U,V){for(var S=V.length;--S>=0;){var T=V[S];if(!t.hasOwnProperty(T)){t[T]=U}else{if(window.console){console.warn("cannot override language handler %s",T)}}}}function q(T,S){if(!(T&&t.hasOwnProperty(T))){T=/^\s*</.test(S)?"default-markup":"default-code"}return t[T]}c(K,["default-code"]);c(g([],[[F,/^[^<?]+/],[E,/^<!\w[^>]*(?:>|$)/],[j,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[L,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);c(g([[F,/^[\s]+/,null," \t\r\n"],[n,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[m,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[P,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[L,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);c(g([],[[n,/^[\s\S]+/]]),["uq.val"]);c(i({keywords:l,hashComments:true,cStyleComments:true,types:e}),["c","cc","cpp","cxx","cyc","m"]);c(i({keywords:"null,true,false"}),["json"]);c(i({keywords:R,hashComments:true,cStyleComments:true,verbatimStrings:true,types:e}),["cs"]);c(i({keywords:x,cStyleComments:true}),["java"]);c(i({keywords:H,hashComments:true,multiLineStrings:true}),["bsh","csh","sh"]);c(i({keywords:I,hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);c(i({keywords:s,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl","pl","pm"]);c(i({keywords:f,hashComments:true,multiLineStrings:true,regexLiterals:true}),["rb"]);c(i({keywords:w,cStyleComments:true,regexLiterals:true}),["js"]);c(i({keywords:r,hashComments:3,cStyleComments:true,multilineStrings:true,tripleQuotedStrings:true,regexLiterals:true}),["coffee"]);c(g([],[[C,/^[\s\S]+/]]),["regex"]);function d(V){var U=V.langExtension;try{var S=a(V.sourceNode);var T=S.sourceCode;V.sourceCode=T;V.spans=S.spans;V.basePos=0;q(U,T)(V);D(V)}catch(W){if("console" in window){console.log(W&&W.stack?W.stack:W)}}}function y(W,V,U){var S=document.createElement("PRE");S.innerHTML=W;if(U){Q(S,U)}var T={langExtension:V,numberLines:U,sourceNode:S};d(T);return S.innerHTML}function b(ad){function Y(af){return document.getElementsByTagName(af)}var ac=[Y("pre"),Y("code"),Y("xmp")];var T=[];for(var aa=0;aa<ac.length;++aa){for(var Z=0,V=ac[aa].length;Z<V;++Z){T.push(ac[aa][Z])}}ac=null;var W=Date;if(!W.now){W={now:function(){return +(new Date)}}}var X=0;var S;var ab=/\blang(?:uage)?-([\w.]+)(?!\S)/;var ae=/\bprettyprint\b/;function U(){var ag=(window.PR_SHOULD_USE_CONTINUATION?W.now()+250:Infinity);for(;X<T.length&&W.now()<ag;X++){var aj=T[X];var ai=aj.className;if(ai.indexOf("prettyprint")>=0){var ah=ai.match(ab);var am;if(!ah&&(am=o(aj))&&"CODE"===am.tagName){ah=am.className.match(ab)}if(ah){ah=ah[1]}var al=false;for(var ak=aj.parentNode;ak;ak=ak.parentNode){if((ak.tagName==="pre"||ak.tagName==="code"||ak.tagName==="xmp")&&ak.className&&ak.className.indexOf("prettyprint")>=0){al=true;break}}if(!al){var af=aj.className.match(/\blinenums\b(?::(\d+))?/);af=af?af[1]&&af[1].length?+af[1]:true:false;if(af){Q(aj,af)}S={langExtension:ah,sourceNode:aj,numberLines:af};d(S)}}}if(X<T.length){setTimeout(U,250)}else{if(ad){ad()}}}U()}window.prettyPrintOne=y;window.prettyPrint=b;window.PR={createSimpleLexer:g,registerLangHandler:c,sourceDecorator:i,PR_ATTRIB_NAME:P,PR_ATTRIB_VALUE:n,PR_COMMENT:j,PR_DECLARATION:E,PR_KEYWORD:z,PR_LITERAL:G,PR_NOCODE:N,PR_PLAIN:F,PR_PUNCTUATION:L,PR_SOURCE:J,PR_STRING:C,PR_TAG:m,PR_TYPE:O}})();PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_DECLARATION,/^<!\w[^>]*(?:>|$)/],[PR.PR_COMMENT,/^<\!--[\s\S]*?(?:-\->|$)/],[PR.PR_PUNCTUATION,/^(?:<[%?]|[%?]>)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-handlebars",/^<script\b[^>]*type\s*=\s*['"]?text\/x-handlebars-template['"]?\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i],[PR.PR_DECLARATION,/^{{[#^>/]?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{&?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{{>?\s*[\w.][^}]*}}}/],[PR.PR_COMMENT,/^{{![^}]*}}/]]),["handlebars","hbs"]);PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN,/^[ \t\r\n\f]+/,null," \t\r\n\f"]],[[PR.PR_STRING,/^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/,null],[PR.PR_STRING,/^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/,null],["lang-css-str",/^url\(([^\)\"\']*)\)/i],[PR.PR_KEYWORD,/^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i],[PR.PR_COMMENT,/^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//],[PR.PR_COMMENT,/^(?:<!--|-->)/],[PR.PR_LITERAL,/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],[PR.PR_LITERAL,/^#(?:[0-9a-f]{3}){1,2}/i],[PR.PR_PLAIN,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i],[PR.PR_PUNCTUATION,/^[^\s\w\'\"]+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_KEYWORD,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_STRING,/^[^\)\"\']+/]]),["css-str"]);
diff --git a/coverage/lcov-report/sorter.js b/coverage/lcov-report/sorter.js
new file mode 100644
index 0000000..2bb296a
--- /dev/null
+++ b/coverage/lcov-report/sorter.js
@@ -0,0 +1,196 @@
+/* eslint-disable */
+var addSorting = (function() {
+    'use strict';
+    var cols,
+        currentSort = {
+            index: 0,
+            desc: false
+        };
+
+    // returns the summary table element
+    function getTable() {
+        return document.querySelector('.coverage-summary');
+    }
+    // returns the thead element of the summary table
+    function getTableHeader() {
+        return getTable().querySelector('thead tr');
+    }
+    // returns the tbody element of the summary table
+    function getTableBody() {
+        return getTable().querySelector('tbody');
+    }
+    // returns the th element for nth column
+    function getNthColumn(n) {
+        return getTableHeader().querySelectorAll('th')[n];
+    }
+
+    function onFilterInput() {
+        const searchValue = document.getElementById('fileSearch').value;
+        const rows = document.getElementsByTagName('tbody')[0].children;
+        for (let i = 0; i < rows.length; i++) {
+            const row = rows[i];
+            if (
+                row.textContent
+                    .toLowerCase()
+                    .includes(searchValue.toLowerCase())
+            ) {
+                row.style.display = '';
+            } else {
+                row.style.display = 'none';
+            }
+        }
+    }
+
+    // loads the search box
+    function addSearchBox() {
+        var template = document.getElementById('filterTemplate');
+        var templateClone = template.content.cloneNode(true);
+        templateClone.getElementById('fileSearch').oninput = onFilterInput;
+        template.parentElement.appendChild(templateClone);
+    }
+
+    // loads all columns
+    function loadColumns() {
+        var colNodes = getTableHeader().querySelectorAll('th'),
+            colNode,
+            cols = [],
+            col,
+            i;
+
+        for (i = 0; i < colNodes.length; i += 1) {
+            colNode = colNodes[i];
+            col = {
+                key: colNode.getAttribute('data-col'),
+                sortable: !colNode.getAttribute('data-nosort'),
+                type: colNode.getAttribute('data-type') || 'string'
+            };
+            cols.push(col);
+            if (col.sortable) {
+                col.defaultDescSort = col.type === 'number';
+                colNode.innerHTML =
+                    colNode.innerHTML + '<span class="sorter"></span>';
+            }
+        }
+        return cols;
+    }
+    // attaches a data attribute to every tr element with an object
+    // of data values keyed by column name
+    function loadRowData(tableRow) {
+        var tableCols = tableRow.querySelectorAll('td'),
+            colNode,
+            col,
+            data = {},
+            i,
+            val;
+        for (i = 0; i < tableCols.length; i += 1) {
+            colNode = tableCols[i];
+            col = cols[i];
+            val = colNode.getAttribute('data-value');
+            if (col.type === 'number') {
+                val = Number(val);
+            }
+            data[col.key] = val;
+        }
+        return data;
+    }
+    // loads all row data
+    function loadData() {
+        var rows = getTableBody().querySelectorAll('tr'),
+            i;
+
+        for (i = 0; i < rows.length; i += 1) {
+            rows[i].data = loadRowData(rows[i]);
+        }
+    }
+    // sorts the table using the data for the ith column
+    function sortByIndex(index, desc) {
+        var key = cols[index].key,
+            sorter = function(a, b) {
+                a = a.data[key];
+                b = b.data[key];
+                return a < b ? -1 : a > b ? 1 : 0;
+            },
+            finalSorter = sorter,
+            tableBody = document.querySelector('.coverage-summary tbody'),
+            rowNodes = tableBody.querySelectorAll('tr'),
+            rows = [],
+            i;
+
+        if (desc) {
+            finalSorter = function(a, b) {
+                return -1 * sorter(a, b);
+            };
+        }
+
+        for (i = 0; i < rowNodes.length; i += 1) {
+            rows.push(rowNodes[i]);
+            tableBody.removeChild(rowNodes[i]);
+        }
+
+        rows.sort(finalSorter);
+
+        for (i = 0; i < rows.length; i += 1) {
+            tableBody.appendChild(rows[i]);
+        }
+    }
+    // removes sort indicators for current column being sorted
+    function removeSortIndicators() {
+        var col = getNthColumn(currentSort.index),
+            cls = col.className;
+
+        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');
+        col.className = cls;
+    }
+    // adds sort indicators for current column being sorted
+    function addSortIndicators() {
+        getNthColumn(currentSort.index).className += currentSort.desc
+            ? ' sorted-desc'
+            : ' sorted';
+    }
+    // adds event listeners for all sorter widgets
+    function enableUI() {
+        var i,
+            el,
+            ithSorter = function ithSorter(i) {
+                var col = cols[i];
+
+                return function() {
+                    var desc = col.defaultDescSort;
+
+                    if (currentSort.index === i) {
+                        desc = !currentSort.desc;
+                    }
+                    sortByIndex(i, desc);
+                    removeSortIndicators();
+                    currentSort.index = i;
+                    currentSort.desc = desc;
+                    addSortIndicators();
+                };
+            };
+        for (i = 0; i < cols.length; i += 1) {
+            if (cols[i].sortable) {
+                // add the click event handler on the th so users
+                // dont have to click on those tiny arrows
+                el = getNthColumn(i).querySelector('.sorter').parentElement;
+                if (el.addEventListener) {
+                    el.addEventListener('click', ithSorter(i));
+                } else {
+                    el.attachEvent('onclick', ithSorter(i));
+                }
+            }
+        }
+    }
+    // adds sorting functionality to the UI
+    return function() {
+        if (!getTable()) {
+            return;
+        }
+        cols = loadColumns();
+        loadData();
+        addSearchBox();
+        addSortIndicators();
+        enableUI();
+    };
+})();
+
+window.addEventListener('load', addSorting);
diff --git a/coverage/lcov-report/src/cli/index.html b/coverage/lcov-report/src/cli/index.html
new file mode 100644
index 0000000..70bbd0c
--- /dev/null
+++ b/coverage/lcov-report/src/cli/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/cli</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/cli</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/527</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/165</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/507</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="livelink.ts"><a href="livelink.ts.html">livelink.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="527" class="abs low">0/527</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="165" class="abs low">0/165</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="507" class="abs low">0/507</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/cli/livelink.ts.html b/coverage/lcov-report/src/cli/livelink.ts.html
new file mode 100644
index 0000000..64a9e51
--- /dev/null
+++ b/coverage/lcov-report/src/cli/livelink.ts.html
@@ -0,0 +1,3454 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/cli/livelink.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/cli</a> livelink.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/527</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/165</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/507</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">#!/usr/bin/env node
+<span class="cstat-no" title="statement not covered" >import { program } from 'commander';</span>
+<span class="cstat-no" title="statement not covered" >import fetch, { Response } from 'node-fetch';</span>
+<span class="cstat-no" title="statement not covered" >import chalk from 'chalk';</span>
+import type { Stream, StreamSource } from '../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../server/services/logger.js';</span>
+&nbsp;
+const API_URL = <span class="cstat-no" title="statement not covered" >'http://localhost:3001/api';</span>
+&nbsp;
+function <span class="fstat-no" title="function not covered" >getTimestamp(</span>): string {
+  const now = <span class="cstat-no" title="statement not covered" >new Date();</span>
+<span class="cstat-no" title="statement not covered" >  return now.toLocaleTimeString();</span>
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >formatUptime(</span>startTime: number | string): string {
+  const start = <span class="cstat-no" title="statement not covered" >typeof startTime === 'string' ? new Date(startTime).getTime() : startTime;</span>
+  const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+  const diff = <span class="cstat-no" title="statement not covered" >Math.floor((now - start) / 1000);</span>
+  
+  const hours = <span class="cstat-no" title="statement not covered" >Math.floor(diff / 3600);</span>
+  const minutes = <span class="cstat-no" title="statement not covered" >Math.floor((diff % 3600) / 60);</span>
+  const seconds = <span class="cstat-no" title="statement not covered" >diff % 60;</span>
+  
+<span class="cstat-no" title="statement not covered" >  if (hours &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    return `${hours}h ${minutes}m ${seconds}s`;</span>
+  } else <span class="cstat-no" title="statement not covered" >if (minutes &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    return `${minutes}m ${seconds}s`;</span>
+  } else {
+<span class="cstat-no" title="statement not covered" >    return `${seconds}s`;</span>
+  }
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleResponse&lt;</span>T&gt;(response: Response): Promise&lt;T&gt; {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+    const errorText = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >    throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);</span>
+  }
+  const data = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >  return data as T;</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .name('livelink')
+  .version('0.2.0')
+  .description('LiveLink CLI - Control and manage LiveLink streams')
+  .option('-d, --debug', 'Enable debug output');
+&nbsp;
+// Create command categories for better organization
+const streamCommands = <span class="cstat-no" title="statement not covered" >program.command('stream').description('Stream management commands');</span>
+const queueCommands = <span class="cstat-no" title="statement not covered" >program.command('queue').description('Queue management commands');</span>
+const playerCommands = <span class="cstat-no" title="statement not covered" >program.command('player').description('Player control commands');</span>
+const screenCommands = <span class="cstat-no" title="statement not covered" >program.command('screen').description('Screen management commands');</span>
+const serverCommands = <span class="cstat-no" title="statement not covered" >program.command('server').description('Server control commands');</span>
+&nbsp;
+// Stream Management Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('list')
+  .description('List all active streams')
+  .action(handleStreamList);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('start')
+  .description('Start a new stream')
+  .requiredOption('-u, --url &lt;url&gt;', 'Stream URL')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .option('-v, --volume &lt;number&gt;', 'Volume level (0-100)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));</span>
+      
+      // First check if URL is already playing on any screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.url === options.url)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));</span>
+        const proceed = <span class="cstat-no" title="statement not covered" >process.argv.includes('--force');</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!proceed) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Use --force to start anyway.'));</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+      }
+&nbsp;
+      const requestBody: {
+        url: string;
+        quality: string;
+        screen: number;
+        volume?: number;
+      } = <span class="cstat-no" title="statement not covered" >{</span>
+        url: options.url,
+        quality: options.quality,
+        screen: parseInt(options.screen)
+      };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (options.volume) {</span>
+<span class="cstat-no" title="statement not covered" >        requestBody.volume = parseInt(options.volume);</span>
+      }
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify(requestBody)
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream started:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('stop')
+  .description('Stop a stream')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Stopping stream on screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/${screen}`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream stopped:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('restart')
+  .description('Restart streams')
+  .option('-s, --screen &lt;number&gt;', 'Screen number (optional, restarts all screens if not specified)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      if (options.screen) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue(`Restarting stream on screen ${options.screen}...`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue('Restarting all streams...'));</span>
+      }
+      
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/restart`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify(options.screen ? { screen: parseInt(options.screen) } : {})
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Streams restarted:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// New stream refresh commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('refresh')
+  .description('Force refresh streams data')
+  .argument('[screen]', 'Screen number (optional, refreshes all screens if not specified)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      if (screen) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue(`Forcing refresh for screen ${screen}...`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue('Forcing refresh for all screens...'));</span>
+      }
+      
+      const endpoint = <span class="cstat-no" title="statement not covered" >screen ? `${API_URL}/streams/refresh/${screen}` : `${API_URL}/streams/refresh`;</span>
+      
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(endpoint, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Streams refreshed:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Stream Category Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('vtubers')
+  .description('List VTuber streams')
+  .option('-l, --limit &lt;number&gt;', 'Number of streams to fetch', '20')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching VTuber streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/vtubers?limit=${options.limit}`);</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;Stream[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No VTuber streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nFound ${streams.length} VTuber Streams:`));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('japanese')
+  .description('List Japanese streams')
+  .option('-l, --limit &lt;number&gt;', 'Number of streams to fetch', '20')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching Japanese streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/japanese?limit=${options.limit}`);</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;Stream[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No Japanese streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nFound ${streams.length} Japanese Streams:`));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Screen Management Commands
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('enable')
+  .description('Enable a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Enabling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/enable`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Screen enabled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('disable')
+  .description('Disable a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Disabling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/disable`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Screen disabled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('info')
+  .description('Get current screen information')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Fetching information for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}`);</span>
+      const screenInfo = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nScreen ${screen} Information:`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(JSON.stringify(screenInfo, null, 2));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('list')
+  .description('List all screens and their status')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching all screens information...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens`);</span>
+      const screens = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('\nScreens Information:'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(JSON.stringify(screens, null, 2));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('toggle')
+  .description('Toggle screen enabled/disabled state')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Toggling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/toggle`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;{ success: boolean; enabled: boolean }&gt;(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`Screen ${screen} ${result.enabled ? 'enabled' : 'disabled'}`));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('new-player')
+  .description('Start a new player instance for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Opening new player...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/new-player`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;{ success: boolean }&gt;(response);</span>
+<span class="cstat-no" title="statement not covered" >      if (result.success) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green('New player started successfully'));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('Failed to start new player'));</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Queue Management Commands
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('show')
+  .description('Show queue for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen: string) =&gt; <span class="cstat-no" title="statement not covered" >handleQueueShow(parseInt(screen, 10)))</span>;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('reorder')
+  .description('Reorder queue items')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;fromIndex&gt;', 'Source index (0-based)')
+  .argument('&lt;toIndex&gt;', 'Target index (0-based)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen, fromIndex, toIndex) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Reordering queue for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/reorder`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          screen: parseInt(screen),
+          sourceIndex: parseInt(fromIndex),
+          targetIndex: parseInt(toIndex)
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue reordered:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('clear')
+  .description('Clear queue for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Clearing queue for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue cleared:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Watched Streams Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('watched')
+  .description('Show watched streams')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching watched streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`);</span>
+      const watched = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;string[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (watched.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No watched streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nWatched Streams (${watched.length} total):`));</span>
+<span class="cstat-no" title="statement not covered" >      watched.forEach(<span class="fstat-no" title="function not covered" >(u</span>rl, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`${index + 1}. ${url}`));</span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('clear-watched')
+  .description('Clear watched streams history')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Clearing watched streams history...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Watched streams cleared:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('mark-watched')
+  .description('Mark a stream as watched')
+  .argument('&lt;url&gt;', 'Stream URL')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(url) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Marking stream as watched: ${url}`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ url })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream marked as watched:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Player Control Commands
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('set-priority')
+  .description('Set player priority')
+  .argument('&lt;level&gt;', 'Priority level (realtime, high, above_normal, normal, below_normal, low, idle)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(level) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const validLevels = <span class="cstat-no" title="statement not covered" >['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!validLevels.includes(level)) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error: Invalid priority level. Valid values are:'), validLevels.join(', '));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Setting player priority to ${level}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/priority`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ priority: level })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Priority set:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('command')
+  .description('Send command to MPV player instance(s)')
+  .argument('&lt;command&gt;', 'MPV command to send (e.g. "set pause yes")')
+  .option('-s, --screen &lt;number&gt;', 'Send to specific screen')
+  .option('-a, --all', 'Send to all screens')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(command, options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!options.screen &amp;&amp; !options.all) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error:'), 'Must specify either --screen or --all');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      const target = <span class="cstat-no" title="statement not covered" >options.all ? 'all screens' : `screen ${options.screen}`;</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Sending command to ${target}: ${command}`));</span>
+&nbsp;
+      const endpoint = <span class="cstat-no" title="statement not covered" >options.all ? </span>
+        `${API_URL}/player/command/all` :
+        `${API_URL}/player/command/${options.screen}`;
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(endpoint, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command })
+      });
+      
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Command sent:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('pause')
+  .description('Toggle pause')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Toggling pause for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/command/${screen}`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command: 'cycle pause' })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Pause toggled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('volume')
+  .description('Set volume (0-100)')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;level&gt;', 'Volume level (0-100)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen, level) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const volumeLevel = <span class="cstat-no" title="statement not covered" >parseInt(level);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(volumeLevel) || volumeLevel &lt; 0 || volumeLevel &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error:'), 'Volume level must be between 0 and 100');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Setting volume for screen ${screen} to ${volumeLevel}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/command/${screen}`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command: `set volume ${volumeLevel}` })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Volume set:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Server Control Commands
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('start')
+  .description('Start only the LiveLink server (no frontend)')
+  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(players: string[]) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Convert arguments to numbers
+      const screenPlayers = <span class="cstat-no" title="statement not covered" >players.map(Number);</span>
+      
+      // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >        screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+        });
+      }
+&nbsp;
+      // Import and start the server
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >      await import('</span>../server/api.js');</span></span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('LiveLink server started'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('stop')
+  .description('Stop the LiveLink server')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping LiveLink server...'));</span>
+      
+      // Create AbortController for timeout
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 5000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/stop', {</span>
+          method: 'POST',
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('Server shutdown initiated successfully'));</span>
+          // Wait a moment for cleanup to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        } else {
+          const error = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(1);</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >          if (error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Server shutdown timed out'));</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Failed to stop server:'), error.message);</span>
+          }
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop server:'), String(error));</span>
+        }
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop server:'), error instanceof Error ? error.message : String(error));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('stop-all')
+  .description('Stop all players and the LiveLink server')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping all players and the LiveLink server...'));</span>
+      
+      // Create AbortController for timeout (longer timeout since we're stopping all players first)
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 10000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/stop-all', {</span>
+          method: 'POST',
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('All players and server shutdown initiated successfully'));</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Waiting for processes to terminate...'));</span>
+          // Wait a moment for cleanup to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 3000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        } else {
+          const error = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop players and server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(1);</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >          if (error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Stop-all command timed out'));</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Failed to stop players and server:'), error.message);</span>
+          }
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop players and server:'), String(error));</span>
+        }
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop players and server:'), error instanceof Error ? error.message : String(error));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('status')
+  .description('Get server status')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Checking server status...'));</span>
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 2000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/status', {</span>
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+          const status = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('Server is running'));</span>
+<span class="cstat-no" title="statement not covered" >          console.log(JSON.stringify(status, null, 2));</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not responding properly'));</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error &amp;&amp; error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not responding (timeout)'));</span>
+        } else <span class="cstat-no" title="statement not covered" >if (error instanceof Error &amp;&amp; 'code' in error &amp;&amp; error.code === 'ECONNREFUSED') {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not running'));</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Failed to check server status:'), error instanceof Error ? error.message : String(error));</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Web Control Commands
+const webCommands = <span class="cstat-no" title="statement not covered" >program.command('web').description('Web frontend control commands');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >webCommands</span>
+  .command('start')
+  .description('Start only the web frontend')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Starting web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start web frontend:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >webCommands</span>
+  .command('stop')
+  .description('Stop the web frontend')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop web frontend:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+// Add start command at root level
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('start')
+  .description('Start both server and web frontend')
+  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(players: string[]) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Convert arguments to numbers
+      const screenPlayers = <span class="cstat-no" title="statement not covered" >players.map(Number);</span>
+      
+      // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >        screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+        });
+      }
+&nbsp;
+      // Start both server and frontend
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Starting LiveLink server and web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >      await import('</span>../server/api.js');</span></span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('LiveLink server started'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+// Add backwards compatibility for old command structure
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('list-streams')
+  .description('List all active streams (legacy command)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Note: This command is deprecated. Use "stream list" instead.'));</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Fetching active streams', 'CLI');</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No active streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Active Streams:'));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\nScreen ${stream.screen}:`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`Quality: ${stream.quality}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.title) <span class="cstat-no" title="statement not covered" >console.log(`Title: ${stream.title}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        console.log(`Status: ${stream.status || 'playing'}`);</span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('start-stream')
+  .description('Start a new stream (legacy command)')
+  .requiredOption('-u, --url &lt;url&gt;', 'Stream URL')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Note: This command is deprecated. Use "stream start" instead.'));</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));</span>
+      
+      // First check if URL is already playing on any screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.url === options.url)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));</span>
+        const proceed = <span class="cstat-no" title="statement not covered" >process.argv.includes('--force');</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!proceed) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Use --force to start anyway.'));</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+      }
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          url: options.url,
+          quality: options.quality,
+          screen: parseInt(options.screen)
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream started:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Set debug mode if flag is present
+const options = <span class="cstat-no" title="statement not covered" >program.opts();</span>
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (options.debug) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.setLevel('debug');</span>
+<span class="cstat-no" title="statement not covered" >  logger.debug('Debug mode enabled', 'CLI');</span>
+}
+&nbsp;
+// Parse command line arguments
+<span class="cstat-no" title="statement not covered" >program.parse(process.argv);</span>
+&nbsp;
+// Start both server and frontend if no arguments provided (except for help)
+<span class="cstat-no" title="statement not covered" >if (process.argv.length &lt;= 2 &amp;&amp; !process.argv.includes('-h') &amp;&amp; !process.argv.includes('--help')) {</span>
+  // Get the number of players to start on each screen from arguments
+  const args = <span class="cstat-no" title="statement not covered" >process.argv.slice(2);</span>
+  const screenPlayers = <span class="cstat-no" title="statement not covered" >args.map(Number);</span>
+  
+  // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >    screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+    });
+  }
+&nbsp;
+  // Start both server and frontend
+<span class="cstat-no" title="statement not covered" >  console.log(chalk.blue('Starting LiveLink server and web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >  import('</span>../server/api.js').t</span>hen(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.green('LiveLink server started'));</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+  }).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.error(chalk.red('Failed to start:'), error);</span>
+<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
+  });
+} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (process.argv.length &lt;= 2) {</span>
+  // Show help if only -h or --help is provided
+<span class="cstat-no" title="statement not covered" >  program.help();</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('switch')
+  .description('Switch current stream to a new URL')
+  .requiredOption('-u, --url &lt;url&gt;', 'New stream URL')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(options.screen);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Switching stream on screen ${screen} to ${options.url}...`));</span>
+&nbsp;
+      // First get current stream to mark as watched
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const currentStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (currentStream?.url) {</span>
+        // Mark current stream as watched
+<span class="cstat-no" title="statement not covered" >        await fetch(`${API_URL}/streams/watched`, {</span>
+          method: 'POST',
+          headers: { 'Content-Type': 'application/json' },
+          body: JSON.stringify({ url: currentStream.url })
+        });
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.gray(`Marked current stream as watched: ${currentStream.url}`));</span>
+      }
+&nbsp;
+      // Stop current stream
+<span class="cstat-no" title="statement not covered" >      await fetch(`${API_URL}/streams/${screen}`, {</span>
+        method: 'DELETE'
+      });
+&nbsp;
+      // Start new stream
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          url: options.url,
+          quality: options.quality,
+          screen
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream switched successfully:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+interface ScreenInfo {
+  enabled: boolean;
+  queueProcessing?: boolean;
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleQueueShow(</span>screen: number) {
+<span class="cstat-no" title="statement not covered" >  console.log(chalk.blue(`Fetching queue for screen ${screen}...`));</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // First, get information about any active stream on this screen
+    const activeStreamsResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`);</span>
+    const activeStreams = <span class="cstat-no" title="statement not covered" >await activeStreamsResponse.json() as Stream[];</span>
+    const activeStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`\nActive stream on screen ${screen}:`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.bold(`Title: ${activeStream.title || 'No Title'}`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${activeStream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${activeStream.platform}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Status: ${activeStream.status}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.gray('----------------------------------------'));</span>
+    }
+    
+    // Next, trigger a queue refresh
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Triggering queue refresh...'));</span>
+    const refreshResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}/refresh`, {</span>
+      method: 'POST'
+    });
+    
+<span class="cstat-no" title="statement not covered" >    if (!refreshResponse.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Warning: Could not refresh queue'));</span>
+    } else {
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue refresh successful'));</span>
+    }
+&nbsp;
+    // Now get the queue
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (response.status === 404) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow(`No queue found for screen ${screen}`));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >await response.json() as StreamSource[];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!queue || queue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Queue is empty'));</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Get screen info to show enabled/disabled status
+    const screenInfoResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}`);</span>
+    const screenInfo = <span class="cstat-no" title="statement not covered" >screenInfoResponse.ok ? await screenInfoResponse.json() as ScreenInfo : null;</span>
+    
+    // Display screen status if available
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (screenInfo) {</span>
+      const screenStatus = <span class="cstat-no" title="statement not covered" >screenInfo.enabled ? chalk.green('Enabled') : chalk.red('Disabled');</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nScreen ${screen} Status: ${screenStatus}`));</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.blue(`\nQueue for Screen ${screen} (${queue.length} items):`));</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.gray('----------------------------------------'));</span>
+    
+<span class="cstat-no" title="statement not covered" >    queue.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream: StreamSource, index: number) =&gt; {</span>
+      // Title with source type and priority indicator
+      const sourceType = <span class="cstat-no" title="statement not covered" >stream.subtype === 'favorites' ? chalk.magenta('[FAV]') :</span>
+                        stream.organization ? chalk.cyan(`[${stream.organization}]`) :
+                        '';
+      const priorityIndicator = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined ? </span>
+        chalk.gray(`(P${stream.priority})`) : '';
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`\n${index + 1}. ${sourceType} ${priorityIndicator} ${stream.title || 'No Title'}`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${stream.platform || 'Unknown'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount.toLocaleString()}`);</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.organization) <span class="cstat-no" title="statement not covered" >console.log(`Organization: ${stream.organization}`);</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.sourceStatus) {</span>
+        const statusColor = <span class="cstat-no" title="statement not covered" >stream.sourceStatus === 'live' ? chalk.green :</span>
+                          stream.sourceStatus === 'upcoming' ? chalk.yellow :
+                          chalk.red;
+<span class="cstat-no" title="statement not covered" >        console.log(`Status: ${statusColor(stream.sourceStatus)}`);</span>
+      }
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.gray('----------------------------------------'));</span>
+    });
+&nbsp;
+    // Show queue processing status if available
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (screenInfo?.queueProcessing) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('\nQueue is currently being processed...'));</span>
+    }
+    
+    // If there's an active stream, show a note about what will happen next
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('\nNote:'), 'When the current stream ends, the next stream in the queue will automatically start.');</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+  }
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleStreamList(</span>) {
+<span class="cstat-no" title="statement not covered" >  console.log(getTimestamp(), '[INFO] [CLI] Fetching active streams');</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`HTTP error! status: ${response.status}`);</span>
+    }
+&nbsp;
+    const streams = <span class="cstat-no" title="statement not covered" >await response.json() as Stream[];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streams || streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log('No active streams');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    console.log('\nActive Streams:\n');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    for (const stream of streams) {</span>
+      // Get additional details for each stream
+      const detailsResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/${stream.screen}/details`);</span>
+      const details = <span class="cstat-no" title="statement not covered" >detailsResponse.ok ? await detailsResponse.json() as Stream : null;</span>
+      
+<span class="cstat-no" title="statement not covered" >      console.log(`Screen ${stream.screen} ${stream.status === 'playing' ? '●' : '○'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Title: ${stream.title || details?.title || 'No Title'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${stream.platform}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Quality: ${stream.quality}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Status: ${stream.status}`);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (details) {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (details.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${details.viewerCount.toLocaleString()}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (details.organization) <span class="cstat-no" title="statement not covered" >console.log(`Organization: ${details.organization}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.startTime) {</span>
+          const uptime = <span class="cstat-no" title="statement not covered" >formatUptime(stream.startTime);</span>
+<span class="cstat-no" title="statement not covered" >          console.log(`Uptime: ${uptime}`);</span>
+        }
+      }
+<span class="cstat-no" title="statement not covered" >      console.log('');</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error('Error:', error instanceof Error ? error.message : String(error));</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('force-start')
+  .description('Force start a stream on a specific screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;url&gt;', 'Stream URL to start')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen: string, url: string) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(getTimestamp(), `[INFO] [CLI] Forcing stream start on screen ${screen} with URL: ${url}`);</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/start`, {</span>
+        method: 'POST',
+        headers: {
+          'Content-Type': 'application/json'
+        },
+        body: JSON.stringify({
+          url,
+          screen: parseInt(screen, 10),
+          quality: 'best',
+          manual: true
+        })
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+      }
+&nbsp;
+      const result = <span class="cstat-no" title="statement not covered" >await response.json() as { success: boolean; error?: string };</span>
+<span class="cstat-no" title="statement not covered" >      if (result.success) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`Stream started successfully on screen ${screen}`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow(`Failed to start stream: ${result.error || 'Unknown error'}`));</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+    }
+  });
+&nbsp;
+// Add command to force refresh queues
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('refresh')
+  .description('Force refresh all stream queues')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(getTimestamp(), '[INFO] [CLI] Forcing queue refresh');</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/refresh`, {</span>
+        method: 'POST'
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue refresh triggered successfully'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+    }
+  });</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/hooks.client.ts.html b/coverage/lcov-report/src/hooks.client.ts.html
new file mode 100644
index 0000000..f076a75
--- /dev/null
+++ b/coverage/lcov-report/src/hooks.client.ts.html
@@ -0,0 +1,376 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.client.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.client.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/38</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/25</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/37</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { HandleClientError } from '@sveltejs/kit';
+&nbsp;
+// Cache for API responses
+const apiCache = <span class="cstat-no" title="statement not covered" >new Map&lt;string, { data: any; timestamp: number }&gt;();</span>
+const CACHE_TTL = <span class="cstat-no" title="statement not covered" >30000;</span> // 30 seconds cache lifetime
+&nbsp;
+// Debounce timers for API requests
+const debounceTimers = <span class="cstat-no" title="statement not covered" >new Map&lt;string, NodeJS.Timeout&gt;();</span>
+const DEBOUNCE_TIME = <span class="cstat-no" title="statement not covered" >300;</span> // 300ms debounce time
+&nbsp;
+// Initialize client hooks
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >i</span>nit(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    version: '1.0.0'
+  };
+}
+&nbsp;
+// Handle client-side errors
+export const <span class="cstat-no" title="statement not covered" >handleError: HandleClientError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(</span>{</span> error, event }) =&gt; {</span>
+  const errorId = <span class="cstat-no" title="statement not covered" >crypto.randomUUID();</span>
+  
+  // Log the error with a unique ID
+<span class="cstat-no" title="statement not covered" >  console.error(`[${errorId}] Client error:`, error);</span>
+  
+  // Return a user-friendly error
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    message: 'An unexpected error occurred',
+    errorId
+  };
+};
+&nbsp;
+// Add these functions to the window object for use in components
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (typeof window !== 'undefined') {</span>
+  // Cached fetch function to reduce API calls
+<span class="cstat-no" title="statement not covered" >  window.cachedFetch = <span class="fstat-no" title="function not covered" >async </span>(url: string, options?: RequestInit) =&gt; {</span>
+    const cacheKey = <span class="cstat-no" title="statement not covered" >`${options?.method || 'GET'}:${url}`;</span>
+    
+    // Return cached data if it's still valid
+    const cached = <span class="cstat-no" title="statement not covered" >apiCache.get(cacheKey);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (cached &amp;&amp; Date.now() - cached.timestamp &lt; CACHE_TTL) {</span>
+<span class="cstat-no" title="statement not covered" >      return { ...cached.data, fromCache: true };</span>
+    }
+    
+    // Make the actual fetch request
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(url, options);</span>
+    
+    // Only cache successful GET requests
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (response.ok &amp;&amp; (!options?.method || options.method === 'GET')) {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const data = <span class="cstat-no" title="statement not covered" >await response.clone().json();</span>
+<span class="cstat-no" title="statement not covered" >        apiCache.set(cacheKey, { data, timestamp: Date.now() });</span>
+<span class="cstat-no" title="statement not covered" >        return data;</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        console.warn('Failed to cache response:', error);</span>
+<span class="cstat-no" title="statement not covered" >        return await response.json();</span>
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    return await response.json();</span>
+  };
+  
+  // Debounced fetch to prevent rapid API calls
+<span class="cstat-no" title="statement not covered" >  window.debouncedFetch = <span class="fstat-no" title="function not covered" >(u</span>rl: string, options?: RequestInit) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+      const cacheKey = <span class="cstat-no" title="statement not covered" >`${options?.method || 'GET'}:${url}`;</span>
+      
+      // Clear existing timer
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (debounceTimers.has(cacheKey)) {</span>
+<span class="cstat-no" title="statement not covered" >        clearTimeout(debounceTimers.get(cacheKey));</span>
+      }
+      
+      // Set new timer
+<span class="cstat-no" title="statement not covered" >      debounceTimers.set(</span>
+        cacheKey,
+        setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >          try {</span>
+            const response = <span class="cstat-no" title="statement not covered" >await fetch(url, options);</span>
+            const data = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >            resolve(data);</span>
+          } catch (error) {
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } finally {
+<span class="cstat-no" title="statement not covered" >            debounceTimers.delete(cacheKey);</span>
+          }
+        }, DEBOUNCE_TIME)
+      );
+    });
+  };
+}
+&nbsp;
+// Add type definitions
+declare global {
+  interface Window {
+    cachedFetch: (url: string, options?: RequestInit) =&gt; Promise&lt;any&gt;;
+    debouncedFetch: (url: string, options?: RequestInit) =&gt; Promise&lt;any&gt;;
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/hooks.server.ts.html b/coverage/lcov-report/src/hooks.server.ts.html
new file mode 100644
index 0000000..74fcfee
--- /dev/null
+++ b/coverage/lcov-report/src/hooks.server.ts.html
@@ -0,0 +1,121 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.server.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.server.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { Handle } from '@sveltejs/kit';
+<span class="cstat-no" title="statement not covered" >import { locale } from '$lib/i18n/index.js';</span>
+import type { Locale } from '$lib/i18n/index.js';
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >handle: Handle = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >a</span>sync </span>({ event, resolve }) =&gt; {</span>
+  // Get locale from URL or default to 'en'
+  const lang = <span class="cstat-no" title="statement not covered" >event.url.pathname.split('/')[1];</span>
+  const validLocale = <span class="cstat-no" title="statement not covered" >(lang === 'en' || lang === 'ja') ? lang as Locale : 'en';</span>
+<span class="cstat-no" title="statement not covered" >  locale.set(validLocale);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  return resolve(event);</span>
+};
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/hooks.ts.html b/coverage/lcov-report/src/hooks.ts.html
new file mode 100644
index 0000000..9a990d5
--- /dev/null
+++ b/coverage/lcov-report/src/hooks.ts.html
@@ -0,0 +1,139 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { locale } from '$lib/i18n/index.js';</span>
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >prerender = true;</span>
+export const <span class="cstat-no" title="statement not covered" >trailingSlash = 'always';</span>
+&nbsp;
+// Initialize with default locale
+<span class="cstat-no" title="statement not covered" >locale.set('en');</span>
+&nbsp;
+// Add missing exports required by SvelteKit
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >r</span>eroute(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return null;</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >t</span>ransport(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return null;</span>
+}
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/index.html b/coverage/lcov-report/src/index.html
new file mode 100644
index 0000000..7370d78
--- /dev/null
+++ b/coverage/lcov-report/src/index.html
@@ -0,0 +1,146 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> src</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/53</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/51</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="hooks.client.ts"><a href="hooks.client.ts.html">hooks.client.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="38" class="abs low">0/38</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="25" class="abs low">0/25</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="37" class="abs low">0/37</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="hooks.server.ts"><a href="hooks.server.ts.html">hooks.server.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="hooks.ts"><a href="hooks.ts.html">hooks.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/api.ts.html b/coverage/lcov-report/src/lib/api.ts.html
new file mode 100644
index 0000000..53ab9d9
--- /dev/null
+++ b/coverage/lcov-report/src/lib/api.ts.html
@@ -0,0 +1,835 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/lib</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/61</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { Stream, StreamSource, PlayerSettings, ScreenConfig } from '../types/stream.js';
+&nbsp;
+<span class="fstat-no" title="function not covered" >class A</span>piClient {
+  private <span class="cstat-no" title="statement not covered" >baseUrl = '/api';</span>
+  private <span class="cstat-no" title="statement not covered" >useCaching = true;</span>
+&nbsp;
+  // Helper method to safely parse JSON
+  private <span class="fstat-no" title="function not covered" >async </span>safeJsonParse(response: Response): Promise&lt;any&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      return await response.json();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error('JSON parsing error:', error);</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('Invalid JSON response from server');</span>
+    }
+  }
+&nbsp;
+  // Helper method to make API requests with error handling and caching
+  private <span class="fstat-no" title="function not covered" >async </span>request&lt;T&gt;(
+    endpoint: string, 
+    options?: RequestInit, 
+    useCache: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >true</span>
+  ): Promise&lt;T&gt; {
+    const url = <span class="cstat-no" title="statement not covered" >`${this.baseUrl}${endpoint}`;</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      let response: Response;
+      
+      // For GET requests, use caching or debouncing if enabled
+<span class="cstat-no" title="statement not covered" >      if (options?.method === undefined || options?.method === 'GET') {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (this.useCaching &amp;&amp; typeof window !== 'undefined') {</span>
+          // Check if window.cachedFetch exists
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof (window as any).cachedFetch === 'function') {</span>
+<span class="cstat-no" title="statement not covered" >            return await (window as any).cachedFetch(url, options);</span>
+          }
+          // Check if window.debouncedFetch exists
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof (window as any).debouncedFetch === 'function') {</span>
+<span class="cstat-no" title="statement not covered" >            return await (window as any).debouncedFetch(url, options);</span>
+          }
+        }
+        
+        // Fall back to regular fetch if caching is disabled or the functions don't exist
+<span class="cstat-no" title="statement not covered" >        response = await fetch(url, options);</span>
+      } else {
+        // For non-GET requests, use regular fetch
+<span class="cstat-no" title="statement not covered" >        response = await fetch(url, options);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+        const errorText = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+        let errorMessage = <span class="cstat-no" title="statement not covered" >`API error (${response.status}): `;</span>
+        
+<span class="cstat-no" title="statement not covered" >        try {</span>
+          // Try to parse error as JSON
+          const errorJson = <span class="cstat-no" title="statement not covered" >JSON.parse(errorText);</span>
+<span class="cstat-no" title="statement not covered" >          errorMessage += errorJson.error || errorJson.message || errorText;</span>
+        } catch {
+          // If not JSON, use text
+<span class="cstat-no" title="statement not covered" >          errorMessage += errorText || response.statusText;</span>
+        }
+        
+<span class="cstat-no" title="statement not covered" >        throw new Error(errorMessage);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      return await this.safeJsonParse(response);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(`API request failed for ${endpoint}:`, error);</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  // Stream Management
+<span class="fstat-no" title="function not covered" >  async </span>getActiveStreams(): Promise&lt;Stream[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;Stream[]&gt;('/streams/active');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>startStream(url: string, screen?: number, quality?: string): Promise&lt;any&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;any&gt;('/streams/start', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ url, screen, quality })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/${screen}`, {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>restartStream(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/restart', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ screen })
+    }, false);
+  }
+&nbsp;
+  // Queue Management
+<span class="fstat-no" title="function not covered" >  async </span>getQueue(screen: number): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;StreamSource[]&gt;(`/streams/queue/${screen}`);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>addToQueue(screen: number, stream: StreamSource): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/queue/${screen}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(stream)
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>removeFromQueue(screen: number, index: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/queue/${screen}/${index}`, {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/reorder', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ screen, sourceIndex, targetIndex })
+    }, false);
+  }
+&nbsp;
+  // Player Controls
+<span class="fstat-no" title="function not covered" >  async </span>sendCommand(screen: number, command: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/command/${screen}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ command })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>sendCommandToAll(command: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/player/command/all', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ command })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setVolume(target: number | 'all', level: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/volume/${target}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ level })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>togglePause(target: number | 'all'): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/pause/${target}`, {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>seek(target: number | 'all', seconds: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/seek/${target}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ seconds })
+    }, false);
+  }
+&nbsp;
+  // Settings
+<span class="fstat-no" title="function not covered" >  async </span>getPlayerSettings(): Promise&lt;PlayerSettings&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;PlayerSettings&gt;('/player/settings');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>updatePlayerSettings(settings: Partial&lt;PlayerSettings&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/player/settings', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(settings)
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getScreenConfigs(): Promise&lt;ScreenConfig[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;ScreenConfig[]&gt;('/screens');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>updateScreenConfig(screen: number, config: Partial&lt;ScreenConfig&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/screens/${screen}`, {</span>
+      method: 'PUT',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(config)
+    }, false);
+  }
+&nbsp;
+  // Watched Streams
+<span class="fstat-no" title="function not covered" >  async </span>getWatchedStreams(): Promise&lt;string[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;string[]&gt;('/streams/watched');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>markStreamAsWatched(url: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/watched', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ url })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>clearWatchedStreams(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/watched', {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+  // Server Control
+<span class="fstat-no" title="function not covered" >  async </span>stopServer(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/server/stop', {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+  // Get all streams
+<span class="fstat-no" title="function not covered" >  async </span>getAllStreams(options: { organization?: string, limit?: number } = <span class="branch-0 cbranch-no" title="branch not covered" >{})</span>: Promise&lt;StreamSource[]&gt; {
+    const params = <span class="cstat-no" title="statement not covered" >new URLSearchParams();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (options.organization) <span class="cstat-no" title="statement not covered" >params.append('organization', options.organization);</span></span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (options.limit) <span class="cstat-no" title="statement not covered" >params.append('limit', options.limit.toString());</span></span>
+    
+    const queryString = <span class="cstat-no" title="statement not covered" >params.toString() ? `?${params.toString()}` : '';</span>
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;StreamSource[]&gt;(`/streams${queryString}`);</span>
+  }
+&nbsp;
+  // Get organizations
+<span class="fstat-no" title="function not covered" >  async </span>getOrganizations(): Promise&lt;string[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;string[]&gt;('/organizations');</span>
+  }
+&nbsp;
+  // Auto-start streams
+<span class="fstat-no" title="function not covered" >  async </span>autoStartStreams(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/autostart', {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+  // Enable/disable caching
+<span class="fstat-no" title="function not covered" >  setCaching(</span>enabled: boolean): void {
+<span class="cstat-no" title="statement not covered" >    this.useCaching = enabled;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getStreamStatus(screen: number) {
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${this.baseUrl}/streams/${screen}/status`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('Failed to get stream status');</span>
+    }
+<span class="cstat-no" title="statement not covered" >    return response.json();</span>
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >api = new ApiClient(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/i18n/helpers.ts.html b/coverage/lcov-report/src/lib/i18n/helpers.ts.html
new file mode 100644
index 0000000..3e29798
--- /dev/null
+++ b/coverage/lcov-report/src/lib/i18n/helpers.ts.html
@@ -0,0 +1,130 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n/helpers.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/i18n</a> helpers.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { get } from 'svelte/store';</span>
+<span class="cstat-no" title="statement not covered" >import { locale, t, type Locale } from './index.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >u</span>seTranslation(</span>) {
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    t,
+    locale,
+    setLocale: <span class="fstat-no" title="function not covered" >(n</span>ewLocale: Locale) =&gt; <span class="cstat-no" title="statement not covered" >locale.set(newLocale),</span>
+    getLocale: <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >get(locale)</span>
+  };
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >g</span>etLocaleFromPath(</span>path: string): Locale {
+  const lang = <span class="cstat-no" title="statement not covered" >path.split('/')[1];</span>
+<span class="cstat-no" title="statement not covered" >  return (lang === 'en' || lang === 'ja') ? lang as Locale : 'en';</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/i18n/index.html b/coverage/lcov-report/src/lib/i18n/index.html
new file mode 100644
index 0000000..04e0647
--- /dev/null
+++ b/coverage/lcov-report/src/lib/i18n/index.html
@@ -0,0 +1,131 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/lib/i18n</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="helpers.ts"><a href="helpers.ts.html">helpers.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/i18n/index.ts.html b/coverage/lcov-report/src/lib/i18n/index.ts.html
new file mode 100644
index 0000000..be8b4ca
--- /dev/null
+++ b/coverage/lcov-report/src/lib/i18n/index.ts.html
@@ -0,0 +1,235 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/i18n</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable, derived } from 'svelte/store';</span>
+&nbsp;
+export type Locale = 'en' | 'ja';
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >translations = {</span>
+  en: {
+    welcome: 'Welcome to LiveLink',
+    streams: 'Streams',
+    settings: 'Settings',
+    queue: 'Queue',
+    connectTwitch: 'Connect Twitch',
+    streamControl: {
+      play: 'Play',
+      pause: 'Pause',
+      stop: 'Stop',
+      volume: 'Volume',
+      quality: 'Quality'
+    },
+    errors: {
+      streamStart: 'Failed to start stream',
+      streamStop: 'Failed to stop stream',
+      connection: 'Connection error'
+    }
+  },
+  ja: {
+    welcome: 'LiveLinkへようこそ',
+    streams: 'ストリーム',
+    settings: '設定',
+    queue: 'キュー',
+    connectTwitch: 'Twitchと接続',
+    streamControl: {
+      play: '再生',
+      pause: '一時停止',
+      stop: '停止',
+      volume: '音量',
+      quality: '画質'
+    },
+    errors: {
+      streamStart: 'ストリームの開始に失敗しました',
+      streamStop: 'ストリームの停止に失敗しました',
+      connection: '接続エラー'
+    }
+  }
+} as const;
+&nbsp;
+export type Translation = typeof translations;
+export type TranslationKeys = keyof Translation['en'];
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >locale = writable&lt;Locale&gt;('en');</span>
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >t = derived(locale, <span class="fstat-no" title="function not covered" >($</span>locale) =&gt; <span class="cstat-no" title="statement not covered" >translations[$locale])</span>; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/index.html b/coverage/lcov-report/src/lib/index.html
new file mode 100644
index 0000000..5255fee
--- /dev/null
+++ b/coverage/lcov-report/src/lib/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/lib</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/61</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="61" class="abs low">0/61</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/stores/auth.ts.html b/coverage/lcov-report/src/lib/stores/auth.ts.html
new file mode 100644
index 0000000..b6fb397
--- /dev/null
+++ b/coverage/lcov-report/src/lib/stores/auth.ts.html
@@ -0,0 +1,121 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores/auth.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/stores</a> auth.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable } from 'svelte/store';</span>
+&nbsp;
+interface TwitchUser {
+  id: string;
+  username: string;
+  isAuthenticated: boolean;
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >twitchUser = writable&lt;TwitchUser&gt;({</span>
+  id: '',
+  username: '',
+  isAuthenticated: false
+}); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/stores/index.html b/coverage/lcov-report/src/lib/stores/index.html
new file mode 100644
index 0000000..8ff6389
--- /dev/null
+++ b/coverage/lcov-report/src/lib/stores/index.html
@@ -0,0 +1,131 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/lib/stores</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/49</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="auth.ts"><a href="auth.ts.html">auth.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="47" class="abs low">0/47</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="46" class="abs low">0/46</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/lib/stores/index.ts.html b/coverage/lcov-report/src/lib/stores/index.ts.html
new file mode 100644
index 0000000..c423ac4
--- /dev/null
+++ b/coverage/lcov-report/src/lib/stores/index.ts.html
@@ -0,0 +1,445 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/stores</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/47</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/46</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable } from 'svelte/store';</span>
+import type { Stream, StreamSource } from '../../types/stream.js';
+&nbsp;
+// Active streams store
+export const <span class="cstat-no" title="statement not covered" >activeStreams = writable&lt;Stream[]&gt;([]);</span>
+&nbsp;
+// Queue store for each screen
+export const <span class="cstat-no" title="statement not covered" >streamQueues = writable&lt;Map&lt;number, StreamSource[]&gt;&gt;(new Map());</span>
+&nbsp;
+// Screen configuration store
+export const <span class="cstat-no" title="statement not covered" >screenConfigs = writable&lt;Map&lt;number, {</span>
+  enabled: boolean;
+  width: number;
+  height: number;
+  x: number;
+  y: number;
+  volume: number;
+  quality: string;
+  windowMaximized: boolean;
+}&gt;&gt;(new Map());
+&nbsp;
+// Player settings store
+export const <span class="cstat-no" title="statement not covered" >playerSettings = writable({</span>
+  preferStreamlink: false,
+  defaultQuality: 'best',
+  defaultVolume: 0,
+  windowMaximized: true,
+  maxStreams: 2,
+  autoStart: true
+});
+&nbsp;
+// Initialize all stores
+<span class="cstat-no" title="statement not covered" >export a</span>sync function <span class="fstat-no" title="function not covered" >initializeStores(</span>) {
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Fetch active streams
+    const streamsResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/streams/active');</span>
+    const streams = <span class="cstat-no" title="statement not covered" >await streamsResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >    activeStreams.set(streams);</span>
+&nbsp;
+    // Fetch player settings
+    const settingsResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/player/settings');</span>
+    const settings = <span class="cstat-no" title="statement not covered" >await settingsResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >    playerSettings.set(settings);</span>
+&nbsp;
+    // Set up screen configs
+    const screensResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/screens');</span>
+    const screens = <span class="cstat-no" title="statement not covered" >await screensResponse.json();</span>
+    const screenConfigMap = <span class="cstat-no" title="statement not covered" >new Map();</span>
+<span class="cstat-no" title="statement not covered" >    screens.forEach(<span class="fstat-no" title="function not covered" >(s</span>creen: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      screenConfigMap.set(screen.id, {</span>
+        enabled: screen.enabled,
+        width: screen.width,
+        height: screen.height,
+        x: screen.x,
+        y: screen.y,
+        volume: screen.volume,
+        quality: screen.quality,
+        windowMaximized: screen.windowMaximized
+      });
+    });
+<span class="cstat-no" title="statement not covered" >    screenConfigs.set(screenConfigMap);</span>
+&nbsp;
+    // Set up stream queues
+    const queueMap = <span class="cstat-no" title="statement not covered" >new Map();</span>
+<span class="cstat-no" title="statement not covered" >    for (const screen of screens) {</span>
+      const queueResponse = <span class="cstat-no" title="statement not covered" >await fetch(`/api/streams/queue/${screen.id}`);</span>
+      const queue = <span class="cstat-no" title="statement not covered" >await queueResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >      queueMap.set(screen.id, queue);</span>
+    }
+<span class="cstat-no" title="statement not covered" >    streamQueues.set(queueMap);</span>
+&nbsp;
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error('Failed to initialize stores:', error);</span>
+  }
+}
+&nbsp;
+// Subscribe to WebSocket updates
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (typeof window !== 'undefined') {</span>
+  const ws = <span class="cstat-no" title="statement not covered" >new WebSocket(`ws://${window.location.host}/ws`);</span>
+  
+<span class="cstat-no" title="statement not covered" >  ws.onmessage = <span class="fstat-no" title="function not covered" >(e</span>vent) =&gt; {</span>
+    const data = <span class="cstat-no" title="statement not covered" >JSON.parse(event.data);</span>
+    
+<span class="cstat-no" title="statement not covered" >    switch (data.type) {</span>
+      case 'streamUpdate':
+<span class="cstat-no" title="statement not covered" >        activeStreams.update(<span class="fstat-no" title="function not covered" >streams </span>=&gt; {</span>
+          const index = <span class="cstat-no" title="statement not covered" >streams.findIndex(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === data.stream.screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >          if (index !== -1) {</span>
+<span class="cstat-no" title="statement not covered" >            streams[index] = data.stream;</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            streams.push(data.stream);</span>
+          }
+<span class="cstat-no" title="statement not covered" >          return streams;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+        
+      case 'queueUpdate':
+<span class="cstat-no" title="statement not covered" >        streamQueues.update(<span class="fstat-no" title="function not covered" >queues </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          queues.set(data.screen, data.queue);</span>
+<span class="cstat-no" title="statement not covered" >          return queues;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+        
+      case 'screenUpdate':
+<span class="cstat-no" title="statement not covered" >        screenConfigs.update(<span class="fstat-no" title="function not covered" >configs </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          configs.set(data.screen.id, {</span>
+            enabled: data.screen.enabled,
+            width: data.screen.width,
+            height: data.screen.height,
+            x: data.screen.x,
+            y: data.screen.y,
+            volume: data.screen.volume,
+            quality: data.screen.quality,
+            windowMaximized: data.screen.windowMaximized
+          });
+<span class="cstat-no" title="statement not covered" >          return configs;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+    }
+  };
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/api.ts.html b/coverage/lcov-report/src/server/api.ts.html
new file mode 100644
index 0000000..ab5fa04
--- /dev/null
+++ b/coverage/lcov-report/src/server/api.ts.html
@@ -0,0 +1,478 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/76</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/10</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/73</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Koa from 'koa';</span>
+<span class="cstat-no" title="statement not covered" >import bodyParser from 'koa-bodyparser';</span>
+<span class="cstat-no" title="statement not covered" >import cors from '@koa/cors';</span>
+<span class="cstat-no" title="statement not covered" >import serve from 'koa-static';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import { apiRouter } from './routes/api.js';</span>
+<span class="cstat-no" title="statement not covered" >import appRouter from './router.js';</span>
+<span class="cstat-no" title="statement not covered" >import { db } from './db/database.js';</span>
+<span class="cstat-no" title="statement not covered" >import { streamManager } from './stream_manager.js';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { exec } from 'child_process';</span>
+&nbsp;
+const __filename = <span class="cstat-no" title="statement not covered" >fileURLToPath(import.meta.url);</span>
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(__filename);</span>
+const app = <span class="cstat-no" title="statement not covered" >new Koa();</span>
+&nbsp;
+// Initialize database
+<span class="cstat-no" title="statement not covered" >logger.info('Initializing database...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >await db.initialize();</span>
+<span class="cstat-no" title="statement not covered" >logger.info('Database initialized', 'Server');</span>
+&nbsp;
+// Auto-start streams
+<span class="cstat-no" title="statement not covered" >logger.info('Auto-starting streams...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >try {</span>
+<span class="cstat-no" title="statement not covered" >  await streamManager.autoStartStreams();</span>
+<span class="cstat-no" title="statement not covered" >  logger.info('Auto-start complete', 'Server');</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  logger.error('Error during auto-start', 'Server', error as Error);</span>
+}
+&nbsp;
+// Middleware
+<span class="cstat-no" title="statement not covered" >logger.debug('Setting up middleware...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >app.use(cors());</span>
+<span class="cstat-no" title="statement not covered" >app.use(bodyParser());</span>
+&nbsp;
+// Static files
+const staticPath = <span class="cstat-no" title="statement not covered" >path.join(__dirname, '../../static');</span>
+<span class="cstat-no" title="statement not covered" >app.use(serve(staticPath));</span>
+&nbsp;
+// Routes
+<span class="cstat-no" title="statement not covered" >app.use(apiRouter.routes());</span>
+<span class="cstat-no" title="statement not covered" >app.use(apiRouter.allowedMethods());</span>
+<span class="cstat-no" title="statement not covered" >app.use(appRouter.routes());</span>
+<span class="cstat-no" title="statement not covered" >app.use(appRouter.allowedMethods());</span>
+&nbsp;
+// Error handling
+<span class="cstat-no" title="statement not covered" >app.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr, ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Server error', 'Server', err);</span>
+});
+&nbsp;
+const PORT = <span class="cstat-no" title="statement not covered" >parseInt(process.env.PORT || '3001', 10);</span>
+&nbsp;
+// Function to check if port is in use
+async function <span class="fstat-no" title="function not covered" >isPortInUse(</span>port: number): Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >  return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; {</span>
+    const server = <span class="cstat-no" title="statement not covered" >app.listen(port)</span>
+      .once('error', <span class="fstat-no" title="function not covered" >(e</span>rr: NodeJS.ErrnoException) =&gt; {
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (err.code === 'EADDRINUSE') {</span>
+<span class="cstat-no" title="statement not covered" >          resolve(true);</span>
+        }
+      })
+      .once('listening', <span class="fstat-no" title="function not covered" >() =</span>&gt; {
+<span class="cstat-no" title="statement not covered" >        server.close();</span>
+<span class="cstat-no" title="statement not covered" >        resolve(false);</span>
+      });
+  });
+}
+&nbsp;
+// Function to find and kill process using port
+async function <span class="fstat-no" title="function not covered" >killProcessOnPort(</span>port: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >  return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    exec(`lsof -i :${port} | grep LISTEN | awk '{print $2}' | xargs kill -9`, <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      if (error &amp;&amp; error.code !== 1) { // code 1 means no process found</span>
+<span class="cstat-no" title="statement not covered" >        reject(error);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        resolve();</span>
+      }
+    });
+  });
+}
+&nbsp;
+// Start server with retry logic
+async function <span class="fstat-no" title="function not covered" >startServer(</span>retries = <span class="branch-0 cbranch-no" title="branch not covered" >3)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >  for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; retries; i++) {</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (await isPortInUse(PORT)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Port ${PORT} is in use, attempting to kill existing process...`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        await killProcessOnPort(PORT);</span>
+        // Wait a moment for the port to be freed
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+      }
+&nbsp;
+      const server = <span class="cstat-no" title="statement not covered" >app.listen(PORT, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Server running on http://localhost:${PORT}`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Routes:', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        apiRouter.stack.forEach(<span class="fstat-no" title="function not covered" >layer </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`${layer.methods.join(',')} ${layer.path}`, 'Server');</span>
+        });
+      });
+&nbsp;
+      // Handle server shutdown
+<span class="cstat-no" title="statement not covered" >      process.on('SIGINT', <span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Received SIGINT. Shutting down gracefully...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        server.close(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info('Server closed', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        });
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(`Failed to start server (attempt ${i + 1}/${retries})`, 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (i === retries - 1) {</span>
+<span class="cstat-no" title="statement not covered" >        throw error;</span>
+      }
+      // Wait before retrying
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+    }
+  }
+}
+&nbsp;
+// Start the server
+<span class="cstat-no" title="statement not covered" >try {</span>
+<span class="cstat-no" title="statement not covered" >  await startServer();</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  logger.error('Failed to start server after multiple attempts', 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >  process.exit(1);</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export default app;</span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/config.ts.html b/coverage/lcov-report/src/server/config.ts.html
new file mode 100644
index 0000000..b6aa9bd
--- /dev/null
+++ b/coverage/lcov-report/src/server/config.ts.html
@@ -0,0 +1,556 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/config.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> config.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { StreamConfig, PlayerSettings, FavoriteChannels } from '../types/stream.js';
+&nbsp;
+export interface Config {
+  streams: Array&lt;{
+    id: number;
+    enabled: boolean;
+    screen: number;
+    sources: Array&lt;{
+      type: string;
+      subtype?: string;
+      name?: string;
+      enabled: boolean;
+      limit: number;
+      priority: number;
+      tags?: string[];
+    }&gt;;
+    sorting: {
+      field: string;
+      order: 'asc' | 'desc';
+    };
+    refresh: number;
+    autoStart: boolean;
+    quality: string;
+    volume: number;
+    windowMaximized: boolean;
+  }&gt;;
+  organizations: string[];
+  favoriteChannels: FavoriteChannels;
+  holodex: {
+    apiKey: string;
+  };
+  twitch: {
+    clientId: string;
+    clientSecret: string;
+    streamersFile: string;
+  };
+  player: PlayerSettings &amp; {
+    screens: StreamConfig[];
+  };
+  mpv: {
+    priority?: string;
+    'gpu-context'?: string;
+  };
+  streamlink: {
+    path?: string;
+    options?: Record&lt;string, string&gt;;
+    http_header?: Record&lt;string, string&gt;;
+  };
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >defaultConfig: Config = {</span>
+  streams: [
+    {
+      id: 1,
+      enabled: true,
+      screen: 1,
+      sources: [
+        {
+          type: 'holodex',
+          subtype: 'favorites',
+          enabled: true,
+          limit: 25,
+          priority: 1
+        },
+        {
+          type: 'holodex',
+          subtype: 'organization',
+          name: 'Hololive',
+          enabled: true,
+          limit: 25,
+          priority: 2
+        },
+        {
+          type: 'holodex',
+          subtype: 'organization',
+          name: 'Independents',
+          enabled: true,
+          limit: 25,
+          priority: 4
+        }
+      ],
+      sorting: {
+        field: 'viewerCount',
+        order: 'desc'
+      },
+      refresh: 300,
+      autoStart: true,
+      quality: 'best',
+      volume: 100,
+      windowMaximized: false
+    },
+    {
+      id: 2,
+      enabled: true,
+      screen: 2,
+      sources: [
+        {
+          type: 'twitch',
+          subtype: 'favorites',
+          enabled: true,
+          limit: 100,
+          priority: 2
+        },
+        {
+          type: 'twitch',
+          enabled: true,
+          limit: 25,
+          priority: 3,
+          tags: ['vtuber']
+        }
+      ],
+      sorting: {
+        field: 'viewerCount',
+        order: 'desc'
+      },
+      refresh: 300,
+      autoStart: true,
+      quality: 'best',
+      volume: 0,
+      windowMaximized: false
+    }
+  ],
+  organizations: [],
+  favoriteChannels: {
+    holodex: [],
+    twitch: [],
+    youtube: []
+  },
+  holodex: {
+    apiKey: process.env.HOLODEX_API_KEY || ''
+  },
+  twitch: {
+    clientId: process.env.TWITCH_CLIENT_ID || '',
+    clientSecret: process.env.TWITCH_CLIENT_SECRET || '',
+    streamersFile: 'config/streamers.txt'
+  },
+  player: {
+    preferStreamlink: false,
+    defaultQuality: 'best',
+    defaultVolume: 50,
+    windowMaximized: false,
+    maxStreams: 4,
+    autoStart: true,
+    processPriority: 'normal',
+    windowMode: 'windowed',
+    force_player: false,
+    screens: []
+  },
+  mpv: {
+    priority: 'normal',
+    'gpu-context': 'auto'
+  },
+  streamlink: {
+    path: '',
+    options: {},
+    http_header: {}
+  }
+}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/db/database.ts.html b/coverage/lcov-report/src/server/db/database.ts.html
new file mode 100644
index 0000000..59ddbad
--- /dev/null
+++ b/coverage/lcov-report/src/server/db/database.ts.html
@@ -0,0 +1,400 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/db/database.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/db</a> database.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/33</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import sqlite3 from 'sqlite3';</span>
+<span class="cstat-no" title="statement not covered" >import { open, Database } from 'sqlite';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs/promises';</span>
+<span class="cstat-no" title="statement not covered" >import { env } from '../../config/env.js';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+&nbsp;
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(fileURLToPath(import.meta.url));</span>
+&nbsp;
+export interface TwitchAuth {
+  userId: string;
+  accessToken: string;
+  refreshToken: string;
+  expiresAt: number;
+}
+&nbsp;
+class DatabaseError extends Error {
+<span class="fstat-no" title="function not covered" >  constructor(m</span>essage: string) {
+<span class="cstat-no" title="statement not covered" >    super(message);</span>
+<span class="cstat-no" title="statement not covered" >    this.name = 'DatabaseError';</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class D</span>atabaseService {
+  private <span class="cstat-no" title="statement not covered" >db: Database | null = null;</span>
+  private dbPath: string;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    this.dbPath = path.resolve(process.cwd(), env.DATABASE_PATH);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>initialize() {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Ensure the database directory exists
+      const dbDir = <span class="cstat-no" title="statement not covered" >path.dirname(this.dbPath);</span>
+<span class="cstat-no" title="statement not covered" >      await fs.mkdir(dbDir, { recursive: true });</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Initializing database at ${this.dbPath}`, 'Database');</span>
+<span class="cstat-no" title="statement not covered" >      this.db = await open({</span>
+        filename: this.dbPath,
+        driver: sqlite3.Database
+      });
+&nbsp;
+      // Initialize tables
+<span class="cstat-no" title="statement not covered" >      await this.db.exec(`</span>
+        CREATE TABLE IF NOT EXISTS streams (
+          id INTEGER PRIMARY KEY AUTOINCREMENT,
+          url TEXT NOT NULL,
+          screen INTEGER NOT NULL,
+          quality TEXT NOT NULL,
+          created_at DATETIME DEFAULT CURRENT_TIMESTAMP
+        );
+      `);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      await this.db.exec(`</span>
+        CREATE TABLE IF NOT EXISTS twitch_auth (
+          user_id TEXT PRIMARY KEY,
+          access_token TEXT NOT NULL,
+          refresh_token TEXT NOT NULL,
+          expires_at INTEGER NOT NULL
+        )
+      `);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info('Database initialized successfully', 'Database');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to initialize database: ${error}`,
+        'Database',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to initialize database: ${error}`);</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>saveTwitchAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.db) <span class="cstat-no" title="statement not covered" >throw new DatabaseError('Database not initialized');</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await this.db.run(</span>
+        `INSERT OR REPLACE INTO twitch_auth (user_id, access_token, refresh_token, expires_at)
+         VALUES (?, ?, ?, ?)`,
+        [auth.userId, auth.accessToken, auth.refreshToken, auth.expiresAt]
+      );
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to save Twitch auth: ${error}`);</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getTwitchAuth(userId: string): Promise&lt;TwitchAuth | null&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.db) <span class="cstat-no" title="statement not covered" >throw new DatabaseError('Database not initialized');</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const row = <span class="cstat-no" title="statement not covered" >await this.db.get(</span>
+        'SELECT user_id as userId, access_token as accessToken, refresh_token as refreshToken, expires_at as expiresAt FROM twitch_auth WHERE user_id = ?',
+        userId
+      ) as TwitchAuth | undefined;
+      
+<span class="cstat-no" title="statement not covered" >      return row || null;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to get Twitch auth: ${error}`);</span>
+    }
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >db = new DatabaseService(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/db/index.html b/coverage/lcov-report/src/server/db/index.html
new file mode 100644
index 0000000..c69131e
--- /dev/null
+++ b/coverage/lcov-report/src/server/db/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/db</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/db</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/33</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="database.ts"><a href="database.ts.html">database.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="33" class="abs low">0/33</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/index.html b/coverage/lcov-report/src/server/index.html
new file mode 100644
index 0000000..3b8903c
--- /dev/null
+++ b/coverage/lcov-report/src/server/index.html
@@ -0,0 +1,191 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/server</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/918</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/420</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/172</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/876</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="76" class="abs low">0/76</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="10" class="abs low">0/10</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="73" class="abs low">0/73</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="config.ts"><a href="config.ts.html">config.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="12" class="abs low">0/12</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="62" class="abs low">0/62</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="router.ts"><a href="router.ts.html">router.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="stream_manager.ts"><a href="stream_manager.ts.html">stream_manager.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="733" class="abs low">0/733</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="387" class="abs low">0/387</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="129" class="abs low">0/129</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="697" class="abs low">0/697</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="websocket.ts"><a href="websocket.ts.html">websocket.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/index.ts.html b/coverage/lcov-report/src/server/index.ts.html
new file mode 100644
index 0000000..96bfdce
--- /dev/null
+++ b/coverage/lcov-report/src/server/index.ts.html
@@ -0,0 +1,475 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/12</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/62</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { streamManager } from './stream_manager.js';</span>
+import type { StreamInstance } from '../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { exec } from 'child_process';</span>
+&nbsp;
+// Handle multiple termination signals
+const signals = <span class="cstat-no" title="statement not covered" >['SIGINT', 'SIGTERM', 'SIGQUIT'];</span>
+&nbsp;
+let isShuttingDown = <span class="cstat-no" title="statement not covered" >false;</span>
+&nbsp;
+// Add this before server startup
+// Check if API keys are set
+const holodexApiKey = <span class="cstat-no" title="statement not covered" >process.env.HOLODEX_API_KEY;</span>
+const twitchClientId = <span class="cstat-no" title="statement not covered" >process.env.TWITCH_CLIENT_ID;</span>
+const twitchClientSecret = <span class="cstat-no" title="statement not covered" >process.env.TWITCH_CLIENT_SECRET;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!holodexApiKey) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('HOLODEX_API_KEY is not set in environment variables', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Holodex streams will not be available', 'Server');</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!twitchClientId || !twitchClientSecret) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('TWITCH_CLIENT_ID or TWITCH_CLIENT_SECRET is not set in environment variables', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Twitch streams will not be available', 'Server');</span>
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >shutdown(</span>) {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+<span class="cstat-no" title="statement not covered" >  isShuttingDown = true;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  logger.info('Shutting down server...', 'Server');</span>
+  
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Force kill all MPV processes
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const killPromises = <span class="cstat-no" title="statement not covered" >activeStreams.map(<span class="fstat-no" title="function not covered" >async </span>(stream) =&gt; {</span>
+      const processInstance = <span class="cstat-no" title="statement not covered" >stream as unknown as StreamInstance;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (processInstance.process) {</span>
+        const childProcess = <span class="cstat-no" title="statement not covered" >processInstance.process as unknown as { pid: number };</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (childProcess.pid) {</span>
+<span class="cstat-no" title="statement not covered" >          try {</span>
+            // Try SIGINT first
+<span class="cstat-no" title="statement not covered" >            process.kill(childProcess.pid, 'SIGINT');</span>
+            
+            // Wait a bit and force kill if still running
+<span class="cstat-no" title="statement not covered" >            await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >            try {</span>
+              // Check if process still exists
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 0);</span>
+              // If we get here, process still exists, force kill it
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 'SIGKILL');</span>
+            } catch (e) {
+              // Process doesn't exist anymore, which is good
+            }
+          } catch (e) {
+            // Process might already be gone, try SIGKILL
+<span class="cstat-no" title="statement not covered" >            try {</span>
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 'SIGKILL');</span>
+            } catch {
+              // Ignore if process is already gone
+            }
+          }
+        }
+      }
+    });
+&nbsp;
+    // Wait for all processes to be killed
+<span class="cstat-no" title="statement not covered" >    await Promise.all(killPromises);</span>
+&nbsp;
+    // Kill any remaining mpv processes
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        exec('pkill -9 mpv', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          if (error &amp;&amp; error.code !== 1) { // code 1 means no processes found</span>
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            resolve(undefined);</span>
+          }
+        });
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Error killing remaining mpv processes', 'Server', error as Error);</span>
+    }
+&nbsp;
+    // Kill any remaining streamlink processes
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        exec('pkill -9 streamlink', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          if (error &amp;&amp; error.code !== 1) { // code 1 means no processes found</span>
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            resolve(undefined);</span>
+          }
+        });
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Error killing remaining streamlink processes', 'Server', error as Error);</span>
+    }
+&nbsp;
+    // Cleanup resources
+<span class="cstat-no" title="statement not covered" >    await streamManager.cleanup();</span>
+    
+    // Final delay to ensure all cleanup is complete
+<span class="cstat-no" title="statement not covered" >    await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    process.exit(0);</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error('Error during shutdown', 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
+  }
+}
+&nbsp;
+// Register signal handlers
+<span class="cstat-no" title="statement not covered" >signals.forEach(<span class="fstat-no" title="function not covered" >signal </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  process.on(signal, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Received ${signal} signal`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >    void shutdown();</span>
+  });
+});
+&nbsp;
+// Handle uncaught exceptions
+<span class="cstat-no" title="statement not covered" >process.on('uncaughtException', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Uncaught exception', 'Server', error);</span>
+<span class="cstat-no" title="statement not covered" >  void shutdown();</span>
+});
+&nbsp;
+// Handle unhandled rejections
+<span class="cstat-no" title="statement not covered" >process.on('unhandledRejection', <span class="fstat-no" title="function not covered" >(r</span>eason) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Unhandled rejection', 'Server', reason as Error);</span>
+<span class="cstat-no" title="statement not covered" >  void shutdown();</span>
+}); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/router.ts.html b/coverage/lcov-report/src/server/router.ts.html
new file mode 100644
index 0000000..d10b6cd
--- /dev/null
+++ b/coverage/lcov-report/src/server/router.ts.html
@@ -0,0 +1,166 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/router.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> router.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Router from 'koa-router';</span>
+<span class="cstat-no" title="statement not covered" >import send from 'koa-send';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+&nbsp;
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(fileURLToPath(import.meta.url));</span>
+const router = <span class="cstat-no" title="statement not covered" >new Router();</span>
+&nbsp;
+// Serve static files from the build directory
+<span class="cstat-no" title="statement not covered" >router.get('/assets', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  await send(ctx, ctx.path, { </span>
+    root: path.resolve(__dirname, '../../build') 
+  });
+});
+&nbsp;
+// Handle SvelteKit app routes
+<span class="cstat-no" title="statement not covered" >router.get(['/', '/manager'], <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  await send(ctx, 'index.html', { </span>
+    root: path.resolve(__dirname, '../../build') 
+  });
+});
+&nbsp;
+// Define routes
+<span class="cstat-no" title="statement not covered" >router.get('/', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = { message: 'Server is running' };</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export default router; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/routes/api.ts.html b/coverage/lcov-report/src/server/routes/api.ts.html
new file mode 100644
index 0000000..164b082
--- /dev/null
+++ b/coverage/lcov-report/src/server/routes/api.ts.html
@@ -0,0 +1,2815 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/routes/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/routes</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/475</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/112</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/470</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Router from 'koa-router';</span>
+import type { Context } from 'koa';
+<span class="cstat-no" title="statement not covered" >import { streamManager } from '../stream_manager.js';</span>
+import type { StreamSource, PlayerSettings, StreamConfig, StreamOptions } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+&nbsp;
+const router = <span class="cstat-no" title="statement not covered" >new Router();</span>
+&nbsp;
+// Add type for request body
+interface AddToQueueBody {
+  url: string;
+  title?: string;
+  platform?: string;
+}
+&nbsp;
+interface ReorderQueueBody {
+  screen: number;
+  sourceIndex: number;
+  targetIndex: number;
+}
+&nbsp;
+interface UpdateConfigBody {
+  streams?: StreamConfig[];
+  organizations?: string[];
+  favoriteChannels?: {
+    holodex: string[];
+    twitch: string[];
+    youtube: string[];
+  };
+}
+&nbsp;
+interface MarkWatchedBody {
+  url: string;
+  screen?: number;
+}
+&nbsp;
+// Static routes first (most specific to least specific)
+<span class="cstat-no" title="statement not covered" >router.get('/api/organizations', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getOrganizations();</span>
+});
+&nbsp;
+// More specific routes before general ones
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/active', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const streams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streams;</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get active streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get active streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/vtubers', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { limit } = <span class="cstat-no" title="statement not covered" >ctx.query;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = await streamManager.getVTuberStreams(</span>
+      limit ? parseInt(limit as string) : undefined
+    );
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to fetch VTuber streams', 
+      'API', 
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to fetch VTuber streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/japanese', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { limit } = <span class="cstat-no" title="statement not covered" >ctx.query;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = await streamManager.getJapaneseStreams(</span>
+      limit ? parseInt(limit as string) : undefined
+    );
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to fetch Japanese streams', 
+      'API', 
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to fetch Japanese streams' };</span>
+  }
+});
+&nbsp;
+// General routes
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const streams = <span class="cstat-no" title="statement not covered" >await streamManager.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streams;</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/start', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as { url: string } &amp; Partial&lt;StreamOptions&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!body.url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const response = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({</span>
+      url: body.url,
+      screen: body.screen || 1,
+      quality: body.quality || 'best',
+      volume: body.volume || 50,
+      windowMaximized: body.windowMaximized ?? true
+    });
+<span class="cstat-no" title="statement not covered" >    ctx.body = response;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Dynamic route with validation in handler
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.stopStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: result };</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to stop stream',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to stop stream' };</span>
+  }
+});
+&nbsp;
+// Screen Management
+<span class="cstat-no" title="statement not covered" >router.post('/api/screens/:screen/disable', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+<span class="cstat-no" title="statement not covered" >    await streamManager.disableScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/screens/:screen/enable', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+<span class="cstat-no" title="statement not covered" >    await streamManager.enableScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Stream Control
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/url', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { url, screen, quality, notify_only } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { </span>
+      url: string; 
+      screen?: number; 
+      quality?: string;
+      notify_only?: boolean;
+    };
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if stream is already playing on this screen
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream &amp;&amp; existingStream.url === url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream already playing on this screen' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if stream is playing on a higher priority screen
+    const isStreamActive = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >      s.url === url &amp;&amp; s.screen &lt; (screen || 1)</span>
+    );
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamActive) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream already playing on higher priority screen' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // If this is just a notification, don't start the stream
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (notify_only) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream info updated' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({ </span>
+      url, 
+      screen: screen || 1, 
+      quality: quality || 'best' 
+    });
+<span class="cstat-no" title="statement not covered" >    ctx.body = result;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/restart', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen?: number };</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.restartStreams(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Queue Management
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/queue/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >streamManager.getQueueForScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = queue;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/queue/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen, 10);</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as AddToQueueBody;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!body.url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const source: StreamSource = <span class="cstat-no" title="statement not covered" >{</span>
+      url: body.url,
+      title: body.title,
+      platform: body.platform as 'youtube' | 'twitch' | undefined
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.addToQueue(screen, source);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/queue/:screen/:index', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    const index = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.index);</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen) || isNaN(index)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number or index' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.removeFromQueue(screen, index);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/reorder', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as ReorderQueueBody;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof body.screen !== 'number' || typeof body.sourceIndex !== 'number' || typeof body.targetIndex !== 'number') {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid parameters' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.reorderQueue(body.screen, body.sourceIndex, body.targetIndex);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add stream control endpoints
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/start/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const { url } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { url: string };</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({ url, screen });</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = result;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/stop/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.stopStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Process Priority
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/priority', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { priority } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { priority: string };</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.setPlayerPriority(priority);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Watched Streams
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getWatchedStreams();</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { url } = <span class="cstat-no" title="statement not covered" >ctx.request.body as MarkWatchedBody;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+    // Mark the stream as watched
+<span class="cstat-no" title="statement not covered" >    streamManager.markStreamAsWatched(url);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Server Control
+<span class="cstat-no" title="statement not covered" >router.post('/api/server/stop', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Received stop server request', 'API');</span>
+    
+    // Set response headers to prevent connection from closing
+<span class="cstat-no" title="statement not covered" >    ctx.set('Connection', 'close');</span>
+    
+    // Send response before cleanup
+<span class="cstat-no" title="statement not covered" >    ctx.status = 200;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Server stopping...' };</span>
+    
+    // Force send the response
+<span class="cstat-no" title="statement not covered" >    ctx.res.end();</span>
+    
+    // Perform cleanup after response is sent
+<span class="cstat-no" title="statement not covered" >    setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Starting server cleanup...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Server cleanup complete, exiting...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(0);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error('Failed to cleanup server', 'API', error instanceof Error ? error : new Error(String(error)));</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    }, 1000);
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Stop server and all player processes
+<span class="cstat-no" title="statement not covered" >router.post('/api/server/stop-all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Received stop-all request (stopping all players and server)', 'API');</span>
+    
+    // Set response headers to prevent connection from closing
+<span class="cstat-no" title="statement not covered" >    ctx.set('Connection', 'close');</span>
+    
+    // Send response before cleanup
+<span class="cstat-no" title="statement not covered" >    ctx.status = 200;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Stopping all players and server...' };</span>
+    
+    // Force send the response
+<span class="cstat-no" title="statement not covered" >    ctx.res.end();</span>
+    
+    // Perform cleanup after response is sent
+<span class="cstat-no" title="statement not covered" >    setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Stopping all player processes...', 'API');</span>
+        
+        // Get all active streams and stop them
+        const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        if (activeStreams.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Found ${activeStreams.length} active streams to stop`, 'API');</span>
+          
+          const stopPromises = <span class="cstat-no" title="statement not covered" >activeStreams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(`Stopping player on screen ${stream.screen}`, 'API');</span>
+<span class="cstat-no" title="statement not covered" >            return streamManager.stopStream(stream.screen, true);</span>
+          });
+          
+          // Wait for all streams to be stopped
+<span class="cstat-no" title="statement not covered" >          await Promise.allSettled(stopPromises);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info('All player processes stopped', 'API');</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info('No active streams to stop', 'API');</span>
+        }
+        
+        // Then perform server cleanup
+<span class="cstat-no" title="statement not covered" >        logger.info('Starting server cleanup...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Server cleanup complete, exiting...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(0);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error('Failed during stop-all sequence', 'API', error instanceof Error ? error : new Error(String(error)));</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    }, 1000);
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add these new routes after the existing player/priority route
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/command/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    const { command } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { command: string };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!command) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Command is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.sendCommandToScreen(screen, command);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/command/all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { command } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { command: string };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!command) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Command is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.sendCommandToAll(command);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after existing player commands
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/volume/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { level } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { level: number };</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof level !== 'number' || level &lt; 0 || level &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Volume must be between 0-100' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll(`set volume ${level}`);</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, `set volume ${level}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/pause/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll('cycle pause');</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, 'cycle pause');</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/seek/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { seconds } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { seconds: number };</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof seconds !== 'number') {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Seconds must be a number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll(`seek ${seconds}`);</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, `seek ${seconds}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Get player settings endpoint
+<span class="cstat-no" title="statement not covered" >router.get('/api/player/settings', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getPlayerSettings();</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Update player settings endpoint
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/settings', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const settings = <span class="cstat-no" title="statement not covered" >ctx.request.body as Partial&lt;PlayerSettings&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.updatePlayerSettings(settings);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Add screen configuration endpoints
+<span class="cstat-no" title="statement not covered" >router.get('/api/screens', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getScreenConfigs();</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.put('/api/screens/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const config = <span class="cstat-no" title="statement not covered" >ctx.request.body as Partial&lt;StreamConfig&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.updateScreenConfig(screen, config);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add these new routes before the export
+<span class="cstat-no" title="statement not covered" >router.get('/api/config', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getConfig();</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.put('/api/config', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as UpdateConfigBody;</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateConfig(body);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Screen endpoints
+<span class="cstat-no" title="statement not covered" >router.get('/screens/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getScreenInfo(screen);</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : 'Unknown error' };</span>
+  }
+});
+&nbsp;
+// Add after other stream routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/autostart', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen?: number };</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (screen) {</span>
+      // Start streams on specific screen
+      const screenConfig = <span class="cstat-no" title="statement not covered" >streamManager.getScreenConfig(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: `Invalid screen number: ${screen}` };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Enable screen if disabled
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.enableScreen(screen);</span>
+      }
+      
+      // Stop any existing streams
+<span class="cstat-no" title="statement not covered" >      await streamManager.stopStream(screen);</span>
+      
+      // Start new streams
+<span class="cstat-no" title="statement not covered" >      await streamManager.handleQueueEmpty(screen);</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: true, message: `Auto-started streams on screen ${screen}` };</span>
+    } else {
+      // Start streams on all screens
+<span class="cstat-no" title="statement not covered" >      await streamManager.autoStartStreams();</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: true, message: 'Auto-started streams on all screens' };</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after other stream routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/close-all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Get all active screens
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    
+    // Stop all streams
+<span class="cstat-no" title="statement not covered" >    for (const stream of activeStreams) {</span>
+<span class="cstat-no" title="statement not covered" >      await streamManager.stopStream(stream.screen, true);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'All players closed' };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after other player routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/log', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen, type, data } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen: number; type: string; data: unknown };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof screen !== 'number' || !type) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid message format' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.handleLuaMessage(screen, type, data);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Update playlist endpoint
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/playlist', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen, data } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { </span>
+      screen: number; 
+      data: Array&lt;{
+        filename: string;
+        title?: string;
+        current: boolean;
+      }&gt;;
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen || !Array.isArray(data)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid playlist data' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Update playlist in stream manager
+<span class="cstat-no" title="statement not covered" >    streamManager.handlePlaylistUpdate(screen, data);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add a refresh endpoint to force stream refresh
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/refresh', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Force refreshing all streams', 'API');</span>
+    
+    // Reset the last refresh timestamps for all screens
+    const enabledScreens = <span class="cstat-no" title="statement not covered" >streamManager.getEnabledScreens();</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.resetRefreshTimestamps(enabledScreens);</span>
+    
+    // Update streams queue for all enabled screens
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateAllQueues(true);</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Stream data refresh initiated for all screens' };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to refresh streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: false, error: 'Failed to refresh streams' };</span>
+  }
+});
+&nbsp;
+// Add a refresh endpoint for specific screen
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/refresh/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: false, error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Force refreshing streams for screen ${screen}`, 'API');</span>
+    
+    // Reset the refresh timestamp for this screen
+<span class="cstat-no" title="statement not covered" >    streamManager.resetRefreshTimestamps([screen]);</span>
+    
+    // Update queue for this screen
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateQueue(screen, true);</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: `Stream data refresh initiated for screen ${screen}` };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      `Failed to refresh streams for screen ${ctx.params.screen}`,
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: false, error: 'Failed to refresh streams' };</span>
+  }
+});
+&nbsp;
+// Server status endpoint
+<span class="cstat-no" title="statement not covered" >router.get('/api/server/status', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const uptimeSeconds = <span class="cstat-no" title="statement not covered" >process.uptime();</span>
+    const uptimeFormatted = <span class="cstat-no" title="statement not covered" >formatUptime(uptimeSeconds);</span>
+    
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const memUsage = <span class="cstat-no" title="statement not covered" >process.memoryUsage();</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = {</span>
+      status: 'running',
+      uptime: uptimeFormatted,
+      activeStreams: activeStreams.length,
+      version: process.env.npm_package_version || '1.0.0',
+      nodeVersion: process.version,
+      platform: process.platform,
+      memory: {
+        rss: `${Math.round(memUsage.rss / 1024 / 1024)} MB`,
+        heapTotal: `${Math.round(memUsage.heapTotal / 1024 / 1024)} MB`,
+        heapUsed: `${Math.round(memUsage.heapUsed / 1024 / 1024)} MB`,
+        external: `${Math.round(memUsage.external / 1024 / 1024)} MB`
+      }
+    };
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get server status',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get server status' };</span>
+  }
+});
+&nbsp;
+// Helper function to format uptime
+function <span class="fstat-no" title="function not covered" >formatUptime(</span>seconds: number): string {
+  const days = <span class="cstat-no" title="statement not covered" >Math.floor(seconds / (3600 * 24));</span>
+  const hours = <span class="cstat-no" title="statement not covered" >Math.floor((seconds % (3600 * 24)) / 3600);</span>
+  const minutes = <span class="cstat-no" title="statement not covered" >Math.floor((seconds % 3600) / 60);</span>
+  const remainingSeconds = <span class="cstat-no" title="statement not covered" >Math.floor(seconds % 60);</span>
+  
+  const parts = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (days &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${days}d`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (hours &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${hours}h`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (minutes &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${minutes}m`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (remainingSeconds &gt; 0 || parts.length === 0) <span class="cstat-no" title="statement not covered" >parts.push(`${remainingSeconds}s`);</span></span>
+  
+<span class="cstat-no" title="statement not covered" >  return parts.join(' ');</span>
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >apiRouter = router; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/routes/index.html b/coverage/lcov-report/src/server/routes/index.html
new file mode 100644
index 0000000..28f0615
--- /dev/null
+++ b/coverage/lcov-report/src/server/routes/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/routes</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/routes</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/475</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/112</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/470</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="475" class="abs low">0/475</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="112" class="abs low">0/112</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="470" class="abs low">0/470</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/holodex.ts.html b/coverage/lcov-report/src/server/services/holodex.ts.html
new file mode 100644
index 0000000..4a2cd48
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/holodex.ts.html
@@ -0,0 +1,937 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/holodex.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> holodex.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/115</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/168</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/105</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { </span>
+  HolodexApiClient,
+  type VideoStatus,
+  type Video,
+  type VideoType,
+  VideoRaw
+} from 'holodex.js';
+import type { StreamSource, Config } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+import type { StreamService } from '../../types/stream.js';
+&nbsp;
+interface GetLiveStreamsOptions {
+  channels?: string[];
+  organization?: string;
+  limit?: number;
+  sort?: 'start_scheduled' | 'available_at' | 'live_viewers';
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class H</span>olodexService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >client: HolodexApiClient | null = null;</span>
+  private favoriteChannels: string[];
+  private filters: string[];
+  private config: Config;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(a</span>piKey: string, filters: string[], favoriteChannels: string[], config: Config) {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favoriteChannels;</span>
+<span class="cstat-no" title="statement not covered" >    this.filters = filters;</span>
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      this.client = new HolodexApiClient({</span>
+        apiKey: apiKey
+      });
+<span class="cstat-no" title="statement not covered" >      logger.info('Holodex service initialized', 'HolodexService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn('Failed to initialize Holodex service - some features will be disabled', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(options: GetLiveStreamsOptions): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn('Holodex service not initialized - returning empty streams', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >        return [];</span>
+      }
+&nbsp;
+      const params: Record&lt;string, string | number&gt; = <span class="cstat-no" title="statement not covered" >{</span>
+        limit: options.limit || 25,
+        sort: options.sort || 'available_at',
+        order: 'asc'
+      };
+&nbsp;
+      const organization = <span class="cstat-no" title="statement not covered" >options?.organization;</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options?.channels;</span>
+&nbsp;
+      let videos: Video[];
+      const channelOrderMap = <span class="cstat-no" title="statement not covered" >new Map&lt;string, number&gt;();</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // Create a map of channel IDs to their original position in the favorites array
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          channelOrderMap.set(channelId, index);</span>
+        });
+        
+        // Fetch all channels in parallel but preserve order
+        const promises = <span class="cstat-no" title="statement not covered" >channels.map(<span class="fstat-no" title="function not covered" >channelId </span>=&gt;</span>
+<span class="cstat-no" title="statement not covered" >          this.client!.getLiveVideos({</span>
+            channel_id: channelId,
+            status: 'live' as VideoStatus,
+            type: 'stream' as VideoType,
+            max_upcoming_hours: 0,
+            sort: 'live_viewers' as keyof VideoRaw &amp; string,
+          }).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {
+<span class="cstat-no" title="statement not covered" >            logger.error(`Failed to fetch streams for channel ${channelId}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >            logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >            return [];</span>
+          })
+        );
+        
+        const results = <span class="cstat-no" title="statement not covered" >await Promise.all(promises);</span>
+        
+        // Flatten results but maintain channel order
+<span class="cstat-no" title="statement not covered" >        videos = [];</span>
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+          const channelVideos = <span class="cstat-no" title="statement not covered" >results[index]</span>
+            // Filter out videos where the channel ID doesn't match (collabs)
+            .filter(<span class="fstat-no" title="function not covered" >video </span>=&gt; <span class="cstat-no" title="statement not covered" >video.channel?.channelId === channelId);</span>
+            
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (channelVideos &amp;&amp; channelVideos.length &gt; 0) {</span>
+            // Sort videos for each channel: live first, then by viewer count
+<span class="cstat-no" title="statement not covered" >            channelVideos.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (a.status === 'live' &amp;&amp; b.status !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (a.status !== 'live' &amp;&amp; b.status === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+<span class="cstat-no" title="statement not covered" >              return (b.liveViewers || 0) - (a.liveViewers || 0);</span>
+            });
+<span class="cstat-no" title="statement not covered" >            videos.push(...channelVideos);</span>
+          }
+        });
+        
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Found ${videos.length} live/upcoming streams from favorite channels`, 'HolodexService');</span>
+      } else {
+        // Fetch streams by organization or all
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (organization) {</span>
+<span class="cstat-no" title="statement not covered" >          params.org = organization;</span>
+        }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Fetching ${params.limit} live streams${organization ? ` for ${organization}` : ''}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >        videos = await this.client.getLiveVideos(params);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${videos.length} live streams`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (videos.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Stream details: ${JSON.stringify(videos.slice(0, 3).map(<span class="fstat-no" title="function not covered" >v </span>=&gt; <span class="cstat-no" title="statement not covered" >({</span></span>
+          title: v.title,
+          channel: v.channel?.name,
+          viewers: v.liveViewers,
+          id: v.videoId,
+          status: v.status
+        })))}`, 'HolodexService');
+      }
+&nbsp;
+      // Filter out channels that should be excluded
+      const filteredVideos = <span class="cstat-no" title="statement not covered" >videos.filter(<span class="fstat-no" title="function not covered" >video </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isChannelFiltered(video)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Filtering out video from channel ${video.channel?.name}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      });
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (videos.length !== filteredVideos.length) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Some videos were filtered out due to channel exclusions`, 'HolodexService');</span>
+      }
+      // Convert to StreamSource format with channel order preserved
+      const streamSources = <span class="cstat-no" title="statement not covered" >filteredVideos.map(<span class="fstat-no" title="function not covered" >video </span>=&gt; {</span>
+        const channelId = <span class="cstat-no" title="statement not covered" >video.channel?.channelId;</span>
+        const channelOrder = <span class="cstat-no" title="statement not covered" >channelId &amp;&amp; channels?.includes(channelId) ? channelOrderMap.get(channelId) : undefined;</span>
+        
+<span class="cstat-no" title="statement not covered" >        return {</span>
+          url: `https://youtube.com/watch?v=${video.videoId}`,
+          title: video.title,
+          platform: 'youtube' as const,
+          viewerCount: video.liveViewers,
+          thumbnail: video.channel?.avatarUrl,
+          startTime: video.actualStart ? new Date(video.actualStart).getTime() : 
+                    video.availableAt ? new Date(video.availableAt).getTime() : undefined,
+          sourceStatus: video.status === 'live' ? 'live' as const : 
+                       video.status === 'upcoming' ? 'upcoming' as const : 'ended' as const,
+          channelId: channelId,
+          organization: video.channel?.organization,
+          // Set priority based on channel order for favorites
+          priority: channelOrder !== undefined ? channelOrder : undefined
+        };
+      });
+&nbsp;
+      // Sort streams based on context
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // For favorites, sort by:
+        // 1. Channel order in favorites
+        // 2. Live status (live before upcoming)
+        // 3. Viewer count for same channel
+<span class="cstat-no" title="statement not covered" >        streamSources.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          // First by channel order (favorites order)
+          const aOrder = <span class="cstat-no" title="statement not covered" >a.priority ?? 999;</span>
+          const bOrder = <span class="cstat-no" title="statement not covered" >b.priority ?? 999;</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aOrder !== bOrder) <span class="cstat-no" title="statement not covered" >return aOrder - bOrder;</span></span>
+          
+          // Then by live status
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus !== 'live' &amp;&amp; b.sourceStatus === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+          
+          // Then by viewer count for streams from the same channel
+<span class="cstat-no" title="statement not covered" >          return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+        });
+      } else {
+        // For non-favorite streams, sort by:
+        // 1. Live status
+        // 2. Viewer count
+        // 3. Start time
+<span class="cstat-no" title="statement not covered" >        streamSources.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus !== 'live' &amp;&amp; b.sourceStatus === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+          
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus === 'live') {</span>
+<span class="cstat-no" title="statement not covered" >            return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+          }
+          
+          const aTime = <span class="cstat-no" title="statement not covered" >a.startTime || 0;</span>
+          const bTime = <span class="cstat-no" title="statement not covered" >b.startTime || 0;</span>
+<span class="cstat-no" title="statement not covered" >          return aTime - bTime;</span>
+        });
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return streamSources;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Failed to fetch Holodex live streams', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getFavoriteStreams(): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) <span class="cstat-no" title="statement not covered" >return [];</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const promises = <span class="cstat-no" title="statement not covered" >this.favoriteChannels.map(<span class="fstat-no" title="function not covered" >channelId </span>=&gt;</span>
+<span class="cstat-no" title="statement not covered" >        this.client!.getLiveVideos({ </span>
+          channel_id: channelId,
+          status: 'live' as VideoStatus,
+          max_upcoming_hours: 0
+        })
+      );
+&nbsp;
+      const videoArrays = <span class="cstat-no" title="statement not covered" >await Promise.all(promises);</span>
+      const videos = <span class="cstat-no" title="statement not covered" >videoArrays.flat();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return videos.map(<span class="fstat-no" title="function not covered" >video </span>=&gt; <span class="cstat-no" title="statement not covered" >({</span></span>
+        url: `https://youtube.com/watch?v=${video.videoId}`,
+        title: video.title,
+        platform: 'youtube' as const,
+        viewerCount: video.liveViewers,
+        channelId: video.channel?.channelId,
+        organization: video.channel?.organization
+      }));
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch favorite streams', 
+        'HolodexService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >isChannelFiltered(</span>video: Video): boolean {
+    const channelId = <span class="cstat-no" title="statement not covered" >video.channel?.channelId;</span>
+    const channelName = <span class="cstat-no" title="statement not covered" >video.channel?.name;</span>
+    const englishName = <span class="cstat-no" title="statement not covered" >video.channel?.englishName;</span>
+    
+    // If channel is in favorites, don't filter it
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (channelId &amp;&amp; this.favoriteChannels.includes(channelId)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Channel ${channelName} (${channelId}) is in favorites, not filtering`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+    
+    // If no channel names, don't filter
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!channelName &amp;&amp; !englishName) {</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+&nbsp;
+    // Normalize channel names: lowercase and remove all spaces and special characters
+    const normalizedNames = <span class="cstat-no" title="statement not covered" >[</span>
+      channelName?.toLowerCase().replace(/[\s\-_]+/g, ''),
+      englishName?.toLowerCase().replace(/[\s\-_]+/g, '')
+    ].filter(Boolean);
+    
+    // Check if any of the normalized names exactly match any filter
+<span class="cstat-no" title="statement not covered" >    for (const filter of this.filters) {</span>
+      const normalizedFilter = <span class="cstat-no" title="statement not covered" >filter.toLowerCase().replace(/[\s\-_]+/g, '');</span>
+      
+      // Check if any of the normalized names match the filter
+<span class="cstat-no" title="statement not covered" >      for (const normalizedName of normalizedNames) {</span>
+        // Only filter if the normalized name matches the filter exactly or contains the full filter name
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (normalizedName === normalizedFilter || normalizedName.includes(normalizedFilter)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Filtering out channel ${channelName}${englishName ? ` (${englishName})` : ''} - matched filter "${filter}"`,
+            'HolodexService'
+          );
+<span class="cstat-no" title="statement not covered" >          return true;</span>
+        }
+      }
+    }
+    
+    // If no filters matched, don't filter out the channel
+<span class="cstat-no" title="statement not covered" >    logger.debug(</span>
+      `Channel ${channelName}${englishName ? ` (${englishName})` : ''} does not match any filters, keeping`,
+      'HolodexService'
+    );
+<span class="cstat-no" title="statement not covered" >    return false;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/index.html b/coverage/lcov-report/src/server/services/index.html
new file mode 100644
index 0000000..c3a99c4
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/index.html
@@ -0,0 +1,236 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/services</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1088</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/733</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/184</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1038</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="holodex.ts"><a href="holodex.ts.html">holodex.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="115" class="abs low">0/115</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="168" class="abs low">0/168</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="105" class="abs low">0/105</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="keyboard_service.ts"><a href="keyboard_service.ts.html">keyboard_service.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="25" class="abs low">0/25</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="12" class="abs low">0/12</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="60" class="abs low">0/60</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="keyboard_worker.ts"><a href="keyboard_worker.ts.html">keyboard_worker.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="59" class="abs low">0/59</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="logger.ts"><a href="logger.ts.html">logger.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="72" class="abs low">0/72</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="player.ts"><a href="player.ts.html">player.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="585" class="abs low">0/585</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="332" class="abs low">0/332</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="89" class="abs low">0/89</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="568" class="abs low">0/568</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="player_manager.ts"><a href="player_manager.ts.html">player_manager.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="42" class="abs low">0/42</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="41" class="abs low">0/41</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="queue_service.ts"><a href="queue_service.ts.html">queue_service.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="76" class="abs low">0/76</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="36" class="abs low">0/36</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="20" class="abs low">0/20</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="74" class="abs low">0/74</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="twitch.ts"><a href="twitch.ts.html">twitch.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="81" class="abs low">0/81</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="51" class="abs low">0/51</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="74" class="abs low">0/74</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="youtube.ts"><a href="youtube.ts.html">youtube.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/keyboard_service.ts.html b/coverage/lcov-report/src/server/services/keyboard_service.ts.html
new file mode 100644
index 0000000..f82d5d1
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/keyboard_service.ts.html
@@ -0,0 +1,514 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/keyboard_service.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> keyboard_service.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/25</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/12</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/60</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { Worker } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+&nbsp;
+// Create a singleton event emitter for keyboard events
+export const <span class="cstat-no" title="statement not covered" >keyboardEvents = new EventEmitter();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class K</span>eyboardService {
+  private worker?: Worker;
+  private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+  private initializationTimeout?: NodeJS.Timeout;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    this.setupWorker();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Keyboard service initializing...', 'KeyboardService');</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupWorker(</span>) {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Create a new worker thread using the keyboard worker file
+      const workerPath = <span class="cstat-no" title="statement not covered" >path.join(path.dirname(fileURLToPath(import.meta.url)), 'keyboard_worker.js');</span>
+<span class="cstat-no" title="statement not covered" >      this.worker = new Worker(workerPath);</span>
+&nbsp;
+      // Set a timeout for initialization
+<span class="cstat-no" title="statement not covered" >      this.initializationTimeout = setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Keyboard service initialization timed out. Please check your system permissions.',
+            'KeyboardService'
+          );
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      }, 5000);
+&nbsp;
+      // Handle messages from the worker
+<span class="cstat-no" title="statement not covered" >      this.worker.on('message', <span class="fstat-no" title="function not covered" >async </span>(message: { type: string; screen?: number; error?: string }) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+<span class="cstat-no" title="statement not covered" >          switch (message.type) {</span>
+            case 'ready': {
+<span class="cstat-no" title="statement not covered" >              clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >              logger.info('Keyboard service initialized successfully', 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'error': {
+<span class="cstat-no" title="statement not covered" >              clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >              logger.error(</span>
+                'Keyboard initialization error. Please ensure you have the required permissions:',
+                'KeyboardService',
+                new Error(message.error || 'Unknown error')
+              );
+<span class="cstat-no" title="statement not covered" >              logger.info(</span>
+                'To fix permission issues, try the following:\n' +
+                '1. Install required packages:\n' +
+                '   sudo apt-get install libx11-dev libxtst-dev libpng-dev\n' +
+                '2. Set input device permissions:\n' +
+                '   sudo chmod +r /dev/input/event*\n' +
+                '3. Add your user to the input group:\n' +
+                '   sudo usermod -a -G input $USER\n' +
+                '4. Log out and log back in for group changes to take effect',
+                'KeyboardService'
+              );
+<span class="cstat-no" title="statement not covered" >              this.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'autostart': {
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (message.screen) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`Keyboard shortcut: Alt+${message.screen === 1 ? 'L' : 'K'} - Auto-starting screen ${message.screen}`, 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >                keyboardEvents.emit('autostart', message.screen);</span>
+              }
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'closeall': {
+<span class="cstat-no" title="statement not covered" >              logger.info('Keyboard shortcut: Alt+F1 - Closing all players', 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >              keyboardEvents.emit('closeall');</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+          }
+        } catch (error) {
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Failed to handle keyboard shortcut',
+            'KeyboardService',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        }
+      });
+&nbsp;
+      // Handle worker errors
+<span class="cstat-no" title="statement not covered" >      this.worker.on('error', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Keyboard worker error',
+            'KeyboardService',
+            error instanceof Error ? error : new Error(String(error))
+          );
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      });
+&nbsp;
+      // Handle worker exit
+<span class="cstat-no" title="statement not covered" >      this.worker.on('exit', <span class="fstat-no" title="function not covered" >(c</span>ode) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (code !== 0 &amp;&amp; !this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(`Keyboard worker stopped with exit code ${code}`, 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      });
+&nbsp;
+      // Set up signal handlers
+<span class="cstat-no" title="statement not covered" >      this.setupSignalHandlers();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to initialize keyboard service',
+        'KeyboardService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      this.cleanup();</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupSignalHandlers(</span>) {
+    // Ensure cleanup happens on process termination
+<span class="cstat-no" title="statement not covered" >    process.on('SIGINT', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+<span class="cstat-no" title="statement not covered" >    process.on('SIGTERM', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+<span class="cstat-no" title="statement not covered" >    process.on('exit', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  cleanup(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >    clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.worker) {</span>
+      // Send cleanup message to worker
+<span class="cstat-no" title="statement not covered" >      this.worker.postMessage('cleanup');</span>
+      // Give the worker a chance to clean up
+<span class="cstat-no" title="statement not covered" >      setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        this.worker?.terminate();</span>
+<span class="cstat-no" title="statement not covered" >        this.worker = undefined;</span>
+      }, 1000);
+    }
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/keyboard_worker.ts.html b/coverage/lcov-report/src/server/services/keyboard_worker.ts.html
new file mode 100644
index 0000000..ca7f55f
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/keyboard_worker.ts.html
@@ -0,0 +1,385 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/keyboard_worker.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> keyboard_worker.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/59</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { parentPort } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { GlobalKeyboardListener } from 'node-global-key-listener';</span>
+<span class="cstat-no" title="statement not covered" >import { execSync } from 'child_process';</span>
+&nbsp;
+function <span class="fstat-no" title="function not covered" >checkInputPermissions(</span>) {
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Check if user has access to input devices
+    const result = <span class="cstat-no" title="statement not covered" >execSync('ls -l /dev/input/event* 2&gt;/dev/null || true', { encoding: 'utf8' });</span>
+    const hasAccess = <span class="cstat-no" title="statement not covered" >result.split('\n').some(<span class="fstat-no" title="function not covered" >line </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >      line.includes(`input`) || line.includes(process.env.USER || '')</span>
+    );
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!hasAccess) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('No access to input devices. Please run: sudo usermod -a -G input $USER');</span>
+    }
+&nbsp;
+    // Check if uinput module is loaded
+    const modules = <span class="cstat-no" title="statement not covered" >execSync('lsmod | grep uinput || true', { encoding: 'utf8' });</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!modules.includes('uinput')) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('uinput module not loaded. Please run: sudo modprobe uinput');</span>
+    }
+&nbsp;
+    // Check if streamlink is installed
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      execSync('which streamlink', { encoding: 'utf8' });</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new Error('streamlink is not installed. Please install it with: sudo pacman -S streamlink');</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return true;</span>
+  } catch (error) {
+    const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >    throw new Error(`Permission check failed: ${errorMessage}`);</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >try {</span>
+  // Check permissions first
+<span class="cstat-no" title="statement not covered" >  checkInputPermissions();</span>
+&nbsp;
+  // Initialize keyboard listener with minimal configuration
+  const keyboard = <span class="cstat-no" title="statement not covered" >new GlobalKeyboardListener({</span>
+    x11: {
+      onError: <span class="fstat-no" title="function not covered" >(e</span>rrorCode) =&gt; {
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (errorCode !== null) {</span>
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'error', 
+            error: `X11 keyboard error: ${errorCode}. Please ensure you have the correct permissions:
+1. Add user to input group: sudo usermod -a -G input $USER
+2. Load uinput module: sudo modprobe uinput
+3. Set permissions: sudo chmod 660 /dev/input/event*
+4. Log out and log back in for group changes to take effect` 
+          });
+        }
+      },
+      onInfo: <span class="fstat-no" title="function not covered" >(d</span>ata) =&gt; {
+<span class="cstat-no" title="statement not covered" >        parentPort?.postMessage({ </span>
+          type: 'info', 
+          data 
+        });
+      }
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  keyboard.addListener(<span class="fstat-no" title="function not covered" >(e</span>, down) =&gt; {</span>
+    // Alt + L: Auto-start screen 1
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'L' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'autostart', screen: 1 });</span>
+    }
+    
+    // Alt + K: Auto-start screen 2
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'K' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'autostart', screen: 2 });</span>
+    }
+    
+    // Alt + F1: Close all players
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'F1' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'closeall' });</span>
+    }
+&nbsp;
+    // Return true to prevent the event from being propagated
+<span class="cstat-no" title="statement not covered" >    return true;</span>
+  });
+&nbsp;
+  // Handle cleanup message from main thread
+<span class="cstat-no" title="statement not covered" >  parentPort?.on('message', <span class="fstat-no" title="function not covered" >(m</span>essage) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (message === 'cleanup') {</span>
+<span class="cstat-no" title="statement not covered" >      keyboard.kill();</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(0);</span>
+    }
+  });
+&nbsp;
+  // Notify main thread that initialization was successful
+<span class="cstat-no" title="statement not covered" >  parentPort?.postMessage({ type: 'ready' });</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  parentPort?.postMessage({ </span>
+    type: 'error', 
+    error: error instanceof Error ? error.message : String(error)
+  });
+<span class="cstat-no" title="statement not covered" >  process.exit(1);</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/logger.ts.html b/coverage/lcov-report/src/server/services/logger.ts.html
new file mode 100644
index 0000000..abfea87
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/logger.ts.html
@@ -0,0 +1,655 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> logger.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/72</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import chalk from 'chalk';</span>
+<span class="cstat-no" title="statement not covered" >import { createLogger, format, transports } from 'winston';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+&nbsp;
+const { combine, timestamp, printf } = <span class="cstat-no" title="statement not covered" >format;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >export enum L</span>ogLevel {</span>
+<span class="cstat-no" title="statement not covered" >  ERROR = 'error',</span>
+<span class="cstat-no" title="statement not covered" >  WARN = 'warn',</span>
+<span class="cstat-no" title="statement not covered" >  INFO = 'info',</span>
+<span class="cstat-no" title="statement not covered" >  DEBUG = 'debug'</span>
+}
+&nbsp;
+interface LogMessage {
+  level: LogLevel;
+  message: string;
+  timestamp?: string;
+  context?: string;
+  error?: Error | unknown;
+}
+&nbsp;
+// Parse command line arguments
+const args = <span class="cstat-no" title="statement not covered" >process.argv.slice(2);</span>
+const isDebug = <span class="cstat-no" title="statement not covered" >args.includes('-d') || args.includes('--debug');</span>
+const isVerbose = <span class="cstat-no" title="statement not covered" >args.includes('-v') || args.includes('--verbose');</span>
+const envDebug = <span class="cstat-no" title="statement not covered" >process.env.DEBUG === '1' || process.env.VERBOSE === '1';</span>
+&nbsp;
+// Create a custom format for consistent logging
+const customFormat = <span class="cstat-no" title="statement not covered" >printf(<span class="fstat-no" title="function not covered" >({</span> level, message, timestamp, context, error, trace }) =&gt; {</span>
+  const colorize = <span class="cstat-no" title="statement not covered" >{</span>
+    [LogLevel.ERROR]: chalk.red,
+    [LogLevel.WARN]: chalk.yellow,
+    [LogLevel.INFO]: chalk.blue,
+    [LogLevel.DEBUG]: chalk.gray
+  };
+&nbsp;
+  const colorFn = <span class="cstat-no" title="statement not covered" >colorize[level as LogLevel] || chalk.white;</span>
+  const contextStr = <span class="cstat-no" title="statement not covered" >context ? `[${context}] ` : '';</span>
+  const timestampStr = <span class="cstat-no" title="statement not covered" >isVerbose </span>
+    ? String(timestamp) 
+    : (String(timestamp).split('T')[1] || '').split('.')[0];
+  const baseMessage = <span class="cstat-no" title="statement not covered" >`${timestampStr} [${level.toUpperCase()}] ${contextStr}${message}`;</span>
+  
+  let fullMessage = <span class="cstat-no" title="statement not covered" >colorFn(baseMessage);</span>
+  
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >    fullMessage += '\n' + chalk.red(error.stack);</span>
+  }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (isVerbose &amp;&amp; trace) {</span>
+<span class="cstat-no" title="statement not covered" >    fullMessage += '\n' + chalk.gray(trace);</span>
+  }
+  
+<span class="cstat-no" title="statement not covered" >  return fullMessage;</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class L</span>ogger {
+  private logger;
+  private currentLevel: LogLevel;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+    // Set initial log level based on arguments and environment
+<span class="cstat-no" title="statement not covered" >    this.currentLevel = (isDebug || isVerbose || envDebug) ? LogLevel.DEBUG : LogLevel.INFO;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    this.logger = createLogger({</span>
+      level: this.currentLevel,
+      format: combine(
+        timestamp(),
+        format.errors({ stack: true }),
+        customFormat
+      ),
+      transports: [
+        new transports.Console({
+          level: this.currentLevel
+        }),
+        new transports.File({ 
+          filename: path.join('logs', 'error.log'), 
+          level: 'error',
+          format: format.uncolorize() // Remove colors for file output
+        }),
+        new transports.File({ 
+          filename: path.join('logs', 'combined.log'),
+          format: format.uncolorize() // Remove colors for file output
+        })
+      ]
+    });
+&nbsp;
+    // Log initial debug state
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.currentLevel === LogLevel.DEBUG) {</span>
+      const reason = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isDebug) <span class="cstat-no" title="statement not covered" >reason.push('--debug flag');</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isVerbose) <span class="cstat-no" title="statement not covered" >reason.push('--verbose flag');</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (envDebug) <span class="cstat-no" title="statement not covered" >reason.push('DEBUG/VERBOSE environment variable');</span></span>
+<span class="cstat-no" title="statement not covered" >      this.debug('Debug logging enabled via: %s', reason.join(', '));</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  setLevel(</span>level: LogLevel | string) {
+<span class="cstat-no" title="statement not covered" >    this.currentLevel = level.toLowerCase() as LogLevel;</span>
+<span class="cstat-no" title="statement not covered" >    this.logger.level = this.currentLevel;</span>
+<span class="cstat-no" title="statement not covered" >    this.debug('Log level set to %s', this.currentLevel);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  shouldLog(</span>level: LogLevel): boolean {
+    const levels = <span class="cstat-no" title="statement not covered" >{</span>
+      [LogLevel.ERROR]: 0,
+      [LogLevel.WARN]: 1,
+      [LogLevel.INFO]: 2,
+      [LogLevel.DEBUG]: 3
+    };
+<span class="cstat-no" title="statement not covered" >    return levels[level] &lt;= levels[this.currentLevel];</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >formatMessage(</span>message: string, ...args: (string | number)[]): string {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (args.length === 0) <span class="cstat-no" title="statement not covered" >return message;</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      return message.replace(/%[sdj%]/g, <span class="fstat-no" title="function not covered" >(m</span>atch: string): string =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (match === '%%') <span class="cstat-no" title="statement not covered" >return '%';</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (args.length === 0) <span class="cstat-no" title="statement not covered" >return match;</span></span>
+        const arg = <span class="cstat-no" title="statement not covered" >args.shift();</span>
+<span class="cstat-no" title="statement not covered" >        switch (match) {</span>
+          case '%s': <span class="cstat-no" title="statement not covered" >return String(arg);</span>
+          case '%d': <span class="cstat-no" title="statement not covered" >return String(Number(arg));</span>
+          case '%j': <span class="cstat-no" title="statement not covered" >return JSON.stringify(arg);</span>
+          default: <span class="cstat-no" title="statement not covered" >return match;</span>
+        }
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      return message;</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >getStackTrace(</span>): string | undefined {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!isVerbose) <span class="cstat-no" title="statement not covered" >return undefined;</span></span>
+    const stack = <span class="cstat-no" title="statement not covered" >new Error().stack;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stack) <span class="cstat-no" title="statement not covered" >return undefined;</span></span>
+    
+    // Get the calling function's location
+    const lines = <span class="cstat-no" title="statement not covered" >stack.split('\n').slice(3);</span> // Skip Error, getStackTrace, and log calls
+<span class="cstat-no" title="statement not covered" >    return lines.join('\n');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  log(</span>logData: LogMessage) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.shouldLog(logData.level)) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    this.logger.log({</span>
+      level: logData.level,
+      message: logData.message,
+      context: logData.context,
+      error: logData.error,
+      timestamp: new Date().toISOString(),
+      trace: this.getStackTrace()
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  error(</span>message: string, context?: string, error?: Error) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.ERROR, 
+      message: this.formatMessage(message), 
+      context, 
+      error 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  warn(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.WARN, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  info(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.INFO, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  debug(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.DEBUG, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >logger = new Logger(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/logger/index.html b/coverage/lcov-report/src/server/services/logger/index.html
new file mode 100644
index 0000000..65be757
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/logger/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../../prettify.css" />
+    <link rel="stylesheet" href="../../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../../index.html">All files</a> src/server/services/logger</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../../sorter.js"></script>
+        <script src="../../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/logger/index.ts.html b/coverage/lcov-report/src/server/services/logger/index.ts.html
new file mode 100644
index 0000000..c3d8507
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/logger/index.ts.html
@@ -0,0 +1,310 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../../prettify.css" />
+    <link rel="stylesheet" href="../../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../../index.html">All files</a> / <a href="index.html">src/server/services/logger</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { createLogger, format, transports } from 'winston';</span>
+<span class="cstat-no" title="statement not covered" >import { join } from 'path';</span>
+&nbsp;
+const logDir = <span class="cstat-no" title="statement not covered" >join(process.cwd(), 'logs');</span>
+&nbsp;
+const winstonLogger = <span class="cstat-no" title="statement not covered" >createLogger({</span>
+  level: 'debug',
+  format: format.combine(
+    format.timestamp(),
+    format.errors({ stack: true }),
+    format.splat(),
+    format.json()
+  ),
+  defaultMeta: { service: 'livelink' },
+  transports: [
+    new transports.File({ filename: join(logDir, 'error.log'), level: 'error' }),
+    new transports.File({ filename: join(logDir, 'combined.log') })
+  ]
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (process.env.NODE_ENV !== 'production') {</span>
+<span class="cstat-no" title="statement not covered" >  winstonLogger.add(new transports.Console({</span>
+    format: format.combine(
+      format.colorize(),
+      format.simple()
+    )
+  }));
+}
+&nbsp;
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+export type LogError = Error | string | number;
+&nbsp;
+interface LogContext {
+  context: string;
+  error?: {
+    message?: string;
+    stack?: string;
+    details?: unknown;
+  };
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >formatError(</span>error: LogError): LogContext['error'] {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      message: error.message,
+      stack: error.stack,
+      details: error
+    };
+  }
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    message: String(error)
+  };
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >log(</span>level: LogLevel, message: string, context: string, error?: LogError) {
+  const meta: LogContext = <span class="cstat-no" title="statement not covered" >{ context };</span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error !== undefined) {</span>
+<span class="cstat-no" title="statement not covered" >    meta.error = formatError(error);</span>
+  }
+<span class="cstat-no" title="statement not covered" >  winstonLogger.log(level, message, meta);</span>
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >logger = {</span>
+  debug: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('debug', message, context, error);</span>
+  },
+  info: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('info', message, context, error);</span>
+  },
+  warn: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('warn', message, context, error);</span>
+  },
+  error: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('error', message, context, error);</span>
+  }
+}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../../sorter.js"></script>
+        <script src="../../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/player.ts.html b/coverage/lcov-report/src/server/services/player.ts.html
new file mode 100644
index 0000000..fc895e3
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/player.ts.html
@@ -0,0 +1,4555 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/player.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> player.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/585</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/332</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/89</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/568</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a>
+<a name='L1125'></a><a href='#L1125'>1125</a>
+<a name='L1126'></a><a href='#L1126'>1126</a>
+<a name='L1127'></a><a href='#L1127'>1127</a>
+<a name='L1128'></a><a href='#L1128'>1128</a>
+<a name='L1129'></a><a href='#L1129'>1129</a>
+<a name='L1130'></a><a href='#L1130'>1130</a>
+<a name='L1131'></a><a href='#L1131'>1131</a>
+<a name='L1132'></a><a href='#L1132'>1132</a>
+<a name='L1133'></a><a href='#L1133'>1133</a>
+<a name='L1134'></a><a href='#L1134'>1134</a>
+<a name='L1135'></a><a href='#L1135'>1135</a>
+<a name='L1136'></a><a href='#L1136'>1136</a>
+<a name='L1137'></a><a href='#L1137'>1137</a>
+<a name='L1138'></a><a href='#L1138'>1138</a>
+<a name='L1139'></a><a href='#L1139'>1139</a>
+<a name='L1140'></a><a href='#L1140'>1140</a>
+<a name='L1141'></a><a href='#L1141'>1141</a>
+<a name='L1142'></a><a href='#L1142'>1142</a>
+<a name='L1143'></a><a href='#L1143'>1143</a>
+<a name='L1144'></a><a href='#L1144'>1144</a>
+<a name='L1145'></a><a href='#L1145'>1145</a>
+<a name='L1146'></a><a href='#L1146'>1146</a>
+<a name='L1147'></a><a href='#L1147'>1147</a>
+<a name='L1148'></a><a href='#L1148'>1148</a>
+<a name='L1149'></a><a href='#L1149'>1149</a>
+<a name='L1150'></a><a href='#L1150'>1150</a>
+<a name='L1151'></a><a href='#L1151'>1151</a>
+<a name='L1152'></a><a href='#L1152'>1152</a>
+<a name='L1153'></a><a href='#L1153'>1153</a>
+<a name='L1154'></a><a href='#L1154'>1154</a>
+<a name='L1155'></a><a href='#L1155'>1155</a>
+<a name='L1156'></a><a href='#L1156'>1156</a>
+<a name='L1157'></a><a href='#L1157'>1157</a>
+<a name='L1158'></a><a href='#L1158'>1158</a>
+<a name='L1159'></a><a href='#L1159'>1159</a>
+<a name='L1160'></a><a href='#L1160'>1160</a>
+<a name='L1161'></a><a href='#L1161'>1161</a>
+<a name='L1162'></a><a href='#L1162'>1162</a>
+<a name='L1163'></a><a href='#L1163'>1163</a>
+<a name='L1164'></a><a href='#L1164'>1164</a>
+<a name='L1165'></a><a href='#L1165'>1165</a>
+<a name='L1166'></a><a href='#L1166'>1166</a>
+<a name='L1167'></a><a href='#L1167'>1167</a>
+<a name='L1168'></a><a href='#L1168'>1168</a>
+<a name='L1169'></a><a href='#L1169'>1169</a>
+<a name='L1170'></a><a href='#L1170'>1170</a>
+<a name='L1171'></a><a href='#L1171'>1171</a>
+<a name='L1172'></a><a href='#L1172'>1172</a>
+<a name='L1173'></a><a href='#L1173'>1173</a>
+<a name='L1174'></a><a href='#L1174'>1174</a>
+<a name='L1175'></a><a href='#L1175'>1175</a>
+<a name='L1176'></a><a href='#L1176'>1176</a>
+<a name='L1177'></a><a href='#L1177'>1177</a>
+<a name='L1178'></a><a href='#L1178'>1178</a>
+<a name='L1179'></a><a href='#L1179'>1179</a>
+<a name='L1180'></a><a href='#L1180'>1180</a>
+<a name='L1181'></a><a href='#L1181'>1181</a>
+<a name='L1182'></a><a href='#L1182'>1182</a>
+<a name='L1183'></a><a href='#L1183'>1183</a>
+<a name='L1184'></a><a href='#L1184'>1184</a>
+<a name='L1185'></a><a href='#L1185'>1185</a>
+<a name='L1186'></a><a href='#L1186'>1186</a>
+<a name='L1187'></a><a href='#L1187'>1187</a>
+<a name='L1188'></a><a href='#L1188'>1188</a>
+<a name='L1189'></a><a href='#L1189'>1189</a>
+<a name='L1190'></a><a href='#L1190'>1190</a>
+<a name='L1191'></a><a href='#L1191'>1191</a>
+<a name='L1192'></a><a href='#L1192'>1192</a>
+<a name='L1193'></a><a href='#L1193'>1193</a>
+<a name='L1194'></a><a href='#L1194'>1194</a>
+<a name='L1195'></a><a href='#L1195'>1195</a>
+<a name='L1196'></a><a href='#L1196'>1196</a>
+<a name='L1197'></a><a href='#L1197'>1197</a>
+<a name='L1198'></a><a href='#L1198'>1198</a>
+<a name='L1199'></a><a href='#L1199'>1199</a>
+<a name='L1200'></a><a href='#L1200'>1200</a>
+<a name='L1201'></a><a href='#L1201'>1201</a>
+<a name='L1202'></a><a href='#L1202'>1202</a>
+<a name='L1203'></a><a href='#L1203'>1203</a>
+<a name='L1204'></a><a href='#L1204'>1204</a>
+<a name='L1205'></a><a href='#L1205'>1205</a>
+<a name='L1206'></a><a href='#L1206'>1206</a>
+<a name='L1207'></a><a href='#L1207'>1207</a>
+<a name='L1208'></a><a href='#L1208'>1208</a>
+<a name='L1209'></a><a href='#L1209'>1209</a>
+<a name='L1210'></a><a href='#L1210'>1210</a>
+<a name='L1211'></a><a href='#L1211'>1211</a>
+<a name='L1212'></a><a href='#L1212'>1212</a>
+<a name='L1213'></a><a href='#L1213'>1213</a>
+<a name='L1214'></a><a href='#L1214'>1214</a>
+<a name='L1215'></a><a href='#L1215'>1215</a>
+<a name='L1216'></a><a href='#L1216'>1216</a>
+<a name='L1217'></a><a href='#L1217'>1217</a>
+<a name='L1218'></a><a href='#L1218'>1218</a>
+<a name='L1219'></a><a href='#L1219'>1219</a>
+<a name='L1220'></a><a href='#L1220'>1220</a>
+<a name='L1221'></a><a href='#L1221'>1221</a>
+<a name='L1222'></a><a href='#L1222'>1222</a>
+<a name='L1223'></a><a href='#L1223'>1223</a>
+<a name='L1224'></a><a href='#L1224'>1224</a>
+<a name='L1225'></a><a href='#L1225'>1225</a>
+<a name='L1226'></a><a href='#L1226'>1226</a>
+<a name='L1227'></a><a href='#L1227'>1227</a>
+<a name='L1228'></a><a href='#L1228'>1228</a>
+<a name='L1229'></a><a href='#L1229'>1229</a>
+<a name='L1230'></a><a href='#L1230'>1230</a>
+<a name='L1231'></a><a href='#L1231'>1231</a>
+<a name='L1232'></a><a href='#L1232'>1232</a>
+<a name='L1233'></a><a href='#L1233'>1233</a>
+<a name='L1234'></a><a href='#L1234'>1234</a>
+<a name='L1235'></a><a href='#L1235'>1235</a>
+<a name='L1236'></a><a href='#L1236'>1236</a>
+<a name='L1237'></a><a href='#L1237'>1237</a>
+<a name='L1238'></a><a href='#L1238'>1238</a>
+<a name='L1239'></a><a href='#L1239'>1239</a>
+<a name='L1240'></a><a href='#L1240'>1240</a>
+<a name='L1241'></a><a href='#L1241'>1241</a>
+<a name='L1242'></a><a href='#L1242'>1242</a>
+<a name='L1243'></a><a href='#L1243'>1243</a>
+<a name='L1244'></a><a href='#L1244'>1244</a>
+<a name='L1245'></a><a href='#L1245'>1245</a>
+<a name='L1246'></a><a href='#L1246'>1246</a>
+<a name='L1247'></a><a href='#L1247'>1247</a>
+<a name='L1248'></a><a href='#L1248'>1248</a>
+<a name='L1249'></a><a href='#L1249'>1249</a>
+<a name='L1250'></a><a href='#L1250'>1250</a>
+<a name='L1251'></a><a href='#L1251'>1251</a>
+<a name='L1252'></a><a href='#L1252'>1252</a>
+<a name='L1253'></a><a href='#L1253'>1253</a>
+<a name='L1254'></a><a href='#L1254'>1254</a>
+<a name='L1255'></a><a href='#L1255'>1255</a>
+<a name='L1256'></a><a href='#L1256'>1256</a>
+<a name='L1257'></a><a href='#L1257'>1257</a>
+<a name='L1258'></a><a href='#L1258'>1258</a>
+<a name='L1259'></a><a href='#L1259'>1259</a>
+<a name='L1260'></a><a href='#L1260'>1260</a>
+<a name='L1261'></a><a href='#L1261'>1261</a>
+<a name='L1262'></a><a href='#L1262'>1262</a>
+<a name='L1263'></a><a href='#L1263'>1263</a>
+<a name='L1264'></a><a href='#L1264'>1264</a>
+<a name='L1265'></a><a href='#L1265'>1265</a>
+<a name='L1266'></a><a href='#L1266'>1266</a>
+<a name='L1267'></a><a href='#L1267'>1267</a>
+<a name='L1268'></a><a href='#L1268'>1268</a>
+<a name='L1269'></a><a href='#L1269'>1269</a>
+<a name='L1270'></a><a href='#L1270'>1270</a>
+<a name='L1271'></a><a href='#L1271'>1271</a>
+<a name='L1272'></a><a href='#L1272'>1272</a>
+<a name='L1273'></a><a href='#L1273'>1273</a>
+<a name='L1274'></a><a href='#L1274'>1274</a>
+<a name='L1275'></a><a href='#L1275'>1275</a>
+<a name='L1276'></a><a href='#L1276'>1276</a>
+<a name='L1277'></a><a href='#L1277'>1277</a>
+<a name='L1278'></a><a href='#L1278'>1278</a>
+<a name='L1279'></a><a href='#L1279'>1279</a>
+<a name='L1280'></a><a href='#L1280'>1280</a>
+<a name='L1281'></a><a href='#L1281'>1281</a>
+<a name='L1282'></a><a href='#L1282'>1282</a>
+<a name='L1283'></a><a href='#L1283'>1283</a>
+<a name='L1284'></a><a href='#L1284'>1284</a>
+<a name='L1285'></a><a href='#L1285'>1285</a>
+<a name='L1286'></a><a href='#L1286'>1286</a>
+<a name='L1287'></a><a href='#L1287'>1287</a>
+<a name='L1288'></a><a href='#L1288'>1288</a>
+<a name='L1289'></a><a href='#L1289'>1289</a>
+<a name='L1290'></a><a href='#L1290'>1290</a>
+<a name='L1291'></a><a href='#L1291'>1291</a>
+<a name='L1292'></a><a href='#L1292'>1292</a>
+<a name='L1293'></a><a href='#L1293'>1293</a>
+<a name='L1294'></a><a href='#L1294'>1294</a>
+<a name='L1295'></a><a href='#L1295'>1295</a>
+<a name='L1296'></a><a href='#L1296'>1296</a>
+<a name='L1297'></a><a href='#L1297'>1297</a>
+<a name='L1298'></a><a href='#L1298'>1298</a>
+<a name='L1299'></a><a href='#L1299'>1299</a>
+<a name='L1300'></a><a href='#L1300'>1300</a>
+<a name='L1301'></a><a href='#L1301'>1301</a>
+<a name='L1302'></a><a href='#L1302'>1302</a>
+<a name='L1303'></a><a href='#L1303'>1303</a>
+<a name='L1304'></a><a href='#L1304'>1304</a>
+<a name='L1305'></a><a href='#L1305'>1305</a>
+<a name='L1306'></a><a href='#L1306'>1306</a>
+<a name='L1307'></a><a href='#L1307'>1307</a>
+<a name='L1308'></a><a href='#L1308'>1308</a>
+<a name='L1309'></a><a href='#L1309'>1309</a>
+<a name='L1310'></a><a href='#L1310'>1310</a>
+<a name='L1311'></a><a href='#L1311'>1311</a>
+<a name='L1312'></a><a href='#L1312'>1312</a>
+<a name='L1313'></a><a href='#L1313'>1313</a>
+<a name='L1314'></a><a href='#L1314'>1314</a>
+<a name='L1315'></a><a href='#L1315'>1315</a>
+<a name='L1316'></a><a href='#L1316'>1316</a>
+<a name='L1317'></a><a href='#L1317'>1317</a>
+<a name='L1318'></a><a href='#L1318'>1318</a>
+<a name='L1319'></a><a href='#L1319'>1319</a>
+<a name='L1320'></a><a href='#L1320'>1320</a>
+<a name='L1321'></a><a href='#L1321'>1321</a>
+<a name='L1322'></a><a href='#L1322'>1322</a>
+<a name='L1323'></a><a href='#L1323'>1323</a>
+<a name='L1324'></a><a href='#L1324'>1324</a>
+<a name='L1325'></a><a href='#L1325'>1325</a>
+<a name='L1326'></a><a href='#L1326'>1326</a>
+<a name='L1327'></a><a href='#L1327'>1327</a>
+<a name='L1328'></a><a href='#L1328'>1328</a>
+<a name='L1329'></a><a href='#L1329'>1329</a>
+<a name='L1330'></a><a href='#L1330'>1330</a>
+<a name='L1331'></a><a href='#L1331'>1331</a>
+<a name='L1332'></a><a href='#L1332'>1332</a>
+<a name='L1333'></a><a href='#L1333'>1333</a>
+<a name='L1334'></a><a href='#L1334'>1334</a>
+<a name='L1335'></a><a href='#L1335'>1335</a>
+<a name='L1336'></a><a href='#L1336'>1336</a>
+<a name='L1337'></a><a href='#L1337'>1337</a>
+<a name='L1338'></a><a href='#L1338'>1338</a>
+<a name='L1339'></a><a href='#L1339'>1339</a>
+<a name='L1340'></a><a href='#L1340'>1340</a>
+<a name='L1341'></a><a href='#L1341'>1341</a>
+<a name='L1342'></a><a href='#L1342'>1342</a>
+<a name='L1343'></a><a href='#L1343'>1343</a>
+<a name='L1344'></a><a href='#L1344'>1344</a>
+<a name='L1345'></a><a href='#L1345'>1345</a>
+<a name='L1346'></a><a href='#L1346'>1346</a>
+<a name='L1347'></a><a href='#L1347'>1347</a>
+<a name='L1348'></a><a href='#L1348'>1348</a>
+<a name='L1349'></a><a href='#L1349'>1349</a>
+<a name='L1350'></a><a href='#L1350'>1350</a>
+<a name='L1351'></a><a href='#L1351'>1351</a>
+<a name='L1352'></a><a href='#L1352'>1352</a>
+<a name='L1353'></a><a href='#L1353'>1353</a>
+<a name='L1354'></a><a href='#L1354'>1354</a>
+<a name='L1355'></a><a href='#L1355'>1355</a>
+<a name='L1356'></a><a href='#L1356'>1356</a>
+<a name='L1357'></a><a href='#L1357'>1357</a>
+<a name='L1358'></a><a href='#L1358'>1358</a>
+<a name='L1359'></a><a href='#L1359'>1359</a>
+<a name='L1360'></a><a href='#L1360'>1360</a>
+<a name='L1361'></a><a href='#L1361'>1361</a>
+<a name='L1362'></a><a href='#L1362'>1362</a>
+<a name='L1363'></a><a href='#L1363'>1363</a>
+<a name='L1364'></a><a href='#L1364'>1364</a>
+<a name='L1365'></a><a href='#L1365'>1365</a>
+<a name='L1366'></a><a href='#L1366'>1366</a>
+<a name='L1367'></a><a href='#L1367'>1367</a>
+<a name='L1368'></a><a href='#L1368'>1368</a>
+<a name='L1369'></a><a href='#L1369'>1369</a>
+<a name='L1370'></a><a href='#L1370'>1370</a>
+<a name='L1371'></a><a href='#L1371'>1371</a>
+<a name='L1372'></a><a href='#L1372'>1372</a>
+<a name='L1373'></a><a href='#L1373'>1373</a>
+<a name='L1374'></a><a href='#L1374'>1374</a>
+<a name='L1375'></a><a href='#L1375'>1375</a>
+<a name='L1376'></a><a href='#L1376'>1376</a>
+<a name='L1377'></a><a href='#L1377'>1377</a>
+<a name='L1378'></a><a href='#L1378'>1378</a>
+<a name='L1379'></a><a href='#L1379'>1379</a>
+<a name='L1380'></a><a href='#L1380'>1380</a>
+<a name='L1381'></a><a href='#L1381'>1381</a>
+<a name='L1382'></a><a href='#L1382'>1382</a>
+<a name='L1383'></a><a href='#L1383'>1383</a>
+<a name='L1384'></a><a href='#L1384'>1384</a>
+<a name='L1385'></a><a href='#L1385'>1385</a>
+<a name='L1386'></a><a href='#L1386'>1386</a>
+<a name='L1387'></a><a href='#L1387'>1387</a>
+<a name='L1388'></a><a href='#L1388'>1388</a>
+<a name='L1389'></a><a href='#L1389'>1389</a>
+<a name='L1390'></a><a href='#L1390'>1390</a>
+<a name='L1391'></a><a href='#L1391'>1391</a>
+<a name='L1392'></a><a href='#L1392'>1392</a>
+<a name='L1393'></a><a href='#L1393'>1393</a>
+<a name='L1394'></a><a href='#L1394'>1394</a>
+<a name='L1395'></a><a href='#L1395'>1395</a>
+<a name='L1396'></a><a href='#L1396'>1396</a>
+<a name='L1397'></a><a href='#L1397'>1397</a>
+<a name='L1398'></a><a href='#L1398'>1398</a>
+<a name='L1399'></a><a href='#L1399'>1399</a>
+<a name='L1400'></a><a href='#L1400'>1400</a>
+<a name='L1401'></a><a href='#L1401'>1401</a>
+<a name='L1402'></a><a href='#L1402'>1402</a>
+<a name='L1403'></a><a href='#L1403'>1403</a>
+<a name='L1404'></a><a href='#L1404'>1404</a>
+<a name='L1405'></a><a href='#L1405'>1405</a>
+<a name='L1406'></a><a href='#L1406'>1406</a>
+<a name='L1407'></a><a href='#L1407'>1407</a>
+<a name='L1408'></a><a href='#L1408'>1408</a>
+<a name='L1409'></a><a href='#L1409'>1409</a>
+<a name='L1410'></a><a href='#L1410'>1410</a>
+<a name='L1411'></a><a href='#L1411'>1411</a>
+<a name='L1412'></a><a href='#L1412'>1412</a>
+<a name='L1413'></a><a href='#L1413'>1413</a>
+<a name='L1414'></a><a href='#L1414'>1414</a>
+<a name='L1415'></a><a href='#L1415'>1415</a>
+<a name='L1416'></a><a href='#L1416'>1416</a>
+<a name='L1417'></a><a href='#L1417'>1417</a>
+<a name='L1418'></a><a href='#L1418'>1418</a>
+<a name='L1419'></a><a href='#L1419'>1419</a>
+<a name='L1420'></a><a href='#L1420'>1420</a>
+<a name='L1421'></a><a href='#L1421'>1421</a>
+<a name='L1422'></a><a href='#L1422'>1422</a>
+<a name='L1423'></a><a href='#L1423'>1423</a>
+<a name='L1424'></a><a href='#L1424'>1424</a>
+<a name='L1425'></a><a href='#L1425'>1425</a>
+<a name='L1426'></a><a href='#L1426'>1426</a>
+<a name='L1427'></a><a href='#L1427'>1427</a>
+<a name='L1428'></a><a href='#L1428'>1428</a>
+<a name='L1429'></a><a href='#L1429'>1429</a>
+<a name='L1430'></a><a href='#L1430'>1430</a>
+<a name='L1431'></a><a href='#L1431'>1431</a>
+<a name='L1432'></a><a href='#L1432'>1432</a>
+<a name='L1433'></a><a href='#L1433'>1433</a>
+<a name='L1434'></a><a href='#L1434'>1434</a>
+<a name='L1435'></a><a href='#L1435'>1435</a>
+<a name='L1436'></a><a href='#L1436'>1436</a>
+<a name='L1437'></a><a href='#L1437'>1437</a>
+<a name='L1438'></a><a href='#L1438'>1438</a>
+<a name='L1439'></a><a href='#L1439'>1439</a>
+<a name='L1440'></a><a href='#L1440'>1440</a>
+<a name='L1441'></a><a href='#L1441'>1441</a>
+<a name='L1442'></a><a href='#L1442'>1442</a>
+<a name='L1443'></a><a href='#L1443'>1443</a>
+<a name='L1444'></a><a href='#L1444'>1444</a>
+<a name='L1445'></a><a href='#L1445'>1445</a>
+<a name='L1446'></a><a href='#L1446'>1446</a>
+<a name='L1447'></a><a href='#L1447'>1447</a>
+<a name='L1448'></a><a href='#L1448'>1448</a>
+<a name='L1449'></a><a href='#L1449'>1449</a>
+<a name='L1450'></a><a href='#L1450'>1450</a>
+<a name='L1451'></a><a href='#L1451'>1451</a>
+<a name='L1452'></a><a href='#L1452'>1452</a>
+<a name='L1453'></a><a href='#L1453'>1453</a>
+<a name='L1454'></a><a href='#L1454'>1454</a>
+<a name='L1455'></a><a href='#L1455'>1455</a>
+<a name='L1456'></a><a href='#L1456'>1456</a>
+<a name='L1457'></a><a href='#L1457'>1457</a>
+<a name='L1458'></a><a href='#L1458'>1458</a>
+<a name='L1459'></a><a href='#L1459'>1459</a>
+<a name='L1460'></a><a href='#L1460'>1460</a>
+<a name='L1461'></a><a href='#L1461'>1461</a>
+<a name='L1462'></a><a href='#L1462'>1462</a>
+<a name='L1463'></a><a href='#L1463'>1463</a>
+<a name='L1464'></a><a href='#L1464'>1464</a>
+<a name='L1465'></a><a href='#L1465'>1465</a>
+<a name='L1466'></a><a href='#L1466'>1466</a>
+<a name='L1467'></a><a href='#L1467'>1467</a>
+<a name='L1468'></a><a href='#L1468'>1468</a>
+<a name='L1469'></a><a href='#L1469'>1469</a>
+<a name='L1470'></a><a href='#L1470'>1470</a>
+<a name='L1471'></a><a href='#L1471'>1471</a>
+<a name='L1472'></a><a href='#L1472'>1472</a>
+<a name='L1473'></a><a href='#L1473'>1473</a>
+<a name='L1474'></a><a href='#L1474'>1474</a>
+<a name='L1475'></a><a href='#L1475'>1475</a>
+<a name='L1476'></a><a href='#L1476'>1476</a>
+<a name='L1477'></a><a href='#L1477'>1477</a>
+<a name='L1478'></a><a href='#L1478'>1478</a>
+<a name='L1479'></a><a href='#L1479'>1479</a>
+<a name='L1480'></a><a href='#L1480'>1480</a>
+<a name='L1481'></a><a href='#L1481'>1481</a>
+<a name='L1482'></a><a href='#L1482'>1482</a>
+<a name='L1483'></a><a href='#L1483'>1483</a>
+<a name='L1484'></a><a href='#L1484'>1484</a>
+<a name='L1485'></a><a href='#L1485'>1485</a>
+<a name='L1486'></a><a href='#L1486'>1486</a>
+<a name='L1487'></a><a href='#L1487'>1487</a>
+<a name='L1488'></a><a href='#L1488'>1488</a>
+<a name='L1489'></a><a href='#L1489'>1489</a>
+<a name='L1490'></a><a href='#L1490'>1490</a>
+<a name='L1491'></a><a href='#L1491'>1491</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { Config, StreamOptions } from '../../types/stream.js';
+import type { StreamOutput, StreamError, StreamResponse } from '../../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger/index.js';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs';</span>
+<span class="cstat-no" title="statement not covered" >import net from 'net';</span>
+<span class="cstat-no" title="statement not covered" >import { spawn, exec, execSync, type ChildProcess } from 'child_process';</span>
+&nbsp;
+interface LocalStreamInstance {
+	id: number;
+	screen: number;
+	url: string;
+	quality: string;
+	status: string;
+	volume: number;
+	process: ChildProcess;
+	platform: 'youtube' | 'twitch';
+	title?: string;
+	startTime?: number;
+	options: StreamOptions &amp; { screen: number };
+}
+&nbsp;
+interface LocalStreamEnd {
+	screen: number;
+	error?: Error | string;
+	code?: number;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class P</span>layerService {
+	private readonly BASE_LOG_DIR: string;
+	private readonly <span class="cstat-no" title="statement not covered" >MAX_RETRIES = 2;</span>
+	private readonly <span class="cstat-no" title="statement not covered" >RETRY_INTERVAL = 500;</span>
+	private readonly <span class="cstat-no" title="statement not covered" >STREAM_REFRESH_INTERVAL = 4 * 60 * 60 * 1000; </span>// 4 hours
+	private readonly <span class="cstat-no" title="statement not covered" >INACTIVE_RESET_TIMEOUT = 5 * 60 * 1000; </span>// 5 minutes
+	private readonly <span class="cstat-no" title="statement not covered" >STARTUP_TIMEOUT = 30000; </span>// 30 seconds for startup
+	private readonly <span class="cstat-no" title="statement not covered" >SHUTDOWN_TIMEOUT = 2000; </span>// 2 seconds for shutdown
+	private readonly SCRIPTS_PATH: string;
+	private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, LocalStreamInstance&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamRetries: Map&lt;number, number&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamStartTimes: Map&lt;number, number&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamRefreshTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >inactiveTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >healthCheckIntervals: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >startupLocks: Map&lt;number, boolean&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >manuallyClosedScreens: Set&lt;number&gt; = new Set();</span>
+	private <span class="cstat-no" title="statement not covered" >disabledScreens: Set&lt;number&gt; = new Set();</span>
+	private <span class="cstat-no" title="statement not covered" >ipcPaths: Map&lt;number, string&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >retryTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+&nbsp;
+	private readonly config: Config;
+	private readonly mpvPath: string;
+	private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+	private <span class="cstat-no" title="statement not covered" >events = new EventEmitter();</span>
+	private outputCallback?: (data: StreamOutput) =&gt; void;
+	private errorCallback?: (data: StreamError) =&gt; void;
+	private endCallback?: (data: LocalStreamEnd) =&gt; void;
+&nbsp;
+<span class="fstat-no" title="function not covered" >	constructor(c</span>onfig: Config) {
+<span class="cstat-no" title="statement not covered" >		this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >		this.BASE_LOG_DIR = path.join(process.cwd(), 'logs');</span>
+<span class="cstat-no" title="statement not covered" >		this.SCRIPTS_PATH = path.join(process.cwd(), 'scripts/mpv');</span>
+<span class="cstat-no" title="statement not covered" >		this.mpvPath = this.findMpvPath();</span>
+&nbsp;
+		// Initialize directories
+<span class="cstat-no" title="statement not covered" >		this.initializeDirectories();</span>
+<span class="cstat-no" title="statement not covered" >		this.registerSignalHandlers();</span>
+&nbsp;
+		// Start health checks
+<span class="cstat-no" title="statement not covered" >		this.startHealthChecks();</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >startHealthChecks(</span>): void {
+		// Check every 30 seconds
+<span class="cstat-no" title="statement not covered" >		setInterval(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			for (const [screen, stream] of this.streams.entries()) {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!stream.process || !stream.process.pid) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					process.kill(stream.process.pid, 0); </span>// Test if process exists
+				} catch {
+					// Process is dead but not cleaned up
+<span class="cstat-no" title="statement not covered" >					logger.warn(`Found dead process for screen ${screen}, cleaning up`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.handleProcessExit(screen, -1);</span>
+				}
+			}
+		}, 30000);
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >findMpvPath(</span>): string {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			return execSync('which mpv').toString().trim();</span>
+		} catch {
+<span class="cstat-no" title="statement not covered" >			logger.warn('MPV not found in PATH, using default "mpv"', 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return 'mpv';</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>initializeDirectories(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Create log directories
+			const logDirs = <span class="cstat-no" title="statement not covered" >['mpv', 'streamlink'].map(<span class="fstat-no" title="function not covered" >(d</span>ir) =&gt; <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, dir))</span>;</span>
+<span class="cstat-no" title="statement not covered" >			for (const dir of logDirs) {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(dir)) {</span>
+<span class="cstat-no" title="statement not covered" >					fs.mkdirSync(dir, { recursive: true });</span>
+				}
+			}
+&nbsp;
+			// Create .livelink directory in home
+			const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (homedir) {</span>
+				const livelinkDir = <span class="cstat-no" title="statement not covered" >path.join(homedir, '.livelink');</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(livelinkDir)) {</span>
+<span class="cstat-no" title="statement not covered" >					fs.mkdirSync(livelinkDir, { recursive: true });</span>
+				}
+			}
+&nbsp;
+			// Clean old logs
+<span class="cstat-no" title="statement not covered" >			await this.cleanOldLogs();</span>
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Failed to initialize directories',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+<span class="cstat-no" title="statement not covered" >			throw error;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>cleanOldLogs(): Promise&lt;void&gt; {
+		const maxAge = <span class="cstat-no" title="statement not covered" >7 * 24 * 60 * 60 * 1000;</span> // 7 days
+		const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		for (const dir of ['mpv', 'streamlink']) {</span>
+			const logDir = <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, dir);</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(logDir)) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				const files = <span class="cstat-no" title="statement not covered" >fs.readdirSync(logDir);</span>
+<span class="cstat-no" title="statement not covered" >				for (const file of files) {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!file.endsWith('.log')) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+					const filePath = <span class="cstat-no" title="statement not covered" >path.join(logDir, file);</span>
+					const stats = <span class="cstat-no" title="statement not covered" >fs.statSync(filePath);</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (now - stats.mtime.getTime() &gt; maxAge) {</span>
+<span class="cstat-no" title="statement not covered" >						fs.unlinkSync(filePath);</span>
+<span class="cstat-no" title="statement not covered" >						logger.debug(`Deleted old log file: ${filePath}`, 'PlayerService');</span>
+					}
+				}
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Failed to clean logs in ${dir}`,
+					'PlayerService',
+					error instanceof Error ? error : new Error(String(error))
+				);
+			}
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >registerSignalHandlers(</span>): void {
+<span class="cstat-no" title="statement not covered" >		['SIGINT', 'SIGTERM', 'SIGQUIT'].forEach(<span class="fstat-no" title="function not covered" >(s</span>ignal) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			process.once(signal, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.info(`Received ${signal} signal`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.cleanup();</span>
+				}
+			});
+		});
+	}
+&nbsp;
+<span class="fstat-no" title="function not covered" >	async </span>startStream(options: StreamOptions &amp; { screen: number }): Promise&lt;StreamResponse&gt; {
+		const { screen } = <span class="cstat-no" title="statement not covered" >options;</span>
+&nbsp;
+		// Check maximum streams limit
+		const activeStreams = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.values()).filter(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.process !== null)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreams.length &gt;= this.config.player.maxStreams) {</span>
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Maximum number of streams (${this.config.player.maxStreams}) reached`,
+				error: `Maximum number of streams (${this.config.player.maxStreams}) reached`,
+				success: false
+			};
+		}
+&nbsp;
+		// Check startup lock
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.startupLocks.get(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Stream startup in progress for screen ${screen}`,
+				success: false
+			};
+		}
+&nbsp;
+		// Set startup lock with timeout
+<span class="cstat-no" title="statement not covered" >		this.startupLocks.set(screen, true);</span>
+		const lockTimeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			this.startupLocks.set(screen, false);</span>
+		}, this.STARTUP_TIMEOUT);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Stop existing stream if any
+<span class="cstat-no" title="statement not covered" >			await this.stopStream(screen);</span>
+&nbsp;
+			// Get screen configuration
+			const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error(`Invalid screen number: ${screen}`);</span>
+			}
+&nbsp;
+			// Check if screen is disabled
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.disabledScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error(`Screen ${screen} is disabled`);</span>
+			}
+&nbsp;
+			// Don't start during shutdown
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error('Server is shutting down');</span>
+			}
+&nbsp;
+			// Clear manually closed flag - we're explicitly starting a new stream
+<span class="cstat-no" title="statement not covered" >			this.manuallyClosedScreens.delete(screen);</span>
+&nbsp;
+			// Determine player type
+			const useStreamlink =
+<span class="cstat-no" title="statement not covered" >				screenConfig.playerType === 'streamlink' ||</span>
+				(!screenConfig.playerType &amp;&amp; this.config.player.preferStreamlink);
+&nbsp;
+			// Ensure we have metadata for the title
+			const streamTitle =
+<span class="cstat-no" title="statement not covered" >				options.title || this.extractTitleFromUrl(options.url) || 'Unknown Stream';</span>
+&nbsp;
+			// Get current date/time for the title
+			const currentTime = <span class="cstat-no" title="statement not covered" >new Date().toLocaleTimeString();</span>
+&nbsp;
+			// Add metadata to options for use in player commands
+<span class="cstat-no" title="statement not covered" >			options.title = streamTitle;</span>
+<span class="cstat-no" title="statement not covered" >			options.viewerCount = options.viewerCount || 0;</span>
+<span class="cstat-no" title="statement not covered" >			options.startTime = options.startTime || currentTime;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Starting stream with title: ${streamTitle}, viewers: ${options.viewerCount}, time: ${options.startTime}, screen: ${screen}`,
+				'PlayerService'
+			);
+&nbsp;
+			// Start the stream
+			const process = <span class="cstat-no" title="statement not covered" >useStreamlink</span>
+				? await this.startStreamlinkProcess(options)
+				: await this.startMpvProcess(options);
+&nbsp;
+			// Create stream instance
+			const instance: LocalStreamInstance = <span class="cstat-no" title="statement not covered" >{</span>
+				id: Date.now(),
+				screen,
+				url: options.url,
+				quality: options.quality || 'best',
+				status: 'playing',
+				volume: options.volume || screenConfig.volume || this.config.player.defaultVolume,
+				process,
+				platform: options.url.includes('youtube.com') ? 'youtube' : 'twitch',
+				title: streamTitle,
+				startTime:
+					typeof options.startTime === 'string'
+						? new Date(options.startTime).getTime()
+						: options.startTime,
+				options: options
+			};
+&nbsp;
+			// Store stream instance
+<span class="cstat-no" title="statement not covered" >			this.streams.set(screen, instance);</span>
+&nbsp;
+			// Setup monitoring
+<span class="cstat-no" title="statement not covered" >			this.setupStreamMonitoring(screen, process, options);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Stream started on screen ${screen}`,
+				success: true
+			};
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Failed to start stream on screen ${screen}`,
+				'PlayerService',
+				error instanceof Error ? error.message : String(error)
+			);
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: error instanceof Error ? error.message : String(error),
+				success: false
+			};
+		} finally {
+<span class="cstat-no" title="statement not covered" >			clearTimeout(lockTimeout);</span>
+<span class="cstat-no" title="statement not covered" >			this.startupLocks.set(screen, false);</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>startMpvProcess(
+		options: StreamOptions &amp; { screen: number }
+	): Promise&lt;ChildProcess&gt; {
+		const args = <span class="cstat-no" title="statement not covered" >this.getMpvArgs(options);</span>
+		const env = <span class="cstat-no" title="statement not covered" >this.getProcessEnv();</span>
+&nbsp;
+		// Add screen-specific environment variables
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+<span class="cstat-no" title="statement not covered" >		env.SCREEN = options.screen.toString();</span>
+<span class="cstat-no" title="statement not covered" >		env.DATE = timestamp;</span>
+&nbsp;
+		// Sanitize title components to avoid issues with shell escaping
+		const streamTitle = <span class="cstat-no" title="statement not covered" >(options.title || 'Unknown Title').replace(/['"]/g, '');</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+		const startTime = <span class="cstat-no" title="statement not covered" >options.startTime</span>
+			? new Date(options.startTime).toLocaleTimeString()
+			: 'Unknown time';
+&nbsp;
+		// Set environment variables without quotes
+<span class="cstat-no" title="statement not covered" >		env.TITLE = `${streamTitle} - ${viewerCount} - ${startTime} - Screen ${options.screen}`;</span>
+<span class="cstat-no" title="statement not covered" >		env.STREAM_URL = options.url;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(`Starting MPV for screen ${options.screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		logger.debug(`MPV command: ${this.mpvPath} ${args.join(' ')}`, 'PlayerService');</span>
+&nbsp;
+		const process = <span class="cstat-no" title="statement not covered" >spawn(this.mpvPath, args, {</span>
+			env,
+			stdio: ['ignore', 'pipe', 'pipe']
+		});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.setupProcessHandlers(process, options.screen);</span>
+<span class="cstat-no" title="statement not covered" >		return process;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>startStreamlinkProcess(
+		options: StreamOptions &amp; { screen: number }
+	): Promise&lt;ChildProcess&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			const args = <span class="cstat-no" title="statement not covered" >this.getStreamlinkArgs(options.url, options);</span>
+			const env = <span class="cstat-no" title="statement not covered" >this.getProcessEnv();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info(`Starting Streamlink for screen ${options.screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			logger.debug(`Streamlink command: streamlink ${args.join(' ')}`, 'PlayerService');</span>
+&nbsp;
+			const process = <span class="cstat-no" title="statement not covered" >spawn('streamlink', args, {</span>
+				env,
+				stdio: ['ignore', 'pipe', 'pipe']
+			});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+				let errorOutput = <span class="cstat-no" title="statement not covered" >'';</span>
+				let hasStarted = <span class="cstat-no" title="statement not covered" >false;</span>
+				const startTimeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+					const error = <span class="cstat-no" title="statement not covered" >new Error('Stream start timeout exceeded');</span>
+<span class="cstat-no" title="statement not covered" >					process.kill();</span>
+<span class="cstat-no" title="statement not covered" >					reject(error);</span>
+				}, this.STARTUP_TIMEOUT);
+&nbsp;
+				const onData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+					const output = <span class="cstat-no" title="statement not covered" >data.toString();</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('Starting player')) {</span>
+<span class="cstat-no" title="statement not covered" >						hasStarted = true;</span>
+<span class="cstat-no" title="statement not covered" >						clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >						resolve(process);</span>
+					}
+					// Check for common error patterns
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.toLowerCase().includes('error')) {</span>
+<span class="cstat-no" title="statement not covered" >						errorOutput += output + '\n';</span>
+					}
+				};
+&nbsp;
+				const onError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >					logger.error(`Streamlink error for screen ${options.screen}`, 'PlayerService', error);</span>
+<span class="cstat-no" title="statement not covered" >					reject(error);</span>
+				};
+&nbsp;
+				const onExit = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(c</span>ode: number | null) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasStarted) {</span>
+						let errorMessage = <span class="cstat-no" title="statement not covered" >'Stream failed to start';</span>
+&nbsp;
+						// Enhanced error detection
+<span class="cstat-no" title="statement not covered" >						if (errorOutput.toLowerCase().includes('members-only')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable (members-only content)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('no playable streams')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'No playable streams found';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('404')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream not found (404)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('private')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream is private';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (code === 1) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable (possibly members-only content)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (code === 130) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream process interrupted';</span>
+						} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (code === 2) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable or invalid URL';</span>
+						}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >						reject(new Error(errorMessage));</span>
+					}
+				};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				process.stdout?.on('data', onData);</span>
+<span class="cstat-no" title="statement not covered" >				process.stderr?.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					errorOutput += data.toString() + '\n';</span>
+<span class="cstat-no" title="statement not covered" >					onData(data);</span>
+				});
+<span class="cstat-no" title="statement not covered" >				process.on('error', onError);</span>
+<span class="cstat-no" title="statement not covered" >				process.on('exit', onExit);</span>
+			});
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Failed to spawn streamlink process for screen ${options.screen}`,
+				'PlayerService',
+				err instanceof Error ? err.message : String(err)
+			);
+<span class="cstat-no" title="statement not covered" >			throw err;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >setupProcessHandlers(</span>process: ChildProcess, screen: number): void {
+		let hasEndedStream = <span class="cstat-no" title="statement not covered" >false;</span>
+		let cleanupTimeout: NodeJS.Timeout | null = <span class="cstat-no" title="statement not covered" >null;</span>
+&nbsp;
+		const cleanup = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (cleanupTimeout) {</span>
+<span class="cstat-no" title="statement not covered" >				clearTimeout(cleanupTimeout);</span>
+<span class="cstat-no" title="statement not covered" >				cleanupTimeout = null;</span>
+			}
+<span class="cstat-no" title="statement not covered" >			this.clearMonitoring(screen);</span>
+<span class="cstat-no" title="statement not covered" >			this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+		};
+&nbsp;
+		const handleStreamEnd = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: string | Error, code: number = <span class="branch-0 cbranch-no" title="branch not covered" >0)</span> =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasEndedStream) {</span>
+<span class="cstat-no" title="statement not covered" >				hasEndedStream = true;</span>
+<span class="cstat-no" title="statement not covered" >				logger.info(`Stream ended on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				this.errorCallback?.({</span>
+					screen,
+					error: error instanceof Error ? error.message : error,
+					code
+				});
+				// Schedule cleanup after a short delay to ensure all events are processed
+<span class="cstat-no" title="statement not covered" >				cleanupTimeout = setTimeout(cleanup, 1000);</span>
+			}
+		};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stdout) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stdout.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+				const output = <span class="cstat-no" title="statement not covered" >data.toString('utf8').trim();</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (output &amp;&amp; /[\x20-\x7E]/.test(output)) {</span>
+					// Log YouTube-specific state information
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('[youtube]')) {</span>
+<span class="cstat-no" title="statement not covered" >						if (output.includes('Post-Live Manifestless mode')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`[Screen ${screen}] YouTube stream is in post-live state (ended)`,
+								'PlayerService'
+							);
+<span class="cstat-no" title="statement not covered" >							handleStreamEnd('Stream ended (post-live)');</span>
+						} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('Downloading MPD manifest')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.debug(</span>
+								`[Screen ${screen}] YouTube stream manifest download attempt`,
+								'PlayerService'
+							);
+						}
+					}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >					logger.debug(`[Screen ${screen}] ${output}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.outputCallback?.({</span>
+						screen,
+						data: output,
+						type: 'stdout'
+					});
+&nbsp;
+					// Check for different types of stream endings
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (</span>
+						output.includes('Exiting... (Quit)') ||
+						output.includes('Quit') ||
+						output.includes('Exiting normally') ||
+						output.includes('EOF reached') ||
+						output.includes('User stopped playback')
+					) {
+<span class="cstat-no" title="statement not covered" >						handleStreamEnd('Stream ended normally');</span>
+					}
+				}
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stderr) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stderr.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+				const output = <span class="cstat-no" title="statement not covered" >data.toString('utf8').trim();</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (output &amp;&amp; /[\x20-\x7E]/.test(output)) {</span>
+					// Filter out common PipeWire warnings that don't affect functionality
+<span class="cstat-no" title="statement not covered" >					if (output.includes('pw.conf') &amp;&amp; output.includes('deprecated')) {</span>
+<span class="cstat-no" title="statement not covered" >						logger.debug(`[Screen ${screen}] PipeWire config warning: ${output}`, 'PlayerService');</span>
+					} else {
+						// Log YouTube-specific errors with more context
+<span class="cstat-no" title="statement not covered" >						if (output.includes('youtube-dl failed')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`[Screen ${screen}] YouTube stream error - may be ended or unavailable: ${output}`,
+								'PlayerService'
+							);
+<span class="cstat-no" title="statement not covered" >							handleStreamEnd(new Error('Stream unavailable or ended'));</span>
+						} else {
+<span class="cstat-no" title="statement not covered" >							logger.error(`[Screen ${screen}] ${output}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >							this.handleError(screen, new Error(`Stream error: ${output}`));</span>
+						}
+					}
+				}
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		process.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(`Process error on screen ${screen}`, 'PlayerService', err);</span>
+<span class="cstat-no" title="statement not covered" >			this.handleError(screen, err);</span>
+		});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		process.on('exit', <span class="fstat-no" title="function not covered" >(c</span>ode: number | null) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(`Process exited on screen ${screen} with code ${code}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			handleStreamEnd(new Error(`Process exited with code ${code}`));</span>
+		});
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >setupStreamMonitoring(</span>
+		screen: number,
+		process: ChildProcess,
+		options: StreamOptions
+	): void {
+		// Track last output time to detect stream health
+		let lastOutputTime = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+		let consecutiveFailures = <span class="cstat-no" title="statement not covered" >0;</span>
+		const MAX_OUTPUT_SILENCE = <span class="cstat-no" title="statement not covered" >15000;</span> // 15 seconds without output is suspicious
+		const HEALTH_CHECK_INTERVAL = <span class="cstat-no" title="statement not covered" >5000;</span> // Check every 5 seconds
+		const MAX_CONSECUTIVE_FAILURES = <span class="cstat-no" title="statement not covered" >3;</span>
+&nbsp;
+		// Update last output time when we get data
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stdout) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stdout.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				lastOutputTime = Date.now();</span>
+<span class="cstat-no" title="statement not covered" >				consecutiveFailures = 0; </span>// Reset failures on successful output
+			});
+		}
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stderr) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stderr.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				lastOutputTime = Date.now();</span>
+<span class="cstat-no" title="statement not covered" >				consecutiveFailures = 0; </span>// Reset failures on successful output
+			});
+		}
+&nbsp;
+		// Setup more frequent health checks
+		const healthCheck = <span class="cstat-no" title="statement not covered" >setInterval(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!process.pid) {</span>
+<span class="cstat-no" title="statement not covered" >				logger.warn(`No PID found for stream on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				return;</span>
+			}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				// Check if process exists and responds
+<span class="cstat-no" title="statement not covered" >				process.kill(0);</span>
+&nbsp;
+				// Also verify the process hasn't been replaced
+				const currentProcess = <span class="cstat-no" title="statement not covered" >this.streams.get(screen)?.process;</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (currentProcess !== process) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`Process mismatch detected for screen ${screen}, clearing health check`,
+						'PlayerService'
+					);
+<span class="cstat-no" title="statement not covered" >					clearInterval(healthCheck);</span>
+<span class="cstat-no" title="statement not covered" >					this.healthCheckIntervals.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >					return;</span>
+				}
+&nbsp;
+				// Check if we haven't received output for too long
+				const timeSinceLastOutput = <span class="cstat-no" title="statement not covered" >Date.now() - lastOutputTime;</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (timeSinceLastOutput &gt; MAX_OUTPUT_SILENCE) {</span>
+<span class="cstat-no" title="statement not covered" >					consecutiveFailures++;</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`No output from stream on screen ${screen} for ${Math.round(timeSinceLastOutput / 1000)}s (failure ${consecutiveFailures}/${MAX_CONSECUTIVE_FAILURES})`,
+						'PlayerService'
+					);
+&nbsp;
+					// After multiple consecutive failures, try to restart
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (consecutiveFailures &gt;= MAX_CONSECUTIVE_FAILURES) {</span>
+<span class="cstat-no" title="statement not covered" >						logger.warn(</span>
+							`Stream on screen ${screen} appears frozen, attempting restart`,
+							'PlayerService'
+						);
+<span class="cstat-no" title="statement not covered" >						await this.restartStream(screen, options);</span>
+<span class="cstat-no" title="statement not covered" >						consecutiveFailures = 0; </span>// Reset after restart attempt
+					}
+				}
+			} catch (err) {
+				// Only restart if the process is actually gone
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (err &amp;&amp; typeof err === 'object' &amp;&amp; 'code' in err &amp;&amp; err.code === 'ESRCH') {</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(`Stream on screen ${screen} appears to be unresponsive`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					await this.restartStream(screen, options).catch(<span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to restart unresponsive stream on screen ${screen}`,
+							'PlayerService',
+							err
+						);
+					});
+				}
+			}
+		}, HEALTH_CHECK_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.healthCheckIntervals.set(screen, healthCheck);</span>
+&nbsp;
+		// Setup refresh timer
+		const refreshTimer = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(`Refreshing stream on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			this.restartStream(screen, options).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				logger.error(`Failed to refresh stream on screen ${screen}`, 'PlayerService', error);</span>
+			});
+		}, this.STREAM_REFRESH_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.streamRefreshTimers.set(screen, refreshTimer);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.set(screen, Date.now());</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>restartStream(screen: number, options: StreamOptions): Promise&lt;void&gt; {
+		// Don't restart if the screen was manually closed
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Not restarting stream on screen ${screen} as it was manually closed`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			return;</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(`Restarting stream on screen ${screen}: ${options.url}`, 'PlayerService');</span>
+&nbsp;
+		// Stop existing stream and wait for cleanup
+<span class="cstat-no" title="statement not covered" >		await this.stopStream(screen);</span>
+&nbsp;
+		// Add a longer delay to ensure cleanup is complete
+<span class="cstat-no" title="statement not covered" >		await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+&nbsp;
+		// Double check no existing process before starting new one
+		const existingStream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream?.process) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.warn(`Found existing process for screen ${screen}, forcing cleanup`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				existingStream.process.kill('SIGKILL');</span>
+<span class="cstat-no" title="statement not covered" >				await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 200))</span>;</span>
+			} catch {
+				// Process might already be gone
+			}
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		await this.startStream({ ...options, screen });</span>
+	}
+	private <span class="fstat-no" title="function not covered" >async </span>handleProcessExit(screen: number, code: number | null): Promise&lt;void&gt; {
+		// Clear monitoring
+<span class="cstat-no" title="statement not covered" >		this.clearMonitoring(screen);</span>
+&nbsp;
+		// Get stream options before removing the instance
+		const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+		const streamOptions = <span class="cstat-no" title="statement not covered" >stream?.options;</span>
+&nbsp;
+		// Remove stream instance
+<span class="cstat-no" title="statement not covered" >		this.streams.delete(screen);</span>
+&nbsp;
+		// Initialize retry count if not exists
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!this.streamRetries.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.set(screen, 0);</span>
+		}
+&nbsp;
+		const retryCount = <span class="cstat-no" title="statement not covered" >this.streamRetries.get(screen) || 0;</span>
+		const MAX_RETRIES = <span class="cstat-no" title="statement not covered" >10;</span> // Increased max retries for network issues
+		const MAX_BACKOFF = <span class="cstat-no" title="statement not covered" >30000;</span> // Maximum backoff of 30 seconds
+&nbsp;
+		// Helper to check if error is likely a network issue
+		const isNetworkError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(c</span>ode: number | null): boolean =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			return (</span>
+				code === 2 || // Streamlink error (often network-related)
+				code === -4 || // Network timeout
+				code === -3 || // Network connection refused
+				code === null
+			); // Process crash (could be network-related)
+		};
+&nbsp;
+		// Handle different exit codes
+<span class="cstat-no" title="statement not covered" >		if (code === 0) {</span>
+			// Normal exit - clear retries and move to next stream
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Stream ended normally on screen ${screen}, moving to next stream`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			this.errorCallback?.({</span>
+				screen,
+				error: 'Stream ended normally',
+				code: 0
+			});
+		} else <span class="cstat-no" title="statement not covered" >if (isNetworkError(code)) {</span>
+			// Network-related error - use more aggressive retry strategy
+<span class="cstat-no" title="statement not covered" >			if (retryCount &lt; MAX_RETRIES &amp;&amp; streamOptions) {</span>
+				const backoffTime = <span class="cstat-no" title="statement not covered" >Math.min(1000 * Math.pow(1.5, retryCount), MAX_BACKOFF);</span>
+<span class="cstat-no" title="statement not covered" >				this.streamRetries.set(screen, retryCount + 1);</span>
+&nbsp;
+				// Log with more specific error context
+<span class="cstat-no" title="statement not covered" >				logger.warn(</span>
+					`Network-related error on screen ${screen} (code ${code}), retry ${retryCount + 1}/${MAX_RETRIES} in ${backoffTime}ms`,
+					'PlayerService'
+				);
+&nbsp;
+				// Cleanup any existing retry timer for this screen
+<span class="cstat-no" title="statement not covered" >				this.clearRetryTimer(screen);</span>
+&nbsp;
+				// Set up retry timer
+				const retryTimer = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					try {</span>
+						// Check network connectivity before retry
+						const isConnected = <span class="cstat-no" title="statement not covered" >await this.testConnection();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >						if (isConnected) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`Network is back online, retrying stream on screen ${screen}`,
+								'PlayerService'
+							);
+&nbsp;
+							// Check if another process has already started a stream for this screen
+<span class="cstat-no" title="statement not covered" >							if (!this.streams.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >								await this.startStream(streamOptions);</span>
+							} else {
+<span class="cstat-no" title="statement not covered" >								logger.info(</span>
+									`Stream already started on screen ${screen}, skipping retry`,
+									'PlayerService'
+								);
+							}
+						} else {
+							// Network still down, schedule another retry
+<span class="cstat-no" title="statement not covered" >							logger.warn(</span>
+								`Network still unavailable for screen ${screen}, scheduling another retry`,
+								'PlayerService'
+							);
+							// Don't recursively call handleProcessExit as it can lead to multiple overlapping retries
+							// Instead, increment retry count and set a new timer
+							const currentRetryCount = <span class="cstat-no" title="statement not covered" >this.streamRetries.get(screen) || 0;</span>
+<span class="cstat-no" title="statement not covered" >							if (currentRetryCount &lt; MAX_RETRIES) {</span>
+								const nextBackoffTime = <span class="cstat-no" title="statement not covered" >Math.min(</span>
+									1000 * Math.pow(1.5, currentRetryCount),
+									MAX_BACKOFF
+								);
+<span class="cstat-no" title="statement not covered" >								this.clearRetryTimer(screen);</span>
+<span class="cstat-no" title="statement not covered" >								this.retryTimers.set(</span>
+									screen,
+									setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {
+<span class="cstat-no" title="statement not covered" >										this.handleProcessExit(screen, code).catch(<span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >											logger.error(</span>
+												`Error in retry handler for screen ${screen}`,
+												'PlayerService',
+												err
+											);
+										});
+									}, nextBackoffTime)
+								);
+							} else {
+								// Max retries reached
+<span class="cstat-no" title="statement not covered" >								this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >								logger.error(</span>
+									`Stream failed after ${MAX_RETRIES} retries on screen ${screen} (network still down)`,
+									'PlayerService'
+								);
+<span class="cstat-no" title="statement not covered" >								this.errorCallback?.({</span>
+									screen,
+									error: `Stream failed after ${MAX_RETRIES} retries (network still down)`,
+									code: -1
+								});
+							}
+						}
+					} catch (error) {
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to restart stream on screen ${screen}`,
+							'PlayerService',
+							error instanceof Error ? error : new Error(String(error))
+						);
+						// Ensure we clean up retry state on error
+<span class="cstat-no" title="statement not covered" >						this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >						this.errorCallback?.({</span>
+							screen,
+							error: `Failed to restart stream: ${error instanceof Error ? error.message : String(error)}`,
+							code: -1
+						});
+					}
+				}, backoffTime);
+&nbsp;
+				// Store retry timer for cleanup
+<span class="cstat-no" title="statement not covered" >				this.retryTimers.set(screen, retryTimer);</span>
+			} else {
+				// Max retries reached or no options available
+<span class="cstat-no" title="statement not covered" >				this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Stream failed after ${MAX_RETRIES} retries on screen ${screen}, moving to next stream`,
+					'PlayerService'
+				);
+<span class="cstat-no" title="statement not covered" >				this.errorCallback?.({</span>
+					screen,
+					error: `Stream failed after ${MAX_RETRIES} retries (network issues)`,
+					code: -1
+				});
+			}
+		} else {
+			// Other error codes - move to next stream
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Stream ended with error code ${code} on screen ${screen}, moving to next stream`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			this.errorCallback?.({</span>
+				screen,
+				error: `Stream ended with error code ${code}`,
+				code: -1
+			});
+		}
+	}
+&nbsp;
+	// Helper method to clear retry timer
+	private <span class="fstat-no" title="function not covered" >clearRetryTimer(</span>screen: number): void {
+		const timer = <span class="cstat-no" title="statement not covered" >this.retryTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >			this.retryTimers.delete(screen);</span>
+		}
+	}
+&nbsp;
+	// Network connectivity test function
+	private <span class="fstat-no" title="function not covered" >async </span>testConnection(): Promise&lt;boolean&gt; {
+		// List of URLs to test connectivity
+		const testUrls = <span class="cstat-no" title="statement not covered" >[</span>
+			'https://8.8.8.8', // Google DNS
+			'https://1.1.1.1', // Cloudflare DNS
+			'https://www.google.com',
+			'https://www.cloudflare.com',
+			'https://www.amazon.com'
+		];
+&nbsp;
+		// Try each URL until one succeeds or all fail
+<span class="cstat-no" title="statement not covered" >		for (const url of testUrls) {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				await fetch(url, {</span>
+					mode: 'no-cors', // Prevent CORS issues
+				});
+<span class="cstat-no" title="statement not covered" >				logger.debug(`Connection successful via ${url}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				return true; </span>// Connection successful
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.debug(</span>
+					`Failed to connect to ${url}: ${error instanceof Error ? error.message : String(error)}`,
+					'PlayerService'
+				);
+				// Continue to the next URL
+			}
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.warn('All connection test attempts failed', 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		return false; </span>// All connection attempts failed
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >clearMonitoring(</span>screen: number): void {
+		// Clear health check
+		const healthCheck = <span class="cstat-no" title="statement not covered" >this.healthCheckIntervals.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (healthCheck) {</span>
+<span class="cstat-no" title="statement not covered" >			clearInterval(healthCheck);</span>
+<span class="cstat-no" title="statement not covered" >			this.healthCheckIntervals.delete(screen);</span>
+		}
+&nbsp;
+		// Clear refresh timer
+		const refreshTimer = <span class="cstat-no" title="statement not covered" >this.streamRefreshTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (refreshTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(refreshTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRefreshTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear inactive timer
+		const inactiveTimer = <span class="cstat-no" title="statement not covered" >this.inactiveTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (inactiveTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(inactiveTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.inactiveTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear retry timer
+		const retryTimer = <span class="cstat-no" title="statement not covered" >this.retryTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (retryTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(retryTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.retryTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear other state
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.delete(screen);</span>
+		// Don't clear retry count here to maintain retry state across restarts
+		// this.streamRetries.delete(screen);
+	}
+&nbsp;
+	/**
+	 * Stop a stream that is currently playing on a screen
+	 */
+<span class="fstat-no" title="function not covered" >	async </span>stopStream(screen: number, force: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`Stopping stream on screen ${screen}`, 'PlayerService');</span>
+&nbsp;
+		const player = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!player || !player.process) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.debug(`No player to stop on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return true; </span>// Nothing to stop, so consider it a success
+		}
+&nbsp;
+		// Try graceful shutdown via IPC first
+		let gracefulShutdown = <span class="cstat-no" title="statement not covered" >false;</span>
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			await this.sendMpvCommand(screen, 'quit');</span>
+&nbsp;
+			// Give it a moment to shutdown gracefully
+<span class="cstat-no" title="statement not covered" >			await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+&nbsp;
+			// Check if the process has exited
+<span class="cstat-no" title="statement not covered" >			gracefulShutdown = !this.isProcessRunning(player.process.pid);</span>
+<span class="cstat-no" title="statement not covered" >			if (gracefulShutdown) {</span>
+<span class="cstat-no" title="statement not covered" >				logger.debug(`Graceful shutdown successful for screen ${screen}`, 'PlayerService');</span>
+			} else {
+<span class="cstat-no" title="statement not covered" >				logger.debug(</span>
+					`Graceful shutdown failed for screen ${screen}, will try force kill`,
+					'PlayerService'
+				);
+			}
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.debug(</span>
+				`IPC command failed for screen ${screen}, will try force kill: ${error instanceof Error ? error.message : String(error)}`,
+				'PlayerService'
+			);
+		}
+&nbsp;
+		// If graceful shutdown failed or force is true, use the forceful method
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!gracefulShutdown || force) {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				player.process.kill('SIGTERM');</span>
+&nbsp;
+				// Give it a moment to respond to SIGTERM
+<span class="cstat-no" title="statement not covered" >				await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 300))</span>;</span>
+&nbsp;
+				// Check if we need to force kill with SIGKILL
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isProcessRunning(player.process.pid)) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.debug(`SIGTERM didn't work for screen ${screen}, using SIGKILL`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					player.process.kill('SIGKILL');</span>
+				}
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Error killing process for screen ${screen}: ${error instanceof Error ? error.message : String(error)}`,
+					'PlayerService'
+				);
+			}
+		}
+&nbsp;
+		// Clean up regardless of kill success
+<span class="cstat-no" title="statement not covered" >		this.cleanup_after_stop(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return true;</span>
+	}
+&nbsp;
+	/**
+	 * Clean up resources after a stream is stopped
+	 */
+	private <span class="fstat-no" title="function not covered" >cleanup_after_stop(</span>screen: number): void {
+		// Clean up the monitoring interval
+		const monitorInterval = <span class="cstat-no" title="statement not covered" >this.healthCheckIntervals.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (monitorInterval) {</span>
+<span class="cstat-no" title="statement not covered" >			clearInterval(monitorInterval);</span>
+<span class="cstat-no" title="statement not covered" >			this.healthCheckIntervals.delete(screen);</span>
+		}
+&nbsp;
+		// Clean up player state
+<span class="cstat-no" title="statement not covered" >		this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamRefreshTimers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.inactiveTimers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.delete(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.debug(`Cleaned up resources for screen ${screen}`, 'PlayerService');</span>
+	}
+&nbsp;
+	/**
+	 * Check if a process is still running without sending a signal
+	 */
+	private <span class="fstat-no" title="function not covered" >isProcessRunning(</span>pid: number | undefined): boolean {
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!pid) <span class="cstat-no" title="statement not covered" >return false;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// The kill with signal 0 doesn't actually kill the process
+			// It just checks if the process exists
+<span class="cstat-no" title="statement not covered" >			process.kill(pid, 0);</span>
+<span class="cstat-no" title="statement not covered" >			return true;</span>
+		} catch {
+<span class="cstat-no" title="statement not covered" >			return false;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getMpvArgs(</span>options: StreamOptions &amp; { screen: number }): string[] {
+		const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === options.screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(`Invalid screen number: ${options.screen}`);</span>
+		}
+&nbsp;
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+		const logFile = <span class="cstat-no" title="statement not covered" >path.join(</span>
+			this.BASE_LOG_DIR,
+			'mpv',
+			`mpv-screen${options.screen}-${timestamp}.log`
+		);
+		const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+		const ipcPath = <span class="cstat-no" title="statement not covered" >homedir</span>
+			? path.join(homedir, '.livelink', `mpv-ipc-${options.screen}`)
+			: `/tmp/mpv-ipc-${options.screen}`;
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.set(options.screen, ipcPath);</span>
+&nbsp;
+		// Get stream metadata for title
+		const streamTitle = <span class="cstat-no" title="statement not covered" >options.title || 'Unknown Title';</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+&nbsp;
+		// Sanitize title components to avoid issues with shell escaping
+		const sanitizedTitle = <span class="cstat-no" title="statement not covered" >streamTitle.replace(/['"]/g, '');</span>
+&nbsp;
+		// Format the title without quotes in the argument
+		const titleArg = <span class="cstat-no" title="statement not covered" >`--title="${sanitizedTitle} - ${viewerCount} - Screen ${options.screen}"`;</span>
+&nbsp;
+		// Base arguments for MPV direct playback
+		const baseArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			// IPC and config
+			`--input-ipc-server=${ipcPath}`,
+			`--config-dir=${this.SCRIPTS_PATH}`,
+			`--log-file=${logFile}`,
+&nbsp;
+			// Window position and size
+			`--geometry=${screenConfig.width}x${screenConfig.height}+${screenConfig.x}+${screenConfig.y}`,
+&nbsp;
+			// Audio settings
+			`--volume=${options.volume !== undefined ? options.volume : screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume}`,
+&nbsp;
+			// Title
+			titleArg,
+&nbsp;
+			// URL must be last
+			options.url
+		];
+&nbsp;
+		// Combine all arguments
+		const allArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			...baseArgs,
+			...(options.windowMaximized || screenConfig.windowMaximized ? ['--window-maximized=yes'] : [])
+		];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return allArgs;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getStreamlinkArgs(</span>url: string, options: StreamOptions &amp; { screen: number }): string[] {
+		const screen = <span class="cstat-no" title="statement not covered" >options.screen;</span>
+		const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(`Invalid screen number: ${screen}`);</span>
+		}
+&nbsp;
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+		const logFile = <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, 'mpv', `mpv-screen${screen}-${timestamp}.log`);</span>
+		const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+		const ipcPath = <span class="cstat-no" title="statement not covered" >homedir</span>
+			? path.join(homedir, '.livelink', `mpv-ipc-${screen}`)
+			: `/tmp/mpv-ipc-${screen}`;
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.set(screen, ipcPath);</span>
+&nbsp;
+		// Get stream metadata for title
+		const streamTitle = <span class="cstat-no" title="statement not covered" >options.title || 'Unknown Title';</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+		const sanitizedTitle = <span class="cstat-no" title="statement not covered" >streamTitle.replace(/['"]/g, '');</span>
+		const titleArg = <span class="cstat-no" title="statement not covered" >`--title="${sanitizedTitle} - ${viewerCount} - Screen ${options.screen}"`;</span>
+&nbsp;
+		// MPV arguments specifically for Streamlink
+		const mpvArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			// Window position and size
+			`--geometry=${screenConfig.width}x${screenConfig.height}+${screenConfig.x}+${screenConfig.y}`,
+&nbsp;
+			// Audio settings
+			`--volume=${screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume}`,
+&nbsp;
+			// IPC and config
+			`--input-ipc-server=${ipcPath}`,
+			`--config-dir=${this.SCRIPTS_PATH}`,
+			`--log-file=${logFile}`,
+&nbsp;
+			// Title
+			titleArg,
+&nbsp;
+			// Window state
+			...(options.windowMaximized || screenConfig.windowMaximized ? ['--window-maximized=yes'] : [])
+		].filter(Boolean);
+&nbsp;
+		// Streamlink-specific arguments
+		const streamlinkArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			url,
+			'best', // Quality selection
+			...(url.includes('youtube.com')
+				? [
+						'--stream-segment-threads=2', // Reduced from 3 to 2
+						'--stream-timeout=60',
+						'--hls-segment-threads=2', // Reduced from 3 to 2
+						'--ringbuffer-size=32M', // Limit ring buffer size
+						'--hls-segment-stream-data', // Stream segments directly
+						'--hls-live-edge=2', // Reduce live edge buffer
+						'--stream-segment-attempts=3', // Limit segment retry attempts
+						'--player-no-close', // Don't close player on stream end
+						'--hls-playlist-reload-time=2' // Faster playlist reload
+					]
+				: []),
+			'--player',
+			this.mpvPath,
+			'--player-args',
+			mpvArgs.join(' ')
+		];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return streamlinkArgs;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getProcessEnv(</span>): NodeJS.ProcessEnv {
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return {</span>
+			...process.env,
+			MPV_HOME: undefined,
+			XDG_CONFIG_HOME: undefined,
+			DISPLAY: process.env.DISPLAY || ':0',
+			SDL_VIDEODRIVER: 'x11',
+			DATE: timestamp
+		};
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >getActiveStreams(</span>) {
+<span class="cstat-no" title="statement not covered" >		return Array.from(this.streams.entries()).map(<span class="fstat-no" title="function not covered" >([</span>screen, stream]) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+			screen,
+			url: stream.url,
+			quality: stream.quality,
+			platform: stream.platform,
+			status: stream.status
+		}));
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >sendCommandToScreen(</span>screen: number, command: string): void {
+		const ipcPath = <span class="cstat-no" title="statement not covered" >this.ipcPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!ipcPath) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.warn(`No IPC path found for screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return;</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			exec(`echo "${command}" | socat - ${ipcPath}`, <span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (err) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.error(</span>
+						`Failed to send command to screen ${screen}`,
+						'PlayerService',
+						err instanceof Error ? err : new Error(String(err))
+					);
+				}
+			});
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Command send error for screen ${screen}`,
+				'PlayerService',
+				err instanceof Error ? err : new Error(String(err))
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >sendCommandToAll(</span>command: string): void {
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.forEach(<span class="fstat-no" title="function not covered" >(_</span>, screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			this.sendCommandToScreen(screen, command);</span>
+		});
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >onStreamOutput(</span>callback: (data: StreamOutput) =&gt; void): void {
+<span class="cstat-no" title="statement not covered" >		this.outputCallback = callback;</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >onStreamError(</span>callback: (data: StreamError) =&gt; void): void {
+<span class="cstat-no" title="statement not covered" >		this.errorCallback = callback;</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >handleLuaMessage(</span>screen: number, type: string, data: Record&lt;string, unknown&gt;): void {
+<span class="cstat-no" title="statement not covered" >		if (type === 'log' &amp;&amp; typeof data.level === 'string' &amp;&amp; typeof data.message === 'string') {</span>
+<span class="cstat-no" title="statement not covered" >			logger[data.level as 'debug' | 'info' | 'warn' | 'error'](</span>
+				`[MPV-${screen}] ${data.message}`,
+				'PlayerService'
+			);
+		} else {
+<span class="cstat-no" title="statement not covered" >			logger.debug(</span>
+				`Received message from screen ${screen}: ${type} - ${JSON.stringify(data)}`,
+				'PlayerService'
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >async </span>cleanup(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >		logger.info('Cleaning up player service...', 'PlayerService');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Stop all streams
+			const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >			await Promise.all(activeScreens.map(<span class="fstat-no" title="function not covered" >(s</span>creen) =&gt; <span class="cstat-no" title="statement not covered" >this.stopStream(screen, true))</span>);</span>
+&nbsp;
+			// Clear all timers and state
+<span class="cstat-no" title="statement not covered" >			activeScreens.forEach(<span class="fstat-no" title="function not covered" >(s</span>creen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				this.clearMonitoring(screen);</span>
+			});
+&nbsp;
+			// Clean up IPC sockets
+<span class="cstat-no" title="statement not covered" >			this.ipcPaths.forEach(<span class="fstat-no" title="function not covered" >(i</span>pcPath) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (fs.existsSync(ipcPath)) {</span>
+<span class="cstat-no" title="statement not covered" >						fs.unlinkSync(ipcPath);</span>
+					}
+				} catch (error) {
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`Failed to remove IPC socket ${ipcPath}`,
+						'PlayerService',
+						error instanceof Error ? error : new Error(String(error))
+					);
+				}
+			});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			this.ipcPaths.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.streams.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.manuallyClosedScreens.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.disabledScreens.clear();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info('Player service cleanup complete', 'PlayerService');</span>
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Error during player service cleanup',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+<span class="cstat-no" title="statement not covered" >			throw error;</span>
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >isRetrying(</span>screen: number): boolean {
+<span class="cstat-no" title="statement not covered" >		return this.streamRetries.has(screen);</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >async </span>ensurePlayersRunning(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Check all screen configs and ensure they have players running if enabled
+<span class="cstat-no" title="statement not covered" >			for (const screen of this.config.player.screens) {</span>
+				// Skip if screen is disabled
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (</span>
+					!screen.enabled ||
+					this.disabledScreens.has(screen.screen) ||
+					this.manuallyClosedScreens.has(screen.screen)
+				) {
+<span class="cstat-no" title="statement not covered" >					logger.debug(</span>
+						`Skipping disabled or manually closed screen ${screen.screen}`,
+						'PlayerService'
+					);
+<span class="cstat-no" title="statement not covered" >					continue;</span>
+				}
+&nbsp;
+				// Skip if a stream is already running on this screen
+				const isStreamRunning = <span class="cstat-no" title="statement not covered" >this.streams.has(screen.screen);</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamRunning) {</span>
+<span class="cstat-no" title="statement not covered" >					continue;</span>
+				}
+&nbsp;
+				// Start a player with a dummy source
+				const options: StreamOptions &amp; { screen: number } = <span class="cstat-no" title="statement not covered" >{</span>
+					url: 'about:blank', // Use about:blank as dummy source
+					screen: screen.screen,
+					quality: 'best',
+					volume: screen.volume || this.config.player.defaultVolume
+				};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					await this.startStream(options);</span>
+<span class="cstat-no" title="statement not covered" >					logger.info(`Started player for screen ${screen.screen}`, 'PlayerService');</span>
+				} catch (error) {
+<span class="cstat-no" title="statement not covered" >					logger.error(</span>
+						`Failed to start player for screen ${screen.screen}`,
+						'PlayerService',
+						error instanceof Error ? error : new Error(String(error))
+					);
+				}
+			}
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Failed to ensure players are running',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >disableScreen(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`PlayerService: Disabling screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		this.disabledScreens.add(screen);</span>
+&nbsp;
+		// Stop any running stream for this screen
+<span class="cstat-no" title="statement not covered" >		this.stopStream(screen, true).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(`Failed to stop stream when disabling screen ${screen}`, 'PlayerService', error);</span>
+		});
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >enableScreen(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`PlayerService: Enabling screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		this.disabledScreens.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.manuallyClosedScreens.delete(screen);</span>
+&nbsp;
+		// Ensure players get restarted on this screen in the next ensurePlayersRunning call
+		// We don't start it immediately to allow for proper initialization
+	}
+&nbsp;
+	// Helper method to extract title from URL
+	private <span class="fstat-no" title="function not covered" >extractTitleFromUrl(</span>url: string): string | null {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Extract video ID from YouTube URL
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('youtube.com') || url.includes('youtu.be')) {</span>
+				const urlObj = <span class="cstat-no" title="statement not covered" >new URL(url);</span>
+				let videoId;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				if (url.includes('youtube.com/watch')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = urlObj.searchParams.get('v');</span>
+				} else <span class="cstat-no" title="statement not covered" >if (url.includes('youtu.be/')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = url.split('youtu.be/')[1]?.split(/[/?#]/)[0];</span>
+				} else <span class="cstat-no" title="statement not covered" >if (url.includes('youtube.com/live/')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = url.split('youtube.com/live/')[1]?.split(/[/?#]/)[0];</span>
+				} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('youtube.com/channel/')) {</span>
+					const channelId = <span class="cstat-no" title="statement not covered" >url.split('youtube.com/channel/')[1]?.split(/[/?#]/)[0];</span>
+<span class="cstat-no" title="statement not covered" >					return channelId ? `YouTube Channel (${channelId})` : 'YouTube Stream';</span>
+				}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				return videoId ? `YouTube Video (${videoId})` : 'YouTube Stream';</span>
+			}
+&nbsp;
+			// Extract channel name from Twitch URL
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('twitch.tv')) {</span>
+				const channelName = <span class="cstat-no" title="statement not covered" >url.split('twitch.tv/')[1]?.split(/[/?#]/)[0];</span>
+<span class="cstat-no" title="statement not covered" >				return channelName ? `Twitch Stream (${channelName})` : 'Twitch Stream';</span>
+			}
+&nbsp;
+			// For other URLs, use the hostname
+			const hostname = <span class="cstat-no" title="statement not covered" >new URL(url).hostname;</span>
+<span class="cstat-no" title="statement not covered" >			return hostname ? `Stream from ${hostname}` : 'Unknown Stream';</span>
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.warn(</span>
+				`Failed to extract title from URL: ${url}`,
+				'PlayerService',
+				err instanceof Error ? err : new Error(String(err))
+			);
+<span class="cstat-no" title="statement not covered" >			return 'Unknown Stream';</span>
+		}
+	}
+&nbsp;
+	/**
+	 * Sends a command directly to the MPV IPC socket
+	 */
+	private <span class="fstat-no" title="function not covered" >async </span>sendMpvCommand(screen: number, command: string): Promise&lt;void&gt; {
+		const ipcPath = <span class="cstat-no" title="statement not covered" >this.ipcPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!ipcPath) {</span>
+			const errorMessage = <span class="cstat-no" title="statement not covered" >`No IPC socket for screen ${screen}`;</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(errorMessage, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(errorMessage);</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				const socket = <span class="cstat-no" title="statement not covered" >net.createConnection(ipcPath);</span>
+				let hasResponded = <span class="cstat-no" title="statement not covered" >false;</span>
+&nbsp;
+				// Set a shorter connection timeout
+<span class="cstat-no" title="statement not covered" >				socket.setTimeout(500);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('connect', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+					const mpvCommand = <span class="cstat-no" title="statement not covered" >JSON.stringify({ command: [command] });</span>
+<span class="cstat-no" title="statement not covered" >					socket.write(mpvCommand + '\n', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+						// Wait a brief moment after writing to ensure command is sent
+<span class="cstat-no" title="statement not covered" >						setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >							<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >								hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >								socket.end();</span>
+<span class="cstat-no" title="statement not covered" >								resolve();</span>
+							}
+						}, 100);
+					});
+				});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.destroy();</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to send command to screen ${screen}`,
+							'PlayerService',
+							err.message
+						);
+<span class="cstat-no" title="statement not covered" >						reject(err);</span>
+					}
+				});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('timeout', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.destroy();</span>
+						const error = <span class="cstat-no" title="statement not covered" >new Error('Socket timeout');</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Command send timeout for screen ${screen}`,
+							'PlayerService',
+							error.message
+						);
+<span class="cstat-no" title="statement not covered" >						reject(error);</span>
+					}
+				});
+&nbsp;
+				// Cleanup socket on any response
+<span class="cstat-no" title="statement not covered" >				socket.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.end();</span>
+<span class="cstat-no" title="statement not covered" >						resolve();</span>
+					}
+				});
+&nbsp;
+				// Handle socket close
+<span class="cstat-no" title="statement not covered" >				socket.on('close', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						reject(new Error('Socket closed unexpectedly'));</span>
+					}
+				});
+			} catch (err) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Command send error for screen ${screen}`,
+					'PlayerService',
+					err instanceof Error ? err.message : String(err)
+				);
+<span class="cstat-no" title="statement not covered" >				reject(err);</span>
+			}
+		});
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleError(</span>screen: number, error: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >		logger.error(</span>
+			`Stream error on screen ${screen}: ${errorMessage}`,
+			'PlayerService',
+			errorMessage
+		);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.errorCallback) {</span>
+<span class="cstat-no" title="statement not covered" >			this.errorCallback({</span>
+				screen,
+				error: errorMessage,
+				code: -1
+			});
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleStreamEnd(</span>screen: number, error?: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : error ? String(error) : undefined;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.endCallback) {</span>
+<span class="cstat-no" title="statement not covered" >			this.endCallback({</span>
+				screen,
+				error: errorMessage
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(</span>
+			`Stream ended on screen ${screen}${errorMessage ? `: ${errorMessage}` : ''}`,
+			'PlayerService'
+		);
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >logError(</span>message: string): void {
+<span class="cstat-no" title="statement not covered" >		logger.error(message, 'PlayerService');</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleProcessError(</span>screen: number, error: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >		this.handleError(screen, errorMessage);</span>
+	}
+}
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/player_manager.ts.html b/coverage/lcov-report/src/server/services/player_manager.ts.html
new file mode 100644
index 0000000..2ab9a64
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/player_manager.ts.html
@@ -0,0 +1,448 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/player_manager.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> player_manager.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/42</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/41</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { StreamInstance } from '../../types/stream_instance.js';
+import type { Config } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+interface WorkerData {
+  screen: number;
+  url: string;
+  config: Config;
+}
+&nbsp;
+interface WorkerMessage {
+  type: string;
+  data?: unknown;
+}
+&nbsp;
+interface WorkerOptions {
+  type?: 'classic' | 'module';
+}
+&nbsp;
+declare class Worker extends EventTarget {
+  constructor(scriptURL: string | URL, options?: WorkerOptions);
+  postMessage(message: WorkerMessage): void;
+  terminate(): void;
+  onmessage: ((this: Worker, ev: MessageEvent&lt;WorkerMessage&gt;) =&gt; void) | null;
+  onerror: ((this: Worker, ev: ErrorEvent) =&gt; void) | null;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class P</span>layerManager extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >workers: Map&lt;number, Worker&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, StreamInstance&gt; = new Map();</span>
+  private config: Config;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(c</span>onfig: Config) {
+<span class="cstat-no" title="statement not covered" >    super();</span>
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >    this.initialize();</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >initialize(</span>): void {
+    // Create workers for each enabled stream config
+<span class="cstat-no" title="statement not covered" >    for (const stream of this.config.streams) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream.enabled) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const worker = <span class="cstat-no" title="statement not covered" >new Worker(new URL('./stream_worker.js', import.meta.url), {</span>
+          type: 'module'
+        });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        this.workers.set(stream.screen, worker);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        worker.onmessage = <span class="fstat-no" title="function not covered" >(e</span>vent: MessageEvent&lt;WorkerMessage&gt;) =&gt; {</span>
+          const message = <span class="cstat-no" title="statement not covered" >event.data;</span>
+<span class="cstat-no" title="statement not covered" >          switch (message.type) {</span>
+            case 'streamInfo':
+<span class="cstat-no" title="statement not covered" >              this.handleStreamInfo(stream.screen, message.data as StreamInstance);</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            case 'error':
+<span class="cstat-no" title="statement not covered" >              this.handleStreamError(stream.screen, String(message.data));</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+          }
+        };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        worker.onerror = <span class="fstat-no" title="function not covered" >(e</span>vent: ErrorEvent) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          this.handleStreamError(stream.screen, event.message);</span>
+        };
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          `Failed to initialize worker for screen ${stream.screen}`,
+          'PlayerManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>startStream(screen: number, url: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const worker = <span class="cstat-no" title="statement not covered" >this.workers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!worker) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`No worker found for screen ${screen}`);</span>
+      }
+&nbsp;
+      const data: WorkerData = <span class="cstat-no" title="statement not covered" >{</span>
+        screen,
+        url,
+        config: this.config
+      };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      worker.postMessage({ type: 'start', data });</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to start stream on screen ${screen}`,
+        'PlayerManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number): Promise&lt;void&gt; {
+    const worker = <span class="cstat-no" title="statement not covered" >this.workers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (worker) {</span>
+<span class="cstat-no" title="statement not covered" >      worker.postMessage({ type: 'stop' });</span>
+<span class="cstat-no" title="statement not covered" >      worker.terminate();</span>
+<span class="cstat-no" title="statement not covered" >      this.workers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >handleStreamInfo(</span>screen: number, data: StreamInstance): void {
+<span class="cstat-no" title="statement not covered" >    this.streams.set(screen, data);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('streamUpdate', { screen, data });</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >handleStreamError(</span>screen: number, error: string): void {
+<span class="cstat-no" title="statement not covered" >    logger.error(`Stream error on screen ${screen}: ${error}`, 'PlayerManager');</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('streamError', { screen, error });</span>
+  }
+&nbsp;
+  // Add methods for volume control, quality changes, etc.
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/queue_service.ts.html b/coverage/lcov-report/src/server/services/queue_service.ts.html
new file mode 100644
index 0000000..92f198d
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/queue_service.ts.html
@@ -0,0 +1,601 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/queue_service.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> queue_service.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/76</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/36</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/20</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/74</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { StreamSource } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+export interface QueueEvents {
+  'queue:updated': (screen: number, queue: StreamSource[]) =&gt; void;
+  'queue:empty': (screen: number) =&gt; void;
+  'all:watched': (screen: number) =&gt; void;
+}
+&nbsp;
+class QueueService extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >queues: Map&lt;number, StreamSource[]&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >watchedStreams: Set&lt;string&gt; = new Set();</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    super();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('QueueService initialized', 'QueueService');</span>
+  }
+&nbsp;
+  // Queue Management
+  public <span class="fstat-no" title="function not covered" >setQueue(</span>screen: number, queue: StreamSource[]): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!queue || !Array.isArray(queue)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid queue array provided for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Filter out any null or undefined entries
+    const validQueue = <span class="cstat-no" title="statement not covered" >queue.filter(<span class="fstat-no" title="function not covered" >item </span>=&gt; <span class="cstat-no" title="statement not covered" >item &amp;&amp; item.url)</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, validQueue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Set queue for screen ${screen}. Queue size: ${validQueue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Queue contents: ${JSON.stringify(validQueue)}`, 'QueueService');</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (validQueue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} is empty, emitting all:watched event`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('all:watched', screen);</span>
+    } else {
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} updated with ${validQueue.length} items`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queue:updated', screen, validQueue);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getQueue(</span>screen: number): StreamSource[] {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Getting queue for screen ${screen}. Queue size: ${queue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    return queue;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >addToQueue(</span>screen: number, source: StreamSource): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!source || !source.url) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid stream source provided for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >this.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >    queue.push(source);</span>
+<span class="cstat-no" title="statement not covered" >    this.setQueue(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Added stream ${source.url} to queue for screen ${screen}`, 'QueueService');</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearQueue(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, []);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Cleared queue for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:updated', screen, []);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:empty', screen);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearAllQueues(</span>): void {
+<span class="cstat-no" title="statement not covered" >    this.queues.clear();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared all queues', 'QueueService');</span>
+  }
+&nbsp;
+  // Stream Management
+  public <span class="fstat-no" title="function not covered" >getNextStream(</span>screen: number): StreamSource | undefined {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+    const nextStream = <span class="cstat-no" title="statement not covered" >queue[0];</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Getting next stream for screen ${screen}. Next stream: ${nextStream?.url || 'none'}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    return nextStream;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >removeFromQueue(</span>screen: number, index: number): void {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+    
+    // Validate index
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (index &lt; 0 || index &gt;= queue.length) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid index ${index} for queue of screen ${screen} with length ${queue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+    // Remove the item
+    const removedItem = <span class="cstat-no" title="statement not covered" >queue.splice(index, 1)[0];</span>
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, queue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Removed stream ${removedItem.url} from queue for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Queue size after removal: ${queue.length}`, 'QueueService');</span>
+    
+    // Emit queue updated event
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:updated', screen, queue);</span>
+    
+    // If queue is now empty, emit queue empty event
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (queue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} is now empty`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queue:empty', screen);</span>
+    }
+  }
+&nbsp;
+  // Watched Streams Management
+  public <span class="fstat-no" title="function not covered" >markStreamAsWatched(</span>url: string): void {
+<span class="cstat-no" title="statement not covered" >    this.watchedStreams.add(url);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >isStreamWatched(</span>url: string): boolean {
+<span class="cstat-no" title="statement not covered" >    return this.watchedStreams.has(url);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getWatchedStreams(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return Array.from(this.watchedStreams);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearWatchedStreams(</span>): void {
+<span class="cstat-no" title="statement not covered" >    this.watchedStreams.clear();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared watched streams history', 'QueueService');</span>
+  }
+&nbsp;
+  // Event Handling
+  override <span class="fstat-no" title="function not covered" >on&lt;</span>K extends keyof QueueEvents&gt;(event: K, listener: QueueEvents[K]): this {
+<span class="cstat-no" title="statement not covered" >    super.on(event, listener);</span>
+<span class="cstat-no" title="statement not covered" >    return this;</span>
+  }
+&nbsp;
+  override <span class="fstat-no" title="function not covered" >off&lt;</span>K extends keyof QueueEvents&gt;(event: K, listener: QueueEvents[K]): this {
+<span class="cstat-no" title="statement not covered" >    super.off(event, listener);</span>
+<span class="cstat-no" title="statement not covered" >    return this;</span>
+  }
+&nbsp;
+  // Add method to check if any streams are unwatched
+<span class="fstat-no" title="function not covered" >  hasUnwatchedStreams(</span>streams: StreamSource[]): boolean {
+<span class="cstat-no" title="statement not covered" >    return streams.some(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >!this.watchedStreams.has(stream.url))</span>;</span>
+  }
+&nbsp;
+  // Add method to filter unwatched streams
+  public <span class="fstat-no" title="function not covered" >filterUnwatchedStreams(</span>streams: StreamSource[]): StreamSource[] {
+    // First check if we have any unwatched non-favorite streams
+    const hasUnwatchedNonFavorites = <span class="cstat-no" title="statement not covered" >streams.some(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+      const isFavorite = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined &amp;&amp; stream.priority &lt; 900;</span>
+<span class="cstat-no" title="statement not covered" >      return !isFavorite &amp;&amp; !this.watchedStreams.has(stream.url);</span>
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return streams.filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+      const isFavorite = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined &amp;&amp; stream.priority &lt; 900;</span>
+      const isWatched = <span class="cstat-no" title="statement not covered" >this.isStreamWatched(stream.url);</span>
+      
+      // If it's not watched, always include it
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!isWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      }
+      
+      // If it's watched and a favorite, only include if all non-favorites are watched
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isFavorite &amp;&amp; !hasUnwatchedNonFavorites) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.debug(`QueueService: Including watched favorite stream ${stream.url} with priority ${stream.priority} because all non-favorites are watched`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      }
+      
+      // Otherwise, don't include watched streams
+<span class="cstat-no" title="statement not covered" >      logger.debug(`QueueService: Filtering out watched stream ${stream.url}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    });
+  }
+}
+&nbsp;
+// Create and export singleton instance
+export const <span class="cstat-no" title="statement not covered" >queueService = new QueueService(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/twitch.ts.html b/coverage/lcov-report/src/server/services/twitch.ts.html
new file mode 100644
index 0000000..ebfd3fc
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/twitch.ts.html
@@ -0,0 +1,715 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/twitch.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> twitch.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/81</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/51</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/74</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { ApiClient, type HelixStream } from '@twurple/api';</span>
+<span class="cstat-no" title="statement not covered" >import { RefreshingAuthProvider } from '@twurple/auth';</span>
+import type { TwitchAuth } from '../db/database.js';
+import type { StreamSource, StreamService } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+interface GetTwitchStreamsOptions {
+  channels?: string[];
+  limit?: number;
+  sort?: 'viewers' | 'started_at';
+  tags?: string[];
+  language?: string;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class T</span>witchService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >client: ApiClient | null = null;</span>
+  private clientId: string;
+  private clientSecret: string;
+  private <span class="cstat-no" title="statement not covered" >authProvider: RefreshingAuthProvider | null = null;</span>
+  private <span class="cstat-no" title="statement not covered" >filters: string[] = [];</span>
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: string[] = [];</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(c</span>lientId: string, clientSecret: string, filters: string[] = <span class="branch-0 cbranch-no" title="branch not covered" >[])</span> {
+<span class="cstat-no" title="statement not covered" >    this.clientId = clientId;</span>
+<span class="cstat-no" title="statement not covered" >    this.clientSecret = clientSecret;</span>
+<span class="cstat-no" title="statement not covered" >    this.filters = filters;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Initialize with client credentials flow for non-user-specific requests
+<span class="cstat-no" title="statement not covered" >      this.authProvider = new RefreshingAuthProvider({</span>
+        clientId,
+        clientSecret,
+      });
+<span class="cstat-no" title="statement not covered" >      this.client = new ApiClient({ authProvider: this.authProvider });</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Twitch service initialized', 'TwitchService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn('Failed to initialize Twitch service - some features will be disabled', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getStreams(options: GetTwitchStreamsOptions): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) <span class="cstat-no" title="statement not covered" >return [];</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const limit = <span class="cstat-no" title="statement not covered" >options.limit || 25;</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options.channels || [];</span>
+      let results: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+      
+      // If we have more than 100 channels, we need to batch the requests
+<span class="cstat-no" title="statement not covered" >      if (channels.length &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Batching ${channels.length} channels into multiple requests (max 100 per request)`, 'TwitchService');</span>
+        
+        // Process channels in batches of 100
+<span class="cstat-no" title="statement not covered" >        for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; channels.length; i += 100) {</span>
+          const batchChannels = <span class="cstat-no" title="statement not covered" >channels.slice(i, i + 100);</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Processing batch ${Math.floor(i/100) + 1} with ${batchChannels.length} channels`, 'TwitchService');</span>
+          
+          const batchStreams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreams({</span>
+            userName: batchChannels,
+            language: options.language
+          });
+          
+          // Convert to StreamSource format and add to results
+          const batchResults = <span class="cstat-no" title="statement not covered" >batchStreams.data.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+            url: `https://twitch.tv/${stream.userName}`,
+            title: stream.title,
+            platform: 'twitch' as const,
+            viewerCount: stream.viewers,
+            startTime: stream.startDate.getTime(),
+            sourceStatus: 'live' as const,
+            channelId: stream.userName.toLowerCase() // Add channelId for sorting
+          }));
+          
+<span class="cstat-no" title="statement not covered" >          results = [...results, ...batchResults];</span>
+          
+          // If we've reached the desired limit, stop processing batches
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (limit &amp;&amp; results.length &gt;= limit) {</span>
+<span class="cstat-no" title="statement not covered" >            results = results.slice(0, limit);</span>
+<span class="cstat-no" title="statement not covered" >            break;</span>
+          }
+        }
+      } else {
+        // Original logic for &lt;= 100 channels
+        const streams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreams({</span>
+          limit,
+          userName: channels,
+          language: options.language
+        });
+&nbsp;
+        // Convert to StreamSource format
+<span class="cstat-no" title="statement not covered" >        results = streams.data.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+          url: `https://twitch.tv/${stream.userName}`,
+          title: stream.title,
+          platform: 'twitch' as const,
+          viewerCount: stream.viewers,
+          startTime: stream.startDate.getTime(),
+          sourceStatus: 'live' as const,
+          channelId: stream.userName.toLowerCase() // Add channelId for sorting
+        }));
+      }
+&nbsp;
+      // If these are favorite channels, preserve their original order
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // Create a map of channel IDs to their original position in the favorites array
+        const channelOrderMap = <span class="cstat-no" title="statement not covered" >new Map&lt;string, number&gt;();</span>
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          channelOrderMap.set(channelId.toLowerCase(), index);</span>
+        });
+        
+        // Sort streams by their channel's position in the favorites array
+<span class="cstat-no" title="statement not covered" >        results.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          const aOrder = <span class="cstat-no" title="statement not covered" >a.channelId ? channelOrderMap.get(a.channelId) ?? 999 : 999;</span>
+          const bOrder = <span class="cstat-no" title="statement not covered" >b.channelId ? channelOrderMap.get(b.channelId) ?? 999 : 999;</span>
+          
+          // First sort by channel order (favorites order)
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aOrder !== bOrder) {</span>
+<span class="cstat-no" title="statement not covered" >            return aOrder - bOrder;</span>
+          }
+          
+          // Then by viewer count for streams from the same channel
+<span class="cstat-no" title="statement not covered" >          return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+        });
+      }
+      // Sort by viewers if requested (for non-favorite channels)
+      else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (options.sort === 'viewers') {</span>
+<span class="cstat-no" title="statement not covered" >        results.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(b.viewerCount || 0) - (a.viewerCount || 0))</span>;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${results.length} Twitch streams`, 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      return results;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to get Twitch streams',
+        'TwitchService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getVTuberStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.getStreams({</span>
+      limit,
+      tags: ['VTuber']
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getJapaneseStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.getStreams({</span>
+      limit,
+      language: 'ja'
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getFollowedStreams(userId: string): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client || !this.authProvider) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn('User not authenticated', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const userClient = <span class="cstat-no" title="statement not covered" >new ApiClient({ authProvider: this.authProvider });</span>
+      // @ts-expect-error - Twitch API types are incomplete
+      const follows = <span class="cstat-no" title="statement not covered" >await userClient.users.getFollows({ userId });</span>
+      const channelIds = <span class="cstat-no" title="statement not covered" >follows.data.map(<span class="fstat-no" title="function not covered" >(f</span>ollow: { followedUserId: string }) =&gt; <span class="cstat-no" title="statement not covered" >follow.followedUserId)</span>;</span>
+      
+      const streams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreamsByUserIds(channelIds);</span>
+      const streamData = (<span class="cstat-no" title="statement not covered" >streams as unknown as { data: HelixStream[] }).data;</span>
+      
+<span class="cstat-no" title="statement not covered" >      return streamData.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+        url: `https://twitch.tv/${stream.userName}`,
+        title: stream.title,
+        platform: 'twitch' as const,
+        viewerCount: stream.viewers
+      }));
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch followed streams', 
+        'TwitchService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setUserAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.authProvider) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error('Twitch service not initialized');</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      await this.authProvider.addUserForToken({</span>
+        accessToken: auth.accessToken,
+        refreshToken: auth.refreshToken,
+        expiresIn: Math.floor((auth.expiresAt - Date.now()) / 1000),
+        obtainmentTimestamp: Date.now()
+      }, ['user:read:follows']);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Twitch user auth set for user ${auth.userId}`, 'TwitchService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Failed to set Twitch user auth', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/services/youtube.ts.html b/coverage/lcov-report/src/server/services/youtube.ts.html
new file mode 100644
index 0000000..c864140
--- /dev/null
+++ b/coverage/lcov-report/src/server/services/youtube.ts.html
@@ -0,0 +1,208 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/youtube.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> youtube.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { StreamService } from '../../types/stream.js';
+import type { StreamSource } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class Y</span>ouTubeService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: string[] = [];</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(f</span>avoriteChannels: string[]) {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favoriteChannels;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(options?: { channels?: string[]; limit?: number }): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options?.channels || this.favoriteChannels;</span>
+      const limit = <span class="cstat-no" title="statement not covered" >options?.limit || 25;</span>
+&nbsp;
+      // For each channel, create a basic entry that will be updated with live status
+      const streams: StreamSource[] = <span class="cstat-no" title="statement not covered" >channels.map(<span class="fstat-no" title="function not covered" >channel </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+        url: `https://youtube.com/${channel}`,
+        title: `${channel}'s channel`,
+        platform: 'youtube',
+        viewerCount: 0,
+        channelId: channel
+      }));
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Found ${streams.length} YouTube channels`, 'YouTubeService');</span>
+<span class="cstat-no" title="statement not covered" >      return streams.slice(0, limit);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch YouTube streams',
+        'YouTubeService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Updated YouTube favorites: ${channels.join(', ')}`, 'YouTubeService');</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/stream_manager.ts.html b/coverage/lcov-report/src/server/stream_manager.ts.html
new file mode 100644
index 0000000..35a606e
--- /dev/null
+++ b/coverage/lcov-report/src/server/stream_manager.ts.html
@@ -0,0 +1,5392 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/stream_manager.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> stream_manager.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/733</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/387</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/129</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/697</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a>
+<a name='L1125'></a><a href='#L1125'>1125</a>
+<a name='L1126'></a><a href='#L1126'>1126</a>
+<a name='L1127'></a><a href='#L1127'>1127</a>
+<a name='L1128'></a><a href='#L1128'>1128</a>
+<a name='L1129'></a><a href='#L1129'>1129</a>
+<a name='L1130'></a><a href='#L1130'>1130</a>
+<a name='L1131'></a><a href='#L1131'>1131</a>
+<a name='L1132'></a><a href='#L1132'>1132</a>
+<a name='L1133'></a><a href='#L1133'>1133</a>
+<a name='L1134'></a><a href='#L1134'>1134</a>
+<a name='L1135'></a><a href='#L1135'>1135</a>
+<a name='L1136'></a><a href='#L1136'>1136</a>
+<a name='L1137'></a><a href='#L1137'>1137</a>
+<a name='L1138'></a><a href='#L1138'>1138</a>
+<a name='L1139'></a><a href='#L1139'>1139</a>
+<a name='L1140'></a><a href='#L1140'>1140</a>
+<a name='L1141'></a><a href='#L1141'>1141</a>
+<a name='L1142'></a><a href='#L1142'>1142</a>
+<a name='L1143'></a><a href='#L1143'>1143</a>
+<a name='L1144'></a><a href='#L1144'>1144</a>
+<a name='L1145'></a><a href='#L1145'>1145</a>
+<a name='L1146'></a><a href='#L1146'>1146</a>
+<a name='L1147'></a><a href='#L1147'>1147</a>
+<a name='L1148'></a><a href='#L1148'>1148</a>
+<a name='L1149'></a><a href='#L1149'>1149</a>
+<a name='L1150'></a><a href='#L1150'>1150</a>
+<a name='L1151'></a><a href='#L1151'>1151</a>
+<a name='L1152'></a><a href='#L1152'>1152</a>
+<a name='L1153'></a><a href='#L1153'>1153</a>
+<a name='L1154'></a><a href='#L1154'>1154</a>
+<a name='L1155'></a><a href='#L1155'>1155</a>
+<a name='L1156'></a><a href='#L1156'>1156</a>
+<a name='L1157'></a><a href='#L1157'>1157</a>
+<a name='L1158'></a><a href='#L1158'>1158</a>
+<a name='L1159'></a><a href='#L1159'>1159</a>
+<a name='L1160'></a><a href='#L1160'>1160</a>
+<a name='L1161'></a><a href='#L1161'>1161</a>
+<a name='L1162'></a><a href='#L1162'>1162</a>
+<a name='L1163'></a><a href='#L1163'>1163</a>
+<a name='L1164'></a><a href='#L1164'>1164</a>
+<a name='L1165'></a><a href='#L1165'>1165</a>
+<a name='L1166'></a><a href='#L1166'>1166</a>
+<a name='L1167'></a><a href='#L1167'>1167</a>
+<a name='L1168'></a><a href='#L1168'>1168</a>
+<a name='L1169'></a><a href='#L1169'>1169</a>
+<a name='L1170'></a><a href='#L1170'>1170</a>
+<a name='L1171'></a><a href='#L1171'>1171</a>
+<a name='L1172'></a><a href='#L1172'>1172</a>
+<a name='L1173'></a><a href='#L1173'>1173</a>
+<a name='L1174'></a><a href='#L1174'>1174</a>
+<a name='L1175'></a><a href='#L1175'>1175</a>
+<a name='L1176'></a><a href='#L1176'>1176</a>
+<a name='L1177'></a><a href='#L1177'>1177</a>
+<a name='L1178'></a><a href='#L1178'>1178</a>
+<a name='L1179'></a><a href='#L1179'>1179</a>
+<a name='L1180'></a><a href='#L1180'>1180</a>
+<a name='L1181'></a><a href='#L1181'>1181</a>
+<a name='L1182'></a><a href='#L1182'>1182</a>
+<a name='L1183'></a><a href='#L1183'>1183</a>
+<a name='L1184'></a><a href='#L1184'>1184</a>
+<a name='L1185'></a><a href='#L1185'>1185</a>
+<a name='L1186'></a><a href='#L1186'>1186</a>
+<a name='L1187'></a><a href='#L1187'>1187</a>
+<a name='L1188'></a><a href='#L1188'>1188</a>
+<a name='L1189'></a><a href='#L1189'>1189</a>
+<a name='L1190'></a><a href='#L1190'>1190</a>
+<a name='L1191'></a><a href='#L1191'>1191</a>
+<a name='L1192'></a><a href='#L1192'>1192</a>
+<a name='L1193'></a><a href='#L1193'>1193</a>
+<a name='L1194'></a><a href='#L1194'>1194</a>
+<a name='L1195'></a><a href='#L1195'>1195</a>
+<a name='L1196'></a><a href='#L1196'>1196</a>
+<a name='L1197'></a><a href='#L1197'>1197</a>
+<a name='L1198'></a><a href='#L1198'>1198</a>
+<a name='L1199'></a><a href='#L1199'>1199</a>
+<a name='L1200'></a><a href='#L1200'>1200</a>
+<a name='L1201'></a><a href='#L1201'>1201</a>
+<a name='L1202'></a><a href='#L1202'>1202</a>
+<a name='L1203'></a><a href='#L1203'>1203</a>
+<a name='L1204'></a><a href='#L1204'>1204</a>
+<a name='L1205'></a><a href='#L1205'>1205</a>
+<a name='L1206'></a><a href='#L1206'>1206</a>
+<a name='L1207'></a><a href='#L1207'>1207</a>
+<a name='L1208'></a><a href='#L1208'>1208</a>
+<a name='L1209'></a><a href='#L1209'>1209</a>
+<a name='L1210'></a><a href='#L1210'>1210</a>
+<a name='L1211'></a><a href='#L1211'>1211</a>
+<a name='L1212'></a><a href='#L1212'>1212</a>
+<a name='L1213'></a><a href='#L1213'>1213</a>
+<a name='L1214'></a><a href='#L1214'>1214</a>
+<a name='L1215'></a><a href='#L1215'>1215</a>
+<a name='L1216'></a><a href='#L1216'>1216</a>
+<a name='L1217'></a><a href='#L1217'>1217</a>
+<a name='L1218'></a><a href='#L1218'>1218</a>
+<a name='L1219'></a><a href='#L1219'>1219</a>
+<a name='L1220'></a><a href='#L1220'>1220</a>
+<a name='L1221'></a><a href='#L1221'>1221</a>
+<a name='L1222'></a><a href='#L1222'>1222</a>
+<a name='L1223'></a><a href='#L1223'>1223</a>
+<a name='L1224'></a><a href='#L1224'>1224</a>
+<a name='L1225'></a><a href='#L1225'>1225</a>
+<a name='L1226'></a><a href='#L1226'>1226</a>
+<a name='L1227'></a><a href='#L1227'>1227</a>
+<a name='L1228'></a><a href='#L1228'>1228</a>
+<a name='L1229'></a><a href='#L1229'>1229</a>
+<a name='L1230'></a><a href='#L1230'>1230</a>
+<a name='L1231'></a><a href='#L1231'>1231</a>
+<a name='L1232'></a><a href='#L1232'>1232</a>
+<a name='L1233'></a><a href='#L1233'>1233</a>
+<a name='L1234'></a><a href='#L1234'>1234</a>
+<a name='L1235'></a><a href='#L1235'>1235</a>
+<a name='L1236'></a><a href='#L1236'>1236</a>
+<a name='L1237'></a><a href='#L1237'>1237</a>
+<a name='L1238'></a><a href='#L1238'>1238</a>
+<a name='L1239'></a><a href='#L1239'>1239</a>
+<a name='L1240'></a><a href='#L1240'>1240</a>
+<a name='L1241'></a><a href='#L1241'>1241</a>
+<a name='L1242'></a><a href='#L1242'>1242</a>
+<a name='L1243'></a><a href='#L1243'>1243</a>
+<a name='L1244'></a><a href='#L1244'>1244</a>
+<a name='L1245'></a><a href='#L1245'>1245</a>
+<a name='L1246'></a><a href='#L1246'>1246</a>
+<a name='L1247'></a><a href='#L1247'>1247</a>
+<a name='L1248'></a><a href='#L1248'>1248</a>
+<a name='L1249'></a><a href='#L1249'>1249</a>
+<a name='L1250'></a><a href='#L1250'>1250</a>
+<a name='L1251'></a><a href='#L1251'>1251</a>
+<a name='L1252'></a><a href='#L1252'>1252</a>
+<a name='L1253'></a><a href='#L1253'>1253</a>
+<a name='L1254'></a><a href='#L1254'>1254</a>
+<a name='L1255'></a><a href='#L1255'>1255</a>
+<a name='L1256'></a><a href='#L1256'>1256</a>
+<a name='L1257'></a><a href='#L1257'>1257</a>
+<a name='L1258'></a><a href='#L1258'>1258</a>
+<a name='L1259'></a><a href='#L1259'>1259</a>
+<a name='L1260'></a><a href='#L1260'>1260</a>
+<a name='L1261'></a><a href='#L1261'>1261</a>
+<a name='L1262'></a><a href='#L1262'>1262</a>
+<a name='L1263'></a><a href='#L1263'>1263</a>
+<a name='L1264'></a><a href='#L1264'>1264</a>
+<a name='L1265'></a><a href='#L1265'>1265</a>
+<a name='L1266'></a><a href='#L1266'>1266</a>
+<a name='L1267'></a><a href='#L1267'>1267</a>
+<a name='L1268'></a><a href='#L1268'>1268</a>
+<a name='L1269'></a><a href='#L1269'>1269</a>
+<a name='L1270'></a><a href='#L1270'>1270</a>
+<a name='L1271'></a><a href='#L1271'>1271</a>
+<a name='L1272'></a><a href='#L1272'>1272</a>
+<a name='L1273'></a><a href='#L1273'>1273</a>
+<a name='L1274'></a><a href='#L1274'>1274</a>
+<a name='L1275'></a><a href='#L1275'>1275</a>
+<a name='L1276'></a><a href='#L1276'>1276</a>
+<a name='L1277'></a><a href='#L1277'>1277</a>
+<a name='L1278'></a><a href='#L1278'>1278</a>
+<a name='L1279'></a><a href='#L1279'>1279</a>
+<a name='L1280'></a><a href='#L1280'>1280</a>
+<a name='L1281'></a><a href='#L1281'>1281</a>
+<a name='L1282'></a><a href='#L1282'>1282</a>
+<a name='L1283'></a><a href='#L1283'>1283</a>
+<a name='L1284'></a><a href='#L1284'>1284</a>
+<a name='L1285'></a><a href='#L1285'>1285</a>
+<a name='L1286'></a><a href='#L1286'>1286</a>
+<a name='L1287'></a><a href='#L1287'>1287</a>
+<a name='L1288'></a><a href='#L1288'>1288</a>
+<a name='L1289'></a><a href='#L1289'>1289</a>
+<a name='L1290'></a><a href='#L1290'>1290</a>
+<a name='L1291'></a><a href='#L1291'>1291</a>
+<a name='L1292'></a><a href='#L1292'>1292</a>
+<a name='L1293'></a><a href='#L1293'>1293</a>
+<a name='L1294'></a><a href='#L1294'>1294</a>
+<a name='L1295'></a><a href='#L1295'>1295</a>
+<a name='L1296'></a><a href='#L1296'>1296</a>
+<a name='L1297'></a><a href='#L1297'>1297</a>
+<a name='L1298'></a><a href='#L1298'>1298</a>
+<a name='L1299'></a><a href='#L1299'>1299</a>
+<a name='L1300'></a><a href='#L1300'>1300</a>
+<a name='L1301'></a><a href='#L1301'>1301</a>
+<a name='L1302'></a><a href='#L1302'>1302</a>
+<a name='L1303'></a><a href='#L1303'>1303</a>
+<a name='L1304'></a><a href='#L1304'>1304</a>
+<a name='L1305'></a><a href='#L1305'>1305</a>
+<a name='L1306'></a><a href='#L1306'>1306</a>
+<a name='L1307'></a><a href='#L1307'>1307</a>
+<a name='L1308'></a><a href='#L1308'>1308</a>
+<a name='L1309'></a><a href='#L1309'>1309</a>
+<a name='L1310'></a><a href='#L1310'>1310</a>
+<a name='L1311'></a><a href='#L1311'>1311</a>
+<a name='L1312'></a><a href='#L1312'>1312</a>
+<a name='L1313'></a><a href='#L1313'>1313</a>
+<a name='L1314'></a><a href='#L1314'>1314</a>
+<a name='L1315'></a><a href='#L1315'>1315</a>
+<a name='L1316'></a><a href='#L1316'>1316</a>
+<a name='L1317'></a><a href='#L1317'>1317</a>
+<a name='L1318'></a><a href='#L1318'>1318</a>
+<a name='L1319'></a><a href='#L1319'>1319</a>
+<a name='L1320'></a><a href='#L1320'>1320</a>
+<a name='L1321'></a><a href='#L1321'>1321</a>
+<a name='L1322'></a><a href='#L1322'>1322</a>
+<a name='L1323'></a><a href='#L1323'>1323</a>
+<a name='L1324'></a><a href='#L1324'>1324</a>
+<a name='L1325'></a><a href='#L1325'>1325</a>
+<a name='L1326'></a><a href='#L1326'>1326</a>
+<a name='L1327'></a><a href='#L1327'>1327</a>
+<a name='L1328'></a><a href='#L1328'>1328</a>
+<a name='L1329'></a><a href='#L1329'>1329</a>
+<a name='L1330'></a><a href='#L1330'>1330</a>
+<a name='L1331'></a><a href='#L1331'>1331</a>
+<a name='L1332'></a><a href='#L1332'>1332</a>
+<a name='L1333'></a><a href='#L1333'>1333</a>
+<a name='L1334'></a><a href='#L1334'>1334</a>
+<a name='L1335'></a><a href='#L1335'>1335</a>
+<a name='L1336'></a><a href='#L1336'>1336</a>
+<a name='L1337'></a><a href='#L1337'>1337</a>
+<a name='L1338'></a><a href='#L1338'>1338</a>
+<a name='L1339'></a><a href='#L1339'>1339</a>
+<a name='L1340'></a><a href='#L1340'>1340</a>
+<a name='L1341'></a><a href='#L1341'>1341</a>
+<a name='L1342'></a><a href='#L1342'>1342</a>
+<a name='L1343'></a><a href='#L1343'>1343</a>
+<a name='L1344'></a><a href='#L1344'>1344</a>
+<a name='L1345'></a><a href='#L1345'>1345</a>
+<a name='L1346'></a><a href='#L1346'>1346</a>
+<a name='L1347'></a><a href='#L1347'>1347</a>
+<a name='L1348'></a><a href='#L1348'>1348</a>
+<a name='L1349'></a><a href='#L1349'>1349</a>
+<a name='L1350'></a><a href='#L1350'>1350</a>
+<a name='L1351'></a><a href='#L1351'>1351</a>
+<a name='L1352'></a><a href='#L1352'>1352</a>
+<a name='L1353'></a><a href='#L1353'>1353</a>
+<a name='L1354'></a><a href='#L1354'>1354</a>
+<a name='L1355'></a><a href='#L1355'>1355</a>
+<a name='L1356'></a><a href='#L1356'>1356</a>
+<a name='L1357'></a><a href='#L1357'>1357</a>
+<a name='L1358'></a><a href='#L1358'>1358</a>
+<a name='L1359'></a><a href='#L1359'>1359</a>
+<a name='L1360'></a><a href='#L1360'>1360</a>
+<a name='L1361'></a><a href='#L1361'>1361</a>
+<a name='L1362'></a><a href='#L1362'>1362</a>
+<a name='L1363'></a><a href='#L1363'>1363</a>
+<a name='L1364'></a><a href='#L1364'>1364</a>
+<a name='L1365'></a><a href='#L1365'>1365</a>
+<a name='L1366'></a><a href='#L1366'>1366</a>
+<a name='L1367'></a><a href='#L1367'>1367</a>
+<a name='L1368'></a><a href='#L1368'>1368</a>
+<a name='L1369'></a><a href='#L1369'>1369</a>
+<a name='L1370'></a><a href='#L1370'>1370</a>
+<a name='L1371'></a><a href='#L1371'>1371</a>
+<a name='L1372'></a><a href='#L1372'>1372</a>
+<a name='L1373'></a><a href='#L1373'>1373</a>
+<a name='L1374'></a><a href='#L1374'>1374</a>
+<a name='L1375'></a><a href='#L1375'>1375</a>
+<a name='L1376'></a><a href='#L1376'>1376</a>
+<a name='L1377'></a><a href='#L1377'>1377</a>
+<a name='L1378'></a><a href='#L1378'>1378</a>
+<a name='L1379'></a><a href='#L1379'>1379</a>
+<a name='L1380'></a><a href='#L1380'>1380</a>
+<a name='L1381'></a><a href='#L1381'>1381</a>
+<a name='L1382'></a><a href='#L1382'>1382</a>
+<a name='L1383'></a><a href='#L1383'>1383</a>
+<a name='L1384'></a><a href='#L1384'>1384</a>
+<a name='L1385'></a><a href='#L1385'>1385</a>
+<a name='L1386'></a><a href='#L1386'>1386</a>
+<a name='L1387'></a><a href='#L1387'>1387</a>
+<a name='L1388'></a><a href='#L1388'>1388</a>
+<a name='L1389'></a><a href='#L1389'>1389</a>
+<a name='L1390'></a><a href='#L1390'>1390</a>
+<a name='L1391'></a><a href='#L1391'>1391</a>
+<a name='L1392'></a><a href='#L1392'>1392</a>
+<a name='L1393'></a><a href='#L1393'>1393</a>
+<a name='L1394'></a><a href='#L1394'>1394</a>
+<a name='L1395'></a><a href='#L1395'>1395</a>
+<a name='L1396'></a><a href='#L1396'>1396</a>
+<a name='L1397'></a><a href='#L1397'>1397</a>
+<a name='L1398'></a><a href='#L1398'>1398</a>
+<a name='L1399'></a><a href='#L1399'>1399</a>
+<a name='L1400'></a><a href='#L1400'>1400</a>
+<a name='L1401'></a><a href='#L1401'>1401</a>
+<a name='L1402'></a><a href='#L1402'>1402</a>
+<a name='L1403'></a><a href='#L1403'>1403</a>
+<a name='L1404'></a><a href='#L1404'>1404</a>
+<a name='L1405'></a><a href='#L1405'>1405</a>
+<a name='L1406'></a><a href='#L1406'>1406</a>
+<a name='L1407'></a><a href='#L1407'>1407</a>
+<a name='L1408'></a><a href='#L1408'>1408</a>
+<a name='L1409'></a><a href='#L1409'>1409</a>
+<a name='L1410'></a><a href='#L1410'>1410</a>
+<a name='L1411'></a><a href='#L1411'>1411</a>
+<a name='L1412'></a><a href='#L1412'>1412</a>
+<a name='L1413'></a><a href='#L1413'>1413</a>
+<a name='L1414'></a><a href='#L1414'>1414</a>
+<a name='L1415'></a><a href='#L1415'>1415</a>
+<a name='L1416'></a><a href='#L1416'>1416</a>
+<a name='L1417'></a><a href='#L1417'>1417</a>
+<a name='L1418'></a><a href='#L1418'>1418</a>
+<a name='L1419'></a><a href='#L1419'>1419</a>
+<a name='L1420'></a><a href='#L1420'>1420</a>
+<a name='L1421'></a><a href='#L1421'>1421</a>
+<a name='L1422'></a><a href='#L1422'>1422</a>
+<a name='L1423'></a><a href='#L1423'>1423</a>
+<a name='L1424'></a><a href='#L1424'>1424</a>
+<a name='L1425'></a><a href='#L1425'>1425</a>
+<a name='L1426'></a><a href='#L1426'>1426</a>
+<a name='L1427'></a><a href='#L1427'>1427</a>
+<a name='L1428'></a><a href='#L1428'>1428</a>
+<a name='L1429'></a><a href='#L1429'>1429</a>
+<a name='L1430'></a><a href='#L1430'>1430</a>
+<a name='L1431'></a><a href='#L1431'>1431</a>
+<a name='L1432'></a><a href='#L1432'>1432</a>
+<a name='L1433'></a><a href='#L1433'>1433</a>
+<a name='L1434'></a><a href='#L1434'>1434</a>
+<a name='L1435'></a><a href='#L1435'>1435</a>
+<a name='L1436'></a><a href='#L1436'>1436</a>
+<a name='L1437'></a><a href='#L1437'>1437</a>
+<a name='L1438'></a><a href='#L1438'>1438</a>
+<a name='L1439'></a><a href='#L1439'>1439</a>
+<a name='L1440'></a><a href='#L1440'>1440</a>
+<a name='L1441'></a><a href='#L1441'>1441</a>
+<a name='L1442'></a><a href='#L1442'>1442</a>
+<a name='L1443'></a><a href='#L1443'>1443</a>
+<a name='L1444'></a><a href='#L1444'>1444</a>
+<a name='L1445'></a><a href='#L1445'>1445</a>
+<a name='L1446'></a><a href='#L1446'>1446</a>
+<a name='L1447'></a><a href='#L1447'>1447</a>
+<a name='L1448'></a><a href='#L1448'>1448</a>
+<a name='L1449'></a><a href='#L1449'>1449</a>
+<a name='L1450'></a><a href='#L1450'>1450</a>
+<a name='L1451'></a><a href='#L1451'>1451</a>
+<a name='L1452'></a><a href='#L1452'>1452</a>
+<a name='L1453'></a><a href='#L1453'>1453</a>
+<a name='L1454'></a><a href='#L1454'>1454</a>
+<a name='L1455'></a><a href='#L1455'>1455</a>
+<a name='L1456'></a><a href='#L1456'>1456</a>
+<a name='L1457'></a><a href='#L1457'>1457</a>
+<a name='L1458'></a><a href='#L1458'>1458</a>
+<a name='L1459'></a><a href='#L1459'>1459</a>
+<a name='L1460'></a><a href='#L1460'>1460</a>
+<a name='L1461'></a><a href='#L1461'>1461</a>
+<a name='L1462'></a><a href='#L1462'>1462</a>
+<a name='L1463'></a><a href='#L1463'>1463</a>
+<a name='L1464'></a><a href='#L1464'>1464</a>
+<a name='L1465'></a><a href='#L1465'>1465</a>
+<a name='L1466'></a><a href='#L1466'>1466</a>
+<a name='L1467'></a><a href='#L1467'>1467</a>
+<a name='L1468'></a><a href='#L1468'>1468</a>
+<a name='L1469'></a><a href='#L1469'>1469</a>
+<a name='L1470'></a><a href='#L1470'>1470</a>
+<a name='L1471'></a><a href='#L1471'>1471</a>
+<a name='L1472'></a><a href='#L1472'>1472</a>
+<a name='L1473'></a><a href='#L1473'>1473</a>
+<a name='L1474'></a><a href='#L1474'>1474</a>
+<a name='L1475'></a><a href='#L1475'>1475</a>
+<a name='L1476'></a><a href='#L1476'>1476</a>
+<a name='L1477'></a><a href='#L1477'>1477</a>
+<a name='L1478'></a><a href='#L1478'>1478</a>
+<a name='L1479'></a><a href='#L1479'>1479</a>
+<a name='L1480'></a><a href='#L1480'>1480</a>
+<a name='L1481'></a><a href='#L1481'>1481</a>
+<a name='L1482'></a><a href='#L1482'>1482</a>
+<a name='L1483'></a><a href='#L1483'>1483</a>
+<a name='L1484'></a><a href='#L1484'>1484</a>
+<a name='L1485'></a><a href='#L1485'>1485</a>
+<a name='L1486'></a><a href='#L1486'>1486</a>
+<a name='L1487'></a><a href='#L1487'>1487</a>
+<a name='L1488'></a><a href='#L1488'>1488</a>
+<a name='L1489'></a><a href='#L1489'>1489</a>
+<a name='L1490'></a><a href='#L1490'>1490</a>
+<a name='L1491'></a><a href='#L1491'>1491</a>
+<a name='L1492'></a><a href='#L1492'>1492</a>
+<a name='L1493'></a><a href='#L1493'>1493</a>
+<a name='L1494'></a><a href='#L1494'>1494</a>
+<a name='L1495'></a><a href='#L1495'>1495</a>
+<a name='L1496'></a><a href='#L1496'>1496</a>
+<a name='L1497'></a><a href='#L1497'>1497</a>
+<a name='L1498'></a><a href='#L1498'>1498</a>
+<a name='L1499'></a><a href='#L1499'>1499</a>
+<a name='L1500'></a><a href='#L1500'>1500</a>
+<a name='L1501'></a><a href='#L1501'>1501</a>
+<a name='L1502'></a><a href='#L1502'>1502</a>
+<a name='L1503'></a><a href='#L1503'>1503</a>
+<a name='L1504'></a><a href='#L1504'>1504</a>
+<a name='L1505'></a><a href='#L1505'>1505</a>
+<a name='L1506'></a><a href='#L1506'>1506</a>
+<a name='L1507'></a><a href='#L1507'>1507</a>
+<a name='L1508'></a><a href='#L1508'>1508</a>
+<a name='L1509'></a><a href='#L1509'>1509</a>
+<a name='L1510'></a><a href='#L1510'>1510</a>
+<a name='L1511'></a><a href='#L1511'>1511</a>
+<a name='L1512'></a><a href='#L1512'>1512</a>
+<a name='L1513'></a><a href='#L1513'>1513</a>
+<a name='L1514'></a><a href='#L1514'>1514</a>
+<a name='L1515'></a><a href='#L1515'>1515</a>
+<a name='L1516'></a><a href='#L1516'>1516</a>
+<a name='L1517'></a><a href='#L1517'>1517</a>
+<a name='L1518'></a><a href='#L1518'>1518</a>
+<a name='L1519'></a><a href='#L1519'>1519</a>
+<a name='L1520'></a><a href='#L1520'>1520</a>
+<a name='L1521'></a><a href='#L1521'>1521</a>
+<a name='L1522'></a><a href='#L1522'>1522</a>
+<a name='L1523'></a><a href='#L1523'>1523</a>
+<a name='L1524'></a><a href='#L1524'>1524</a>
+<a name='L1525'></a><a href='#L1525'>1525</a>
+<a name='L1526'></a><a href='#L1526'>1526</a>
+<a name='L1527'></a><a href='#L1527'>1527</a>
+<a name='L1528'></a><a href='#L1528'>1528</a>
+<a name='L1529'></a><a href='#L1529'>1529</a>
+<a name='L1530'></a><a href='#L1530'>1530</a>
+<a name='L1531'></a><a href='#L1531'>1531</a>
+<a name='L1532'></a><a href='#L1532'>1532</a>
+<a name='L1533'></a><a href='#L1533'>1533</a>
+<a name='L1534'></a><a href='#L1534'>1534</a>
+<a name='L1535'></a><a href='#L1535'>1535</a>
+<a name='L1536'></a><a href='#L1536'>1536</a>
+<a name='L1537'></a><a href='#L1537'>1537</a>
+<a name='L1538'></a><a href='#L1538'>1538</a>
+<a name='L1539'></a><a href='#L1539'>1539</a>
+<a name='L1540'></a><a href='#L1540'>1540</a>
+<a name='L1541'></a><a href='#L1541'>1541</a>
+<a name='L1542'></a><a href='#L1542'>1542</a>
+<a name='L1543'></a><a href='#L1543'>1543</a>
+<a name='L1544'></a><a href='#L1544'>1544</a>
+<a name='L1545'></a><a href='#L1545'>1545</a>
+<a name='L1546'></a><a href='#L1546'>1546</a>
+<a name='L1547'></a><a href='#L1547'>1547</a>
+<a name='L1548'></a><a href='#L1548'>1548</a>
+<a name='L1549'></a><a href='#L1549'>1549</a>
+<a name='L1550'></a><a href='#L1550'>1550</a>
+<a name='L1551'></a><a href='#L1551'>1551</a>
+<a name='L1552'></a><a href='#L1552'>1552</a>
+<a name='L1553'></a><a href='#L1553'>1553</a>
+<a name='L1554'></a><a href='#L1554'>1554</a>
+<a name='L1555'></a><a href='#L1555'>1555</a>
+<a name='L1556'></a><a href='#L1556'>1556</a>
+<a name='L1557'></a><a href='#L1557'>1557</a>
+<a name='L1558'></a><a href='#L1558'>1558</a>
+<a name='L1559'></a><a href='#L1559'>1559</a>
+<a name='L1560'></a><a href='#L1560'>1560</a>
+<a name='L1561'></a><a href='#L1561'>1561</a>
+<a name='L1562'></a><a href='#L1562'>1562</a>
+<a name='L1563'></a><a href='#L1563'>1563</a>
+<a name='L1564'></a><a href='#L1564'>1564</a>
+<a name='L1565'></a><a href='#L1565'>1565</a>
+<a name='L1566'></a><a href='#L1566'>1566</a>
+<a name='L1567'></a><a href='#L1567'>1567</a>
+<a name='L1568'></a><a href='#L1568'>1568</a>
+<a name='L1569'></a><a href='#L1569'>1569</a>
+<a name='L1570'></a><a href='#L1570'>1570</a>
+<a name='L1571'></a><a href='#L1571'>1571</a>
+<a name='L1572'></a><a href='#L1572'>1572</a>
+<a name='L1573'></a><a href='#L1573'>1573</a>
+<a name='L1574'></a><a href='#L1574'>1574</a>
+<a name='L1575'></a><a href='#L1575'>1575</a>
+<a name='L1576'></a><a href='#L1576'>1576</a>
+<a name='L1577'></a><a href='#L1577'>1577</a>
+<a name='L1578'></a><a href='#L1578'>1578</a>
+<a name='L1579'></a><a href='#L1579'>1579</a>
+<a name='L1580'></a><a href='#L1580'>1580</a>
+<a name='L1581'></a><a href='#L1581'>1581</a>
+<a name='L1582'></a><a href='#L1582'>1582</a>
+<a name='L1583'></a><a href='#L1583'>1583</a>
+<a name='L1584'></a><a href='#L1584'>1584</a>
+<a name='L1585'></a><a href='#L1585'>1585</a>
+<a name='L1586'></a><a href='#L1586'>1586</a>
+<a name='L1587'></a><a href='#L1587'>1587</a>
+<a name='L1588'></a><a href='#L1588'>1588</a>
+<a name='L1589'></a><a href='#L1589'>1589</a>
+<a name='L1590'></a><a href='#L1590'>1590</a>
+<a name='L1591'></a><a href='#L1591'>1591</a>
+<a name='L1592'></a><a href='#L1592'>1592</a>
+<a name='L1593'></a><a href='#L1593'>1593</a>
+<a name='L1594'></a><a href='#L1594'>1594</a>
+<a name='L1595'></a><a href='#L1595'>1595</a>
+<a name='L1596'></a><a href='#L1596'>1596</a>
+<a name='L1597'></a><a href='#L1597'>1597</a>
+<a name='L1598'></a><a href='#L1598'>1598</a>
+<a name='L1599'></a><a href='#L1599'>1599</a>
+<a name='L1600'></a><a href='#L1600'>1600</a>
+<a name='L1601'></a><a href='#L1601'>1601</a>
+<a name='L1602'></a><a href='#L1602'>1602</a>
+<a name='L1603'></a><a href='#L1603'>1603</a>
+<a name='L1604'></a><a href='#L1604'>1604</a>
+<a name='L1605'></a><a href='#L1605'>1605</a>
+<a name='L1606'></a><a href='#L1606'>1606</a>
+<a name='L1607'></a><a href='#L1607'>1607</a>
+<a name='L1608'></a><a href='#L1608'>1608</a>
+<a name='L1609'></a><a href='#L1609'>1609</a>
+<a name='L1610'></a><a href='#L1610'>1610</a>
+<a name='L1611'></a><a href='#L1611'>1611</a>
+<a name='L1612'></a><a href='#L1612'>1612</a>
+<a name='L1613'></a><a href='#L1613'>1613</a>
+<a name='L1614'></a><a href='#L1614'>1614</a>
+<a name='L1615'></a><a href='#L1615'>1615</a>
+<a name='L1616'></a><a href='#L1616'>1616</a>
+<a name='L1617'></a><a href='#L1617'>1617</a>
+<a name='L1618'></a><a href='#L1618'>1618</a>
+<a name='L1619'></a><a href='#L1619'>1619</a>
+<a name='L1620'></a><a href='#L1620'>1620</a>
+<a name='L1621'></a><a href='#L1621'>1621</a>
+<a name='L1622'></a><a href='#L1622'>1622</a>
+<a name='L1623'></a><a href='#L1623'>1623</a>
+<a name='L1624'></a><a href='#L1624'>1624</a>
+<a name='L1625'></a><a href='#L1625'>1625</a>
+<a name='L1626'></a><a href='#L1626'>1626</a>
+<a name='L1627'></a><a href='#L1627'>1627</a>
+<a name='L1628'></a><a href='#L1628'>1628</a>
+<a name='L1629'></a><a href='#L1629'>1629</a>
+<a name='L1630'></a><a href='#L1630'>1630</a>
+<a name='L1631'></a><a href='#L1631'>1631</a>
+<a name='L1632'></a><a href='#L1632'>1632</a>
+<a name='L1633'></a><a href='#L1633'>1633</a>
+<a name='L1634'></a><a href='#L1634'>1634</a>
+<a name='L1635'></a><a href='#L1635'>1635</a>
+<a name='L1636'></a><a href='#L1636'>1636</a>
+<a name='L1637'></a><a href='#L1637'>1637</a>
+<a name='L1638'></a><a href='#L1638'>1638</a>
+<a name='L1639'></a><a href='#L1639'>1639</a>
+<a name='L1640'></a><a href='#L1640'>1640</a>
+<a name='L1641'></a><a href='#L1641'>1641</a>
+<a name='L1642'></a><a href='#L1642'>1642</a>
+<a name='L1643'></a><a href='#L1643'>1643</a>
+<a name='L1644'></a><a href='#L1644'>1644</a>
+<a name='L1645'></a><a href='#L1645'>1645</a>
+<a name='L1646'></a><a href='#L1646'>1646</a>
+<a name='L1647'></a><a href='#L1647'>1647</a>
+<a name='L1648'></a><a href='#L1648'>1648</a>
+<a name='L1649'></a><a href='#L1649'>1649</a>
+<a name='L1650'></a><a href='#L1650'>1650</a>
+<a name='L1651'></a><a href='#L1651'>1651</a>
+<a name='L1652'></a><a href='#L1652'>1652</a>
+<a name='L1653'></a><a href='#L1653'>1653</a>
+<a name='L1654'></a><a href='#L1654'>1654</a>
+<a name='L1655'></a><a href='#L1655'>1655</a>
+<a name='L1656'></a><a href='#L1656'>1656</a>
+<a name='L1657'></a><a href='#L1657'>1657</a>
+<a name='L1658'></a><a href='#L1658'>1658</a>
+<a name='L1659'></a><a href='#L1659'>1659</a>
+<a name='L1660'></a><a href='#L1660'>1660</a>
+<a name='L1661'></a><a href='#L1661'>1661</a>
+<a name='L1662'></a><a href='#L1662'>1662</a>
+<a name='L1663'></a><a href='#L1663'>1663</a>
+<a name='L1664'></a><a href='#L1664'>1664</a>
+<a name='L1665'></a><a href='#L1665'>1665</a>
+<a name='L1666'></a><a href='#L1666'>1666</a>
+<a name='L1667'></a><a href='#L1667'>1667</a>
+<a name='L1668'></a><a href='#L1668'>1668</a>
+<a name='L1669'></a><a href='#L1669'>1669</a>
+<a name='L1670'></a><a href='#L1670'>1670</a>
+<a name='L1671'></a><a href='#L1671'>1671</a>
+<a name='L1672'></a><a href='#L1672'>1672</a>
+<a name='L1673'></a><a href='#L1673'>1673</a>
+<a name='L1674'></a><a href='#L1674'>1674</a>
+<a name='L1675'></a><a href='#L1675'>1675</a>
+<a name='L1676'></a><a href='#L1676'>1676</a>
+<a name='L1677'></a><a href='#L1677'>1677</a>
+<a name='L1678'></a><a href='#L1678'>1678</a>
+<a name='L1679'></a><a href='#L1679'>1679</a>
+<a name='L1680'></a><a href='#L1680'>1680</a>
+<a name='L1681'></a><a href='#L1681'>1681</a>
+<a name='L1682'></a><a href='#L1682'>1682</a>
+<a name='L1683'></a><a href='#L1683'>1683</a>
+<a name='L1684'></a><a href='#L1684'>1684</a>
+<a name='L1685'></a><a href='#L1685'>1685</a>
+<a name='L1686'></a><a href='#L1686'>1686</a>
+<a name='L1687'></a><a href='#L1687'>1687</a>
+<a name='L1688'></a><a href='#L1688'>1688</a>
+<a name='L1689'></a><a href='#L1689'>1689</a>
+<a name='L1690'></a><a href='#L1690'>1690</a>
+<a name='L1691'></a><a href='#L1691'>1691</a>
+<a name='L1692'></a><a href='#L1692'>1692</a>
+<a name='L1693'></a><a href='#L1693'>1693</a>
+<a name='L1694'></a><a href='#L1694'>1694</a>
+<a name='L1695'></a><a href='#L1695'>1695</a>
+<a name='L1696'></a><a href='#L1696'>1696</a>
+<a name='L1697'></a><a href='#L1697'>1697</a>
+<a name='L1698'></a><a href='#L1698'>1698</a>
+<a name='L1699'></a><a href='#L1699'>1699</a>
+<a name='L1700'></a><a href='#L1700'>1700</a>
+<a name='L1701'></a><a href='#L1701'>1701</a>
+<a name='L1702'></a><a href='#L1702'>1702</a>
+<a name='L1703'></a><a href='#L1703'>1703</a>
+<a name='L1704'></a><a href='#L1704'>1704</a>
+<a name='L1705'></a><a href='#L1705'>1705</a>
+<a name='L1706'></a><a href='#L1706'>1706</a>
+<a name='L1707'></a><a href='#L1707'>1707</a>
+<a name='L1708'></a><a href='#L1708'>1708</a>
+<a name='L1709'></a><a href='#L1709'>1709</a>
+<a name='L1710'></a><a href='#L1710'>1710</a>
+<a name='L1711'></a><a href='#L1711'>1711</a>
+<a name='L1712'></a><a href='#L1712'>1712</a>
+<a name='L1713'></a><a href='#L1713'>1713</a>
+<a name='L1714'></a><a href='#L1714'>1714</a>
+<a name='L1715'></a><a href='#L1715'>1715</a>
+<a name='L1716'></a><a href='#L1716'>1716</a>
+<a name='L1717'></a><a href='#L1717'>1717</a>
+<a name='L1718'></a><a href='#L1718'>1718</a>
+<a name='L1719'></a><a href='#L1719'>1719</a>
+<a name='L1720'></a><a href='#L1720'>1720</a>
+<a name='L1721'></a><a href='#L1721'>1721</a>
+<a name='L1722'></a><a href='#L1722'>1722</a>
+<a name='L1723'></a><a href='#L1723'>1723</a>
+<a name='L1724'></a><a href='#L1724'>1724</a>
+<a name='L1725'></a><a href='#L1725'>1725</a>
+<a name='L1726'></a><a href='#L1726'>1726</a>
+<a name='L1727'></a><a href='#L1727'>1727</a>
+<a name='L1728'></a><a href='#L1728'>1728</a>
+<a name='L1729'></a><a href='#L1729'>1729</a>
+<a name='L1730'></a><a href='#L1730'>1730</a>
+<a name='L1731'></a><a href='#L1731'>1731</a>
+<a name='L1732'></a><a href='#L1732'>1732</a>
+<a name='L1733'></a><a href='#L1733'>1733</a>
+<a name='L1734'></a><a href='#L1734'>1734</a>
+<a name='L1735'></a><a href='#L1735'>1735</a>
+<a name='L1736'></a><a href='#L1736'>1736</a>
+<a name='L1737'></a><a href='#L1737'>1737</a>
+<a name='L1738'></a><a href='#L1738'>1738</a>
+<a name='L1739'></a><a href='#L1739'>1739</a>
+<a name='L1740'></a><a href='#L1740'>1740</a>
+<a name='L1741'></a><a href='#L1741'>1741</a>
+<a name='L1742'></a><a href='#L1742'>1742</a>
+<a name='L1743'></a><a href='#L1743'>1743</a>
+<a name='L1744'></a><a href='#L1744'>1744</a>
+<a name='L1745'></a><a href='#L1745'>1745</a>
+<a name='L1746'></a><a href='#L1746'>1746</a>
+<a name='L1747'></a><a href='#L1747'>1747</a>
+<a name='L1748'></a><a href='#L1748'>1748</a>
+<a name='L1749'></a><a href='#L1749'>1749</a>
+<a name='L1750'></a><a href='#L1750'>1750</a>
+<a name='L1751'></a><a href='#L1751'>1751</a>
+<a name='L1752'></a><a href='#L1752'>1752</a>
+<a name='L1753'></a><a href='#L1753'>1753</a>
+<a name='L1754'></a><a href='#L1754'>1754</a>
+<a name='L1755'></a><a href='#L1755'>1755</a>
+<a name='L1756'></a><a href='#L1756'>1756</a>
+<a name='L1757'></a><a href='#L1757'>1757</a>
+<a name='L1758'></a><a href='#L1758'>1758</a>
+<a name='L1759'></a><a href='#L1759'>1759</a>
+<a name='L1760'></a><a href='#L1760'>1760</a>
+<a name='L1761'></a><a href='#L1761'>1761</a>
+<a name='L1762'></a><a href='#L1762'>1762</a>
+<a name='L1763'></a><a href='#L1763'>1763</a>
+<a name='L1764'></a><a href='#L1764'>1764</a>
+<a name='L1765'></a><a href='#L1765'>1765</a>
+<a name='L1766'></a><a href='#L1766'>1766</a>
+<a name='L1767'></a><a href='#L1767'>1767</a>
+<a name='L1768'></a><a href='#L1768'>1768</a>
+<a name='L1769'></a><a href='#L1769'>1769</a>
+<a name='L1770'></a><a href='#L1770'>1770</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { 
+  StreamSource, 
+  StreamOptions, 
+  PlayerSettings,
+  Config,
+  StreamConfig,
+  FavoriteChannels,
+  Stream
+} from '../types/stream.js';
+import type { 
+  StreamOutput, 
+  StreamError, 
+  StreamInstance,
+  StreamResponse 
+} from '../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { loadAllConfigs } from '../config/loader.js';</span>
+<span class="cstat-no" title="statement not covered" >import { TwitchService } from './services/twitch.js';</span>
+<span class="cstat-no" title="statement not covered" >import { HolodexService } from './services/holodex.js';</span>
+<span class="cstat-no" title="statement not covered" >import { YouTubeService } from './services/youtube.js';</span>
+<span class="cstat-no" title="statement not covered" >import { PlayerService } from './services/player.js';</span>
+import type { TwitchAuth } from './db/database.js';
+<span class="cstat-no" title="statement not covered" >import { env } from '../config/env.js';</span>
+<span class="cstat-no" title="statement not covered" >import { queueService } from './services/queue_service.js';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+<span class="cstat-no" title="statement not covered" >import { KeyboardService, keyboardEvents } from './services/keyboard_service.js';</span>
+<span class="cstat-no" title="statement not covered" >import './types/events.js';</span>
+&nbsp;
+/**
+ * Manages multiple video streams across different screens
+ */
+<span class="cstat-no" title="statement not covered" >export class S</span>treamManager extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, StreamInstance&gt; = new Map();</span>
+  private config: Config;
+  private twitchService: TwitchService;
+  private holodexService: HolodexService;
+  private youtubeService: YouTubeService;
+  private playerService: PlayerService;
+  private keyboardService: KeyboardService;
+  private <span class="cstat-no" title="statement not covered" >cleanupHandler: (() =&gt; void) | null = null;</span>
+  private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+  private <span class="cstat-no" title="statement not covered" >updateInterval: NodeJS.Timeout | null = null;</span>
+  private readonly <span class="cstat-no" title="statement not covered" >QUEUE_UPDATE_INTERVAL = 15 * 60 * 1000; </span>// 15 minutes in milliseconds
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: FavoriteChannels = {</span>
+    holodex: [],
+    twitch: [],
+    youtube: []
+  };
+  private <span class="cstat-no" title="statement not covered" >queues: Map&lt;number, StreamSource[]&gt; = new Map();</span>
+  private readonly <span class="cstat-no" title="statement not covered" >RETRY_INTERVAL = 5000; </span>// 5 seconds
+  private errorCallback?: (data: StreamError) =&gt; void;
+  private <span class="cstat-no" title="statement not covered" >manuallyClosedScreens: Set&lt;number&gt; = new Set();</span>
+  private <span class="cstat-no" title="statement not covered" >streamRetries: Map&lt;number, number&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >streamRefreshTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >inactiveTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >fifoPaths: Map&lt;number, string&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >ipcPaths: Map&lt;number, string&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >cachedStreams: StreamSource[] = []; </span>// Cache for stream metadata
+  private <span class="cstat-no" title="statement not covered" >lastStreamFetch: number = 0; </span>// Timestamp of last stream fetch
+  private readonly <span class="cstat-no" title="statement not covered" >STREAM_CACHE_TTL = 60000; </span>// 1 minute cache TTL
+  private <span class="cstat-no" title="statement not covered" >queueProcessing: Set&lt;number&gt; = new Set(); </span>// Track screens where queue is being processed
+  private <span class="cstat-no" title="statement not covered" >lastStreamRefresh: Map&lt;number, number&gt; = new Map(); </span>// Track last refresh time per screen
+  private readonly <span class="cstat-no" title="statement not covered" >STREAM_REFRESH_INTERVAL = 5 * 60 * 1000; </span>// 5 minutes refresh interval
+&nbsp;
+  /**
+   * Creates a new StreamManager instance
+   */
+<span class="fstat-no" title="function not covered" >  constructor(</span>
+    config: Config,
+    holodexService: HolodexService,
+    twitchService: TwitchService,
+    youtubeService: YouTubeService,
+    playerService: PlayerService
+  ) {
+<span class="cstat-no" title="statement not covered" >    super(); </span>// Initialize EventEmitter
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >    this.holodexService = holodexService;</span>
+<span class="cstat-no" title="statement not covered" >    this.twitchService = twitchService;</span>
+<span class="cstat-no" title="statement not covered" >    this.youtubeService = youtubeService;</span>
+<span class="cstat-no" title="statement not covered" >    this.playerService = playerService;</span>
+<span class="cstat-no" title="statement not covered" >    this.keyboardService = new KeyboardService();</span>
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = {</span>
+      holodex: config.favoriteChannels.holodex || [],
+      twitch: config.favoriteChannels.twitch || [],
+      youtube: config.favoriteChannels.youtube || []
+    };
+<span class="cstat-no" title="statement not covered" >    this.initializeQueues();</span>
+    
+    // Synchronize disabled screens from config
+<span class="cstat-no" title="statement not covered" >    this.synchronizeDisabledScreens();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info('Stream manager initialized', 'StreamManager');</span>
+&nbsp;
+    // Handle stream end events
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamError(<span class="fstat-no" title="function not covered" >async </span>(data) =&gt; {</span>
+      // Don't handle retrying streams or during shutdown
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.playerService.isRetrying(data.screen) || this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Check if we're already processing this screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(data.screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Queue processing already in progress for screen ${data.screen}, ignoring stream end event`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Check if this was a normal end (code 0) or error
+<span class="cstat-no" title="statement not covered" >      if (data.code === 0) {</span>
+        // Check if the error message indicates a user-initiated exit
+        const isUserExit = <span class="cstat-no" title="statement not covered" >data.error === 'Stream ended by user' || data.error === 'Stream ended';</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (isUserExit) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Stream on screen ${data.screen} was ended by user, starting next stream`, 'StreamManager');</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`Stream ended normally on screen ${data.screen}, starting next stream`, 'StreamManager');</span>
+        }
+        
+        // Always move to the next stream for normal exits or user-initiated exits
+<span class="cstat-no" title="statement not covered" >        await this.handleStreamEnd(data.screen);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Stream error on screen ${data.screen}: ${data.error}`, 'StreamManager');</span>
+        // For error cases, wait for any potential retries to complete before starting next stream
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.playerService.isRetrying(data.screen)) {</span>
+          // Add a small delay to allow any in-progress operations to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          await this.handleStreamEnd(data.screen).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            logger.error(</span>
+              `Failed to start next stream on screen ${data.screen}`,
+              'StreamManager',
+              error instanceof Error ? error : new Error(String(error))
+            );
+          });
+        }
+      }
+    });
+&nbsp;
+    // Start continuous queue updates
+<span class="cstat-no" title="statement not covered" >    this.startQueueUpdates();</span>
+&nbsp;
+    // Update cleanup handler
+<span class="cstat-no" title="statement not covered" >    this.cleanupHandler = <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Cleaning up stream processes...', 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >      this.stopQueueUpdates();</span>
+<span class="cstat-no" title="statement not covered" >      this.keyboardService.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >      for (const [screen] of this.streams) {</span>
+<span class="cstat-no" title="statement not covered" >        this.stopStream(screen).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to stop stream on screen ${screen}`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        });
+      }
+    };
+&nbsp;
+    // Register cleanup handlers
+<span class="cstat-no" title="statement not covered" >    process.on('exit', this.cleanupHandler);</span>
+&nbsp;
+    // Set up queue event handlers
+<span class="cstat-no" title="statement not covered" >    queueService.on('all:watched', <span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleAllStreamsWatched(screen);</span>
+      }
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    queueService.on('queue:empty', <span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleEmptyQueue(screen);</span>
+      }
+    });
+&nbsp;
+    // Handle keyboard events
+<span class="cstat-no" title="statement not covered" >    keyboardEvents.on('autostart', <span class="fstat-no" title="function not covered" >async </span>(screen: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screen);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          `Failed to handle autostart for screen ${screen}`,
+          'StreamManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    keyboardEvents.on('closeall', <span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        await Promise.all(</span>
+          activeStreams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >this.stopStream(stream.screen, true))</span>
+        );
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          'Failed to close all streams',
+          'StreamManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleStreamEnd(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Check if we're already processing the queue for this screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Queue processing already in progress for screen ${screen}, not handling stream end`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Mark this screen as being processed
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.add(screen);</span>
+&nbsp;
+      // Get the current queue and log it for debugging
+      const currentQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Current queue for screen ${screen} has ${currentQueue.length} items`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      currentQueue.forEach(<span class="fstat-no" title="function not covered" >(i</span>tem, index) =&gt; {</span>
+        const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(item.url);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`  Queue item ${index}: ${item.url} (watched: ${isWatched ? 'yes' : 'no'})`, 'StreamManager');</span>
+      });
+&nbsp;
+      // Get next stream from queue
+      const nextStream = <span class="cstat-no" title="statement not covered" >queueService.getNextStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!nextStream) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`No next stream in queue for screen ${screen}, fetching new streams`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleEmptyQueue(screen);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Next stream in queue for screen ${screen}: ${nextStream.url}`, 'StreamManager');</span>
+      
+      // Check if stream is already marked as watched
+      const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(nextStream.url);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Stream ${nextStream.url} is${isWatched ? '' : ' not'} already marked as watched`, 'StreamManager');</span>
+      
+      // Get screen configuration to check skipWatchedStreams setting
+      const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.error(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Check if we should skip watched streams for this screen
+      const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+      
+      // If the stream is already watched and not a favorite, skip it (unless skipWatchedStreams is false)
+      const isFavorite = <span class="cstat-no" title="statement not covered" >nextStream.priority !== undefined &amp;&amp; nextStream.priority &lt; 900;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isWatched &amp;&amp; !isFavorite &amp;&amp; skipWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Stream ${nextStream.url} is already watched and not a favorite, skipping`, 'StreamManager');</span>
+        // Remove from queue and try the next one
+<span class="cstat-no" title="statement not covered" >        queueService.removeFromQueue(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleStreamEnd(screen);</span>
+      }
+      
+      // If skipWatchedStreams is false, log that we're playing a watched stream
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isWatched &amp;&amp; !skipWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Stream ${nextStream.url} is already watched but skipWatchedStreams is false, playing anyway`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Check if this stream is already playing on a higher priority screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+      const isStreamActive = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >        s.url === nextStream.url &amp;&amp; s.screen &lt; screen</span>
+      );
+&nbsp;
+      // Always play favorite streams, even if they're playing on another screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamActive &amp;&amp; !isFavorite) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(</span>
+          `Stream ${nextStream.url} is already playing on a higher priority screen, skipping`,
+          'StreamManager'
+        );
+        // Remove this stream from the queue and try the next one
+<span class="cstat-no" title="statement not covered" >        queueService.removeFromQueue(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleStreamEnd(screen);</span>
+      }
+&nbsp;
+      // We already got the screen configuration above
+&nbsp;
+      // Check if the screen was manually closed by the user
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} was manually closed, not starting next stream`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Mark as watched and remove from queue before starting the new stream
+      // This prevents the same stream from being restarted if there's an error
+<span class="cstat-no" title="statement not covered" >      queueService.markStreamAsWatched(nextStream.url);</span>
+<span class="cstat-no" title="statement not covered" >      queueService.removeFromQueue(screen, 0);</span>
+      
+      // Start the stream with metadata from the queue
+<span class="cstat-no" title="statement not covered" >      logger.info(`Starting stream ${nextStream.url} on screen ${screen} with metadata: ${nextStream.title}, ${nextStream.viewerCount} viewers`, 'StreamManager');</span>
+      
+      // Start the stream immediately without additional delays
+<span class="cstat-no" title="statement not covered" >      await this.startStream({</span>
+        url: nextStream.url,
+        screen,
+        quality: screenConfig.quality || this.config.player.defaultQuality,
+        windowMaximized: screenConfig.windowMaximized,
+        volume: screenConfig.volume,
+        // Pass metadata from the queue
+        title: nextStream.title,
+        viewerCount: nextStream.viewerCount,
+        startTime: nextStream.startTime
+      });
+      
+      // Pre-fetch the next stream in the queue to prepare it
+      const upcomingStream = <span class="cstat-no" title="statement not covered" >queueService.getNextStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (upcomingStream) {</span>
+        // Just log that we're preparing the next stream, but don't wait for it
+<span class="cstat-no" title="statement not covered" >        logger.info(`Preparing next stream in queue for screen ${screen}: ${upcomingStream.url}`, 'StreamManager');</span>
+      }
+      
+      // Clear processing flag once we've started the stream
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.delete(screen);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to handle stream end for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+      // Clear processing flag
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.delete(screen);</span>
+      // Try to handle empty queue as a fallback
+<span class="cstat-no" title="statement not covered" >      return this.handleEmptyQueue(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleEmptyQueue(screen: number): Promise&lt;void&gt; {
+    // Debounce queue processing - if already processing this screen's queue, return
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue processing already in progress for screen ${screen}, skipping`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if there's already an active stream on this screen
+    const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Screen ${screen} already has an active stream (${activeStream.url}), not starting a new one`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Mark queue as being processed
+<span class="cstat-no" title="statement not covered" >    this.queueProcessing.add(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Get screen configuration
+      const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+      const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+      const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+      
+      // Check if we should refresh streams
+      let allStreams = <span class="cstat-no" title="statement not covered" >this.cachedStreams;</span>
+<span class="cstat-no" title="statement not covered" >      if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || allStreams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Time since last refresh: ${timeSinceLastRefresh}ms, fetching new streams for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.lastStreamFetch = 0; </span>// Reset cache to force fresh fetch
+<span class="cstat-no" title="statement not covered" >        allStreams = await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, now);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.info(`Using cached streams for screen ${screen} (last refresh: ${timeSinceLastRefresh}ms ago)`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Check again if a stream was started while we were fetching
+      const activeStreamAfterFetch = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreamAfterFetch) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} now has an active stream (${activeStreamAfterFetch.url}), aborting queue processing`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Filter streams for this screen
+      const availableStreams = <span class="cstat-no" title="statement not covered" >allStreams.filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+        // Filter streams for this screen
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.screen !== screen) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is assigned to screen ${stream.screen}, not ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+        
+        // Check if stream is already playing on another screen
+        const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+        const isPlaying = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url === stream.url)</span>;</span>
+        
+        // Allow high priority streams (favorites) to play on multiple screens
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (isPlaying &amp;&amp; (!stream.priority || stream.priority &gt;= 900)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is already playing and is not high priority`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+&nbsp;
+        // Only include streams that are actually live
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.sourceStatus &amp;&amp; stream.sourceStatus !== 'live') {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is not live (status: ${stream.sourceStatus})`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+        
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${availableStreams.length} streams for screen ${screen}`, 'StreamManager');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      if (availableStreams.length &gt; 0) {</span>
+        // Sort streams by priority (lower number = higher priority)
+        const sortedStreams = <span class="cstat-no" title="statement not covered" >availableStreams.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          // First by priority (undefined priority goes last)
+          const aPriority = <span class="cstat-no" title="statement not covered" >a.priority ?? 999;</span>
+          const bPriority = <span class="cstat-no" title="statement not covered" >b.priority ?? 999;</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aPriority !== bPriority) <span class="cstat-no" title="statement not covered" >return aPriority - bPriority;</span></span>
+          
+          // Then by viewer count for same priority
+<span class="cstat-no" title="statement not covered" >          return 0;</span>
+        });
+&nbsp;
+        // Debug: Log watched status of streams
+<span class="cstat-no" title="statement not covered" >        sortedStreams.forEach(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+          const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(stream.url);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Stream ${stream.url} (priority: ${stream.priority ?? 'none'}) is${isWatched ? '' : ' not'} marked as watched`,
+            'StreamManager'
+          );
+        });
+&nbsp;
+        // Check if we should skip watched streams for this screen
+        const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+        
+        let combinedStreams: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >        if (skipWatched) {</span>
+          // Filter out watched streams unless all streams have been watched
+          const unwatchedStreams = <span class="cstat-no" title="statement not covered" >queueService.filterUnwatchedStreams(sortedStreams);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`After filtering (skipWatchedStreams: ${skipWatched}): ${unwatchedStreams.length} unwatched streams available`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          combinedStreams = unwatchedStreams.length &gt; 0 ? unwatchedStreams : sortedStreams;</span>
+        } else {
+          // Don't filter watched streams if skipWatchedStreams is false
+<span class="cstat-no" title="statement not covered" >          logger.info(`Not filtering watched streams (skipWatchedStreams: ${skipWatched}), using all ${sortedStreams.length} streams`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          combinedStreams = sortedStreams;</span>
+        }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        if (combinedStreams.length &gt; 0) {</span>
+          const [firstStream, ...remainingStreams] = <span class="cstat-no" title="statement not covered" >combinedStreams;</span>
+          
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Starting stream ${firstStream.url} on screen ${screen} (Priority: ${firstStream.priority ?? 'none'}) with metadata: ${firstStream.title}, ${firstStream.viewerCount} viewers`,
+            'StreamManager'
+          );
+          
+          // Start first stream with all available metadata
+<span class="cstat-no" title="statement not covered" >          await this.startStream({</span>
+            url: firstStream.url,
+            screen: screen,
+            quality: screenConfig.quality || this.config.player.defaultQuality,
+            windowMaximized: screenConfig.windowMaximized,
+            volume: screenConfig.volume,
+            title: firstStream.title,
+            viewerCount: firstStream.viewerCount,
+            startTime: firstStream.startTime
+          });
+          
+          // Mark the stream as watched
+<span class="cstat-no" title="statement not covered" >          queueService.markStreamAsWatched(firstStream.url);</span>
+&nbsp;
+          // Queue remaining streams, maintaining priority order
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (remainingStreams.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >            queueService.setQueue(screen, remainingStreams);</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(</span>
+              `Queued ${remainingStreams.length} streams for screen ${screen}. ` +
+              `First in queue: ${remainingStreams[0].url} (Priority: ${remainingStreams[0].priority ?? 'none'})`,
+              'StreamManager'
+            );
+          }
+        } else <span class="cstat-no" title="statement not covered" >if (skipWatched) {</span>
+          // Only clear watched history if skipWatchedStreams is true
+<span class="cstat-no" title="statement not covered" >          logger.info(`No unwatched streams available for screen ${screen}, clearing watched history`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearWatchedStreams(); </span>// Reset watched history to start over with high priority streams
+<span class="cstat-no" title="statement not covered" >          return this.handleEmptyQueue(screen); </span>// Retry with cleared history
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`No streams available for screen ${screen} even with skipWatchedStreams disabled`, 'StreamManager');</span>
+        }
+      } else {
+        // Check if a forced fetch was performed 
+        const wasRefreshForced = <span class="cstat-no" title="statement not covered" >timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || allStreams.length === 0;</span>
+        
+        // If we just did a fresh fetch and found nothing, schedule a retry
+<span class="cstat-no" title="statement not covered" >        if (wasRefreshForced) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`No available streams for screen ${screen} after forced refresh, will retry in ${this.RETRY_INTERVAL}ms`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearQueue(screen);</span>
+          // Schedule a retry after the interval
+<span class="cstat-no" title="statement not covered" >          setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >              this.queueProcessing.delete(screen); </span>// Remove processing flag before retrying
+<span class="cstat-no" title="statement not covered" >              this.handleEmptyQueue(screen).catch(<span class="fstat-no" title="function not covered" >(e</span>rror: Error | unknown) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                logger.error(</span>
+                  `Failed to retry empty queue for screen ${screen}`,
+                  'StreamManager',
+                  error instanceof Error ? error : new Error(String(error))
+                );
+              });
+            }
+          }, this.RETRY_INTERVAL);
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`No available streams for screen ${screen} in cache, will wait for next refresh interval`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >          this.queueProcessing.delete(screen);</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to handle empty queue for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+    } finally {
+      // Remove processing flag unless we scheduled a retry
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown &amp;&amp; this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+      }
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleAllStreamsWatched(screen: number) {
+<span class="cstat-no" title="statement not covered" >    logger.info(`All streams watched for screen ${screen}, waiting before refetching...`);</span>
+    
+    // Clear watched history to allow playing again
+<span class="cstat-no" title="statement not covered" >    queueService.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Cleared watched streams history for screen ${screen}`, 'StreamManager');</span>
+    
+    // Check if we should immediately refetch based on time since last refresh
+    const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+    const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+    const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+      // If refresh interval has elapsed, fetch new streams
+<span class="cstat-no" title="statement not covered" >      logger.info(`Refresh interval elapsed for screen ${screen}, fetching new streams after all watched`, 'StreamManager');</span>
+      
+      // Wait a bit before refetching to avoid hammering the APIs
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 5000))</span>; </span>// 5 second delay
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleEmptyQueue(screen);</span>
+      }
+    } else {
+<span class="cstat-no" title="statement not covered" >      logger.info(`Refresh interval not elapsed for screen ${screen}, will wait for next periodic update`, 'StreamManager');</span>
+      // Leave it for the next periodic update to handle
+    }
+  }
+&nbsp;
+  /**
+   * Starts a new stream on the specified screen
+   */
+<span class="fstat-no" title="function not covered" >  async </span>startStream(options: StreamOptions &amp; { url: string }): Promise&lt;StreamResponse&gt; {
+    // Find first available screen
+    let screen = <span class="cstat-no" title="statement not covered" >options.screen;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen) {</span>
+      const activeScreens = <span class="cstat-no" title="statement not covered" >new Set(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >      for (const streamConfig of this.config.player.screens) {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!activeScreens.has(streamConfig.screen)) {</span>
+<span class="cstat-no" title="statement not covered" >          screen = streamConfig.screen;</span>
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+      }
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen) {</span>
+<span class="cstat-no" title="statement not covered" >      return {</span>
+        screen: options.screen || 1,
+        message: 'No available screens',
+        success: false
+      };
+    }
+&nbsp;
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      return {</span>
+        screen,
+        message: `Invalid screen number: ${screen}`,
+        success: false
+      };
+    }
+&nbsp;
+    // Try to find stream metadata from our sources
+    let streamMetadata: Partial&lt;StreamSource&gt; = <span class="cstat-no" title="statement not covered" >{};</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Use cached streams if available, otherwise get all live streams
+      const allStreams = <span class="cstat-no" title="statement not covered" >this.cachedStreams.length &gt; 0 &amp;&amp; Date.now() - this.lastStreamFetch &lt; this.STREAM_CACHE_TTL</span>
+        ? this.cachedStreams
+        : await this.getLiveStreams();
+        
+      const matchingStream = <span class="cstat-no" title="statement not covered" >allStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url === options.url)</span>;</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (matchingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Found metadata for stream ${options.url}: ${matchingStream.title}, ${matchingStream.viewerCount} viewers`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        streamMetadata = matchingStream;</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.info(`No metadata found for stream ${options.url}, using defaults`, 'StreamManager');</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Error fetching stream metadata: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+    }
+&nbsp;
+    // Prepare enhanced options with metadata
+    const enhancedOptions = <span class="cstat-no" title="statement not covered" >{</span>
+      ...options,
+      screen,
+      quality: options.quality || streamConfig.quality,
+      volume: options.volume || streamConfig.volume,
+      windowMaximized: options.windowMaximized ?? streamConfig.windowMaximized,
+      // Use metadata if available, otherwise use provided options or defaults
+      title: options.title || streamMetadata.title,
+      viewerCount: options.viewerCount || streamMetadata.viewerCount,
+      startTime: options.startTime || streamMetadata.startTime || new Date().toLocaleTimeString()
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Starting stream with enhanced metadata: ${enhancedOptions.title}, ${enhancedOptions.viewerCount} viewers, ${enhancedOptions.startTime}`, 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    return this.playerService.startStream(enhancedOptions);</span>
+  }
+&nbsp;
+  /**
+   * Stops a stream on the specified screen
+   */
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number, isManualStop: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream) {</span>
+        // If no active stream, emit a basic stopped state
+<span class="cstat-no" title="statement not covered" >        this.emit('streamUpdate', {</span>
+          screen,
+          url: '',
+          quality: '',
+          platform: 'twitch',  // Default platform
+          playerStatus: 'stopped',
+          volume: 0,
+          process: null
+        } as Stream);
+<span class="cstat-no" title="statement not covered" >        return false;</span>
+      }
+&nbsp;
+      // If manual stop, mark the screen as manually closed
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isManualStop) {</span>
+<span class="cstat-no" title="statement not covered" >        this.manuallyClosedScreens.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} marked as manually closed`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Clear any pending retries
+<span class="cstat-no" title="statement not covered" >      this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.clearInactiveTimer(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.clearStreamRefresh(screen);</span>
+&nbsp;
+      // Stop the stream in the player service
+      const result = <span class="cstat-no" title="statement not covered" >await this.playerService.stopStream(screen, isManualStop);</span>
+      
+      // Emit stopped state with stream info
+<span class="cstat-no" title="statement not covered" >      this.emit('streamUpdate', {</span>
+        ...stream,
+        playerStatus: 'stopped',
+        error: undefined,
+        process: null
+      } as Stream);
+&nbsp;
+      // Cleanup IPC/FIFO after process death
+<span class="cstat-no" title="statement not covered" >      setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+        const fifoPath = <span class="cstat-no" title="statement not covered" >this.fifoPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (fifoPath) {</span>
+<span class="cstat-no" title="statement not covered" >          try { </span>
+<span class="cstat-no" title="statement not covered" >            fs.unlinkSync(fifoPath); </span>
+          } catch {
+            // Ignore error, file may not exist
+<span class="cstat-no" title="statement not covered" >            logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');</span>
+          }
+<span class="cstat-no" title="statement not covered" >          this.fifoPaths.delete(screen);</span>
+        }
+<span class="cstat-no" title="statement not covered" >        this.ipcPaths.delete(screen);</span>
+      }, 200); // Reduced from 2000ms to 500ms
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Stream stopped on screen ${screen}${isManualStop ? ' (manual stop)' : ''}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return result;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to stop stream', 
+        'StreamManager', 
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+  }
+&nbsp;
+  /**
+   * Gets information about all active streams
+   */
+<span class="fstat-no" title="function not covered" >  getActiveStreams(</span>) {
+<span class="cstat-no" title="statement not covered" >    return this.playerService.getActiveStreams();</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  onStreamOutput(</span>callback: (data: StreamOutput) =&gt; void) {
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamOutput(callback);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  onStreamError(</span>callback: (data: StreamError) =&gt; void) {
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamError(callback);</span>
+  }
+&nbsp;
+  /**
+   * Gets available organizations
+   */
+<span class="fstat-no" title="function not covered" >  getOrganizations(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return this.config.organizations;</span>
+  }
+&nbsp;
+  /**
+   * Fetches live streams from both Holodex and Twitch based on config
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(retryCount = <span class="branch-0 cbranch-no" title="branch not covered" >0)</span>: Promise&lt;StreamSource[]&gt; {
+    // Check if we have a recent cache
+    const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.cachedStreams.length &gt; 0 &amp;&amp; now - this.lastStreamFetch &lt; this.STREAM_CACHE_TTL) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Using cached streams (${this.cachedStreams.length} streams, age: ${(now - this.lastStreamFetch) / 1000}s)`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return this.cachedStreams;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Fetching fresh stream data (cache expired or forced refresh)`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const results: Array&lt;StreamSource &amp; { screen?: number; sourceName?: string; priority?: number }&gt; = <span class="cstat-no" title="statement not covered" >[];</span>
+      const streamConfigs = <span class="cstat-no" title="statement not covered" >this.config.streams;</span>
+      
+<span class="cstat-no" title="statement not covered" >      for (const streamConfig of streamConfigs) {</span>
+        const screenNumber = <span class="cstat-no" title="statement not covered" >streamConfig.screen;</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug('Screen %s is disabled, skipping', String(screenNumber));</span>
+<span class="cstat-no" title="statement not covered" >          continue;</span>
+        }
+&nbsp;
+        // Sort sources by priority first
+        const sortedSources = <span class="cstat-no" title="statement not covered" >streamConfig.sources &amp;&amp; Array.isArray(streamConfig.sources) </span>
+          ? [...streamConfig.sources]
+              .filter(<span class="fstat-no" title="function not covered" >source </span>=&gt; <span class="cstat-no" title="statement not covered" >source.enabled)</span>
+              .sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(a.priority || 999) - (b.priority || 999))</span>
+          : [];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        logger.debug(</span>
+          'Sources for screen %s: %s',
+          String(screenNumber),
+          sortedSources.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >`${s.type}:${s.subtype || 'other'} (${s.priority || 999})`)</span>.join(', ')
+        );
+        
+<span class="cstat-no" title="statement not covered" >        for (const source of sortedSources) {</span>
+          const limit = <span class="cstat-no" title="statement not covered" >source.limit || 25;</span>
+          let streams: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >          try {</span>
+<span class="cstat-no" title="statement not covered" >            if (source.type === 'holodex') {</span>
+<span class="cstat-no" title="statement not covered" >              if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.holodexService.getLiveStreams({</span>
+                  channels: this.favoriteChannels.holodex,
+                  limit: limit,
+                  sort: 'start_scheduled'  // Sort by scheduled start time
+                });
+<span class="cstat-no" title="statement not covered" >                logger.debug(</span>
+                  'Fetched %s favorite Holodex streams for screen %s',
+                  String(streams.length),
+                  String(screenNumber)
+                );
+                
+                // For favorites, assign a higher priority based on source priority
+                // This ensures favorites are always prioritized over other sources
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.subtype === 'organization' &amp;&amp; source.name) {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.holodexService.getLiveStreams({</span>
+                  organization: source.name,
+                  limit: limit,
+                  sort: 'start_scheduled'  // Sort by scheduled start time
+                });
+              }
+            } else <span class="cstat-no" title="statement not covered" >if (source.type === 'twitch') {</span>
+<span class="cstat-no" title="statement not covered" >              if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.twitchService.getStreams({</span>
+                  channels: this.favoriteChannels.twitch,
+                  limit: limit
+                });
+                
+                // For favorites, assign a higher priority based on source priority
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.tags?.includes('vtuber')) {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.twitchService.getVTuberStreams(limit);</span>
+                // Sort VTuber streams by viewer count
+<span class="cstat-no" title="statement not covered" >                streams.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(b.viewerCount || 0) - (a.viewerCount || 0))</span>;</span>
+              }
+            } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.type === 'youtube') {</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.youtubeService.getLiveStreams({</span>
+                  channels: this.favoriteChannels.youtube,
+                  limit
+                });
+                
+                // For favorites, assign a higher priority based on source priority
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              }
+            }
+            
+            // Add source metadata to each stream
+            const streamsWithMetadata = <span class="cstat-no" title="statement not covered" >streams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+              ...stream,
+              screen: screenNumber,
+              sourceName: `${source.type}:${source.subtype || 'other'}`,
+              // Only set priority if not already set (favorites already have priority)
+              priority: stream.priority !== undefined ? stream.priority : source.priority || 999
+            }));
+&nbsp;
+<span class="cstat-no" title="statement not covered" >            results.push(...streamsWithMetadata);</span>
+          } catch (error) {
+<span class="cstat-no" title="statement not covered" >            logger.error(</span>
+              `Failed to fetch streams for ${source.type}:${source.subtype || 'other'}`,
+              'StreamManager',
+              error instanceof Error ? error : new Error(String(error))
+            );
+<span class="cstat-no" title="statement not covered" >            continue;</span>
+          }
+        }
+      }
+      // Final sorting of all streams
+      const sortedResults = <span class="cstat-no" title="statement not covered" >results</span>
+      .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.sourceStatus === "live")</span>
+      .sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(a.priority || 999) - (b.priority || 999))</span>;
+&nbsp;
+      // Update cache
+<span class="cstat-no" title="statement not covered" >      this.cachedStreams = sortedResults;</span>
+<span class="cstat-no" title="statement not covered" >      this.lastStreamFetch = now;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return sortedResults;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch live streams',
+        'StreamManager', 
+        error instanceof Error ? error : new Error(String(error))
+      );
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (retryCount &lt; 3) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Retrying getLiveStreams (attempt ${retryCount + 1})`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, this.RETRY_INTERVAL))</span>;</span>
+<span class="cstat-no" title="statement not covered" >        return this.getLiveStreams(retryCount + 1);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  /**
+   * Gets VTuber streams from Twitch
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getVTuberStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getVTuberStreams(limit);</span>
+  }
+&nbsp;
+  /**
+   * Gets Japanese language streams
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getJapaneseStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getJapaneseStreams(limit);</span>
+  }
+&nbsp;
+  /**
+   * Sets up user authentication for Twitch
+   */
+<span class="fstat-no" title="function not covered" >  async </span>setTwitchUserAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.twitchService.setUserAuth(auth);</span>
+  }
+&nbsp;
+  /**
+   * Gets streams from user's followed channels
+   */   
+<span class="fstat-no" title="function not covered" >  async </span>getFollowedStreams(userId: string): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getFollowedStreams(userId);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>autoStartStreams() {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info('Auto-starting streams...', 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Get all enabled screens with autoStart enabled from streams config
+      const autoStartScreens = <span class="cstat-no" title="statement not covered" >this.config.streams</span>
+        .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled &amp;&amp; stream.autoStart)</span>
+        .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (autoStartScreens.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('No screens configured for auto-start', 'StreamManager');</span>
+        
+        // Even if no auto-start screens, ensure players are running if force_player is enabled
+<span class="cstat-no" title="statement not covered" >        await this.playerService.ensurePlayersRunning();</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      logger.info(`Auto-starting streams for screens: ${autoStartScreens.join(', ')}`, 'StreamManager');</span>
+      
+      // Reset the last refresh times for all screens to ensure a fresh start
+<span class="cstat-no" title="statement not covered" >      autoStartScreens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+        // Set last refresh to 0 to force initial refresh
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, 0);</span>
+      });
+      
+      // Auto-start streams for each screen
+<span class="cstat-no" title="statement not covered" >      for (const screen of autoStartScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screen);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      logger.info('Auto-start complete', 'StreamManager');</span>
+      
+      // Ensure players are running for all enabled screens if force_player is enabled
+<span class="cstat-no" title="statement not covered" >      await this.playerService.ensurePlayersRunning();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(`Error during auto-start: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>disableScreen(screen: number): Promise&lt;void&gt; {
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid screen number: ${screen}`);</span>
+    }
+    
+    // Notify the PlayerService first that the screen is disabled
+    // This ensures any new attempts to start streams will be blocked
+<span class="cstat-no" title="statement not covered" >    this.playerService.disableScreen(screen);</span>
+    
+    // Stop any active streams with up to 3 attempts
+<span class="cstat-no" title="statement not covered" >    for (let attempt = <span class="cstat-no" title="statement not covered" >0;</span> attempt &lt; 3; attempt++) {</span>
+      const result = <span class="cstat-no" title="statement not covered" >await this.stopStream(screen, true);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (result) {</span>
+<span class="cstat-no" title="statement not covered" >        break;</span>
+      }
+      // If stopping failed, wait a bit and try again
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (attempt &lt; 2) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Failed to stop stream on screen ${screen}, attempt ${attempt + 1}, retrying...`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+      }
+    }
+    
+    // Force kill the stream process if it exists
+    const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (stream &amp;&amp; stream.process) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Forcibly killing stream process for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        stream.process.kill('SIGKILL');</span>
+      } catch (e) {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Failed to kill stream process: ${e}`, 'StreamManager');</span>
+      }
+    }
+    
+    // Force clean up any remaining streams on this screen
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.streams.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Stream on screen ${screen} could not be stopped properly, forcing cleanup`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+    }
+    
+    // Disable the screen in config
+<span class="cstat-no" title="statement not covered" >    streamConfig.enabled = false;</span>
+    
+    // Also make sure PlayerService has cleaned up its stream data
+    const activeStreams = <span class="cstat-no" title="statement not covered" >this.playerService.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`PlayerService still has active stream for screen ${screen}, forcing cleanup`, 'StreamManager');</span>
+      // Send a direct command to clean up
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        await this.playerService.stopStream(screen, true);</span>
+      } catch (e) {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Failed final PlayerService cleanup: ${e}`, 'StreamManager');</span>
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Screen ${screen} disabled`, 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>enableScreen(screen: number): Promise&lt;void&gt; {
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid screen number: ${screen}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    streamConfig.enabled = true;</span>
+    
+    // Notify the PlayerService that the screen is enabled
+<span class="cstat-no" title="statement not covered" >    this.playerService.enableScreen(screen);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Screen ${screen} enabled`, 'StreamManager');</span>
+    
+    // Start streams if auto-start is enabled
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.config.player.autoStart) {</span>
+<span class="cstat-no" title="statement not covered" >      await this.handleEmptyQueue(screen);</span>
+    }
+  }
+&nbsp;
+  /**
+   * Handles empty queue by fetching and starting new streams
+   */
+  public <span class="fstat-no" title="function not covered" >async </span>handleQueueEmpty(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.handleEmptyQueue(screen);</span>
+  }
+&nbsp;
+  /**
+   * Restarts streams on specified screen or all screens
+   */
+  public <span class="fstat-no" title="function not covered" >async </span>restartStreams(screen?: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    if (screen) {</span>
+      // Restart specific screen
+<span class="cstat-no" title="statement not covered" >      await this.stopStream(screen, false);</span>
+<span class="cstat-no" title="statement not covered" >      await this.handleQueueEmpty(screen);</span>
+    } else {
+      // Restart all screens
+      const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >      for (const screenId of activeScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.stopStream(screenId, false);</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screenId);</span>
+      }
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (sourceIndex &lt; 0 || sourceIndex &gt;= queue.length || </span>
+        targetIndex &lt; 0 || targetIndex &gt;= queue.length) {
+<span class="cstat-no" title="statement not covered" >      throw new Error('Invalid source or target index');</span>
+    }
+&nbsp;
+    // Reorder the queue
+    const [item] = <span class="cstat-no" title="statement not covered" >queue.splice(sourceIndex, 1);</span>
+<span class="cstat-no" title="statement not covered" >    queue.splice(targetIndex, 0, item);</span>
+<span class="cstat-no" title="statement not covered" >    queueService.setQueue(screen, queue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Reordered queue for screen ${screen}: moved item from ${sourceIndex} to ${targetIndex}`, 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  getQueueForScreen(</span>screen: number): StreamSource[] {
+<span class="cstat-no" title="statement not covered" >    return queueService.getQueue(screen);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setPlayerPriority(priority: string): Promise&lt;void&gt; {
+    // Validate priority
+    const validPriorities = <span class="cstat-no" title="statement not covered" >['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!validPriorities.includes(priority.toLowerCase())) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid priority: ${priority}. Valid values are: ${validPriorities.join(', ')}`);</span>
+    }
+&nbsp;
+    // Update config
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.config.mpv) {</span>
+<span class="cstat-no" title="statement not covered" >      this.config.mpv = {};</span>
+    }
+<span class="cstat-no" title="statement not covered" >    this.config.mpv.priority = priority;</span>
+&nbsp;
+    // Restart all streams to apply new priority
+<span class="cstat-no" title="statement not covered" >    logger.info(`Setting player priority to ${priority}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >    await this.restartStreams();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >markStreamAsWatched(</span>url: string): void {
+<span class="cstat-no" title="statement not covered" >    queueService.markStreamAsWatched(url);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Stream marked as watched: ${url}`, 'StreamManager');</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getWatchedStreams(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return queueService.getWatchedStreams();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearWatchedStreams(</span>): void {
+<span class="cstat-no" title="statement not covered" >    queueService.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared watched streams history', 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>cleanup() {
+<span class="cstat-no" title="statement not covered" >    this.isShuttingDown = true;</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Stop all keyboard listeners
+<span class="cstat-no" title="statement not covered" >      this.keyboardService.cleanup();</span>
+&nbsp;
+      // Get all active screens
+      const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+      
+      // Stop all streams
+      const stopPromises = <span class="cstat-no" title="statement not covered" >activeScreens.map(<span class="fstat-no" title="function not covered" >screen </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >        this.stopStream(screen, true).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to stop stream on screen ${screen} during cleanup`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        })
+      );
+&nbsp;
+      // Wait for all streams to stop
+<span class="cstat-no" title="statement not covered" >      await Promise.all(stopPromises);</span>
+&nbsp;
+      // Clear all timers
+<span class="cstat-no" title="statement not covered" >      for (const screen of this.streamRefreshTimers.keys()) {</span>
+<span class="cstat-no" title="statement not covered" >        this.clearStreamRefresh(screen);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      for (const screen of this.inactiveTimers.keys()) {</span>
+<span class="cstat-no" title="statement not covered" >        this.clearInactiveTimer(screen);</span>
+      }
+&nbsp;
+      // Clear all queues
+<span class="cstat-no" title="statement not covered" >      this.queues.clear();</span>
+      
+      // Remove all FIFO files
+<span class="cstat-no" title="statement not covered" >      for (const [, fifoPath] of this.fifoPaths) {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+<span class="cstat-no" title="statement not covered" >          fs.unlinkSync(fifoPath);</span>
+        } catch {
+          // Ignore errors, file might not exist
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');</span>
+        }
+      }
+<span class="cstat-no" title="statement not covered" >      this.fifoPaths.clear();</span>
+<span class="cstat-no" title="statement not covered" >      this.ipcPaths.clear();</span>
+&nbsp;
+      // Clear all event listeners
+<span class="cstat-no" title="statement not covered" >      this.removeAllListeners();</span>
+      
+<span class="cstat-no" title="statement not covered" >      logger.info('Stream manager cleanup complete', 'StreamManager');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Error during stream manager cleanup',
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >sendCommandToScreen(</span>screen: number, command: string): void {
+<span class="cstat-no" title="statement not covered" >    this.playerService.sendCommandToScreen(screen, command);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >sendCommandToAll(</span>command: string): void {
+<span class="cstat-no" title="statement not covered" >    this.playerService.sendCommandToAll(command);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>addToQueue(screen: number, source: StreamSource): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    queue.push(source);</span>
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queueUpdate', screen, queue);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>removeFromQueue(screen: number, index: number): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (index &gt;= 0 &amp;&amp; index &lt; queue.length) {</span>
+<span class="cstat-no" title="statement not covered" >      queue.splice(index, 1);</span>
+<span class="cstat-no" title="statement not covered" >      this.queues.set(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queueUpdate', screen, queue);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getPlayerSettings(</span>) {
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      preferStreamlink: this.config.player.preferStreamlink,
+      defaultQuality: this.config.player.defaultQuality,
+      defaultVolume: this.config.player.defaultVolume,
+      windowMaximized: this.config.player.windowMaximized,
+      maxStreams: this.config.player.maxStreams,
+      autoStart: this.config.player.autoStart
+    };
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updatePlayerSettings(settings: Partial&lt;PlayerSettings&gt;): Promise&lt;void&gt; {
+    // Update the settings
+<span class="cstat-no" title="statement not covered" >    Object.assign(this.config.player, settings);</span>
+    
+    // If force_player was enabled, ensure players are running
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (settings.force_player === true) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Force player enabled, ensuring all enabled screens have players running', 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      await this.playerService.ensurePlayersRunning();</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('settingsUpdate', this.config.player);</span>
+<span class="cstat-no" title="statement not covered" >    await this.saveConfig();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getScreenConfigs(</span>) {
+<span class="cstat-no" title="statement not covered" >    return this.config.player.screens;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>saveConfig(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await fs.promises.writeFile(</span>
+        path.join(process.cwd(), 'config', 'config.json'),
+        JSON.stringify(this.config, null, 2),
+        'utf-8'
+      );
+<span class="cstat-no" title="statement not covered" >      this.emit('configUpdate', this.config);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      this.emit('error', error);</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getScreenConfig(</span>screen: number): StreamConfig | undefined {
+<span class="cstat-no" title="statement not covered" >    return this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateScreenConfig(</span>screen: number, config: Partial&lt;StreamConfig&gt;): void {
+    const screenConfig = <span class="cstat-no" title="statement not covered" >this.getScreenConfig(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Screen ${screen} not found`);</span>
+    }
+    
+    // Update the config
+<span class="cstat-no" title="statement not covered" >    Object.assign(screenConfig, config);</span>
+    
+    // If enabling a screen and force_player is set, ensure player is running
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (config.enabled === true &amp;&amp; this.config.player.force_player) {</span>
+      const isPlayerRunning = <span class="cstat-no" title="statement not covered" >this.playerService.getActiveStreams().some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!isPlayerRunning &amp;&amp; !this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} enabled with force_player active, starting player`, 'StreamManager');</span>
+        // Start player with blank page
+<span class="cstat-no" title="statement not covered" >        this.playerService.startStream({</span>
+          url: 'about:blank',
+          screen,
+          quality: screenConfig.quality || this.config.player.defaultQuality,
+          volume: screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume,
+          windowMaximized: screenConfig.windowMaximized !== undefined ? screenConfig.windowMaximized : this.config.player.windowMaximized
+        }).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {
+<span class="cstat-no" title="statement not covered" >          logger.error(`Failed to start player for screen ${screen}: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+        });
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('screenUpdate', screen, screenConfig);</span>
+<span class="cstat-no" title="statement not covered" >    this.saveConfig();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getConfig(</span>) {
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      streams: this.config.player.screens,
+      organizations: this.config.organizations,
+      favoriteChannels: this.config.favoriteChannels,
+      holodex: {
+        apiKey: this.config.holodex.apiKey
+      },
+      twitch: {
+        clientId: this.config.twitch.clientId,
+        clientSecret: this.config.twitch.clientSecret,
+        streamersFile: this.config.twitch.streamersFile
+      }
+    };
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updateConfig(newConfig: Partial&lt;Config&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    Object.assign(this.config, newConfig);</span>
+<span class="cstat-no" title="statement not covered" >    await this.saveConfig();</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('configUpdate', this.getConfig());</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updateFavorites(favorites: FavoriteChannels): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favorites;</span>
+<span class="cstat-no" title="statement not covered" >    this.config.favoriteChannels = favorites;</span>
+    
+    // Update services with new favorites
+<span class="cstat-no" title="statement not covered" >    this.holodexService.updateFavorites(favorites.holodex);</span>
+<span class="cstat-no" title="statement not covered" >    this.twitchService.updateFavorites(favorites.twitch);</span>
+<span class="cstat-no" title="statement not covered" >    this.youtubeService.updateFavorites(favorites.youtube);</span>
+    
+<span class="cstat-no" title="statement not covered" >    await fs.promises.writeFile(</span>
+      path.join(process.cwd(), 'config', 'favorites.json'),
+      JSON.stringify(favorites, null, 2),
+      'utf-8'
+    );
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('favoritesUpdate', favorites);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getFavorites(</span>): FavoriteChannels {
+<span class="cstat-no" title="statement not covered" >    return this.favoriteChannels;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>addFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.favoriteChannels[platform]) {</span>
+<span class="cstat-no" title="statement not covered" >      this.favoriteChannels[platform] = [];</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.favoriteChannels[platform].includes(channelId)) {</span>
+<span class="cstat-no" title="statement not covered" >      this.favoriteChannels[platform].push(channelId);</span>
+<span class="cstat-no" title="statement not covered" >      await this.updateFavorites(this.favoriteChannels);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>removeFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.favoriteChannels[platform]) {</span>
+      const index = <span class="cstat-no" title="statement not covered" >this.favoriteChannels[platform].indexOf(channelId);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (index !== -1) {</span>
+<span class="cstat-no" title="statement not covered" >        this.favoriteChannels[platform].splice(index, 1);</span>
+<span class="cstat-no" title="statement not covered" >        await this.updateFavorites(this.favoriteChannels);</span>
+      }
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >initializeQueues(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.config.player.screens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.queues.set(screen.screen, []);</span>
+    });
+  }
+&nbsp;
+  /**
+   * Get comprehensive information about a screen, including:
+   * - Current stream
+   * - Queue
+   * - Configuration
+   * - Status
+   */
+  public <span class="fstat-no" title="function not covered" >getScreenInfo(</span>screen: number) {
+    // Get screen configuration
+    const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Screen ${screen} not found`);</span>
+    }
+&nbsp;
+    // Get active stream for this screen
+    const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+&nbsp;
+    // Get queue for this screen
+    const queue = <span class="cstat-no" title="statement not covered" >this.getQueueForScreen(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      config: screenConfig,
+      currentStream: activeStream || null,
+      queue,
+      enabled: screenConfig.enabled,
+      status: activeStream?.status || 'stopped',
+      // Additional useful information
+      volume: screenConfig.volume,
+      quality: screenConfig.quality,
+      windowMaximized: screenConfig.windowMaximized,
+      dimensions: {
+        width: screenConfig.width,
+        height: screenConfig.height,
+        x: screenConfig.x,
+        y: screenConfig.y
+      }
+    };
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >clearInactiveTimer(</span>screen: number) {
+    const timer = <span class="cstat-no" title="statement not covered" >this.inactiveTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >      clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >      this.inactiveTimers.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >clearStreamRefresh(</span>screen: number) {
+    const timer = <span class="cstat-no" title="statement not covered" >this.streamRefreshTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >      clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >      this.streamRefreshTimers.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>startQueueUpdates() {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.updateInterval) {</span>
+<span class="cstat-no" title="statement not covered" >      return; </span>// Already running
+    }
+&nbsp;
+    const updateQueues = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info('Updating stream queues...', 'StreamManager');</span>
+      
+      // Get all enabled screens
+      const enabledScreens = <span class="cstat-no" title="statement not covered" >this.config.streams</span>
+        .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled)</span>
+        .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+&nbsp;
+      // Update queues for each screen
+<span class="cstat-no" title="statement not covered" >      for (const screen of enabledScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+          // Skip screens that are already being processed
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(`Skipping queue update for screen ${screen} - queue is being processed`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >            continue;</span>
+          }
+&nbsp;
+          // Check if there's an active stream on this screen
+          const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+          
+<span class="cstat-no" title="statement not covered" >          if (!activeStream) {</span>
+            // If no active stream and screen isn't manually closed, try to start a new one
+<span class="cstat-no" title="statement not covered" >            if (!this.manuallyClosedScreens.has(screen)) {</span>
+              const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+              const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+              const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+              
+              // Only attempt to start new streams if it's been long enough since last refresh
+<span class="cstat-no" title="statement not covered" >              if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`No active stream on screen ${screen} and refresh interval elapsed, fetching new streams`, 'StreamManager');</span>
+                // Mark as processing to prevent concurrent queue processing
+<span class="cstat-no" title="statement not covered" >                this.queueProcessing.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >                try {</span>
+<span class="cstat-no" title="statement not covered" >                  await this.handleEmptyQueue(screen);</span>
+                } finally {
+<span class="cstat-no" title="statement not covered" >                  this.queueProcessing.delete(screen);</span>
+                }
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No active stream on screen ${screen}, but refresh interval not elapsed. Skipping refresh.`, 'StreamManager');</span>
+              }
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`Screen ${screen} was manually closed, not starting new streams`, 'StreamManager');</span>
+            }
+          } else {
+            // If there's an active stream, just update the queue without starting new stream
+<span class="cstat-no" title="statement not covered" >            logger.info(`Active stream on screen ${screen}, updating queue only`, 'StreamManager');</span>
+            
+            // Only fetch new streams if the refresh interval has elapsed
+            const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+            const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+            const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+            
+            let streams = <span class="cstat-no" title="statement not covered" >this.cachedStreams;</span>
+<span class="cstat-no" title="statement not covered" >            if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >              logger.info(`Refresh interval elapsed for screen ${screen}, fetching new streams for queue update`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >              streams = await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >              this.lastStreamRefresh.set(screen, now);</span>
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`Using cached streams for queue update on screen ${screen} (last refresh: ${timeSinceLastRefresh}ms ago)`, 'StreamManager');</span>
+            }
+            
+            const availableStreams = <span class="cstat-no" title="statement not covered" >streams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+            
+<span class="cstat-no" title="statement not covered" >            <span class="missing-if-branch" title="if path not taken" >I</span>if (availableStreams.length &gt; 0) {</span>
+              // Get existing queue
+              const existingQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+              
+              // Combine existing queue URLs with available streams
+              const existingUrls = <span class="cstat-no" title="statement not covered" >new Set(existingQueue.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url)</span>);</span>
+              
+              // Add new streams that aren't in the existing queue
+              const newStreams = <span class="cstat-no" title="statement not covered" >availableStreams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >!existingUrls.has(s.url))</span>;</span>
+              
+<span class="cstat-no" title="statement not covered" >              if (newStreams.length &gt; 0) {</span>
+                // Filter unwatched from new streams only
+                const unwatchedNewStreams = <span class="cstat-no" title="statement not covered" >queueService.filterUnwatchedStreams(newStreams);</span>
+                
+<span class="cstat-no" title="statement not covered" >                if (unwatchedNewStreams.length &gt; 0) {</span>
+                  // Add unwatched new streams to end of existing queue
+                  const updatedQueue = <span class="cstat-no" title="statement not covered" >[...existingQueue, ...unwatchedNewStreams];</span>
+<span class="cstat-no" title="statement not covered" >                  queueService.setQueue(screen, updatedQueue);</span>
+<span class="cstat-no" title="statement not covered" >                  logger.info(</span>
+                    `Updated queue for screen ${screen} with ${unwatchedNewStreams.length} new streams. Total queue size: ${updatedQueue.length}`,
+                    'StreamManager'
+                  );
+                } else {
+<span class="cstat-no" title="statement not covered" >                  logger.info(`No new unwatched streams for screen ${screen}`, 'StreamManager');</span>
+                }
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No new streams available for screen ${screen}`, 'StreamManager');</span>
+              }
+            }
+          }
+        } catch (error) {
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to update queue for screen ${screen}`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        }
+      }
+    };
+&nbsp;
+    // Initial update
+<span class="cstat-no" title="statement not covered" >    await updateQueues();</span>
+&nbsp;
+    // Set up interval for periodic updates
+<span class="cstat-no" title="statement not covered" >    this.updateInterval = setInterval(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      await updateQueues();</span>
+    }, this.QUEUE_UPDATE_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Queue updates started with ${this.QUEUE_UPDATE_INTERVAL / 60000} minute interval`, 'StreamManager');</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >stopQueueUpdates(</span>) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.updateInterval) {</span>
+<span class="cstat-no" title="statement not covered" >      clearInterval(this.updateInterval);</span>
+<span class="cstat-no" title="statement not covered" >      this.updateInterval = null;</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Queue updates stopped', 'StreamManager');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  handleLuaMessage(</span>screen: number, type: string, data: unknown) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof data === 'object' &amp;&amp; data !== null) {</span>
+<span class="cstat-no" title="statement not covered" >      this.playerService.handleLuaMessage(screen, type, data as Record&lt;string, unknown&gt;);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >handlePlaylistUpdate(</span>screen: number, playlist: Array&lt;{ filename: string; title?: string; current: boolean; }&gt;): void {
+    // Get or create stream instance
+    let stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+    
+    // If no stream exists but we have playlist data, create a new stream instance
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream &amp;&amp; playlist.length &gt; 0) {</span>
+      const currentItem = <span class="cstat-no" title="statement not covered" >playlist.find(<span class="fstat-no" title="function not covered" >item </span>=&gt; <span class="cstat-no" title="statement not covered" >item.current)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (currentItem) {</span>
+        // Get screen configuration
+        const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.warn(`No screen configuration found for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+&nbsp;
+        // Create new stream instance
+<span class="cstat-no" title="statement not covered" >        stream = {</span>
+          id: Date.now(),
+          screen,
+          url: currentItem.filename,
+          title: currentItem.title,
+          quality: screenConfig.quality || this.config.player.defaultQuality,
+          status: 'playing',
+          platform: currentItem.filename.includes('youtube.com') ? 'youtube' : 'twitch',
+          volume: screenConfig.volume || this.config.player.defaultVolume,
+          process: null // Process will be attached when available
+        };
+<span class="cstat-no" title="statement not covered" >        this.streams.set(screen, stream);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Created new stream instance for screen ${screen}`, 'StreamManager');</span>
+      }
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`No active stream found for screen ${screen} during playlist update`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Update the stream's playlist
+<span class="cstat-no" title="statement not covered" >    stream.playlist = playlist.map(<span class="fstat-no" title="function not covered" >item </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+      id: Date.now(),
+      screen,
+      url: item.filename,
+      title: item.title,
+      quality: stream.quality,
+      status: item.current ? 'playing' : 'stopped',
+      platform: item.filename.includes('youtube.com') ? 'youtube' : 'twitch',
+      volume: stream.volume,
+      process: item.current ? stream.process : null
+    }));
+&nbsp;
+    // Log the update
+<span class="cstat-no" title="statement not covered" >    logger.debug(</span>
+      `Updated playlist for screen ${screen} with ${playlist.length} items`,
+      'StreamManager'
+    );
+&nbsp;
+    // Emit playlist update event
+<span class="cstat-no" title="statement not covered" >    this.emit('playlistUpdate', screen, stream.playlist);</span>
+  }
+&nbsp;
+  /**
+   * Gets a list of all enabled screens
+   */
+<span class="fstat-no" title="function not covered" >  getEnabledScreens(</span>): number[] {
+    // Get all enabled screens from the config
+<span class="cstat-no" title="statement not covered" >    return this.config.streams</span>
+      .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled)</span>
+      .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+  }
+&nbsp;
+  /**
+   * Resets the refresh timestamps for specified screens
+   * @param screens Array of screen numbers to reset
+   */
+<span class="fstat-no" title="function not covered" >  resetRefreshTimestamps(</span>screens: number[]): void {
+<span class="cstat-no" title="statement not covered" >    logger.info(`Resetting refresh timestamps for screens: ${screens.join(', ')}`, 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    screens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.lastStreamRefresh.set(screen, 0);</span>
+    });
+  }
+&nbsp;
+  /**
+   * Updates the queue for a specific screen, optionally forcing a refresh
+   * @param screen Screen number
+   * @param forceRefresh Whether to force a refresh regardless of time elapsed
+   */
+<span class="fstat-no" title="function not covered" >  async </span>updateQueue(screen: number, forceRefresh = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Skip screens that are already being processed
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Skipping queue update for screen ${screen} - queue is being processed`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Check if there's an active stream on this screen
+      const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (forceRefresh) {</span>
+        // Force refresh - set last refresh to 0 to ensure new data is fetched
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Forcing refresh for screen ${screen}`, 'StreamManager');</span>
+        
+        // If no active stream and not manually closed, try to start a new one
+<span class="cstat-no" title="statement not covered" >        if (!activeStream &amp;&amp; !this.manuallyClosedScreens.has(screen)) {</span>
+          // Mark as processing to prevent concurrent queue processing
+<span class="cstat-no" title="statement not covered" >          this.queueProcessing.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >          try {</span>
+<span class="cstat-no" title="statement not covered" >            await this.handleEmptyQueue(screen);</span>
+          } finally {
+<span class="cstat-no" title="statement not covered" >            this.queueProcessing.delete(screen);</span>
+          }
+        } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+          // If active stream, just update the queue
+<span class="cstat-no" title="statement not covered" >          logger.info(`Active stream on screen ${screen}, updating queue only`, 'StreamManager');</span>
+          
+          // Fetch fresh streams
+          const streams = <span class="cstat-no" title="statement not covered" >await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >          this.lastStreamRefresh.set(screen, Date.now());</span>
+          
+          const availableStreams = <span class="cstat-no" title="statement not covered" >streams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+          
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (availableStreams.length &gt; 0) {</span>
+            // Get existing queue
+            const existingQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+            
+            // Combine existing queue URLs with available streams
+            const existingUrls = <span class="cstat-no" title="statement not covered" >new Set(existingQueue.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url)</span>);</span>
+            
+            // Add new streams that aren't in the existing queue
+            const newStreams = <span class="cstat-no" title="statement not covered" >availableStreams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >!existingUrls.has(s.url))</span>;</span>
+            
+<span class="cstat-no" title="statement not covered" >            if (newStreams.length &gt; 0) {</span>
+              // Check if we should skip watched streams for this screen
+              const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.error(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >                return;</span>
+              }
+              
+              // Check if we should skip watched streams for this screen
+              const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+              
+              // Filter streams based on skipWatchedStreams setting
+              let streamsToAdd = <span class="cstat-no" title="statement not covered" >newStreams;</span>
+<span class="cstat-no" title="statement not covered" >              if (skipWatched) {</span>
+                // Only filter if skipWatchedStreams is true or undefined
+<span class="cstat-no" title="statement not covered" >                streamsToAdd = queueService.filterUnwatchedStreams(newStreams);</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`Filtering watched streams for screen ${screen} (skipWatchedStreams: ${skipWatched})`, 'StreamManager');</span>
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`Not filtering watched streams for screen ${screen} (skipWatchedStreams: ${skipWatched})`, 'StreamManager');</span>
+              }
+              
+<span class="cstat-no" title="statement not covered" >              if (streamsToAdd.length &gt; 0) {</span>
+                // Add filtered streams to end of existing queue
+                const updatedQueue = <span class="cstat-no" title="statement not covered" >[...existingQueue, ...streamsToAdd];</span>
+<span class="cstat-no" title="statement not covered" >                queueService.setQueue(screen, updatedQueue);</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(</span>
+                  `Updated queue for screen ${screen} with ${streamsToAdd.length} new streams. Total queue size: ${updatedQueue.length}`,
+                  'StreamManager'
+                );
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No new streams to add for screen ${screen}`, 'StreamManager');</span>
+              }
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`No new streams available for screen ${screen}`, 'StreamManager');</span>
+            }
+          }
+        }
+      } else {
+        // Non-forced update - follow normal refresh interval
+        const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+        const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+        const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Refresh interval elapsed for screen ${screen}, updating queue`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          await this.updateQueue(screen, true);</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`Refresh interval not elapsed for screen ${screen}, skipping queue update`, 'StreamManager');</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to update queue for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+    }
+  }
+&nbsp;
+  /**
+   * Updates all queues for enabled screens
+   * @param forceRefresh Whether to force a refresh for all screens
+   */
+<span class="fstat-no" title="function not covered" >  async </span>updateAllQueues(forceRefresh = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`${forceRefresh ? 'Force updating' : 'Updating'} all stream queues...`, 'StreamManager');</span>
+    
+    // Get all enabled screens
+    const enabledScreens = <span class="cstat-no" title="statement not covered" >this.getEnabledScreens();</span>
+&nbsp;
+    // Update queues for each screen
+<span class="cstat-no" title="statement not covered" >    for (const screen of enabledScreens) {</span>
+<span class="cstat-no" title="statement not covered" >      await this.updateQueue(screen, forceRefresh);</span>
+    }
+  }
+&nbsp;
+  /**
+   * Synchronize disabled screens from config to PlayerService
+   */
+  private <span class="fstat-no" title="function not covered" >synchronizeDisabledScreens(</span>): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.config.player.screens) <span class="cstat-no" title="statement not covered" >return;</span></span>
+    
+    // Mark all disabled screens in the PlayerService
+<span class="cstat-no" title="statement not covered" >    for (const screenConfig of this.config.player.screens) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >        this.playerService.disableScreen(screenConfig.screen);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screenConfig.screen} marked as disabled during initialization`, 'StreamManager');</span>
+      }
+    }
+  }
+}
+&nbsp;
+// Create singleton instance
+const config = <span class="cstat-no" title="statement not covered" >loadAllConfigs();</span>
+const playerService = <span class="cstat-no" title="statement not covered" >new PlayerService(config);</span>
+const holodexService = <span class="cstat-no" title="statement not covered" >new HolodexService(</span>
+  env.HOLODEX_API_KEY,
+  config.filters?.filters ? config.filters.filters.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >typeof f === 'string' ? f : f.value)</span> : [],
+  config.favoriteChannels.holodex,
+  config
+);
+const twitchService = <span class="cstat-no" title="statement not covered" >new TwitchService(</span>
+  env.TWITCH_CLIENT_ID,
+  env.TWITCH_CLIENT_SECRET,
+  config.filters?.filters ? config.filters.filters.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >typeof f === 'string' ? f : f.value)</span> : []
+);
+const youtubeService = <span class="cstat-no" title="statement not covered" >new YouTubeService(</span>
+  config.favoriteChannels.youtube
+);
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >streamManager = new StreamManager(</span>
+  config,
+  holodexService,
+  twitchService,
+  youtubeService,
+  playerService
+); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/types/events.ts.html b/coverage/lcov-report/src/server/types/events.ts.html
new file mode 100644
index 0000000..e0df528
--- /dev/null
+++ b/coverage/lcov-report/src/server/types/events.ts.html
@@ -0,0 +1,142 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/types/events.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/types</a> events.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+&nbsp;
+declare global {
+  interface ProcessEventTypes {
+    'keyboard:autostart': (screen: number) =&gt; void;
+    'keyboard:closeall': () =&gt; void;
+  }
+}
+&nbsp;
+declare module 'events' {
+  export interface Process {
+    on&lt;K extends keyof ProcessEventTypes&gt;(event: K, listener: ProcessEventTypes[K]): this;
+    emit&lt;K extends keyof ProcessEventTypes&gt;(
+      event: K,
+      ...args: Parameters&lt;ProcessEventTypes[K]&gt;
+    ): boolean;
+  }
+}
+&nbsp;
+export {}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/types/index.html b/coverage/lcov-report/src/server/types/index.html
new file mode 100644
index 0000000..9bb526a
--- /dev/null
+++ b/coverage/lcov-report/src/server/types/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/types</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/types</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="events.ts"><a href="events.ts.html">events.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/websocket.ts.html b/coverage/lcov-report/src/server/websocket.ts.html
new file mode 100644
index 0000000..c22446f
--- /dev/null
+++ b/coverage/lcov-report/src/server/websocket.ts.html
@@ -0,0 +1,358 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/websocket.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> websocket.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { WebSocket, WebSocketServer } from 'ws';</span>
+<span class="cstat-no" title="statement not covered" >import { Server } from 'http';</span>
+import type { Stream, StreamSource } from '../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { streamManager, type StreamManager } from './stream_manager.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class W</span>ebSocketService {
+  private wss: WebSocketServer;
+  private <span class="cstat-no" title="statement not covered" >clients: Set&lt;WebSocket&gt; = new Set();</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(s</span>erver: Server, private <span class="cstat-no" title="statement not covered" >streamManager: StreamManager)</span> {
+<span class="cstat-no" title="statement not covered" >    this.wss = new WebSocketServer({ server });</span>
+<span class="cstat-no" title="statement not covered" >    this.setupWebSocketServer();</span>
+<span class="cstat-no" title="statement not covered" >    this.setupStreamManagerListeners();</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupWebSocketServer(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.wss.on('connection', <span class="fstat-no" title="function not covered" >(w</span>s: WebSocket) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.clients.add(ws);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      ws.addEventListener('close', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        this.clients.delete(ws);</span>
+      });
+&nbsp;
+      // Send initial state
+<span class="cstat-no" title="statement not covered" >      this.sendToClient(ws, {</span>
+        type: 'init',
+        data: {
+          streams: this.streamManager.getActiveStreams(),
+          queues: this.streamManager.getQueueForScreen,
+          screens: this.streamManager.getScreenConfigs()
+        }
+      });
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupStreamManagerListeners(</span>) {
+    // Listen for stream updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('streamUpdate', <span class="fstat-no" title="function not covered" >(s</span>tream: Stream) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'streamUpdate',
+        data: { stream }
+      });
+    });
+&nbsp;
+    // Listen for queue updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('queueUpdate', <span class="fstat-no" title="function not covered" >(s</span>creen: number, queue: StreamSource[]) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'queueUpdate',
+        data: { screen, queue }
+      });
+    });
+&nbsp;
+    // Listen for screen config updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('screenUpdate', <span class="fstat-no" title="function not covered" >(s</span>creen: number, config: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'screenUpdate',
+        data: { screen, config }
+      });
+    });
+&nbsp;
+    // Listen for player settings updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('settingsUpdate', <span class="fstat-no" title="function not covered" >(s</span>ettings: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'settingsUpdate',
+        data: { settings }
+      });
+    });
+&nbsp;
+    // Listen for errors
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('error', <span class="fstat-no" title="function not covered" >(e</span>rror: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'error',
+        data: { message: error.message }
+      });
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >broadcast(</span>message: any) {
+    const data = <span class="cstat-no" title="statement not covered" >JSON.stringify(message);</span>
+<span class="cstat-no" title="statement not covered" >    this.clients.forEach(<span class="fstat-no" title="function not covered" >client </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (client.readyState === WebSocket.OPEN) {</span>
+<span class="cstat-no" title="statement not covered" >        client.send(data);</span>
+      }
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >sendToClient(</span>client: WebSocket, message: any) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (client.readyState === WebSocket.OPEN) {</span>
+<span class="cstat-no" title="statement not covered" >      client.send(JSON.stringify(message));</span>
+    }
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/workers/index.html b/coverage/lcov-report/src/server/workers/index.html
new file mode 100644
index 0000000..8628ec7
--- /dev/null
+++ b/coverage/lcov-report/src/server/workers/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/workers</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/workers</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="player_worker.ts"><a href="player_worker.ts.html">player_worker.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov-report/src/server/workers/player_worker.ts.html b/coverage/lcov-report/src/server/workers/player_worker.ts.html
new file mode 100644
index 0000000..5f4fc4c
--- /dev/null
+++ b/coverage/lcov-report/src/server/workers/player_worker.ts.html
@@ -0,0 +1,328 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/workers/player_worker.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/workers</a> player_worker.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { isMainThread, parentPort, workerData } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { PlayerService } from '../services/player.js';</span>
+import type { 
+  WorkerMessage, 
+  WorkerResponse
+} from '../../types/stream.js';
+import type {
+  StreamOutput,
+  StreamError
+} from '../../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { loadAllConfigs } from '../../config/loader.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!isMainThread) {</span>
+  const config = <span class="cstat-no" title="statement not covered" >loadAllConfigs();</span>
+  const player = <span class="cstat-no" title="statement not covered" >new PlayerService(config);</span>
+  const { streamId } = <span class="cstat-no" title="statement not covered" >workerData;</span>
+  
+<span class="cstat-no" title="statement not covered" >  parentPort?.on('message', <span class="fstat-no" title="function not covered" >async </span>(message: WorkerMessage) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      switch (message.type) {</span>
+        case 'start': {
+          const { screen, ...options } = <span class="cstat-no" title="statement not covered" >message.data;</span>
+          const result = <span class="cstat-no" title="statement not covered" >await player.startStream({</span>
+            ...options,
+            screen: screen || streamId // Use streamId as fallback
+          });
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'startResult', 
+            data: result 
+          } as WorkerResponse);
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'stop': {
+          const success = <span class="cstat-no" title="statement not covered" >await player.stopStream(message.data);</span>
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'stopResult', 
+            data: success 
+          } as WorkerResponse);
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'setVolume': {
+          // TODO: Implement volume control
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'setQuality': {
+          // TODO: Implement quality changes
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Player worker error',
+        'PlayerWorker',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ </span>
+        type: 'error', 
+        error: error instanceof Error ? error.message : String(error)
+      } as WorkerResponse);
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  player.onStreamOutput(<span class="fstat-no" title="function not covered" >(d</span>ata: StreamOutput) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    parentPort?.postMessage({ </span>
+      type: 'output', 
+      data: { streamId, ...data } 
+    } as WorkerResponse);
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  player.onStreamError(<span class="fstat-no" title="function not covered" >(d</span>ata: StreamError) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    parentPort?.postMessage({ </span>
+      type: 'streamError', 
+      data: { streamId, ...data } 
+    } as WorkerResponse);
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  logger.info(`Player worker ${streamId} initialized`, 'PlayerWorker');</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.196Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/lcov.info b/coverage/lcov.info
new file mode 100644
index 0000000..70107cc
--- /dev/null
+++ b/coverage/lcov.info
@@ -0,0 +1,6013 @@
+TN:
+SF:src/hooks.client.ts
+FN:12,init
+FN:20,(anonymous_1)
+FN:36,(anonymous_2)
+FN:64,(anonymous_3)
+FN:65,(anonymous_4)
+FN:76,(anonymous_5)
+FNF:6
+FNH:0
+FNDA:0,init
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+DA:4,0
+DA:5,0
+DA:8,0
+DA:9,0
+DA:12,0
+DA:14,0
+DA:20,0
+DA:21,0
+DA:24,0
+DA:27,0
+DA:34,0
+DA:36,0
+DA:37,0
+DA:40,0
+DA:41,0
+DA:42,0
+DA:46,0
+DA:49,0
+DA:50,0
+DA:51,0
+DA:52,0
+DA:53,0
+DA:55,0
+DA:56,0
+DA:60,0
+DA:64,0
+DA:65,0
+DA:66,0
+DA:69,0
+DA:70,0
+DA:74,0
+DA:77,0
+DA:78,0
+DA:79,0
+DA:80,0
+DA:82,0
+DA:84,0
+LF:37
+LH:0
+BRDA:34,0,0,0
+BRDA:37,1,0,0
+BRDA:37,1,1,0
+BRDA:37,2,0,0
+BRDA:37,2,1,0
+BRDA:37,3,0,0
+BRDA:37,3,1,0
+BRDA:41,4,0,0
+BRDA:41,5,0,0
+BRDA:41,5,1,0
+BRDA:49,6,0,0
+BRDA:49,7,0,0
+BRDA:49,7,1,0
+BRDA:49,7,2,0
+BRDA:49,8,0,0
+BRDA:49,8,1,0
+BRDA:49,9,0,0
+BRDA:49,9,1,0
+BRDA:66,10,0,0
+BRDA:66,10,1,0
+BRDA:66,11,0,0
+BRDA:66,11,1,0
+BRDA:66,12,0,0
+BRDA:66,12,1,0
+BRDA:69,13,0,0
+BRF:25
+BRH:0
+end_of_record
+TN:
+SF:src/hooks.server.ts
+FN:5,(anonymous_0)
+FNF:1
+FNH:0
+FNDA:0,(anonymous_0)
+DA:2,0
+DA:5,0
+DA:7,0
+DA:8,0
+DA:9,0
+DA:11,0
+LF:6
+LH:0
+BRDA:8,0,0,0
+BRDA:8,0,1,0
+BRDA:8,1,0,0
+BRDA:8,1,1,0
+BRF:4
+BRH:0
+end_of_record
+TN:
+SF:src/hooks.ts
+FN:10,reroute
+FN:15,transport
+FNF:2
+FNH:0
+FNDA:0,reroute
+FNDA:0,transport
+DA:1,0
+DA:3,0
+DA:4,0
+DA:7,0
+DA:10,0
+DA:12,0
+DA:15,0
+DA:17,0
+LF:8
+LH:0
+BRF:0
+BRH:0
+end_of_record
+TN:
+SF:src/cli/livelink.ts
+FN:10,getTimestamp
+FN:15,formatUptime
+FN:33,handleResponse
+FN:68,(anonymous_13)
+FN:74,(anonymous_14)
+FN:76,(anonymous_15)
+FN:117,(anonymous_16)
+FN:134,(anonymous_17)
+FN:159,(anonymous_18)
+FN:184,(anonymous_19)
+FN:196,(anonymous_20)
+FN:210,(anonymous_21)
+FN:222,(anonymous_22)
+FN:237,(anonymous_23)
+FN:254,(anonymous_24)
+FN:271,(anonymous_25)
+FN:286,(anonymous_26)
+FN:302,(anonymous_27)
+FN:319,(anonymous_28)
+FN:341,(anonymous_29)
+FN:349,(anonymous_30)
+FN:372,(anonymous_31)
+FN:389,(anonymous_32)
+FN:401,(anonymous_33)
+FN:412,(anonymous_34)
+FN:429,(anonymous_35)
+FN:449,(anonymous_36)
+FN:476,(anonymous_37)
+FN:507,(anonymous_38)
+FN:527,(anonymous_39)
+FN:553,(anonymous_40)
+FN:561,(anonymous_41)
+FN:567,(anonymous_42)
+FN:578,(anonymous_43)
+FN:584,(anonymous_44)
+FN:597,(anonymous_45)
+FN:626,(anonymous_46)
+FN:632,(anonymous_47)
+FN:646,(anonymous_48)
+FN:675,(anonymous_49)
+FN:679,(anonymous_50)
+FN:716,(anonymous_51)
+FN:730,(anonymous_52)
+FN:746,(anonymous_53)
+FN:754,(anonymous_54)
+FN:761,(anonymous_55)
+FN:774,(anonymous_56)
+FN:779,(anonymous_57)
+FN:787,(anonymous_58)
+FN:806,(anonymous_59)
+FN:813,(anonymous_60)
+FN:815,(anonymous_61)
+FN:860,(anonymous_62)
+FN:867,(anonymous_63)
+FN:867,(anonymous_64)
+FN:870,(anonymous_65)
+FN:885,(anonymous_66)
+FN:892,(anonymous_67)
+FN:894,(anonymous_68)
+FN:932,handleQueueShow
+FN:938,(anonymous_70)
+FN:990,(anonymous_71)
+FN:1026,handleStreamList
+FN:1074,(anonymous_73)
+FN:1109,(anonymous_74)
+FNF:65
+FNH:0
+FNDA:0,getTimestamp
+FNDA:0,formatUptime
+FNDA:0,handleResponse
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+FNDA:0,(anonymous_20)
+FNDA:0,(anonymous_21)
+FNDA:0,(anonymous_22)
+FNDA:0,(anonymous_23)
+FNDA:0,(anonymous_24)
+FNDA:0,(anonymous_25)
+FNDA:0,(anonymous_26)
+FNDA:0,(anonymous_27)
+FNDA:0,(anonymous_28)
+FNDA:0,(anonymous_29)
+FNDA:0,(anonymous_30)
+FNDA:0,(anonymous_31)
+FNDA:0,(anonymous_32)
+FNDA:0,(anonymous_33)
+FNDA:0,(anonymous_34)
+FNDA:0,(anonymous_35)
+FNDA:0,(anonymous_36)
+FNDA:0,(anonymous_37)
+FNDA:0,(anonymous_38)
+FNDA:0,(anonymous_39)
+FNDA:0,(anonymous_40)
+FNDA:0,(anonymous_41)
+FNDA:0,(anonymous_42)
+FNDA:0,(anonymous_43)
+FNDA:0,(anonymous_44)
+FNDA:0,(anonymous_45)
+FNDA:0,(anonymous_46)
+FNDA:0,(anonymous_47)
+FNDA:0,(anonymous_48)
+FNDA:0,(anonymous_49)
+FNDA:0,(anonymous_50)
+FNDA:0,(anonymous_51)
+FNDA:0,(anonymous_52)
+FNDA:0,(anonymous_53)
+FNDA:0,(anonymous_54)
+FNDA:0,(anonymous_55)
+FNDA:0,(anonymous_56)
+FNDA:0,(anonymous_57)
+FNDA:0,(anonymous_58)
+FNDA:0,(anonymous_59)
+FNDA:0,(anonymous_60)
+FNDA:0,(anonymous_61)
+FNDA:0,(anonymous_62)
+FNDA:0,(anonymous_63)
+FNDA:0,(anonymous_64)
+FNDA:0,(anonymous_65)
+FNDA:0,(anonymous_66)
+FNDA:0,(anonymous_67)
+FNDA:0,(anonymous_68)
+FNDA:0,handleQueueShow
+FNDA:0,(anonymous_70)
+FNDA:0,(anonymous_71)
+FNDA:0,handleStreamList
+FNDA:0,(anonymous_73)
+FNDA:0,(anonymous_74)
+DA:2,0
+DA:3,0
+DA:4,0
+DA:6,0
+DA:8,0
+DA:11,0
+DA:12,0
+DA:16,0
+DA:17,0
+DA:18,0
+DA:20,0
+DA:21,0
+DA:22,0
+DA:24,0
+DA:25,0
+DA:26,0
+DA:27,0
+DA:29,0
+DA:34,0
+DA:35,0
+DA:36,0
+DA:38,0
+DA:39,0
+DA:42,0
+DA:49,0
+DA:50,0
+DA:51,0
+DA:52,0
+DA:53,0
+DA:56,0
+DA:61,0
+DA:69,0
+DA:70,0
+DA:73,0
+DA:74,0
+DA:76,0
+DA:77,0
+DA:78,0
+DA:79,0
+DA:80,0
+DA:81,0
+DA:82,0
+DA:91,0
+DA:97,0
+DA:98,0
+DA:101,0
+DA:106,0
+DA:107,0
+DA:109,0
+DA:113,0
+DA:118,0
+DA:119,0
+DA:120,0
+DA:123,0
+DA:124,0
+DA:126,0
+DA:130,0
+DA:135,0
+DA:136,0
+DA:137,0
+DA:139,0
+DA:142,0
+DA:147,0
+DA:148,0
+DA:150,0
+DA:155,0
+DA:160,0
+DA:161,0
+DA:162,0
+DA:164,0
+DA:167,0
+DA:169,0
+DA:172,0
+DA:173,0
+DA:175,0
+DA:180,0
+DA:185,0
+DA:186,0
+DA:187,0
+DA:188,0
+DA:190,0
+DA:191,0
+DA:192,0
+DA:195,0
+DA:196,0
+DA:197,0
+DA:198,0
+DA:199,0
+DA:202,0
+DA:206,0
+DA:211,0
+DA:212,0
+DA:213,0
+DA:214,0
+DA:216,0
+DA:217,0
+DA:218,0
+DA:221,0
+DA:222,0
+DA:223,0
+DA:224,0
+DA:225,0
+DA:228,0
+DA:233,0
+DA:238,0
+DA:239,0
+DA:240,0
+DA:243,0
+DA:244,0
+DA:246,0
+DA:250,0
+DA:255,0
+DA:256,0
+DA:257,0
+DA:260,0
+DA:261,0
+DA:263,0
+DA:267,0
+DA:272,0
+DA:273,0
+DA:274,0
+DA:275,0
+DA:276,0
+DA:277,0
+DA:279,0
+DA:283,0
+DA:287,0
+DA:288,0
+DA:289,0
+DA:290,0
+DA:291,0
+DA:292,0
+DA:294,0
+DA:298,0
+DA:303,0
+DA:304,0
+DA:305,0
+DA:308,0
+DA:309,0
+DA:311,0
+DA:315,0
+DA:320,0
+DA:321,0
+DA:322,0
+DA:325,0
+DA:326,0
+DA:327,0
+DA:329,0
+DA:332,0
+DA:337,0
+DA:341,0
+DA:343,0
+DA:350,0
+DA:351,0
+DA:352,0
+DA:361,0
+DA:362,0
+DA:364,0
+DA:368,0
+DA:373,0
+DA:374,0
+DA:375,0
+DA:378,0
+DA:379,0
+DA:381,0
+DA:386,0
+DA:390,0
+DA:391,0
+DA:392,0
+DA:393,0
+DA:395,0
+DA:396,0
+DA:397,0
+DA:400,0
+DA:401,0
+DA:402,0
+DA:405,0
+DA:409,0
+DA:413,0
+DA:414,0
+DA:415,0
+DA:418,0
+DA:419,0
+DA:421,0
+DA:425,0
+DA:430,0
+DA:431,0
+DA:432,0
+DA:437,0
+DA:438,0
+DA:440,0
+DA:445,0
+DA:450,0
+DA:451,0
+DA:452,0
+DA:453,0
+DA:454,0
+DA:457,0
+DA:458,0
+DA:463,0
+DA:464,0
+DA:466,0
+DA:470,0
+DA:477,0
+DA:478,0
+DA:479,0
+DA:480,0
+DA:483,0
+DA:484,0
+DA:486,0
+DA:490,0
+DA:496,0
+DA:497,0
+DA:499,0
+DA:503,0
+DA:508,0
+DA:509,0
+DA:510,0
+DA:515,0
+DA:516,0
+DA:518,0
+DA:522,0
+DA:528,0
+DA:529,0
+DA:530,0
+DA:531,0
+DA:532,0
+DA:535,0
+DA:536,0
+DA:541,0
+DA:542,0
+DA:544,0
+DA:549,0
+DA:554,0
+DA:556,0
+DA:559,0
+DA:560,0
+DA:561,0
+DA:562,0
+DA:567,0
+DA:568,0
+DA:570,0
+DA:571,0
+DA:575,0
+DA:579,0
+DA:580,0
+DA:583,0
+DA:584,0
+DA:586,0
+DA:587,0
+DA:592,0
+DA:594,0
+DA:595,0
+DA:597,0
+DA:598,0
+DA:600,0
+DA:601,0
+DA:602,0
+DA:605,0
+DA:606,0
+DA:607,0
+DA:608,0
+DA:610,0
+DA:613,0
+DA:615,0
+DA:618,0
+DA:619,0
+DA:623,0
+DA:627,0
+DA:628,0
+DA:631,0
+DA:632,0
+DA:634,0
+DA:635,0
+DA:640,0
+DA:642,0
+DA:643,0
+DA:644,0
+DA:646,0
+DA:647,0
+DA:649,0
+DA:650,0
+DA:651,0
+DA:654,0
+DA:655,0
+DA:656,0
+DA:657,0
+DA:659,0
+DA:662,0
+DA:664,0
+DA:667,0
+DA:668,0
+DA:672,0
+DA:676,0
+DA:677,0
+DA:678,0
+DA:679,0
+DA:681,0
+DA:682,0
+DA:686,0
+DA:688,0
+DA:689,0
+DA:690,0
+DA:691,0
+DA:693,0
+DA:696,0
+DA:697,0
+DA:698,0
+DA:699,0
+DA:700,0
+DA:702,0
+DA:706,0
+DA:711,0
+DA:713,0
+DA:717,0
+DA:718,0
+DA:719,0
+DA:720,0
+DA:722,0
+DA:723,0
+DA:727,0
+DA:731,0
+DA:732,0
+DA:733,0
+DA:734,0
+DA:736,0
+DA:737,0
+DA:742,0
+DA:747,0
+DA:749,0
+DA:752,0
+DA:753,0
+DA:754,0
+DA:755,0
+DA:760,0
+DA:761,0
+DA:762,0
+DA:763,0
+DA:765,0
+DA:766,0
+DA:771,0
+DA:775,0
+DA:776,0
+DA:777,0
+DA:778,0
+DA:779,0
+DA:781,0
+DA:782,0
+DA:783,0
+DA:786,0
+DA:787,0
+DA:788,0
+DA:789,0
+DA:790,0
+DA:791,0
+DA:792,0
+DA:793,0
+DA:796,0
+DA:800,0
+DA:807,0
+DA:808,0
+DA:809,0
+DA:812,0
+DA:813,0
+DA:815,0
+DA:816,0
+DA:817,0
+DA:818,0
+DA:819,0
+DA:820,0
+DA:821,0
+DA:825,0
+DA:834,0
+DA:835,0
+DA:837,0
+DA:842,0
+DA:843,0
+DA:844,0
+DA:845,0
+DA:849,0
+DA:852,0
+DA:854,0
+DA:855,0
+DA:858,0
+DA:859,0
+DA:860,0
+DA:861,0
+DA:866,0
+DA:867,0
+DA:868,0
+DA:869,0
+DA:871,0
+DA:872,0
+DA:874,0
+DA:876,0
+DA:879,0
+DA:886,0
+DA:887,0
+DA:888,0
+DA:891,0
+DA:892,0
+DA:894,0
+DA:895,0
+DA:897,0
+DA:902,0
+DA:906,0
+DA:911,0
+DA:920,0
+DA:921,0
+DA:923,0
+DA:933,0
+DA:934,0
+DA:936,0
+DA:937,0
+DA:938,0
+DA:940,0
+DA:941,0
+DA:942,0
+DA:943,0
+DA:944,0
+DA:945,0
+DA:946,0
+DA:950,0
+DA:951,0
+DA:955,0
+DA:956,0
+DA:958,0
+DA:962,0
+DA:963,0
+DA:964,0
+DA:965,0
+DA:966,0
+DA:968,0
+DA:971,0
+DA:972,0
+DA:973,0
+DA:974,0
+DA:978,0
+DA:979,0
+DA:982,0
+DA:983,0
+DA:984,0
+DA:987,0
+DA:988,0
+DA:990,0
+DA:992,0
+DA:995,0
+DA:998,0
+DA:999,0
+DA:1000,0
+DA:1001,0
+DA:1002,0
+DA:1003,0
+DA:1004,0
+DA:1007,0
+DA:1009,0
+DA:1013,0
+DA:1014,0
+DA:1018,0
+DA:1019,0
+DA:1022,0
+DA:1027,0
+DA:1028,0
+DA:1029,0
+DA:1030,0
+DA:1031,0
+DA:1034,0
+DA:1035,0
+DA:1036,0
+DA:1037,0
+DA:1040,0
+DA:1042,0
+DA:1044,0
+DA:1045,0
+DA:1047,0
+DA:1048,0
+DA:1049,0
+DA:1050,0
+DA:1051,0
+DA:1052,0
+DA:1054,0
+DA:1055,0
+DA:1056,0
+DA:1057,0
+DA:1058,0
+DA:1059,0
+DA:1062,0
+DA:1065,0
+DA:1069,0
+DA:1075,0
+DA:1076,0
+DA:1077,0
+DA:1090,0
+DA:1091,0
+DA:1094,0
+DA:1095,0
+DA:1096,0
+DA:1098,0
+DA:1101,0
+DA:1106,0
+DA:1110,0
+DA:1111,0
+DA:1112,0
+DA:1116,0
+DA:1117,0
+DA:1120,0
+DA:1122,0
+LF:507
+LH:0
+BRDA:16,0,0,0
+BRDA:16,0,1,0
+BRDA:24,1,0,0
+BRDA:24,1,1,0
+BRDA:26,2,0,0
+BRDA:26,2,1,0
+BRDA:34,3,0,0
+BRDA:77,4,0,0
+BRDA:80,5,0,0
+BRDA:97,6,0,0
+BRDA:136,7,0,0
+BRDA:136,7,1,0
+BRDA:145,8,0,0
+BRDA:145,8,1,0
+BRDA:161,9,0,0
+BRDA:161,9,1,0
+BRDA:167,10,0,0
+BRDA:167,10,1,0
+BRDA:190,11,0,0
+BRDA:197,12,0,0
+BRDA:197,12,1,0
+BRDA:199,13,0,0
+BRDA:216,14,0,0
+BRDA:223,15,0,0
+BRDA:223,15,1,0
+BRDA:225,16,0,0
+BRDA:309,17,0,0
+BRDA:309,17,1,0
+BRDA:326,18,0,0
+BRDA:326,18,1,0
+BRDA:395,19,0,0
+BRDA:452,20,0,0
+BRDA:478,21,0,0
+BRDA:478,22,0,0
+BRDA:478,22,1,0
+BRDA:483,23,0,0
+BRDA:483,23,1,0
+BRDA:486,24,0,0
+BRDA:486,24,1,0
+BRDA:530,25,0,0
+BRDA:530,26,0,0
+BRDA:530,26,1,0
+BRDA:530,26,2,0
+BRDA:559,27,0,0
+BRDA:594,28,0,0
+BRDA:594,28,1,0
+BRDA:606,29,0,0
+BRDA:606,29,1,0
+BRDA:607,30,0,0
+BRDA:607,30,1,0
+BRDA:618,31,0,0
+BRDA:618,31,1,0
+BRDA:642,32,0,0
+BRDA:642,32,1,0
+BRDA:655,33,0,0
+BRDA:655,33,1,0
+BRDA:656,34,0,0
+BRDA:656,34,1,0
+BRDA:667,35,0,0
+BRDA:667,35,1,0
+BRDA:688,36,0,0
+BRDA:688,36,1,0
+BRDA:697,37,0,0
+BRDA:697,37,1,0
+BRDA:697,38,0,0
+BRDA:697,38,1,0
+BRDA:699,39,0,0
+BRDA:699,39,1,0
+BRDA:699,40,0,0
+BRDA:699,40,1,0
+BRDA:699,40,2,0
+BRDA:702,41,0,0
+BRDA:702,41,1,0
+BRDA:752,42,0,0
+BRDA:781,43,0,0
+BRDA:791,44,0,0
+BRDA:792,45,0,0
+BRDA:793,46,0,0
+BRDA:793,46,1,0
+BRDA:816,47,0,0
+BRDA:819,48,0,0
+BRDA:843,49,0,0
+BRDA:852,50,0,0
+BRDA:852,50,1,0
+BRDA:852,51,0,0
+BRDA:852,51,1,0
+BRDA:852,51,2,0
+BRDA:858,52,0,0
+BRDA:874,53,0,0
+BRDA:895,54,0,0
+BRDA:895,55,0,0
+BRDA:895,55,1,0
+BRDA:895,56,0,0
+BRDA:895,56,1,0
+BRDA:940,57,0,0
+BRDA:942,58,0,0
+BRDA:942,58,1,0
+BRDA:955,59,0,0
+BRDA:955,59,1,0
+BRDA:963,60,0,0
+BRDA:964,61,0,0
+BRDA:972,62,0,0
+BRDA:972,63,0,0
+BRDA:972,63,1,0
+BRDA:979,64,0,0
+BRDA:979,64,1,0
+BRDA:982,65,0,0
+BRDA:983,66,0,0
+BRDA:983,66,1,0
+BRDA:992,67,0,0
+BRDA:992,67,1,0
+BRDA:993,68,0,0
+BRDA:993,68,1,0
+BRDA:995,69,0,0
+BRDA:995,69,1,0
+BRDA:998,70,0,0
+BRDA:998,70,1,0
+BRDA:999,71,0,0
+BRDA:999,71,1,0
+BRDA:1001,72,0,0
+BRDA:1002,73,0,0
+BRDA:1003,74,0,0
+BRDA:1004,75,0,0
+BRDA:1004,75,1,0
+BRDA:1005,76,0,0
+BRDA:1005,76,1,0
+BRDA:1013,77,0,0
+BRDA:1013,78,0,0
+BRDA:1013,78,1,0
+BRDA:1013,79,0,0
+BRDA:1013,79,1,0
+BRDA:1018,80,0,0
+BRDA:1022,81,0,0
+BRDA:1022,81,1,0
+BRDA:1030,82,0,0
+BRDA:1035,83,0,0
+BRDA:1035,84,0,0
+BRDA:1035,84,1,0
+BRDA:1045,85,0,0
+BRDA:1045,85,1,0
+BRDA:1047,86,0,0
+BRDA:1047,86,1,0
+BRDA:1048,87,0,0
+BRDA:1048,87,1,0
+BRDA:1048,87,2,0
+BRDA:1048,88,0,0
+BRDA:1048,88,1,0
+BRDA:1048,89,0,0
+BRDA:1048,89,1,0
+BRDA:1054,90,0,0
+BRDA:1055,91,0,0
+BRDA:1056,92,0,0
+BRDA:1057,93,0,0
+BRDA:1065,94,0,0
+BRDA:1065,94,1,0
+BRDA:1090,95,0,0
+BRDA:1095,96,0,0
+BRDA:1095,96,1,0
+BRDA:1098,97,0,0
+BRDA:1098,97,1,0
+BRDA:1101,98,0,0
+BRDA:1101,98,1,0
+BRDA:1116,99,0,0
+BRDA:1122,100,0,0
+BRDA:1122,100,1,0
+BRF:165
+BRH:0
+end_of_record
+TN:
+SF:src/lib/api.ts
+FN:3,(anonymous_0)
+FN:8,(anonymous_1)
+FN:18,(anonymous_2)
+FN:72,(anonymous_3)
+FN:76,(anonymous_4)
+FN:84,(anonymous_5)
+FN:90,(anonymous_6)
+FN:99,(anonymous_7)
+FN:103,(anonymous_8)
+FN:111,(anonymous_9)
+FN:117,(anonymous_10)
+FN:126,(anonymous_11)
+FN:134,(anonymous_12)
+FN:142,(anonymous_13)
+FN:150,(anonymous_14)
+FN:156,(anonymous_15)
+FN:165,(anonymous_16)
+FN:169,(anonymous_17)
+FN:177,(anonymous_18)
+FN:181,(anonymous_19)
+FN:190,(anonymous_20)
+FN:194,(anonymous_21)
+FN:202,(anonymous_22)
+FN:209,(anonymous_23)
+FN:216,(anonymous_24)
+FN:226,(anonymous_25)
+FN:231,(anonymous_26)
+FN:238,(anonymous_27)
+FN:242,(anonymous_28)
+FNF:29
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+FNDA:0,(anonymous_20)
+FNDA:0,(anonymous_21)
+FNDA:0,(anonymous_22)
+FNDA:0,(anonymous_23)
+FNDA:0,(anonymous_24)
+FNDA:0,(anonymous_25)
+FNDA:0,(anonymous_26)
+FNDA:0,(anonymous_27)
+FNDA:0,(anonymous_28)
+DA:4,0
+DA:5,0
+DA:9,0
+DA:10,0
+DA:12,0
+DA:13,0
+DA:23,0
+DA:25,0
+DA:29,0
+DA:30,0
+DA:32,0
+DA:33,0
+DA:36,0
+DA:37,0
+DA:42,0
+DA:45,0
+DA:48,0
+DA:49,0
+DA:50,0
+DA:52,0
+DA:54,0
+DA:55,0
+DA:58,0
+DA:61,0
+DA:64,0
+DA:66,0
+DA:67,0
+DA:73,0
+DA:77,0
+DA:85,0
+DA:91,0
+DA:100,0
+DA:104,0
+DA:112,0
+DA:118,0
+DA:127,0
+DA:135,0
+DA:143,0
+DA:151,0
+DA:157,0
+DA:166,0
+DA:170,0
+DA:178,0
+DA:182,0
+DA:191,0
+DA:195,0
+DA:203,0
+DA:210,0
+DA:217,0
+DA:218,0
+DA:219,0
+DA:221,0
+DA:222,0
+DA:227,0
+DA:232,0
+DA:239,0
+DA:243,0
+DA:244,0
+DA:245,0
+DA:247,0
+DA:251,0
+LF:61
+LH:0
+BRDA:21,0,0,0
+BRDA:29,1,0,0
+BRDA:29,1,1,0
+BRDA:29,2,0,0
+BRDA:29,2,1,0
+BRDA:29,3,0,0
+BRDA:29,3,1,0
+BRDA:29,4,0,0
+BRDA:29,4,1,0
+BRDA:29,5,0,0
+BRDA:29,5,1,0
+BRDA:29,6,0,0
+BRDA:29,6,1,0
+BRDA:30,7,0,0
+BRDA:30,8,0,0
+BRDA:30,8,1,0
+BRDA:32,9,0,0
+BRDA:36,10,0,0
+BRDA:48,11,0,0
+BRDA:55,12,0,0
+BRDA:55,12,1,0
+BRDA:55,12,2,0
+BRDA:58,13,0,0
+BRDA:58,13,1,0
+BRDA:216,14,0,0
+BRDA:218,15,0,0
+BRDA:219,16,0,0
+BRDA:221,17,0,0
+BRDA:221,17,1,0
+BRDA:244,18,0,0
+BRF:30
+BRH:0
+end_of_record
+TN:
+SF:src/lib/i18n/helpers.ts
+FN:4,useTranslation
+FN:8,(anonymous_1)
+FN:9,(anonymous_2)
+FN:13,getLocaleFromPath
+FNF:4
+FNH:0
+FNDA:0,useTranslation
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,getLocaleFromPath
+DA:1,0
+DA:2,0
+DA:4,0
+DA:5,0
+DA:8,0
+DA:9,0
+DA:13,0
+DA:14,0
+DA:15,0
+LF:9
+LH:0
+BRDA:15,0,0,0
+BRDA:15,0,1,0
+BRDA:15,1,0,0
+BRDA:15,1,1,0
+BRF:4
+BRH:0
+end_of_record
+TN:
+SF:src/lib/i18n/index.ts
+FN:51,(anonymous_0)
+FNF:1
+FNH:0
+FNDA:0,(anonymous_0)
+DA:1,0
+DA:5,0
+DA:49,0
+DA:51,0
+LF:4
+LH:0
+BRF:0
+BRH:0
+end_of_record
+TN:
+SF:src/lib/stores/auth.ts
+FNF:0
+FNH:0
+DA:1,0
+DA:9,0
+LF:2
+LH:0
+BRF:0
+BRH:0
+end_of_record
+TN:
+SF:src/lib/stores/index.ts
+FN:33,initializeStores
+FN:49,(anonymous_1)
+FN:81,(anonymous_2)
+FN:86,(anonymous_3)
+FN:87,(anonymous_4)
+FN:98,(anonymous_5)
+FN:105,(anonymous_6)
+FNF:7
+FNH:0
+FNDA:0,initializeStores
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+DA:1,0
+DA:5,0
+DA:8,0
+DA:11,0
+DA:23,0
+DA:33,0
+DA:34,0
+DA:36,0
+DA:37,0
+DA:38,0
+DA:41,0
+DA:42,0
+DA:43,0
+DA:46,0
+DA:47,0
+DA:48,0
+DA:49,0
+DA:50,0
+DA:61,0
+DA:64,0
+DA:65,0
+DA:66,0
+DA:67,0
+DA:68,0
+DA:70,0
+DA:73,0
+DA:78,0
+DA:79,0
+DA:81,0
+DA:82,0
+DA:84,0
+DA:86,0
+DA:87,0
+DA:88,0
+DA:89,0
+DA:91,0
+DA:93,0
+DA:95,0
+DA:98,0
+DA:99,0
+DA:100,0
+DA:102,0
+DA:105,0
+DA:106,0
+DA:116,0
+DA:118,0
+LF:46
+LH:0
+BRDA:78,0,0,0
+BRDA:84,1,0,0
+BRDA:84,1,1,0
+BRDA:84,1,2,0
+BRDA:88,2,0,0
+BRDA:88,2,1,0
+BRF:6
+BRH:0
+end_of_record
+TN:
+SF:src/server/api.ts
+FN:48,(anonymous_1)
+FN:55,isPortInUse
+FN:56,(anonymous_3)
+FN:58,(anonymous_4)
+FN:63,(anonymous_5)
+FN:71,killProcessOnPort
+FN:72,(anonymous_7)
+FN:73,(anonymous_8)
+FN:84,startServer
+FN:91,(anonymous_10)
+FN:94,(anonymous_11)
+FN:97,(anonymous_12)
+FN:103,(anonymous_13)
+FN:106,(anonymous_14)
+FN:119,(anonymous_15)
+FNF:15
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,isPortInUse
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,killProcessOnPort
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,startServer
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:4,0
+DA:5,0
+DA:6,0
+DA:7,0
+DA:8,0
+DA:9,0
+DA:10,0
+DA:11,0
+DA:12,0
+DA:14,0
+DA:15,0
+DA:16,0
+DA:19,0
+DA:20,0
+DA:21,0
+DA:24,0
+DA:25,0
+DA:26,0
+DA:27,0
+DA:29,0
+DA:33,0
+DA:34,0
+DA:35,0
+DA:38,0
+DA:39,0
+DA:42,0
+DA:43,0
+DA:44,0
+DA:45,0
+DA:48,0
+DA:49,0
+DA:52,0
+DA:56,0
+DA:57,0
+DA:59,0
+DA:60,0
+DA:64,0
+DA:65,0
+DA:72,0
+DA:73,0
+DA:74,0
+DA:75,0
+DA:77,0
+DA:85,0
+DA:86,0
+DA:87,0
+DA:88,0
+DA:89,0
+DA:91,0
+DA:94,0
+DA:95,0
+DA:96,0
+DA:97,0
+DA:98,0
+DA:103,0
+DA:104,0
+DA:105,0
+DA:106,0
+DA:107,0
+DA:108,0
+DA:112,0
+DA:114,0
+DA:115,0
+DA:116,0
+DA:119,0
+DA:125,0
+DA:126,0
+DA:128,0
+DA:129,0
+DA:132,0
+LF:73
+LH:0
+BRDA:52,0,0,0
+BRDA:52,0,1,0
+BRDA:59,1,0,0
+BRDA:74,2,0,0
+BRDA:74,2,1,0
+BRDA:74,3,0,0
+BRDA:74,3,1,0
+BRDA:84,4,0,0
+BRDA:87,5,0,0
+BRDA:115,6,0,0
+BRF:10
+BRH:0
+end_of_record
+TN:
+SF:src/server/config.ts
+FNF:0
+FNH:0
+DA:51,0
+LF:1
+LH:0
+BRDA:130,0,0,0
+BRDA:130,0,1,0
+BRDA:133,1,0,0
+BRDA:133,1,1,0
+BRDA:134,2,0,0
+BRDA:134,2,1,0
+BRF:6
+BRH:0
+end_of_record
+TN:
+SF:src/server/index.ts
+FN:27,shutdown
+FN:36,(anonymous_1)
+FN:46,(anonymous_2)
+FN:72,(anonymous_3)
+FN:73,(anonymous_4)
+FN:87,(anonymous_5)
+FN:88,(anonymous_6)
+FN:104,(anonymous_7)
+FN:114,(anonymous_8)
+FN:115,(anonymous_9)
+FN:122,(anonymous_10)
+FN:128,(anonymous_11)
+FNF:12
+FNH:0
+FNDA:0,shutdown
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+DA:1,0
+DA:2,0
+DA:4,0
+DA:7,0
+DA:9,0
+DA:13,0
+DA:14,0
+DA:15,0
+DA:17,0
+DA:18,0
+DA:19,0
+DA:22,0
+DA:23,0
+DA:24,0
+DA:28,0
+DA:29,0
+DA:31,0
+DA:33,0
+DA:35,0
+DA:36,0
+DA:37,0
+DA:38,0
+DA:39,0
+DA:40,0
+DA:41,0
+DA:43,0
+DA:46,0
+DA:47,0
+DA:49,0
+DA:51,0
+DA:57,0
+DA:58,0
+DA:68,0
+DA:71,0
+DA:72,0
+DA:73,0
+DA:74,0
+DA:75,0
+DA:77,0
+DA:82,0
+DA:86,0
+DA:87,0
+DA:88,0
+DA:89,0
+DA:90,0
+DA:92,0
+DA:97,0
+DA:101,0
+DA:104,0
+DA:106,0
+DA:108,0
+DA:109,0
+DA:114,0
+DA:115,0
+DA:116,0
+DA:117,0
+DA:122,0
+DA:123,0
+DA:124,0
+DA:128,0
+DA:129,0
+DA:130,0
+LF:62
+LH:0
+BRDA:17,0,0,0
+BRDA:22,1,0,0
+BRDA:22,2,0,0
+BRDA:22,2,1,0
+BRDA:28,3,0,0
+BRDA:38,4,0,0
+BRDA:40,5,0,0
+BRDA:74,6,0,0
+BRDA:74,6,1,0
+BRDA:74,7,0,0
+BRDA:74,7,1,0
+BRDA:89,8,0,0
+BRDA:89,8,1,0
+BRDA:89,9,0,0
+BRDA:89,9,1,0
+BRF:15
+BRH:0
+end_of_record
+TN:
+SF:src/server/router.ts
+FN:10,(anonymous_1)
+FN:17,(anonymous_2)
+FN:24,(anonymous_3)
+FNF:3
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:4,0
+DA:6,0
+DA:7,0
+DA:10,0
+DA:11,0
+DA:17,0
+DA:18,0
+DA:24,0
+DA:25,0
+DA:28,0
+LF:13
+LH:0
+BRF:0
+BRH:0
+end_of_record
+TN:
+SF:src/server/stream_manager.ts
+FN:70,(anonymous_1)
+FN:97,(anonymous_2)
+FN:127,(anonymous_3)
+FN:128,(anonymous_4)
+FN:143,(anonymous_5)
+FN:149,(anonymous_6)
+FN:163,(anonymous_7)
+FN:169,(anonymous_8)
+FN:176,(anonymous_9)
+FN:188,(anonymous_10)
+FN:192,(anonymous_11)
+FN:204,(anonymous_12)
+FN:218,(anonymous_13)
+FN:238,(anonymous_14)
+FN:265,(anonymous_15)
+FN:333,(anonymous_16)
+FN:341,(anonymous_17)
+FN:352,(anonymous_18)
+FN:375,(anonymous_19)
+FN:383,(anonymous_20)
+FN:392,(anonymous_21)
+FN:413,(anonymous_22)
+FN:424,(anonymous_23)
+FN:496,(anonymous_24)
+FN:499,(anonymous_25)
+FN:528,(anonymous_26)
+FN:545,(anonymous_27)
+FN:559,(anonymous_28)
+FN:580,(anonymous_29)
+FN:598,(anonymous_30)
+FN:631,(anonymous_31)
+FN:671,(anonymous_32)
+FN:701,(anonymous_33)
+FN:705,(anonymous_34)
+FN:709,(anonymous_35)
+FN:716,(anonymous_36)
+FN:723,(anonymous_37)
+FN:746,(anonymous_38)
+FN:747,(anonymous_39)
+FN:753,(anonymous_40)
+FN:777,(anonymous_41)
+FN:796,(anonymous_42)
+FN:802,(anonymous_43)
+FN:813,(anonymous_44)
+FN:820,(anonymous_45)
+FN:841,(anonymous_46)
+FN:842,(anonymous_47)
+FN:858,(anonymous_48)
+FN:869,(anonymous_49)
+FN:876,(anonymous_50)
+FN:883,(anonymous_51)
+FN:890,(anonymous_52)
+FN:894,(anonymous_53)
+FN:902,(anonymous_54)
+FN:903,(anonymous_55)
+FN:916,(anonymous_56)
+FN:935,(anonymous_57)
+FN:936,(anonymous_58)
+FN:954,(anonymous_59)
+FN:980,(anonymous_60)
+FN:993,(anonymous_61)
+FN:994,(anonymous_62)
+FN:1015,(anonymous_63)
+FN:1022,(anonymous_64)
+FN:1037,(anonymous_65)
+FN:1052,(anonymous_66)
+FN:1056,(anonymous_67)
+FN:1074,(anonymous_68)
+FN:1079,(anonymous_69)
+FN:1083,(anonymous_70)
+FN:1088,(anonymous_71)
+FN:1099,(anonymous_72)
+FN:1100,(anonymous_73)
+FN:1150,(anonymous_74)
+FN:1154,(anonymous_75)
+FN:1158,(anonymous_76)
+FN:1165,(anonymous_77)
+FN:1174,(anonymous_78)
+FN:1185,(anonymous_79)
+FN:1199,(anonymous_80)
+FN:1203,(anonymous_81)
+FN:1217,(anonymous_82)
+FN:1218,(anonymous_83)
+FN:1221,(anonymous_84)
+FN:1232,(anonymous_85)
+FN:1242,(anonymous_86)
+FN:1252,(anonymous_87)
+FN:1268,(anonymous_88)
+FN:1274,(anonymous_89)
+FN:1292,(anonymous_90)
+FN:1296,(anonymous_91)
+FN:1307,(anonymous_92)
+FN:1317,(anonymous_93)
+FN:1318,(anonymous_94)
+FN:1330,(anonymous_95)
+FN:1332,(anonymous_96)
+FN:1338,(anonymous_97)
+FN:1362,(anonymous_98)
+FN:1370,(anonymous_99)
+FN:1378,(anonymous_100)
+FN:1383,(anonymous_101)
+FN:1392,(anonymous_102)
+FN:1393,(anonymous_103)
+FN:1405,(anonymous_104)
+FN:1448,(anonymous_105)
+FN:1455,(anonymous_106)
+FN:1458,(anonymous_107)
+FN:1494,(anonymous_108)
+FN:1501,(anonymous_109)
+FN:1509,(anonymous_110)
+FN:1515,(anonymous_111)
+FN:1521,(anonymous_112)
+FN:1524,(anonymous_113)
+FN:1553,(anonymous_114)
+FN:1578,(anonymous_115)
+FN:1581,(anonymous_116)
+FN:1582,(anonymous_117)
+FN:1589,(anonymous_118)
+FN:1592,(anonymous_119)
+FN:1602,(anonymous_120)
+FN:1615,(anonymous_121)
+FN:1639,(anonymous_122)
+FN:1646,(anonymous_123)
+FN:1649,(anonymous_124)
+FN:1653,(anonymous_125)
+FN:1714,(anonymous_126)
+FN:1733,(anonymous_127)
+FN:1751,(anonymous_128)
+FN:1758,(anonymous_129)
+FNF:129
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+FNDA:0,(anonymous_20)
+FNDA:0,(anonymous_21)
+FNDA:0,(anonymous_22)
+FNDA:0,(anonymous_23)
+FNDA:0,(anonymous_24)
+FNDA:0,(anonymous_25)
+FNDA:0,(anonymous_26)
+FNDA:0,(anonymous_27)
+FNDA:0,(anonymous_28)
+FNDA:0,(anonymous_29)
+FNDA:0,(anonymous_30)
+FNDA:0,(anonymous_31)
+FNDA:0,(anonymous_32)
+FNDA:0,(anonymous_33)
+FNDA:0,(anonymous_34)
+FNDA:0,(anonymous_35)
+FNDA:0,(anonymous_36)
+FNDA:0,(anonymous_37)
+FNDA:0,(anonymous_38)
+FNDA:0,(anonymous_39)
+FNDA:0,(anonymous_40)
+FNDA:0,(anonymous_41)
+FNDA:0,(anonymous_42)
+FNDA:0,(anonymous_43)
+FNDA:0,(anonymous_44)
+FNDA:0,(anonymous_45)
+FNDA:0,(anonymous_46)
+FNDA:0,(anonymous_47)
+FNDA:0,(anonymous_48)
+FNDA:0,(anonymous_49)
+FNDA:0,(anonymous_50)
+FNDA:0,(anonymous_51)
+FNDA:0,(anonymous_52)
+FNDA:0,(anonymous_53)
+FNDA:0,(anonymous_54)
+FNDA:0,(anonymous_55)
+FNDA:0,(anonymous_56)
+FNDA:0,(anonymous_57)
+FNDA:0,(anonymous_58)
+FNDA:0,(anonymous_59)
+FNDA:0,(anonymous_60)
+FNDA:0,(anonymous_61)
+FNDA:0,(anonymous_62)
+FNDA:0,(anonymous_63)
+FNDA:0,(anonymous_64)
+FNDA:0,(anonymous_65)
+FNDA:0,(anonymous_66)
+FNDA:0,(anonymous_67)
+FNDA:0,(anonymous_68)
+FNDA:0,(anonymous_69)
+FNDA:0,(anonymous_70)
+FNDA:0,(anonymous_71)
+FNDA:0,(anonymous_72)
+FNDA:0,(anonymous_73)
+FNDA:0,(anonymous_74)
+FNDA:0,(anonymous_75)
+FNDA:0,(anonymous_76)
+FNDA:0,(anonymous_77)
+FNDA:0,(anonymous_78)
+FNDA:0,(anonymous_79)
+FNDA:0,(anonymous_80)
+FNDA:0,(anonymous_81)
+FNDA:0,(anonymous_82)
+FNDA:0,(anonymous_83)
+FNDA:0,(anonymous_84)
+FNDA:0,(anonymous_85)
+FNDA:0,(anonymous_86)
+FNDA:0,(anonymous_87)
+FNDA:0,(anonymous_88)
+FNDA:0,(anonymous_89)
+FNDA:0,(anonymous_90)
+FNDA:0,(anonymous_91)
+FNDA:0,(anonymous_92)
+FNDA:0,(anonymous_93)
+FNDA:0,(anonymous_94)
+FNDA:0,(anonymous_95)
+FNDA:0,(anonymous_96)
+FNDA:0,(anonymous_97)
+FNDA:0,(anonymous_98)
+FNDA:0,(anonymous_99)
+FNDA:0,(anonymous_100)
+FNDA:0,(anonymous_101)
+FNDA:0,(anonymous_102)
+FNDA:0,(anonymous_103)
+FNDA:0,(anonymous_104)
+FNDA:0,(anonymous_105)
+FNDA:0,(anonymous_106)
+FNDA:0,(anonymous_107)
+FNDA:0,(anonymous_108)
+FNDA:0,(anonymous_109)
+FNDA:0,(anonymous_110)
+FNDA:0,(anonymous_111)
+FNDA:0,(anonymous_112)
+FNDA:0,(anonymous_113)
+FNDA:0,(anonymous_114)
+FNDA:0,(anonymous_115)
+FNDA:0,(anonymous_116)
+FNDA:0,(anonymous_117)
+FNDA:0,(anonymous_118)
+FNDA:0,(anonymous_119)
+FNDA:0,(anonymous_120)
+FNDA:0,(anonymous_121)
+FNDA:0,(anonymous_122)
+FNDA:0,(anonymous_123)
+FNDA:0,(anonymous_124)
+FNDA:0,(anonymous_125)
+FNDA:0,(anonymous_126)
+FNDA:0,(anonymous_127)
+FNDA:0,(anonymous_128)
+FNDA:0,(anonymous_129)
+DA:16,0
+DA:17,0
+DA:18,0
+DA:19,0
+DA:20,0
+DA:21,0
+DA:23,0
+DA:24,0
+DA:25,0
+DA:26,0
+DA:27,0
+DA:28,0
+DA:29,0
+DA:34,0
+DA:35,0
+DA:42,0
+DA:43,0
+DA:44,0
+DA:45,0
+DA:46,0
+DA:51,0
+DA:52,0
+DA:54,0
+DA:55,0
+DA:56,0
+DA:57,0
+DA:58,0
+DA:59,0
+DA:60,0
+DA:61,0
+DA:62,0
+DA:63,0
+DA:64,0
+DA:65,0
+DA:77,0
+DA:78,0
+DA:79,0
+DA:80,0
+DA:81,0
+DA:82,0
+DA:83,0
+DA:84,0
+DA:89,0
+DA:92,0
+DA:94,0
+DA:97,0
+DA:99,0
+DA:100,0
+DA:104,0
+DA:105,0
+DA:106,0
+DA:110,0
+DA:112,0
+DA:114,0
+DA:115,0
+DA:117,0
+DA:121,0
+DA:123,0
+DA:125,0
+DA:127,0
+DA:128,0
+DA:129,0
+DA:140,0
+DA:143,0
+DA:144,0
+DA:145,0
+DA:146,0
+DA:147,0
+DA:148,0
+DA:149,0
+DA:150,0
+DA:160,0
+DA:163,0
+DA:164,0
+DA:165,0
+DA:169,0
+DA:170,0
+DA:171,0
+DA:176,0
+DA:177,0
+DA:178,0
+DA:180,0
+DA:188,0
+DA:189,0
+DA:190,0
+DA:191,0
+DA:192,0
+DA:195,0
+DA:205,0
+DA:207,0
+DA:208,0
+DA:209,0
+DA:213,0
+DA:216,0
+DA:217,0
+DA:218,0
+DA:219,0
+DA:220,0
+DA:224,0
+DA:225,0
+DA:226,0
+DA:227,0
+DA:228,0
+DA:231,0
+DA:234,0
+DA:235,0
+DA:238,0
+DA:239,0
+DA:240,0
+DA:241,0
+DA:242,0
+DA:246,0
+DA:249,0
+DA:250,0
+DA:251,0
+DA:253,0
+DA:254,0
+DA:255,0
+DA:259,0
+DA:260,0
+DA:264,0
+DA:265,0
+DA:266,0
+DA:270,0
+DA:271,0
+DA:276,0
+DA:277,0
+DA:278,0
+DA:284,0
+DA:285,0
+DA:286,0
+DA:287,0
+DA:292,0
+DA:293,0
+DA:296,0
+DA:299,0
+DA:312,0
+DA:313,0
+DA:315,0
+DA:319,0
+DA:321,0
+DA:327,0
+DA:329,0
+DA:335,0
+DA:336,0
+DA:337,0
+DA:341,0
+DA:342,0
+DA:343,0
+DA:344,0
+DA:348,0
+DA:350,0
+DA:352,0
+DA:353,0
+DA:354,0
+DA:355,0
+DA:356,0
+DA:359,0
+DA:360,0
+DA:361,0
+DA:364,0
+DA:365,0
+DA:366,0
+DA:367,0
+DA:368,0
+DA:369,0
+DA:371,0
+DA:375,0
+DA:376,0
+DA:377,0
+DA:378,0
+DA:379,0
+DA:383,0
+DA:385,0
+DA:386,0
+DA:387,0
+DA:391,0
+DA:392,0
+DA:395,0
+DA:396,0
+DA:397,0
+DA:401,0
+DA:402,0
+DA:403,0
+DA:406,0
+DA:409,0
+DA:411,0
+DA:413,0
+DA:415,0
+DA:416,0
+DA:417,0
+DA:420,0
+DA:424,0
+DA:425,0
+DA:426,0
+DA:433,0
+DA:435,0
+DA:436,0
+DA:438,0
+DA:439,0
+DA:440,0
+DA:443,0
+DA:444,0
+DA:447,0
+DA:448,0
+DA:450,0
+DA:456,0
+DA:468,0
+DA:471,0
+DA:472,0
+DA:473,0
+DA:479,0
+DA:481,0
+DA:482,0
+DA:483,0
+DA:485,0
+DA:489,0
+DA:492,0
+DA:493,0
+DA:494,0
+DA:496,0
+DA:497,0
+DA:498,0
+DA:499,0
+DA:500,0
+DA:509,0
+DA:510,0
+DA:511,0
+DA:515,0
+DA:522,0
+DA:523,0
+DA:529,0
+DA:532,0
+DA:533,0
+DA:536,0
+DA:537,0
+DA:538,0
+DA:540,0
+DA:542,0
+DA:545,0
+DA:547,0
+DA:548,0
+DA:551,0
+DA:561,0
+DA:562,0
+DA:563,0
+DA:564,0
+DA:565,0
+DA:566,0
+DA:567,0
+DA:572,0
+DA:573,0
+DA:580,0
+DA:581,0
+DA:582,0
+DA:590,0
+DA:592,0
+DA:594,0
+DA:598,0
+DA:600,0
+DA:601,0
+DA:602,0
+DA:604,0
+DA:607,0
+DA:611,0
+DA:623,0
+DA:625,0
+DA:632,0
+DA:633,0
+DA:634,0
+DA:636,0
+DA:645,0
+DA:649,0
+DA:650,0
+DA:651,0
+DA:655,0
+DA:656,0
+DA:657,0
+DA:660,0
+DA:663,0
+DA:671,0
+DA:672,0
+DA:673,0
+DA:674,0
+DA:675,0
+DA:678,0
+DA:680,0
+DA:682,0
+DA:685,0
+DA:686,0
+DA:687,0
+DA:689,0
+DA:694,0
+DA:702,0
+DA:706,0
+DA:710,0
+DA:717,0
+DA:725,0
+DA:726,0
+DA:727,0
+DA:728,0
+DA:731,0
+DA:732,0
+DA:733,0
+DA:734,0
+DA:736,0
+DA:737,0
+DA:738,0
+DA:739,0
+DA:740,0
+DA:744,0
+DA:746,0
+DA:747,0
+DA:750,0
+DA:753,0
+DA:756,0
+DA:757,0
+DA:758,0
+DA:760,0
+DA:761,0
+DA:762,0
+DA:763,0
+DA:768,0
+DA:776,0
+DA:777,0
+DA:778,0
+DA:780,0
+DA:781,0
+DA:787,0
+DA:788,0
+DA:789,0
+DA:795,0
+DA:796,0
+DA:797,0
+DA:799,0
+DA:800,0
+DA:802,0
+DA:804,0
+DA:805,0
+DA:806,0
+DA:812,0
+DA:813,0
+DA:814,0
+DA:820,0
+DA:828,0
+DA:830,0
+DA:835,0
+DA:840,0
+DA:841,0
+DA:842,0
+DA:845,0
+DA:846,0
+DA:848,0
+DA:850,0
+DA:856,0
+DA:857,0
+DA:858,0
+DA:859,0
+DA:862,0
+DA:870,0
+DA:877,0
+DA:884,0
+DA:891,0
+DA:895,0
+DA:897,0
+DA:899,0
+DA:901,0
+DA:902,0
+DA:903,0
+DA:905,0
+DA:906,0
+DA:909,0
+DA:910,0
+DA:913,0
+DA:916,0
+DA:918,0
+DA:922,0
+DA:923,0
+DA:926,0
+DA:929,0
+DA:931,0
+DA:936,0
+DA:937,0
+DA:938,0
+DA:943,0
+DA:946,0
+DA:947,0
+DA:948,0
+DA:949,0
+DA:952,0
+DA:953,0
+DA:954,0
+DA:959,0
+DA:960,0
+DA:961,0
+DA:962,0
+DA:963,0
+DA:965,0
+DA:970,0
+DA:971,0
+DA:972,0
+DA:976,0
+DA:979,0
+DA:980,0
+DA:981,0
+DA:983,0
+DA:984,0
+DA:986,0
+DA:990,0
+DA:994,0
+DA:995,0
+DA:996,0
+DA:999,0
+DA:1002,0
+DA:1004,0
+DA:1007,0
+DA:1008,0
+DA:1016,0
+DA:1023,0
+DA:1025,0
+DA:1026,0
+DA:1029,0
+DA:1030,0
+DA:1031,0
+DA:1032,0
+DA:1038,0
+DA:1039,0
+DA:1041,0
+DA:1045,0
+DA:1046,0
+DA:1047,0
+DA:1049,0
+DA:1053,0
+DA:1058,0
+DA:1059,0
+DA:1060,0
+DA:1064,0
+DA:1065,0
+DA:1067,0
+DA:1070,0
+DA:1071,0
+DA:1075,0
+DA:1076,0
+DA:1080,0
+DA:1084,0
+DA:1085,0
+DA:1089,0
+DA:1091,0
+DA:1093,0
+DA:1096,0
+DA:1099,0
+DA:1100,0
+DA:1101,0
+DA:1110,0
+DA:1113,0
+DA:1114,0
+DA:1117,0
+DA:1118,0
+DA:1122,0
+DA:1125,0
+DA:1126,0
+DA:1127,0
+DA:1130,0
+DA:1133,0
+DA:1134,0
+DA:1137,0
+DA:1139,0
+DA:1141,0
+DA:1146,0
+DA:1151,0
+DA:1155,0
+DA:1159,0
+DA:1160,0
+DA:1161,0
+DA:1162,0
+DA:1166,0
+DA:1167,0
+DA:1168,0
+DA:1169,0
+DA:1170,0
+DA:1175,0
+DA:1187,0
+DA:1190,0
+DA:1191,0
+DA:1192,0
+DA:1195,0
+DA:1196,0
+DA:1200,0
+DA:1204,0
+DA:1205,0
+DA:1210,0
+DA:1212,0
+DA:1213,0
+DA:1218,0
+DA:1222,0
+DA:1223,0
+DA:1224,0
+DA:1228,0
+DA:1231,0
+DA:1232,0
+DA:1233,0
+DA:1234,0
+DA:1236,0
+DA:1243,0
+DA:1248,0
+DA:1249,0
+DA:1253,0
+DA:1269,0
+DA:1270,0
+DA:1271,0
+DA:1275,0
+DA:1276,0
+DA:1279,0
+DA:1280,0
+DA:1281,0
+DA:1283,0
+DA:1289,0
+DA:1293,0
+DA:1297,0
+DA:1298,0
+DA:1301,0
+DA:1302,0
+DA:1303,0
+DA:1308,0
+DA:1309,0
+DA:1310,0
+DA:1311,0
+DA:1312,0
+DA:1318,0
+DA:1319,0
+DA:1332,0
+DA:1333,0
+DA:1334,0
+DA:1338,0
+DA:1341,0
+DA:1343,0
+DA:1363,0
+DA:1364,0
+DA:1365,0
+DA:1366,0
+DA:1371,0
+DA:1372,0
+DA:1373,0
+DA:1374,0
+DA:1379,0
+DA:1380,0
+DA:1383,0
+DA:1384,0
+DA:1385,0
+DA:1388,0
+DA:1391,0
+DA:1392,0
+DA:1393,0
+DA:1396,0
+DA:1397,0
+DA:1399,0
+DA:1400,0
+DA:1401,0
+DA:1405,0
+DA:1407,0
+DA:1409,0
+DA:1410,0
+DA:1411,0
+DA:1412,0
+DA:1415,0
+DA:1416,0
+DA:1418,0
+DA:1419,0
+DA:1420,0
+DA:1422,0
+DA:1425,0
+DA:1428,0
+DA:1432,0
+DA:1435,0
+DA:1436,0
+DA:1437,0
+DA:1439,0
+DA:1440,0
+DA:1441,0
+DA:1442,0
+DA:1443,0
+DA:1445,0
+DA:1448,0
+DA:1450,0
+DA:1452,0
+DA:1455,0
+DA:1458,0
+DA:1460,0
+DA:1462,0
+DA:1464,0
+DA:1466,0
+DA:1467,0
+DA:1468,0
+DA:1473,0
+DA:1476,0
+DA:1481,0
+DA:1491,0
+DA:1494,0
+DA:1495,0
+DA:1498,0
+DA:1502,0
+DA:1503,0
+DA:1504,0
+DA:1505,0
+DA:1510,0
+DA:1511,0
+DA:1517,0
+DA:1520,0
+DA:1521,0
+DA:1522,0
+DA:1524,0
+DA:1525,0
+DA:1526,0
+DA:1527,0
+DA:1531,0
+DA:1542,0
+DA:1543,0
+DA:1547,0
+DA:1548,0
+DA:1549,0
+DA:1553,0
+DA:1566,0
+DA:1572,0
+DA:1580,0
+DA:1581,0
+DA:1582,0
+DA:1590,0
+DA:1592,0
+DA:1593,0
+DA:1603,0
+DA:1604,0
+DA:1608,0
+DA:1609,0
+DA:1610,0
+DA:1613,0
+DA:1615,0
+DA:1617,0
+DA:1619,0
+DA:1620,0
+DA:1623,0
+DA:1625,0
+DA:1626,0
+DA:1627,0
+DA:1629,0
+DA:1631,0
+DA:1633,0
+DA:1636,0
+DA:1637,0
+DA:1639,0
+DA:1641,0
+DA:1643,0
+DA:1646,0
+DA:1649,0
+DA:1651,0
+DA:1653,0
+DA:1654,0
+DA:1655,0
+DA:1656,0
+DA:1660,0
+DA:1663,0
+DA:1664,0
+DA:1666,0
+DA:1667,0
+DA:1669,0
+DA:1672,0
+DA:1674,0
+DA:1675,0
+DA:1676,0
+DA:1681,0
+DA:1684,0
+DA:1690,0
+DA:1691,0
+DA:1692,0
+DA:1694,0
+DA:1695,0
+DA:1696,0
+DA:1698,0
+DA:1702,0
+DA:1715,0
+DA:1716,0
+DA:1719,0
+DA:1722,0
+DA:1725,0
+DA:1726,0
+DA:1734,0
+DA:1737,0
+DA:1738,0
+DA:1739,0
+DA:1740,0
+DA:1747,0
+DA:1748,0
+DA:1749,0
+DA:1751,0
+DA:1755,0
+DA:1758,0
+DA:1760,0
+DA:1764,0
+LF:697
+LH:0
+BRDA:85,0,0,0
+BRDA:85,0,1,0
+BRDA:86,1,0,0
+BRDA:86,1,1,0
+BRDA:87,2,0,0
+BRDA:87,2,1,0
+BRDA:99,3,0,0
+BRDA:99,4,0,0
+BRDA:99,4,1,0
+BRDA:104,5,0,0
+BRDA:110,6,0,0
+BRDA:110,6,1,0
+BRDA:112,7,0,0
+BRDA:112,7,1,0
+BRDA:114,8,0,0
+BRDA:114,8,1,0
+BRDA:125,9,0,0
+BRDA:132,10,0,0
+BRDA:132,10,1,0
+BRDA:153,11,0,0
+BRDA:153,11,1,0
+BRDA:164,12,0,0
+BRDA:170,13,0,0
+BRDA:183,14,0,0
+BRDA:183,14,1,0
+BRDA:198,15,0,0
+BRDA:198,15,1,0
+BRDA:207,16,0,0
+BRDA:220,17,0,0
+BRDA:220,17,1,0
+BRDA:225,18,0,0
+BRDA:235,19,0,0
+BRDA:235,19,1,0
+BRDA:239,20,0,0
+BRDA:249,21,0,0
+BRDA:249,21,1,0
+BRDA:250,22,0,0
+BRDA:250,23,0,0
+BRDA:250,23,1,0
+BRDA:250,23,2,0
+BRDA:259,24,0,0
+BRDA:259,25,0,0
+BRDA:259,25,1,0
+BRDA:266,26,0,0
+BRDA:266,26,1,0
+BRDA:270,27,0,0
+BRDA:270,28,0,0
+BRDA:270,28,1,0
+BRDA:284,29,0,0
+BRDA:302,30,0,0
+BRDA:302,30,1,0
+BRDA:313,31,0,0
+BRDA:324,32,0,0
+BRDA:324,32,1,0
+BRDA:335,33,0,0
+BRDA:342,34,0,0
+BRDA:353,35,0,0
+BRDA:360,36,0,0
+BRDA:360,36,1,0
+BRDA:365,37,0,0
+BRDA:365,37,1,0
+BRDA:365,38,0,0
+BRDA:365,38,1,0
+BRDA:376,39,0,0
+BRDA:385,40,0,0
+BRDA:395,41,0,0
+BRDA:395,42,0,0
+BRDA:395,42,1,0
+BRDA:395,42,2,0
+BRDA:401,43,0,0
+BRDA:401,44,0,0
+BRDA:401,44,1,0
+BRDA:411,45,0,0
+BRDA:411,45,1,0
+BRDA:415,46,0,0
+BRDA:415,46,1,0
+BRDA:415,47,0,0
+BRDA:415,47,1,0
+BRDA:416,48,0,0
+BRDA:416,48,1,0
+BRDA:416,49,0,0
+BRDA:416,49,1,0
+BRDA:417,50,0,0
+BRDA:427,51,0,0
+BRDA:427,51,1,0
+BRDA:427,52,0,0
+BRDA:427,52,1,0
+BRDA:427,53,0,0
+BRDA:427,53,1,0
+BRDA:436,54,0,0
+BRDA:436,54,1,0
+BRDA:440,55,0,0
+BRDA:440,55,1,0
+BRDA:447,56,0,0
+BRDA:447,56,1,0
+BRDA:451,57,0,0
+BRDA:451,57,1,0
+BRDA:451,58,0,0
+BRDA:451,58,1,0
+BRDA:459,59,0,0
+BRDA:459,59,1,0
+BRDA:471,60,0,0
+BRDA:475,61,0,0
+BRDA:475,61,1,0
+BRDA:475,62,0,0
+BRDA:475,62,1,0
+BRDA:479,63,0,0
+BRDA:479,63,1,0
+BRDA:489,64,0,0
+BRDA:489,64,1,0
+BRDA:492,65,0,0
+BRDA:492,65,1,0
+BRDA:497,66,0,0
+BRDA:503,67,0,0
+BRDA:503,67,1,0
+BRDA:518,68,0,0
+BRDA:518,68,1,0
+BRDA:522,69,0,0
+BRDA:522,70,0,0
+BRDA:522,70,1,0
+BRDA:537,71,0,0
+BRDA:537,71,1,0
+BRDA:540,72,0,0
+BRDA:540,72,1,0
+BRDA:547,73,0,0
+BRDA:562,74,0,0
+BRDA:565,75,0,0
+BRDA:572,76,0,0
+BRDA:574,77,0,0
+BRDA:574,77,1,0
+BRDA:581,78,0,0
+BRDA:594,79,0,0
+BRDA:594,79,1,0
+BRDA:594,80,0,0
+BRDA:594,80,1,0
+BRDA:600,81,0,0
+BRDA:600,81,1,0
+BRDA:607,82,0,0
+BRDA:607,82,1,0
+BRDA:614,83,0,0
+BRDA:614,83,1,0
+BRDA:615,84,0,0
+BRDA:615,84,1,0
+BRDA:616,85,0,0
+BRDA:616,85,1,0
+BRDA:616,86,0,0
+BRDA:616,86,1,0
+BRDA:618,87,0,0
+BRDA:618,87,1,0
+BRDA:619,88,0,0
+BRDA:619,88,1,0
+BRDA:620,89,0,0
+BRDA:620,89,1,0
+BRDA:620,89,2,0
+BRDA:631,90,0,0
+BRDA:634,91,0,0
+BRDA:649,92,0,0
+BRDA:673,93,0,0
+BRDA:686,94,0,0
+BRDA:686,94,1,0
+BRDA:692,95,0,0
+BRDA:692,95,1,0
+BRDA:723,96,0,0
+BRDA:726,97,0,0
+BRDA:726,98,0,0
+BRDA:726,98,1,0
+BRDA:738,99,0,0
+BRDA:744,100,0,0
+BRDA:744,100,1,0
+BRDA:744,101,0,0
+BRDA:744,101,1,0
+BRDA:747,102,0,0
+BRDA:747,102,1,0
+BRDA:747,103,0,0
+BRDA:747,103,1,0
+BRDA:753,104,0,0
+BRDA:753,104,1,0
+BRDA:753,105,0,0
+BRDA:753,105,1,0
+BRDA:757,106,0,0
+BRDA:757,106,1,0
+BRDA:761,107,0,0
+BRDA:761,107,1,0
+BRDA:762,108,0,0
+BRDA:762,108,1,0
+BRDA:776,109,0,0
+BRDA:776,109,1,0
+BRDA:780,110,0,0
+BRDA:780,111,0,0
+BRDA:780,111,1,0
+BRDA:787,112,0,0
+BRDA:787,112,1,0
+BRDA:788,113,0,0
+BRDA:788,113,1,0
+BRDA:795,114,0,0
+BRDA:795,114,1,0
+BRDA:799,115,0,0
+BRDA:799,116,0,0
+BRDA:799,116,1,0
+BRDA:799,117,0,0
+BRDA:799,117,1,0
+BRDA:802,118,0,0
+BRDA:802,118,1,0
+BRDA:802,119,0,0
+BRDA:802,119,1,0
+BRDA:804,120,0,0
+BRDA:805,121,0,0
+BRDA:812,122,0,0
+BRDA:812,122,1,0
+BRDA:823,123,0,0
+BRDA:823,123,1,0
+BRDA:825,124,0,0
+BRDA:825,124,1,0
+BRDA:825,125,0,0
+BRDA:825,125,1,0
+BRDA:831,126,0,0
+BRDA:831,126,1,0
+BRDA:833,127,0,0
+BRDA:833,127,1,0
+BRDA:842,128,0,0
+BRDA:842,128,1,0
+BRDA:842,129,0,0
+BRDA:842,129,1,0
+BRDA:853,130,0,0
+BRDA:853,130,1,0
+BRDA:856,131,0,0
+BRDA:869,132,0,0
+BRDA:876,133,0,0
+BRDA:895,134,0,0
+BRDA:902,135,0,0
+BRDA:902,135,1,0
+BRDA:905,136,0,0
+BRDA:931,137,0,0
+BRDA:931,137,1,0
+BRDA:937,138,0,0
+BRDA:948,139,0,0
+BRDA:952,140,0,0
+BRDA:960,141,0,0
+BRDA:960,142,0,0
+BRDA:960,142,1,0
+BRDA:970,143,0,0
+BRDA:980,144,0,0
+BRDA:995,145,0,0
+BRDA:1007,146,0,0
+BRDA:1023,147,0,0
+BRDA:1023,147,1,0
+BRDA:1039,148,0,0
+BRDA:1039,149,0,0
+BRDA:1039,149,1,0
+BRDA:1039,149,2,0
+BRDA:1039,149,3,0
+BRDA:1059,150,0,0
+BRDA:1064,151,0,0
+BRDA:1104,152,0,0
+BRDA:1104,152,1,0
+BRDA:1144,153,0,0
+BRDA:1144,153,1,0
+BRDA:1159,154,0,0
+BRDA:1159,154,1,0
+BRDA:1166,155,0,0
+BRDA:1166,155,1,0
+BRDA:1167,156,0,0
+BRDA:1167,157,0,0
+BRDA:1167,157,1,0
+BRDA:1190,158,0,0
+BRDA:1223,159,0,0
+BRDA:1231,160,0,0
+BRDA:1231,161,0,0
+BRDA:1231,161,1,0
+BRDA:1233,162,0,0
+BRDA:1233,163,0,0
+BRDA:1233,163,1,0
+BRDA:1239,164,0,0
+BRDA:1239,164,1,0
+BRDA:1240,165,0,0
+BRDA:1240,165,1,0
+BRDA:1241,166,0,0
+BRDA:1241,166,1,0
+BRDA:1243,167,0,0
+BRDA:1243,167,1,0
+BRDA:1297,168,0,0
+BRDA:1301,169,0,0
+BRDA:1308,170,0,0
+BRDA:1310,171,0,0
+BRDA:1333,172,0,0
+BRDA:1345,173,0,0
+BRDA:1345,173,1,0
+BRDA:1348,174,0,0
+BRDA:1348,174,1,0
+BRDA:1348,175,0,0
+BRDA:1348,175,1,0
+BRDA:1348,176,0,0
+BRDA:1348,176,1,0
+BRDA:1364,177,0,0
+BRDA:1372,178,0,0
+BRDA:1379,179,0,0
+BRDA:1384,180,0,0
+BRDA:1399,181,0,0
+BRDA:1407,182,0,0
+BRDA:1407,182,1,0
+BRDA:1409,183,0,0
+BRDA:1409,183,1,0
+BRDA:1411,184,0,0
+BRDA:1411,184,1,0
+BRDA:1415,185,0,0
+BRDA:1415,185,1,0
+BRDA:1436,186,0,0
+BRDA:1436,186,1,0
+BRDA:1440,187,0,0
+BRDA:1440,187,1,0
+BRDA:1440,188,0,0
+BRDA:1440,188,1,0
+BRDA:1450,189,0,0
+BRDA:1460,190,0,0
+BRDA:1460,190,1,0
+BRDA:1464,191,0,0
+BRDA:1464,191,1,0
+BRDA:1484,192,0,0
+BRDA:1484,192,1,0
+BRDA:1502,193,0,0
+BRDA:1510,194,0,0
+BRDA:1510,195,0,0
+BRDA:1510,195,1,0
+BRDA:1520,196,0,0
+BRDA:1520,197,0,0
+BRDA:1520,197,1,0
+BRDA:1522,198,0,0
+BRDA:1525,199,0,0
+BRDA:1536,200,0,0
+BRDA:1536,200,1,0
+BRDA:1538,201,0,0
+BRDA:1538,201,1,0
+BRDA:1539,202,0,0
+BRDA:1539,202,1,0
+BRDA:1547,203,0,0
+BRDA:1559,204,0,0
+BRDA:1559,204,1,0
+BRDA:1560,205,0,0
+BRDA:1560,205,1,0
+BRDA:1562,206,0,0
+BRDA:1562,206,1,0
+BRDA:1602,207,0,0
+BRDA:1603,208,0,0
+BRDA:1608,209,0,0
+BRDA:1617,210,0,0
+BRDA:1617,210,1,0
+BRDA:1623,211,0,0
+BRDA:1623,211,1,0
+BRDA:1623,212,0,0
+BRDA:1623,212,1,0
+BRDA:1631,213,0,0
+BRDA:1641,214,0,0
+BRDA:1651,215,0,0
+BRDA:1651,215,1,0
+BRDA:1654,216,0,0
+BRDA:1664,217,0,0
+BRDA:1664,217,1,0
+BRDA:1672,218,0,0
+BRDA:1672,218,1,0
+BRDA:1691,219,0,0
+BRDA:1691,219,1,0
+BRDA:1694,220,0,0
+BRDA:1694,220,1,0
+BRDA:1705,221,0,0
+BRDA:1705,221,1,0
+BRDA:1714,222,0,0
+BRDA:1715,223,0,0
+BRDA:1719,224,0,0
+BRDA:1719,224,1,0
+BRDA:1734,225,0,0
+BRDA:1738,226,0,0
+BRDA:1751,227,0,0
+BRDA:1751,227,1,0
+BRDA:1751,228,0,0
+BRDA:1751,228,1,0
+BRDA:1751,229,0,0
+BRDA:1751,229,1,0
+BRDA:1751,230,0,0
+BRDA:1751,230,1,0
+BRDA:1758,231,0,0
+BRDA:1758,231,1,0
+BRDA:1758,232,0,0
+BRDA:1758,232,1,0
+BRDA:1758,233,0,0
+BRDA:1758,233,1,0
+BRDA:1758,234,0,0
+BRDA:1758,234,1,0
+BRF:387
+BRH:0
+end_of_record
+TN:
+SF:src/server/websocket.ts
+FN:10,(anonymous_0)
+FN:16,(anonymous_1)
+FN:17,(anonymous_2)
+FN:20,(anonymous_3)
+FN:36,(anonymous_4)
+FN:38,(anonymous_5)
+FN:46,(anonymous_6)
+FN:54,(anonymous_7)
+FN:62,(anonymous_8)
+FN:70,(anonymous_9)
+FN:78,(anonymous_10)
+FN:80,(anonymous_11)
+FN:87,(anonymous_12)
+FNF:13
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+DA:1,0
+DA:2,0
+DA:4,0
+DA:6,0
+DA:8,0
+DA:10,0
+DA:11,0
+DA:12,0
+DA:13,0
+DA:17,0
+DA:18,0
+DA:20,0
+DA:21,0
+DA:25,0
+DA:38,0
+DA:39,0
+DA:46,0
+DA:47,0
+DA:54,0
+DA:55,0
+DA:62,0
+DA:63,0
+DA:70,0
+DA:71,0
+DA:79,0
+DA:80,0
+DA:81,0
+DA:82,0
+DA:88,0
+DA:89,0
+LF:30
+LH:0
+BRDA:81,0,0,0
+BRDA:88,1,0,0
+BRF:2
+BRH:0
+end_of_record
+TN:
+SF:src/server/db/database.ts
+FN:19,(anonymous_1)
+FN:29,(anonymous_2)
+FN:33,(anonymous_3)
+FN:76,(anonymous_4)
+FN:90,(anonymous_5)
+FNF:5
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:4,0
+DA:5,0
+DA:6,0
+DA:7,0
+DA:9,0
+DA:20,0
+DA:21,0
+DA:25,0
+DA:26,0
+DA:30,0
+DA:34,0
+DA:36,0
+DA:37,0
+DA:39,0
+DA:40,0
+DA:46,0
+DA:56,0
+DA:65,0
+DA:67,0
+DA:72,0
+DA:77,0
+DA:79,0
+DA:80,0
+DA:86,0
+DA:91,0
+DA:93,0
+DA:94,0
+DA:99,0
+DA:101,0
+DA:106,0
+LF:33
+LH:0
+BRDA:70,0,0,0
+BRDA:70,0,1,0
+BRDA:77,1,0,0
+BRDA:91,2,0,0
+BRDA:99,3,0,0
+BRDA:99,3,1,0
+BRF:6
+BRH:0
+end_of_record
+TN:
+SF:src/server/routes/api.ts
+FN:38,(anonymous_1)
+FN:43,(anonymous_2)
+FN:58,(anonymous_3)
+FN:75,(anonymous_4)
+FN:93,(anonymous_5)
+FN:108,(anonymous_6)
+FN:132,(anonymous_7)
+FN:154,(anonymous_8)
+FN:170,(anonymous_9)
+FN:187,(anonymous_10)
+FN:204,(anonymous_11)
+FN:211,(anonymous_12)
+FN:237,(anonymous_13)
+FN:249,(anonymous_14)
+FN:266,(anonymous_15)
+FN:291,(anonymous_16)
+FN:310,(anonymous_17)
+FN:329,(anonymous_18)
+FN:353,(anonymous_19)
+FN:371,(anonymous_20)
+FN:383,(anonymous_21)
+FN:392,(anonymous_22)
+FN:410,(anonymous_23)
+FN:421,(anonymous_24)
+FN:436,(anonymous_25)
+FN:454,(anonymous_26)
+FN:469,(anonymous_27)
+FN:478,(anonymous_28)
+FN:507,(anonymous_29)
+FN:532,(anonymous_30)
+FN:551,(anonymous_31)
+FN:581,(anonymous_32)
+FN:604,(anonymous_33)
+FN:635,(anonymous_34)
+FN:645,(anonymous_35)
+FN:657,(anonymous_36)
+FN:661,(anonymous_37)
+FN:680,(anonymous_38)
+FN:684,(anonymous_39)
+FN:696,(anonymous_40)
+FN:707,(anonymous_41)
+FN:743,(anonymous_42)
+FN:761,(anonymous_43)
+FN:780,(anonymous_44)
+FN:807,(anonymous_45)
+FN:831,(anonymous_46)
+FN:862,(anonymous_47)
+FN:896,formatUptime
+FNF:48
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+FNDA:0,(anonymous_20)
+FNDA:0,(anonymous_21)
+FNDA:0,(anonymous_22)
+FNDA:0,(anonymous_23)
+FNDA:0,(anonymous_24)
+FNDA:0,(anonymous_25)
+FNDA:0,(anonymous_26)
+FNDA:0,(anonymous_27)
+FNDA:0,(anonymous_28)
+FNDA:0,(anonymous_29)
+FNDA:0,(anonymous_30)
+FNDA:0,(anonymous_31)
+FNDA:0,(anonymous_32)
+FNDA:0,(anonymous_33)
+FNDA:0,(anonymous_34)
+FNDA:0,(anonymous_35)
+FNDA:0,(anonymous_36)
+FNDA:0,(anonymous_37)
+FNDA:0,(anonymous_38)
+FNDA:0,(anonymous_39)
+FNDA:0,(anonymous_40)
+FNDA:0,(anonymous_41)
+FNDA:0,(anonymous_42)
+FNDA:0,(anonymous_43)
+FNDA:0,(anonymous_44)
+FNDA:0,(anonymous_45)
+FNDA:0,(anonymous_46)
+FNDA:0,(anonymous_47)
+FNDA:0,formatUptime
+DA:1,0
+DA:3,0
+DA:5,0
+DA:7,0
+DA:38,0
+DA:39,0
+DA:43,0
+DA:44,0
+DA:45,0
+DA:46,0
+DA:48,0
+DA:53,0
+DA:54,0
+DA:58,0
+DA:59,0
+DA:60,0
+DA:61,0
+DA:65,0
+DA:70,0
+DA:71,0
+DA:75,0
+DA:76,0
+DA:77,0
+DA:78,0
+DA:82,0
+DA:87,0
+DA:88,0
+DA:93,0
+DA:94,0
+DA:95,0
+DA:96,0
+DA:98,0
+DA:103,0
+DA:104,0
+DA:108,0
+DA:109,0
+DA:110,0
+DA:111,0
+DA:112,0
+DA:113,0
+DA:114,0
+DA:117,0
+DA:124,0
+DA:126,0
+DA:127,0
+DA:132,0
+DA:133,0
+DA:134,0
+DA:135,0
+DA:136,0
+DA:137,0
+DA:138,0
+DA:140,0
+DA:141,0
+DA:143,0
+DA:148,0
+DA:149,0
+DA:154,0
+DA:155,0
+DA:156,0
+DA:157,0
+DA:158,0
+DA:159,0
+DA:160,0
+DA:162,0
+DA:163,0
+DA:165,0
+DA:166,0
+DA:170,0
+DA:171,0
+DA:172,0
+DA:173,0
+DA:174,0
+DA:175,0
+DA:176,0
+DA:178,0
+DA:179,0
+DA:181,0
+DA:182,0
+DA:187,0
+DA:188,0
+DA:189,0
+DA:196,0
+DA:197,0
+DA:198,0
+DA:199,0
+DA:203,0
+DA:204,0
+DA:205,0
+DA:206,0
+DA:207,0
+DA:211,0
+DA:212,0
+DA:214,0
+DA:215,0
+DA:216,0
+DA:220,0
+DA:221,0
+DA:222,0
+DA:225,0
+DA:230,0
+DA:232,0
+DA:233,0
+DA:237,0
+DA:238,0
+DA:239,0
+DA:240,0
+DA:241,0
+DA:243,0
+DA:244,0
+DA:249,0
+DA:250,0
+DA:251,0
+DA:252,0
+DA:253,0
+DA:254,0
+DA:255,0
+DA:258,0
+DA:259,0
+DA:261,0
+DA:262,0
+DA:266,0
+DA:267,0
+DA:268,0
+DA:269,0
+DA:271,0
+DA:272,0
+DA:273,0
+DA:274,0
+DA:277,0
+DA:283,0
+DA:284,0
+DA:286,0
+DA:287,0
+DA:291,0
+DA:292,0
+DA:293,0
+DA:294,0
+DA:296,0
+DA:297,0
+DA:298,0
+DA:299,0
+DA:302,0
+DA:303,0
+DA:305,0
+DA:306,0
+DA:310,0
+DA:311,0
+DA:312,0
+DA:314,0
+DA:315,0
+DA:316,0
+DA:317,0
+DA:320,0
+DA:321,0
+DA:323,0
+DA:324,0
+DA:329,0
+DA:330,0
+DA:331,0
+DA:332,0
+DA:333,0
+DA:334,0
+DA:335,0
+DA:338,0
+DA:339,0
+DA:340,0
+DA:341,0
+DA:342,0
+DA:345,0
+DA:346,0
+DA:348,0
+DA:349,0
+DA:353,0
+DA:354,0
+DA:355,0
+DA:356,0
+DA:357,0
+DA:358,0
+DA:359,0
+DA:362,0
+DA:363,0
+DA:365,0
+DA:366,0
+DA:371,0
+DA:372,0
+DA:373,0
+DA:374,0
+DA:375,0
+DA:377,0
+DA:378,0
+DA:383,0
+DA:384,0
+DA:385,0
+DA:387,0
+DA:388,0
+DA:392,0
+DA:393,0
+DA:394,0
+DA:395,0
+DA:396,0
+DA:397,0
+DA:398,0
+DA:402,0
+DA:403,0
+DA:405,0
+DA:406,0
+DA:410,0
+DA:411,0
+DA:412,0
+DA:413,0
+DA:415,0
+DA:416,0
+DA:421,0
+DA:422,0
+DA:423,0
+DA:426,0
+DA:429,0
+DA:430,0
+DA:433,0
+DA:436,0
+DA:437,0
+DA:438,0
+DA:439,0
+DA:440,0
+DA:441,0
+DA:443,0
+DA:444,0
+DA:448,0
+DA:449,0
+DA:454,0
+DA:455,0
+DA:456,0
+DA:459,0
+DA:462,0
+DA:463,0
+DA:466,0
+DA:469,0
+DA:470,0
+DA:471,0
+DA:474,0
+DA:475,0
+DA:476,0
+DA:478,0
+DA:479,0
+DA:480,0
+DA:484,0
+DA:485,0
+DA:487,0
+DA:491,0
+DA:492,0
+DA:493,0
+DA:494,0
+DA:496,0
+DA:497,0
+DA:501,0
+DA:502,0
+DA:507,0
+DA:508,0
+DA:509,0
+DA:510,0
+DA:512,0
+DA:513,0
+DA:514,0
+DA:515,0
+DA:518,0
+DA:519,0
+DA:520,0
+DA:521,0
+DA:524,0
+DA:525,0
+DA:527,0
+DA:528,0
+DA:532,0
+DA:533,0
+DA:534,0
+DA:536,0
+DA:537,0
+DA:538,0
+DA:539,0
+DA:542,0
+DA:543,0
+DA:545,0
+DA:546,0
+DA:551,0
+DA:552,0
+DA:553,0
+DA:554,0
+DA:556,0
+DA:557,0
+DA:558,0
+DA:559,0
+DA:562,0
+DA:563,0
+DA:565,0
+DA:566,0
+DA:567,0
+DA:568,0
+DA:569,0
+DA:571,0
+DA:574,0
+DA:576,0
+DA:577,0
+DA:581,0
+DA:582,0
+DA:583,0
+DA:585,0
+DA:586,0
+DA:588,0
+DA:589,0
+DA:590,0
+DA:591,0
+DA:592,0
+DA:594,0
+DA:597,0
+DA:599,0
+DA:600,0
+DA:604,0
+DA:605,0
+DA:606,0
+DA:607,0
+DA:609,0
+DA:610,0
+DA:611,0
+DA:612,0
+DA:615,0
+DA:616,0
+DA:618,0
+DA:619,0
+DA:620,0
+DA:621,0
+DA:622,0
+DA:624,0
+DA:627,0
+DA:629,0
+DA:630,0
+DA:635,0
+DA:636,0
+DA:637,0
+DA:639,0
+DA:640,0
+DA:645,0
+DA:646,0
+DA:647,0
+DA:648,0
+DA:649,0
+DA:651,0
+DA:652,0
+DA:657,0
+DA:658,0
+DA:661,0
+DA:662,0
+DA:663,0
+DA:664,0
+DA:665,0
+DA:666,0
+DA:667,0
+DA:670,0
+DA:671,0
+DA:672,0
+DA:674,0
+DA:675,0
+DA:680,0
+DA:681,0
+DA:684,0
+DA:685,0
+DA:686,0
+DA:687,0
+DA:688,0
+DA:690,0
+DA:691,0
+DA:696,0
+DA:697,0
+DA:698,0
+DA:699,0
+DA:701,0
+DA:702,0
+DA:707,0
+DA:708,0
+DA:709,0
+DA:711,0
+DA:713,0
+DA:714,0
+DA:715,0
+DA:716,0
+DA:717,0
+DA:721,0
+DA:722,0
+DA:726,0
+DA:729,0
+DA:730,0
+DA:733,0
+DA:734,0
+DA:737,0
+DA:738,0
+DA:743,0
+DA:744,0
+DA:746,0
+DA:749,0
+DA:750,0
+DA:753,0
+DA:755,0
+DA:756,0
+DA:761,0
+DA:762,0
+DA:763,0
+DA:765,0
+DA:766,0
+DA:767,0
+DA:768,0
+DA:771,0
+DA:772,0
+DA:774,0
+DA:775,0
+DA:780,0
+DA:781,0
+DA:782,0
+DA:791,0
+DA:792,0
+DA:793,0
+DA:794,0
+DA:798,0
+DA:799,0
+DA:801,0
+DA:802,0
+DA:807,0
+DA:808,0
+DA:809,0
+DA:812,0
+DA:813,0
+DA:816,0
+DA:818,0
+DA:820,0
+DA:825,0
+DA:826,0
+DA:831,0
+DA:832,0
+DA:833,0
+DA:835,0
+DA:836,0
+DA:837,0
+DA:838,0
+DA:841,0
+DA:844,0
+DA:847,0
+DA:849,0
+DA:851,0
+DA:856,0
+DA:857,0
+DA:862,0
+DA:863,0
+DA:864,0
+DA:865,0
+DA:867,0
+DA:868,0
+DA:870,0
+DA:885,0
+DA:890,0
+DA:891,0
+DA:897,0
+DA:898,0
+DA:899,0
+DA:900,0
+DA:902,0
+DA:903,0
+DA:904,0
+DA:905,0
+DA:906,0
+DA:908,0
+DA:911,0
+LF:470
+LH:0
+BRDA:51,0,0,0
+BRDA:51,0,1,0
+BRDA:62,1,0,0
+BRDA:62,1,1,0
+BRDA:68,2,0,0
+BRDA:68,2,1,0
+BRDA:79,3,0,0
+BRDA:79,3,1,0
+BRDA:85,4,0,0
+BRDA:85,4,1,0
+BRDA:101,5,0,0
+BRDA:101,5,1,0
+BRDA:111,6,0,0
+BRDA:119,7,0,0
+BRDA:119,7,1,0
+BRDA:120,8,0,0
+BRDA:120,8,1,0
+BRDA:121,9,0,0
+BRDA:121,9,1,0
+BRDA:122,10,0,0
+BRDA:122,10,1,0
+BRDA:122,11,0,0
+BRDA:122,11,1,0
+BRDA:127,12,0,0
+BRDA:127,12,1,0
+BRDA:135,13,0,0
+BRDA:146,14,0,0
+BRDA:146,14,1,0
+BRDA:157,15,0,0
+BRDA:173,16,0,0
+BRDA:196,17,0,0
+BRDA:205,18,0,0
+BRDA:205,19,0,0
+BRDA:205,19,1,0
+BRDA:212,20,0,0
+BRDA:212,20,1,0
+BRDA:212,21,0,0
+BRDA:212,21,1,0
+BRDA:214,22,0,0
+BRDA:220,23,0,0
+BRDA:227,24,0,0
+BRDA:227,24,1,0
+BRDA:228,25,0,0
+BRDA:228,25,1,0
+BRDA:252,26,0,0
+BRDA:271,27,0,0
+BRDA:296,28,0,0
+BRDA:296,29,0,0
+BRDA:296,29,1,0
+BRDA:314,30,0,0
+BRDA:314,31,0,0
+BRDA:314,31,1,0
+BRDA:314,31,2,0
+BRDA:332,32,0,0
+BRDA:339,33,0,0
+BRDA:356,34,0,0
+BRDA:395,35,0,0
+BRDA:443,36,0,0
+BRDA:443,36,1,0
+BRDA:475,37,0,0
+BRDA:475,37,1,0
+BRDA:496,38,0,0
+BRDA:496,38,1,0
+BRDA:512,39,0,0
+BRDA:518,40,0,0
+BRDA:536,41,0,0
+BRDA:556,42,0,0
+BRDA:556,43,0,0
+BRDA:556,43,1,0
+BRDA:556,43,2,0
+BRDA:562,44,0,0
+BRDA:562,44,1,0
+BRDA:566,45,0,0
+BRDA:585,46,0,0
+BRDA:585,46,1,0
+BRDA:589,47,0,0
+BRDA:609,48,0,0
+BRDA:615,49,0,0
+BRDA:615,49,1,0
+BRDA:619,50,0,0
+BRDA:640,51,0,0
+BRDA:640,51,1,0
+BRDA:652,52,0,0
+BRDA:652,52,1,0
+BRDA:664,53,0,0
+BRDA:702,54,0,0
+BRDA:702,54,1,0
+BRDA:711,55,0,0
+BRDA:711,55,1,0
+BRDA:714,56,0,0
+BRDA:721,57,0,0
+BRDA:765,58,0,0
+BRDA:765,59,0,0
+BRDA:765,59,1,0
+BRDA:791,60,0,0
+BRDA:791,61,0,0
+BRDA:791,61,1,0
+BRDA:823,62,0,0
+BRDA:823,62,1,0
+BRDA:835,63,0,0
+BRDA:854,64,0,0
+BRDA:854,64,1,0
+BRDA:874,65,0,0
+BRDA:874,65,1,0
+BRDA:888,66,0,0
+BRDA:888,66,1,0
+BRDA:903,67,0,0
+BRDA:904,68,0,0
+BRDA:905,69,0,0
+BRDA:906,70,0,0
+BRDA:906,71,0,0
+BRDA:906,71,1,0
+BRF:112
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/holodex.ts
+FN:25,(anonymous_0)
+FN:41,(anonymous_1)
+FN:62,(anonymous_2)
+FN:67,(anonymous_3)
+FN:74,(anonymous_4)
+FN:85,(anonymous_5)
+FN:88,(anonymous_6)
+FN:92,(anonymous_7)
+FN:114,(anonymous_8)
+FN:124,(anonymous_9)
+FN:135,(anonymous_10)
+FN:162,(anonymous_11)
+FN:180,(anonymous_12)
+FN:202,(anonymous_13)
+FN:206,(anonymous_14)
+FN:217,(anonymous_15)
+FN:235,(anonymous_16)
+FN:282,(anonymous_17)
+FNF:18
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+DA:1,0
+DA:9,0
+DA:19,0
+DA:20,0
+DA:26,0
+DA:27,0
+DA:28,0
+DA:30,0
+DA:31,0
+DA:34,0
+DA:36,0
+DA:37,0
+DA:42,0
+DA:43,0
+DA:44,0
+DA:45,0
+DA:48,0
+DA:54,0
+DA:55,0
+DA:58,0
+DA:60,0
+DA:62,0
+DA:63,0
+DA:67,0
+DA:68,0
+DA:75,0
+DA:76,0
+DA:77,0
+DA:81,0
+DA:84,0
+DA:85,0
+DA:86,0
+DA:88,0
+DA:90,0
+DA:92,0
+DA:93,0
+DA:94,0
+DA:95,0
+DA:97,0
+DA:101,0
+DA:104,0
+DA:105,0
+DA:108,0
+DA:109,0
+DA:112,0
+DA:113,0
+DA:114,0
+DA:124,0
+DA:125,0
+DA:126,0
+DA:127,0
+DA:129,0
+DA:131,0
+DA:132,0
+DA:135,0
+DA:136,0
+DA:137,0
+DA:139,0
+DA:157,0
+DA:162,0
+DA:164,0
+DA:165,0
+DA:166,0
+DA:169,0
+DA:170,0
+DA:173,0
+DA:180,0
+DA:181,0
+DA:182,0
+DA:184,0
+DA:185,0
+DA:188,0
+DA:189,0
+DA:190,0
+DA:194,0
+DA:196,0
+DA:197,0
+DA:198,0
+DA:203,0
+DA:205,0
+DA:206,0
+DA:207,0
+DA:214,0
+DA:215,0
+DA:217,0
+DA:226,0
+DA:231,0
+DA:236,0
+DA:237,0
+DA:238,0
+DA:241,0
+DA:242,0
+DA:243,0
+DA:247,0
+DA:248,0
+DA:252,0
+DA:258,0
+DA:259,0
+DA:262,0
+DA:264,0
+DA:265,0
+DA:269,0
+DA:275,0
+DA:279,0
+DA:283,0
+LF:105
+LH:0
+BRDA:37,0,0,0
+BRDA:37,0,1,0
+BRDA:43,1,0,0
+BRDA:49,2,0,0
+BRDA:49,2,1,0
+BRDA:50,3,0,0
+BRDA:50,3,1,0
+BRDA:54,4,0,0
+BRDA:54,4,1,0
+BRDA:54,5,0,0
+BRDA:54,5,1,0
+BRDA:55,6,0,0
+BRDA:55,6,1,0
+BRDA:55,7,0,0
+BRDA:55,7,1,0
+BRDA:60,8,0,0
+BRDA:60,8,1,0
+BRDA:60,9,0,0
+BRDA:60,9,1,0
+BRDA:76,10,0,0
+BRDA:76,10,1,0
+BRDA:88,11,0,0
+BRDA:88,11,1,0
+BRDA:88,12,0,0
+BRDA:88,12,1,0
+BRDA:90,13,0,0
+BRDA:90,14,0,0
+BRDA:90,14,1,0
+BRDA:93,15,0,0
+BRDA:93,16,0,0
+BRDA:93,16,1,0
+BRDA:94,17,0,0
+BRDA:94,18,0,0
+BRDA:94,18,1,0
+BRDA:95,19,0,0
+BRDA:95,19,1,0
+BRDA:95,20,0,0
+BRDA:95,20,1,0
+BRDA:104,21,0,0
+BRDA:108,22,0,0
+BRDA:108,22,1,0
+BRDA:113,23,0,0
+BRDA:116,24,0,0
+BRDA:116,24,1,0
+BRDA:116,25,0,0
+BRDA:116,25,1,0
+BRDA:125,26,0,0
+BRDA:126,27,0,0
+BRDA:126,27,1,0
+BRDA:126,28,0,0
+BRDA:126,28,1,0
+BRDA:131,29,0,0
+BRDA:136,30,0,0
+BRDA:136,30,1,0
+BRDA:136,31,0,0
+BRDA:136,31,1,0
+BRDA:137,32,0,0
+BRDA:137,32,1,0
+BRDA:137,33,0,0
+BRDA:137,33,1,0
+BRDA:137,34,0,0
+BRDA:137,34,1,0
+BRDA:137,35,0,0
+BRDA:137,35,1,0
+BRDA:144,36,0,0
+BRDA:144,36,1,0
+BRDA:144,37,0,0
+BRDA:144,37,1,0
+BRDA:145,38,0,0
+BRDA:145,38,1,0
+BRDA:146,39,0,0
+BRDA:146,39,1,0
+BRDA:147,40,0,0
+BRDA:147,40,1,0
+BRDA:148,41,0,0
+BRDA:148,41,1,0
+BRDA:150,42,0,0
+BRDA:150,42,1,0
+BRDA:150,43,0,0
+BRDA:150,43,1,0
+BRDA:152,44,0,0
+BRDA:152,44,1,0
+BRDA:157,45,0,0
+BRDA:157,45,1,0
+BRDA:157,46,0,0
+BRDA:157,46,1,0
+BRDA:164,47,0,0
+BRDA:164,47,1,0
+BRDA:164,48,0,0
+BRDA:164,48,1,0
+BRDA:165,49,0,0
+BRDA:165,49,1,0
+BRDA:165,50,0,0
+BRDA:165,50,1,0
+BRDA:166,51,0,0
+BRDA:169,52,0,0
+BRDA:169,53,0,0
+BRDA:169,53,1,0
+BRDA:170,54,0,0
+BRDA:170,55,0,0
+BRDA:170,55,1,0
+BRDA:173,56,0,0
+BRDA:173,56,1,0
+BRDA:173,57,0,0
+BRDA:173,57,1,0
+BRDA:181,58,0,0
+BRDA:181,59,0,0
+BRDA:181,59,1,0
+BRDA:182,60,0,0
+BRDA:182,61,0,0
+BRDA:182,61,1,0
+BRDA:184,62,0,0
+BRDA:184,63,0,0
+BRDA:184,63,1,0
+BRDA:185,64,0,0
+BRDA:185,64,1,0
+BRDA:185,65,0,0
+BRDA:185,65,1,0
+BRDA:188,66,0,0
+BRDA:188,66,1,0
+BRDA:189,67,0,0
+BRDA:189,67,1,0
+BRDA:197,68,0,0
+BRDA:197,68,1,0
+BRDA:203,69,0,0
+BRDA:222,70,0,0
+BRDA:222,70,1,0
+BRDA:222,71,0,0
+BRDA:222,71,1,0
+BRDA:223,72,0,0
+BRDA:223,72,1,0
+BRDA:223,73,0,0
+BRDA:223,73,1,0
+BRDA:229,74,0,0
+BRDA:229,74,1,0
+BRDA:236,75,0,0
+BRDA:236,75,1,0
+BRDA:236,76,0,0
+BRDA:236,76,1,0
+BRDA:237,77,0,0
+BRDA:237,77,1,0
+BRDA:237,78,0,0
+BRDA:237,78,1,0
+BRDA:238,79,0,0
+BRDA:238,79,1,0
+BRDA:238,80,0,0
+BRDA:238,80,1,0
+BRDA:241,81,0,0
+BRDA:241,82,0,0
+BRDA:241,82,1,0
+BRDA:247,83,0,0
+BRDA:247,84,0,0
+BRDA:247,84,1,0
+BRDA:253,85,0,0
+BRDA:253,85,1,0
+BRDA:253,86,0,0
+BRDA:253,86,1,0
+BRDA:254,87,0,0
+BRDA:254,87,1,0
+BRDA:254,88,0,0
+BRDA:254,88,1,0
+BRDA:264,89,0,0
+BRDA:264,90,0,0
+BRDA:264,90,1,0
+BRDA:266,91,0,0
+BRDA:266,91,1,0
+BRDA:276,92,0,0
+BRDA:276,92,1,0
+BRF:168
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/keyboard_service.ts
+FN:15,(anonymous_1)
+FN:20,(anonymous_2)
+FN:27,(anonymous_3)
+FN:38,(anonymous_4)
+FN:90,(anonymous_5)
+FN:103,(anonymous_6)
+FN:124,(anonymous_7)
+FN:126,(anonymous_8)
+FN:127,(anonymous_9)
+FN:128,(anonymous_10)
+FN:131,(anonymous_11)
+FN:138,(anonymous_12)
+FNF:12
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:4,0
+DA:5,0
+DA:8,0
+DA:10,0
+DA:12,0
+DA:16,0
+DA:17,0
+DA:21,0
+DA:23,0
+DA:24,0
+DA:27,0
+DA:28,0
+DA:29,0
+DA:33,0
+DA:38,0
+DA:39,0
+DA:40,0
+DA:42,0
+DA:43,0
+DA:44,0
+DA:47,0
+DA:48,0
+DA:53,0
+DA:64,0
+DA:65,0
+DA:68,0
+DA:69,0
+DA:70,0
+DA:72,0
+DA:75,0
+DA:76,0
+DA:77,0
+DA:81,0
+DA:90,0
+DA:91,0
+DA:92,0
+DA:93,0
+DA:98,0
+DA:103,0
+DA:104,0
+DA:105,0
+DA:106,0
+DA:107,0
+DA:112,0
+DA:114,0
+DA:115,0
+DA:120,0
+DA:126,0
+DA:127,0
+DA:128,0
+DA:132,0
+DA:133,0
+DA:134,0
+DA:136,0
+DA:138,0
+DA:139,0
+DA:140,0
+LF:60
+LH:0
+BRDA:28,0,0,0
+BRDA:40,1,0,0
+BRDA:40,1,1,0
+BRDA:40,1,2,0
+BRDA:40,1,3,0
+BRDA:51,2,0,0
+BRDA:51,2,1,0
+BRDA:68,3,0,0
+BRDA:69,4,0,0
+BRDA:69,4,1,0
+BRDA:84,5,0,0
+BRDA:84,5,1,0
+BRDA:91,6,0,0
+BRDA:96,7,0,0
+BRDA:96,7,1,0
+BRDA:104,8,0,0
+BRDA:104,9,0,0
+BRDA:104,9,1,0
+BRDA:118,10,0,0
+BRDA:118,10,1,0
+BRDA:134,11,0,0
+BRDA:139,12,0,0
+BRDA:139,12,1,0
+BRDA:139,13,0,0
+BRDA:139,13,1,0
+BRF:25
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/keyboard_worker.ts
+FN:5,checkInputPermissions
+FN:9,(anonymous_1)
+FN:44,(anonymous_2)
+FN:56,(anonymous_3)
+FN:65,(anonymous_4)
+FN:86,(anonymous_5)
+FNF:6
+FNH:0
+FNDA:0,checkInputPermissions
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:6,0
+DA:8,0
+DA:9,0
+DA:10,0
+DA:13,0
+DA:14,0
+DA:18,0
+DA:19,0
+DA:20,0
+DA:24,0
+DA:25,0
+DA:27,0
+DA:30,0
+DA:32,0
+DA:33,0
+DA:37,0
+DA:39,0
+DA:42,0
+DA:45,0
+DA:46,0
+DA:57,0
+DA:65,0
+DA:67,0
+DA:68,0
+DA:72,0
+DA:73,0
+DA:77,0
+DA:78,0
+DA:82,0
+DA:86,0
+DA:87,0
+DA:88,0
+DA:89,0
+DA:94,0
+DA:96,0
+DA:100,0
+LF:39
+LH:0
+BRDA:10,0,0,0
+BRDA:10,0,1,0
+BRDA:10,1,0,0
+BRDA:10,1,1,0
+BRDA:13,2,0,0
+BRDA:19,3,0,0
+BRDA:32,4,0,0
+BRDA:32,4,1,0
+BRDA:45,5,0,0
+BRDA:46,6,0,0
+BRDA:46,6,1,0
+BRDA:46,7,0,0
+BRDA:46,7,1,0
+BRDA:57,8,0,0
+BRDA:57,8,1,0
+BRDA:57,9,0,0
+BRDA:57,9,1,0
+BRDA:67,10,0,0
+BRDA:67,11,0,0
+BRDA:67,11,1,0
+BRDA:67,11,2,0
+BRDA:67,11,3,0
+BRDA:68,12,0,0
+BRDA:68,12,1,0
+BRDA:68,13,0,0
+BRDA:68,13,1,0
+BRDA:72,14,0,0
+BRDA:72,15,0,0
+BRDA:72,15,1,0
+BRDA:72,15,2,0
+BRDA:72,15,3,0
+BRDA:73,16,0,0
+BRDA:73,16,1,0
+BRDA:73,17,0,0
+BRDA:73,17,1,0
+BRDA:77,18,0,0
+BRDA:77,19,0,0
+BRDA:77,19,1,0
+BRDA:77,19,2,0
+BRDA:77,19,3,0
+BRDA:78,20,0,0
+BRDA:78,20,1,0
+BRDA:78,21,0,0
+BRDA:78,21,1,0
+BRDA:86,22,0,0
+BRDA:86,22,1,0
+BRDA:86,23,0,0
+BRDA:86,23,1,0
+BRDA:87,24,0,0
+BRDA:94,25,0,0
+BRDA:94,25,1,0
+BRDA:94,26,0,0
+BRDA:94,26,1,0
+BRDA:96,27,0,0
+BRDA:96,27,1,0
+BRDA:96,28,0,0
+BRDA:96,28,1,0
+BRDA:98,29,0,0
+BRDA:98,29,1,0
+BRF:59
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/logger.ts
+FN:7,(anonymous_1)
+FN:29,(anonymous_2)
+FN:61,(anonymous_3)
+FN:98,(anonymous_4)
+FN:104,(anonymous_5)
+FN:114,(anonymous_6)
+FN:118,(anonymous_7)
+FN:134,(anonymous_8)
+FN:144,(anonymous_9)
+FN:157,(anonymous_10)
+FN:166,(anonymous_11)
+FN:174,(anonymous_12)
+FN:182,(anonymous_13)
+FNF:13
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+DA:1,0
+DA:2,0
+DA:3,0
+DA:5,0
+DA:7,0
+DA:8,0
+DA:9,0
+DA:10,0
+DA:11,0
+DA:23,0
+DA:24,0
+DA:25,0
+DA:26,0
+DA:29,0
+DA:30,0
+DA:37,0
+DA:38,0
+DA:39,0
+DA:42,0
+DA:44,0
+DA:46,0
+DA:47,0
+DA:50,0
+DA:51,0
+DA:54,0
+DA:57,0
+DA:63,0
+DA:65,0
+DA:89,0
+DA:90,0
+DA:91,0
+DA:92,0
+DA:93,0
+DA:94,0
+DA:99,0
+DA:100,0
+DA:101,0
+DA:105,0
+DA:111,0
+DA:115,0
+DA:117,0
+DA:118,0
+DA:119,0
+DA:120,0
+DA:121,0
+DA:122,0
+DA:123,0
+DA:124,0
+DA:125,0
+DA:126,0
+DA:130,0
+DA:135,0
+DA:136,0
+DA:137,0
+DA:140,0
+DA:141,0
+DA:145,0
+DA:147,0
+DA:158,0
+DA:167,0
+DA:175,0
+DA:183,0
+DA:191,0
+LF:63
+LH:0
+BRDA:7,0,0,0
+BRDA:7,0,1,0
+BRDA:24,1,0,0
+BRDA:24,1,1,0
+BRDA:25,2,0,0
+BRDA:25,2,1,0
+BRDA:26,3,0,0
+BRDA:26,3,1,0
+BRDA:37,4,0,0
+BRDA:37,4,1,0
+BRDA:38,5,0,0
+BRDA:38,5,1,0
+BRDA:39,6,0,0
+BRDA:39,6,1,0
+BRDA:41,7,0,0
+BRDA:41,7,1,0
+BRDA:46,8,0,0
+BRDA:50,9,0,0
+BRDA:50,10,0,0
+BRDA:50,10,1,0
+BRDA:63,11,0,0
+BRDA:63,11,1,0
+BRDA:63,12,0,0
+BRDA:63,12,1,0
+BRDA:63,12,2,0
+BRDA:89,13,0,0
+BRDA:91,14,0,0
+BRDA:92,15,0,0
+BRDA:93,16,0,0
+BRDA:115,17,0,0
+BRDA:119,18,0,0
+BRDA:120,19,0,0
+BRDA:122,20,0,0
+BRDA:122,20,1,0
+BRDA:122,20,2,0
+BRDA:122,20,3,0
+BRDA:135,21,0,0
+BRDA:137,22,0,0
+BRDA:145,23,0,0
+BRF:39
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/player.ts
+FN:59,(anonymous_1)
+FN:73,(anonymous_2)
+FN:75,(anonymous_3)
+FN:92,(anonymous_4)
+FN:101,(anonymous_5)
+FN:104,(anonymous_6)
+FN:132,(anonymous_7)
+FN:162,(anonymous_8)
+FN:163,(anonymous_9)
+FN:164,(anonymous_10)
+FN:173,(anonymous_11)
+FN:177,(anonymous_12)
+FN:198,(anonymous_13)
+FN:207,(anonymous_14)
+FN:298,(anonymous_15)
+FN:333,(anonymous_16)
+FN:348,(anonymous_17)
+FN:351,(anonymous_18)
+FN:357,(anonymous_19)
+FN:370,(anonymous_20)
+FN:376,(anonymous_21)
+FN:403,(anonymous_22)
+FN:420,(anonymous_23)
+FN:424,(anonymous_24)
+FN:434,(anonymous_25)
+FN:449,(anonymous_26)
+FN:490,(anonymous_27)
+FN:513,(anonymous_28)
+FN:518,(anonymous_29)
+FN:524,(anonymous_30)
+FN:538,(anonymous_31)
+FN:544,(anonymous_32)
+FN:551,(anonymous_33)
+FN:596,(anonymous_34)
+FN:610,(anonymous_35)
+FN:612,(anonymous_36)
+FN:621,(anonymous_37)
+FN:637,(anonymous_38)
+FN:645,(anonymous_39)
+FN:653,(anonymous_40)
+FN:674,(anonymous_41)
+FN:712,(anonymous_42)
+FN:749,(anonymous_43)
+FN:750,(anonymous_44)
+FN:820,(anonymous_45)
+FN:829,(anonymous_46)
+FN:860,(anonymous_47)
+FN:898,(anonymous_48)
+FN:913,(anonymous_49)
+FN:938,(anonymous_50)
+FN:962,(anonymous_51)
+FN:984,(anonymous_52)
+FN:997,(anonymous_53)
+FN:998,(anonymous_54)
+FN:1055,(anonymous_55)
+FN:1057,(anonymous_56)
+FN:1123,(anonymous_57)
+FN:1136,(anonymous_58)
+FN:1137,(anonymous_59)
+FN:1146,(anonymous_60)
+FN:1154,(anonymous_61)
+FN:1172,(anonymous_62)
+FN:1173,(anonymous_63)
+FN:1178,(anonymous_64)
+FN:1182,(anonymous_65)
+FN:1186,(anonymous_66)
+FN:1200,(anonymous_67)
+FN:1209,(anonymous_68)
+FN:1212,(anonymous_69)
+FN:1217,(anonymous_70)
+FN:1247,(anonymous_71)
+FN:1251,(anonymous_72)
+FN:1302,(anonymous_73)
+FN:1307,(anonymous_74)
+FN:1312,(anonymous_75)
+FN:1322,(anonymous_76)
+FN:1365,(anonymous_77)
+FN:1373,(anonymous_78)
+FN:1381,(anonymous_79)
+FN:1383,(anonymous_80)
+FN:1385,(anonymous_81)
+FN:1395,(anonymous_82)
+FN:1408,(anonymous_83)
+FN:1423,(anonymous_84)
+FN:1432,(anonymous_85)
+FN:1449,(anonymous_86)
+FN:1466,(anonymous_87)
+FN:1482,(anonymous_88)
+FN:1486,(anonymous_89)
+FNF:89
+FNH:0
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+FNDA:0,(anonymous_20)
+FNDA:0,(anonymous_21)
+FNDA:0,(anonymous_22)
+FNDA:0,(anonymous_23)
+FNDA:0,(anonymous_24)
+FNDA:0,(anonymous_25)
+FNDA:0,(anonymous_26)
+FNDA:0,(anonymous_27)
+FNDA:0,(anonymous_28)
+FNDA:0,(anonymous_29)
+FNDA:0,(anonymous_30)
+FNDA:0,(anonymous_31)
+FNDA:0,(anonymous_32)
+FNDA:0,(anonymous_33)
+FNDA:0,(anonymous_34)
+FNDA:0,(anonymous_35)
+FNDA:0,(anonymous_36)
+FNDA:0,(anonymous_37)
+FNDA:0,(anonymous_38)
+FNDA:0,(anonymous_39)
+FNDA:0,(anonymous_40)
+FNDA:0,(anonymous_41)
+FNDA:0,(anonymous_42)
+FNDA:0,(anonymous_43)
+FNDA:0,(anonymous_44)
+FNDA:0,(anonymous_45)
+FNDA:0,(anonymous_46)
+FNDA:0,(anonymous_47)
+FNDA:0,(anonymous_48)
+FNDA:0,(anonymous_49)
+FNDA:0,(anonymous_50)
+FNDA:0,(anonymous_51)
+FNDA:0,(anonymous_52)
+FNDA:0,(anonymous_53)
+FNDA:0,(anonymous_54)
+FNDA:0,(anonymous_55)
+FNDA:0,(anonymous_56)
+FNDA:0,(anonymous_57)
+FNDA:0,(anonymous_58)
+FNDA:0,(anonymous_59)
+FNDA:0,(anonymous_60)
+FNDA:0,(anonymous_61)
+FNDA:0,(anonymous_62)
+FNDA:0,(anonymous_63)
+FNDA:0,(anonymous_64)
+FNDA:0,(anonymous_65)
+FNDA:0,(anonymous_66)
+FNDA:0,(anonymous_67)
+FNDA:0,(anonymous_68)
+FNDA:0,(anonymous_69)
+FNDA:0,(anonymous_70)
+FNDA:0,(anonymous_71)
+FNDA:0,(anonymous_72)
+FNDA:0,(anonymous_73)
+FNDA:0,(anonymous_74)
+FNDA:0,(anonymous_75)
+FNDA:0,(anonymous_76)
+FNDA:0,(anonymous_77)
+FNDA:0,(anonymous_78)
+FNDA:0,(anonymous_79)
+FNDA:0,(anonymous_80)
+FNDA:0,(anonymous_81)
+FNDA:0,(anonymous_82)
+FNDA:0,(anonymous_83)
+FNDA:0,(anonymous_84)
+FNDA:0,(anonymous_85)
+FNDA:0,(anonymous_86)
+FNDA:0,(anonymous_87)
+FNDA:0,(anonymous_88)
+FNDA:0,(anonymous_89)
+DA:1,0
+DA:4,0
+DA:5,0
+DA:6,0
+DA:7,0
+DA:8,0
+DA:30,0
+DA:32,0
+DA:33,0
+DA:34,0
+DA:35,0
+DA:36,0
+DA:37,0
+DA:39,0
+DA:40,0
+DA:41,0
+DA:42,0
+DA:43,0
+DA:44,0
+DA:45,0
+DA:46,0
+DA:47,0
+DA:48,0
+DA:49,0
+DA:53,0
+DA:54,0
+DA:60,0
+DA:61,0
+DA:62,0
+DA:63,0
+DA:66,0
+DA:67,0
+DA:70,0
+DA:75,0
+DA:76,0
+DA:78,0
+DA:79,0
+DA:81,0
+DA:82,0
+DA:85,0
+DA:86,0
+DA:93,0
+DA:94,0
+DA:96,0
+DA:97,0
+DA:102,0
+DA:104,0
+DA:105,0
+DA:106,0
+DA:107,0
+DA:112,0
+DA:113,0
+DA:114,0
+DA:115,0
+DA:116,0
+DA:121,0
+DA:123,0
+DA:128,0
+DA:133,0
+DA:134,0
+DA:136,0
+DA:137,0
+DA:138,0
+DA:140,0
+DA:141,0
+DA:142,0
+DA:143,0
+DA:145,0
+DA:146,0
+DA:147,0
+DA:148,0
+DA:149,0
+DA:153,0
+DA:163,0
+DA:164,0
+DA:165,0
+DA:166,0
+DA:167,0
+DA:174,0
+DA:177,0
+DA:178,0
+DA:179,0
+DA:188,0
+DA:189,0
+DA:197,0
+DA:198,0
+DA:199,0
+DA:202,0
+DA:204,0
+DA:207,0
+DA:208,0
+DA:209,0
+DA:213,0
+DA:214,0
+DA:218,0
+DA:219,0
+DA:223,0
+DA:227,0
+DA:232,0
+DA:235,0
+DA:238,0
+DA:239,0
+DA:240,0
+DA:242,0
+DA:248,0
+DA:253,0
+DA:271,0
+DA:274,0
+DA:276,0
+DA:282,0
+DA:287,0
+DA:293,0
+DA:294,0
+DA:301,0
+DA:302,0
+DA:305,0
+DA:306,0
+DA:307,0
+DA:310,0
+DA:312,0
+DA:313,0
+DA:318,0
+DA:319,0
+DA:321,0
+DA:322,0
+DA:324,0
+DA:329,0
+DA:330,0
+DA:336,0
+DA:337,0
+DA:338,0
+DA:340,0
+DA:341,0
+DA:343,0
+DA:348,0
+DA:349,0
+DA:350,0
+DA:351,0
+DA:352,0
+DA:353,0
+DA:354,0
+DA:357,0
+DA:358,0
+DA:359,0
+DA:360,0
+DA:361,0
+DA:362,0
+DA:365,0
+DA:366,0
+DA:370,0
+DA:371,0
+DA:372,0
+DA:373,0
+DA:376,0
+DA:377,0
+DA:378,0
+DA:379,0
+DA:382,0
+DA:383,0
+DA:384,0
+DA:385,0
+DA:386,0
+DA:387,0
+DA:388,0
+DA:389,0
+DA:390,0
+DA:391,0
+DA:392,0
+DA:393,0
+DA:394,0
+DA:395,0
+DA:398,0
+DA:402,0
+DA:403,0
+DA:404,0
+DA:405,0
+DA:407,0
+DA:408,0
+DA:411,0
+DA:416,0
+DA:421,0
+DA:422,0
+DA:424,0
+DA:425,0
+DA:426,0
+DA:427,0
+DA:429,0
+DA:430,0
+DA:431,0
+DA:434,0
+DA:435,0
+DA:436,0
+DA:437,0
+DA:438,0
+DA:444,0
+DA:448,0
+DA:449,0
+DA:450,0
+DA:451,0
+DA:453,0
+DA:454,0
+DA:455,0
+DA:459,0
+DA:460,0
+DA:461,0
+DA:468,0
+DA:469,0
+DA:476,0
+DA:483,0
+DA:489,0
+DA:490,0
+DA:491,0
+DA:492,0
+DA:494,0
+DA:495,0
+DA:498,0
+DA:499,0
+DA:503,0
+DA:505,0
+DA:506,0
+DA:513,0
+DA:514,0
+DA:515,0
+DA:518,0
+DA:519,0
+DA:520,0
+DA:530,0
+DA:531,0
+DA:532,0
+DA:533,0
+DA:534,0
+DA:537,0
+DA:538,0
+DA:539,0
+DA:540,0
+DA:543,0
+DA:544,0
+DA:545,0
+DA:546,0
+DA:551,0
+DA:552,0
+DA:553,0
+DA:554,0
+DA:557,0
+DA:559,0
+DA:562,0
+DA:563,0
+DA:564,0
+DA:568,0
+DA:569,0
+DA:570,0
+DA:574,0
+DA:575,0
+DA:576,0
+DA:577,0
+DA:583,0
+DA:584,0
+DA:588,0
+DA:589,0
+DA:594,0
+DA:595,0
+DA:596,0
+DA:597,0
+DA:607,0
+DA:610,0
+DA:611,0
+DA:612,0
+DA:613,0
+DA:617,0
+DA:618,0
+DA:623,0
+DA:624,0
+DA:628,0
+DA:631,0
+DA:634,0
+DA:637,0
+DA:640,0
+DA:641,0
+DA:642,0
+DA:643,0
+DA:644,0
+DA:645,0
+DA:651,0
+DA:655,0
+DA:658,0
+DA:659,0
+DA:662,0
+DA:665,0
+DA:666,0
+DA:669,0
+DA:670,0
+DA:671,0
+DA:674,0
+DA:675,0
+DA:684,0
+DA:686,0
+DA:687,0
+DA:691,0
+DA:696,0
+DA:698,0
+DA:699,0
+DA:700,0
+DA:703,0
+DA:709,0
+DA:712,0
+DA:713,0
+DA:715,0
+DA:717,0
+DA:718,0
+DA:724,0
+DA:725,0
+DA:727,0
+DA:734,0
+DA:740,0
+DA:741,0
+DA:742,0
+DA:746,0
+DA:747,0
+DA:750,0
+DA:751,0
+DA:761,0
+DA:762,0
+DA:766,0
+DA:774,0
+DA:780,0
+DA:781,0
+DA:790,0
+DA:793,0
+DA:794,0
+DA:798,0
+DA:806,0
+DA:807,0
+DA:811,0
+DA:821,0
+DA:822,0
+DA:823,0
+DA:824,0
+DA:831,0
+DA:840,0
+DA:841,0
+DA:842,0
+DA:845,0
+DA:846,0
+DA:848,0
+DA:856,0
+DA:857,0
+DA:862,0
+DA:863,0
+DA:864,0
+DA:865,0
+DA:869,0
+DA:870,0
+DA:871,0
+DA:872,0
+DA:876,0
+DA:877,0
+DA:878,0
+DA:879,0
+DA:883,0
+DA:884,0
+DA:885,0
+DA:886,0
+DA:890,0
+DA:899,0
+DA:901,0
+DA:902,0
+DA:903,0
+DA:904,0
+DA:908,0
+DA:909,0
+DA:910,0
+DA:913,0
+DA:916,0
+DA:917,0
+DA:918,0
+DA:920,0
+DA:926,0
+DA:933,0
+DA:934,0
+DA:935,0
+DA:938,0
+DA:941,0
+DA:942,0
+DA:943,0
+DA:946,0
+DA:954,0
+DA:956,0
+DA:964,0
+DA:965,0
+DA:966,0
+DA:967,0
+DA:971,0
+DA:972,0
+DA:973,0
+DA:974,0
+DA:975,0
+DA:976,0
+DA:978,0
+DA:985,0
+DA:987,0
+DA:990,0
+DA:991,0
+DA:993,0
+DA:998,0
+DA:999,0
+DA:1000,0
+DA:1003,0
+DA:1004,0
+DA:1009,0
+DA:1010,0
+DA:1013,0
+DA:1016,0
+DA:1018,0
+DA:1021,0
+DA:1024,0
+DA:1027,0
+DA:1047,0
+DA:1052,0
+DA:1056,0
+DA:1057,0
+DA:1058,0
+DA:1059,0
+DA:1062,0
+DA:1063,0
+DA:1064,0
+DA:1065,0
+DA:1068,0
+DA:1071,0
+DA:1073,0
+DA:1074,0
+DA:1075,0
+DA:1078,0
+DA:1098,0
+DA:1120,0
+DA:1124,0
+DA:1126,0
+DA:1137,0
+DA:1147,0
+DA:1148,0
+DA:1149,0
+DA:1150,0
+DA:1153,0
+DA:1154,0
+DA:1155,0
+DA:1156,0
+DA:1164,0
+DA:1173,0
+DA:1174,0
+DA:1179,0
+DA:1183,0
+DA:1187,0
+DA:1188,0
+DA:1193,0
+DA:1201,0
+DA:1203,0
+DA:1204,0
+DA:1206,0
+DA:1208,0
+DA:1209,0
+DA:1212,0
+DA:1213,0
+DA:1217,0
+DA:1218,0
+DA:1219,0
+DA:1220,0
+DA:1223,0
+DA:1231,0
+DA:1232,0
+DA:1233,0
+DA:1234,0
+DA:1236,0
+DA:1238,0
+DA:1243,0
+DA:1248,0
+DA:1252,0
+DA:1254,0
+DA:1256,0
+DA:1261,0
+DA:1265,0
+DA:1269,0
+DA:1270,0
+DA:1271,0
+DA:1275,0
+DA:1282,0
+DA:1283,0
+DA:1284,0
+DA:1286,0
+DA:1294,0
+DA:1303,0
+DA:1304,0
+DA:1307,0
+DA:1308,0
+DA:1313,0
+DA:1314,0
+DA:1315,0
+DA:1323,0
+DA:1325,0
+DA:1326,0
+DA:1329,0
+DA:1330,0
+DA:1331,0
+DA:1332,0
+DA:1333,0
+DA:1334,0
+DA:1335,0
+DA:1336,0
+DA:1337,0
+DA:1340,0
+DA:1344,0
+DA:1345,0
+DA:1346,0
+DA:1350,0
+DA:1351,0
+DA:1353,0
+DA:1358,0
+DA:1366,0
+DA:1367,0
+DA:1368,0
+DA:1369,0
+DA:1370,0
+DA:1373,0
+DA:1374,0
+DA:1375,0
+DA:1376,0
+DA:1379,0
+DA:1381,0
+DA:1382,0
+DA:1383,0
+DA:1385,0
+DA:1386,0
+DA:1387,0
+DA:1388,0
+DA:1389,0
+DA:1395,0
+DA:1396,0
+DA:1397,0
+DA:1398,0
+DA:1399,0
+DA:1404,0
+DA:1408,0
+DA:1409,0
+DA:1410,0
+DA:1411,0
+DA:1412,0
+DA:1413,0
+DA:1418,0
+DA:1423,0
+DA:1424,0
+DA:1425,0
+DA:1426,0
+DA:1427,0
+DA:1432,0
+DA:1433,0
+DA:1434,0
+DA:1435,0
+DA:1439,0
+DA:1444,0
+DA:1450,0
+DA:1451,0
+DA:1457,0
+DA:1458,0
+DA:1467,0
+DA:1469,0
+DA:1470,0
+DA:1476,0
+DA:1483,0
+DA:1487,0
+DA:1488,0
+LF:568
+LH:0
+BRDA:76,0,0,0
+BRDA:79,1,0,0
+BRDA:79,2,0,0
+BRDA:79,2,1,0
+BRDA:106,3,0,0
+BRDA:112,4,0,0
+BRDA:112,4,1,0
+BRDA:113,5,0,0
+BRDA:115,6,0,0
+BRDA:126,7,0,0
+BRDA:126,7,1,0
+BRDA:138,8,0,0
+BRDA:143,9,0,0
+BRDA:147,10,0,0
+BRDA:156,11,0,0
+BRDA:156,11,1,0
+BRDA:165,12,0,0
+BRDA:178,13,0,0
+BRDA:188,14,0,0
+BRDA:208,15,0,0
+BRDA:213,16,0,0
+BRDA:218,17,0,0
+BRDA:227,18,0,0
+BRDA:227,18,1,0
+BRDA:227,18,2,0
+BRDA:232,19,0,0
+BRDA:232,19,1,0
+BRDA:232,19,2,0
+BRDA:239,20,0,0
+BRDA:239,20,1,0
+BRDA:240,21,0,0
+BRDA:240,21,1,0
+BRDA:248,22,0,0
+BRDA:248,22,1,0
+BRDA:257,23,0,0
+BRDA:257,23,1,0
+BRDA:259,24,0,0
+BRDA:259,24,1,0
+BRDA:259,24,2,0
+BRDA:261,25,0,0
+BRDA:261,25,1,0
+BRDA:264,26,0,0
+BRDA:264,26,1,0
+BRDA:285,27,0,0
+BRDA:285,27,1,0
+BRDA:289,28,0,0
+BRDA:289,28,1,0
+BRDA:310,29,0,0
+BRDA:310,29,1,0
+BRDA:312,30,0,0
+BRDA:312,30,1,0
+BRDA:313,31,0,0
+BRDA:313,31,1,0
+BRDA:359,32,0,0
+BRDA:365,33,0,0
+BRDA:378,34,0,0
+BRDA:382,35,0,0
+BRDA:382,35,1,0
+BRDA:384,36,0,0
+BRDA:384,36,1,0
+BRDA:386,37,0,0
+BRDA:386,37,1,0
+BRDA:388,38,0,0
+BRDA:388,38,1,0
+BRDA:390,39,0,0
+BRDA:390,39,1,0
+BRDA:392,40,0,0
+BRDA:392,40,1,0
+BRDA:394,41,0,0
+BRDA:402,42,0,0
+BRDA:402,42,1,0
+BRDA:402,43,0,0
+BRDA:402,43,1,0
+BRDA:403,44,0,0
+BRDA:403,44,1,0
+BRDA:403,45,0,0
+BRDA:403,45,1,0
+BRDA:414,46,0,0
+BRDA:414,46,1,0
+BRDA:425,47,0,0
+BRDA:434,48,0,0
+BRDA:435,49,0,0
+BRDA:438,50,0,0
+BRDA:438,50,1,0
+BRDA:438,51,0,0
+BRDA:438,51,1,0
+BRDA:440,52,0,0
+BRDA:440,52,1,0
+BRDA:448,53,0,0
+BRDA:451,54,0,0
+BRDA:451,55,0,0
+BRDA:451,55,1,0
+BRDA:453,56,0,0
+BRDA:454,57,0,0
+BRDA:454,57,1,0
+BRDA:460,58,0,0
+BRDA:469,59,0,0
+BRDA:469,59,1,0
+BRDA:469,60,0,0
+BRDA:469,60,1,0
+BRDA:476,61,0,0
+BRDA:477,62,0,0
+BRDA:477,62,1,0
+BRDA:477,62,2,0
+BRDA:477,62,3,0
+BRDA:477,62,4,0
+BRDA:489,63,0,0
+BRDA:492,64,0,0
+BRDA:492,65,0,0
+BRDA:492,65,1,0
+BRDA:494,66,0,0
+BRDA:494,66,1,0
+BRDA:494,67,0,0
+BRDA:494,67,1,0
+BRDA:498,68,0,0
+BRDA:498,68,1,0
+BRDA:537,69,0,0
+BRDA:543,70,0,0
+BRDA:552,71,0,0
+BRDA:562,72,0,0
+BRDA:562,72,1,0
+BRDA:562,73,0,0
+BRDA:562,73,1,0
+BRDA:563,74,0,0
+BRDA:575,75,0,0
+BRDA:583,76,0,0
+BRDA:594,77,0,0
+BRDA:594,78,0,0
+BRDA:594,78,1,0
+BRDA:594,78,2,0
+BRDA:594,78,3,0
+BRDA:623,79,0,0
+BRDA:641,80,0,0
+BRDA:641,81,0,0
+BRDA:641,81,1,0
+BRDA:641,82,0,0
+BRDA:641,82,1,0
+BRDA:659,83,0,0
+BRDA:659,83,1,0
+BRDA:659,84,0,0
+BRDA:659,84,1,0
+BRDA:665,85,0,0
+BRDA:669,86,0,0
+BRDA:669,86,1,0
+BRDA:676,87,0,0
+BRDA:676,87,1,0
+BRDA:676,87,2,0
+BRDA:676,87,3,0
+BRDA:684,88,0,0
+BRDA:684,88,1,0
+BRDA:691,89,0,0
+BRDA:691,89,1,0
+BRDA:691,90,0,0
+BRDA:691,90,1,0
+BRDA:696,91,0,0
+BRDA:696,91,1,0
+BRDA:698,92,0,0
+BRDA:698,92,1,0
+BRDA:698,93,0,0
+BRDA:698,93,1,0
+BRDA:717,94,0,0
+BRDA:717,94,1,0
+BRDA:724,95,0,0
+BRDA:724,95,1,0
+BRDA:740,96,0,0
+BRDA:740,96,1,0
+BRDA:741,97,0,0
+BRDA:741,97,1,0
+BRDA:766,98,0,0
+BRDA:766,98,1,0
+BRDA:766,99,0,0
+BRDA:766,99,1,0
+BRDA:777,100,0,0
+BRDA:777,100,1,0
+BRDA:781,101,0,0
+BRDA:781,101,1,0
+BRDA:781,102,0,0
+BRDA:781,102,1,0
+BRDA:783,103,0,0
+BRDA:783,103,1,0
+BRDA:798,104,0,0
+BRDA:798,104,1,0
+BRDA:798,105,0,0
+BRDA:798,105,1,0
+BRDA:811,106,0,0
+BRDA:811,106,1,0
+BRDA:811,107,0,0
+BRDA:811,107,1,0
+BRDA:822,108,0,0
+BRDA:849,109,0,0
+BRDA:849,109,1,0
+BRDA:863,110,0,0
+BRDA:870,111,0,0
+BRDA:877,112,0,0
+BRDA:884,113,0,0
+BRDA:898,114,0,0
+BRDA:902,115,0,0
+BRDA:902,116,0,0
+BRDA:902,116,1,0
+BRDA:917,117,0,0
+BRDA:917,117,1,0
+BRDA:927,118,0,0
+BRDA:927,118,1,0
+BRDA:933,119,0,0
+BRDA:933,120,0,0
+BRDA:933,120,1,0
+BRDA:941,121,0,0
+BRDA:947,122,0,0
+BRDA:947,122,1,0
+BRDA:965,123,0,0
+BRDA:985,124,0,0
+BRDA:999,125,0,0
+BRDA:1009,126,0,0
+BRDA:1009,126,1,0
+BRDA:1010,127,0,0
+BRDA:1010,127,1,0
+BRDA:1016,128,0,0
+BRDA:1016,128,1,0
+BRDA:1018,129,0,0
+BRDA:1018,129,1,0
+BRDA:1037,130,0,0
+BRDA:1037,130,1,0
+BRDA:1037,131,0,0
+BRDA:1037,131,1,0
+BRDA:1049,132,0,0
+BRDA:1049,132,1,0
+BRDA:1049,133,0,0
+BRDA:1049,133,1,0
+BRDA:1058,134,0,0
+BRDA:1064,135,0,0
+BRDA:1064,135,1,0
+BRDA:1065,136,0,0
+BRDA:1065,136,1,0
+BRDA:1071,137,0,0
+BRDA:1071,137,1,0
+BRDA:1073,138,0,0
+BRDA:1073,138,1,0
+BRDA:1083,139,0,0
+BRDA:1083,139,1,0
+BRDA:1094,140,0,0
+BRDA:1094,140,1,0
+BRDA:1094,141,0,0
+BRDA:1094,141,1,0
+BRDA:1101,142,0,0
+BRDA:1101,142,1,0
+BRDA:1130,143,0,0
+BRDA:1130,143,1,0
+BRDA:1148,144,0,0
+BRDA:1155,145,0,0
+BRDA:1159,146,0,0
+BRDA:1159,146,1,0
+BRDA:1167,147,0,0
+BRDA:1167,147,1,0
+BRDA:1187,148,0,0
+BRDA:1187,148,1,0
+BRDA:1187,149,0,0
+BRDA:1187,149,1,0
+BRDA:1187,149,2,0
+BRDA:1201,150,0,0
+BRDA:1219,151,0,0
+BRDA:1226,152,0,0
+BRDA:1226,152,1,0
+BRDA:1241,153,0,0
+BRDA:1241,153,1,0
+BRDA:1256,154,0,0
+BRDA:1257,155,0,0
+BRDA:1257,155,1,0
+BRDA:1257,155,2,0
+BRDA:1270,156,0,0
+BRDA:1279,157,0,0
+BRDA:1279,157,1,0
+BRDA:1289,158,0,0
+BRDA:1289,158,1,0
+BRDA:1297,159,0,0
+BRDA:1297,159,1,0
+BRDA:1325,160,0,0
+BRDA:1325,161,0,0
+BRDA:1325,161,1,0
+BRDA:1329,162,0,0
+BRDA:1329,162,1,0
+BRDA:1331,163,0,0
+BRDA:1331,163,1,0
+BRDA:1332,164,0,0
+BRDA:1332,164,1,0
+BRDA:1332,165,0,0
+BRDA:1332,165,1,0
+BRDA:1333,166,0,0
+BRDA:1333,166,1,0
+BRDA:1334,167,0,0
+BRDA:1334,167,1,0
+BRDA:1334,168,0,0
+BRDA:1334,168,1,0
+BRDA:1335,169,0,0
+BRDA:1336,170,0,0
+BRDA:1336,170,1,0
+BRDA:1336,171,0,0
+BRDA:1336,171,1,0
+BRDA:1337,172,0,0
+BRDA:1337,172,1,0
+BRDA:1340,173,0,0
+BRDA:1340,173,1,0
+BRDA:1344,174,0,0
+BRDA:1345,175,0,0
+BRDA:1345,175,1,0
+BRDA:1345,176,0,0
+BRDA:1345,176,1,0
+BRDA:1346,177,0,0
+BRDA:1346,177,1,0
+BRDA:1351,178,0,0
+BRDA:1351,178,1,0
+BRDA:1356,179,0,0
+BRDA:1356,179,1,0
+BRDA:1367,180,0,0
+BRDA:1386,181,0,0
+BRDA:1396,182,0,0
+BRDA:1409,183,0,0
+BRDA:1424,184,0,0
+BRDA:1433,185,0,0
+BRDA:1442,186,0,0
+BRDA:1442,186,1,0
+BRDA:1450,187,0,0
+BRDA:1450,187,1,0
+BRDA:1457,188,0,0
+BRDA:1467,189,0,0
+BRDA:1467,189,1,0
+BRDA:1467,190,0,0
+BRDA:1467,190,1,0
+BRDA:1469,191,0,0
+BRDA:1477,192,0,0
+BRDA:1477,192,1,0
+BRDA:1487,193,0,0
+BRDA:1487,193,1,0
+BRF:332
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/player_manager.ts
+FN:34,(anonymous_0)
+FN:40,(anonymous_1)
+FN:52,(anonymous_2)
+FN:64,(anonymous_3)
+FN:77,(anonymous_4)
+FN:101,(anonymous_5)
+FN:111,(anonymous_6)
+FN:116,(anonymous_7)
+FNF:8
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+DA:1,0
+DA:4,0
+DA:29,0
+DA:30,0
+DA:31,0
+DA:35,0
+DA:36,0
+DA:37,0
+DA:42,0
+DA:43,0
+DA:45,0
+DA:46,0
+DA:50,0
+DA:52,0
+DA:53,0
+DA:54,0
+DA:56,0
+DA:57,0
+DA:59,0
+DA:60,0
+DA:64,0
+DA:65,0
+DA:68,0
+DA:78,0
+DA:79,0
+DA:80,0
+DA:81,0
+DA:84,0
+DA:90,0
+DA:92,0
+DA:97,0
+DA:102,0
+DA:103,0
+DA:104,0
+DA:105,0
+DA:106,0
+DA:107,0
+DA:112,0
+DA:113,0
+DA:117,0
+DA:118,0
+LF:41
+LH:0
+BRDA:43,0,0,0
+BRDA:54,1,0,0
+BRDA:54,1,1,0
+BRDA:71,2,0,0
+BRDA:71,2,1,0
+BRDA:80,3,0,0
+BRDA:95,4,0,0
+BRDA:95,4,1,0
+BRDA:103,5,0,0
+BRF:9
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/queue_service.ts
+FN:15,(anonymous_0)
+FN:21,(anonymous_1)
+FN:28,(anonymous_2)
+FN:44,(anonymous_3)
+FN:50,(anonymous_4)
+FN:62,(anonymous_5)
+FN:69,(anonymous_6)
+FN:75,(anonymous_7)
+FN:82,(anonymous_8)
+FN:109,(anonymous_9)
+FN:113,(anonymous_10)
+FN:117,(anonymous_11)
+FN:121,(anonymous_12)
+FN:127,(anonymous_13)
+FN:132,(anonymous_14)
+FN:138,(anonymous_15)
+FN:139,(anonymous_16)
+FN:143,(anonymous_17)
+FN:145,(anonymous_18)
+FN:150,(anonymous_19)
+FNF:20
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+FNDA:0,(anonymous_14)
+FNDA:0,(anonymous_15)
+FNDA:0,(anonymous_16)
+FNDA:0,(anonymous_17)
+FNDA:0,(anonymous_18)
+FNDA:0,(anonymous_19)
+DA:1,0
+DA:3,0
+DA:12,0
+DA:13,0
+DA:16,0
+DA:17,0
+DA:22,0
+DA:23,0
+DA:24,0
+DA:28,0
+DA:30,0
+DA:32,0
+DA:33,0
+DA:35,0
+DA:36,0
+DA:37,0
+DA:39,0
+DA:40,0
+DA:45,0
+DA:46,0
+DA:47,0
+DA:51,0
+DA:52,0
+DA:53,0
+DA:56,0
+DA:57,0
+DA:58,0
+DA:59,0
+DA:63,0
+DA:64,0
+DA:65,0
+DA:66,0
+DA:70,0
+DA:71,0
+DA:76,0
+DA:77,0
+DA:78,0
+DA:79,0
+DA:83,0
+DA:86,0
+DA:87,0
+DA:88,0
+DA:92,0
+DA:93,0
+DA:95,0
+DA:96,0
+DA:99,0
+DA:102,0
+DA:103,0
+DA:104,0
+DA:110,0
+DA:114,0
+DA:118,0
+DA:122,0
+DA:123,0
+DA:128,0
+DA:129,0
+DA:133,0
+DA:134,0
+DA:139,0
+DA:145,0
+DA:146,0
+DA:147,0
+DA:150,0
+DA:151,0
+DA:152,0
+DA:155,0
+DA:156,0
+DA:160,0
+DA:161,0
+DA:162,0
+DA:166,0
+DA:167,0
+DA:173,0
+LF:74
+LH:0
+BRDA:22,0,0,0
+BRDA:22,1,0,0
+BRDA:22,1,1,0
+BRDA:28,2,0,0
+BRDA:28,2,1,0
+BRDA:35,3,0,0
+BRDA:35,3,1,0
+BRDA:45,4,0,0
+BRDA:45,4,1,0
+BRDA:51,5,0,0
+BRDA:51,6,0,0
+BRDA:51,6,1,0
+BRDA:76,7,0,0
+BRDA:76,7,1,0
+BRDA:78,8,0,0
+BRDA:78,8,1,0
+BRDA:78,9,0,0
+BRDA:78,9,1,0
+BRDA:78,10,0,0
+BRDA:78,10,1,0
+BRDA:83,11,0,0
+BRDA:83,11,1,0
+BRDA:86,12,0,0
+BRDA:86,13,0,0
+BRDA:86,13,1,0
+BRDA:102,14,0,0
+BRDA:146,15,0,0
+BRDA:146,15,1,0
+BRDA:147,16,0,0
+BRDA:147,16,1,0
+BRDA:151,17,0,0
+BRDA:151,17,1,0
+BRDA:155,18,0,0
+BRDA:160,19,0,0
+BRDA:160,20,0,0
+BRDA:160,20,1,0
+BRF:36
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/twitch.ts
+FN:23,(anonymous_0)
+FN:42,(anonymous_1)
+FN:65,(anonymous_2)
+FN:92,(anonymous_3)
+FN:107,(anonymous_4)
+FN:112,(anonymous_5)
+FN:127,(anonymous_6)
+FN:142,(anonymous_7)
+FN:149,(anonymous_8)
+FN:156,(anonymous_9)
+FN:166,(anonymous_10)
+FN:171,(anonymous_11)
+FN:187,(anonymous_12)
+FN:208,(anonymous_13)
+FNF:14
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+FNDA:0,(anonymous_6)
+FNDA:0,(anonymous_7)
+FNDA:0,(anonymous_8)
+FNDA:0,(anonymous_9)
+FNDA:0,(anonymous_10)
+FNDA:0,(anonymous_11)
+FNDA:0,(anonymous_12)
+FNDA:0,(anonymous_13)
+DA:1,0
+DA:2,0
+DA:5,0
+DA:15,0
+DA:16,0
+DA:19,0
+DA:20,0
+DA:21,0
+DA:24,0
+DA:25,0
+DA:26,0
+DA:28,0
+DA:30,0
+DA:34,0
+DA:35,0
+DA:37,0
+DA:38,0
+DA:43,0
+DA:45,0
+DA:46,0
+DA:47,0
+DA:48,0
+DA:51,0
+DA:52,0
+DA:55,0
+DA:56,0
+DA:57,0
+DA:59,0
+DA:65,0
+DA:75,0
+DA:78,0
+DA:79,0
+DA:80,0
+DA:85,0
+DA:92,0
+DA:104,0
+DA:106,0
+DA:107,0
+DA:108,0
+DA:112,0
+DA:113,0
+DA:114,0
+DA:117,0
+DA:118,0
+DA:122,0
+DA:126,0
+DA:127,0
+DA:130,0
+DA:131,0
+DA:133,0
+DA:138,0
+DA:143,0
+DA:150,0
+DA:157,0
+DA:158,0
+DA:159,0
+DA:162,0
+DA:163,0
+DA:165,0
+DA:166,0
+DA:168,0
+DA:169,0
+DA:171,0
+DA:178,0
+DA:183,0
+DA:188,0
+DA:189,0
+DA:190,0
+DA:193,0
+DA:200,0
+DA:202,0
+DA:203,0
+DA:204,0
+DA:209,0
+LF:74
+LH:0
+BRDA:23,0,0,0
+BRDA:38,1,0,0
+BRDA:38,1,1,0
+BRDA:43,2,0,0
+BRDA:46,3,0,0
+BRDA:46,3,1,0
+BRDA:47,4,0,0
+BRDA:47,4,1,0
+BRDA:51,5,0,0
+BRDA:51,5,1,0
+BRDA:78,6,0,0
+BRDA:78,7,0,0
+BRDA:78,7,1,0
+BRDA:104,8,0,0
+BRDA:104,8,1,0
+BRDA:104,9,0,0
+BRDA:104,9,1,0
+BRDA:113,10,0,0
+BRDA:113,10,1,0
+BRDA:113,11,0,0
+BRDA:113,11,1,0
+BRDA:113,12,0,0
+BRDA:113,12,1,0
+BRDA:114,13,0,0
+BRDA:114,13,1,0
+BRDA:114,14,0,0
+BRDA:114,14,1,0
+BRDA:114,15,0,0
+BRDA:114,15,1,0
+BRDA:117,16,0,0
+BRDA:122,17,0,0
+BRDA:122,17,1,0
+BRDA:122,18,0,0
+BRDA:122,18,1,0
+BRDA:126,19,0,0
+BRDA:127,20,0,0
+BRDA:127,20,1,0
+BRDA:127,21,0,0
+BRDA:127,21,1,0
+BRDA:136,22,0,0
+BRDA:136,22,1,0
+BRDA:142,23,0,0
+BRDA:149,24,0,0
+BRDA:157,25,0,0
+BRDA:157,26,0,0
+BRDA:157,26,1,0
+BRDA:181,27,0,0
+BRDA:181,27,1,0
+BRDA:189,28,0,0
+BRDA:203,29,0,0
+BRDA:203,29,1,0
+BRF:51
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/youtube.ts
+FN:8,(anonymous_0)
+FN:12,(anonymous_1)
+FN:18,(anonymous_2)
+FN:38,(anonymous_3)
+FNF:4
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+DA:3,0
+DA:5,0
+DA:6,0
+DA:9,0
+DA:13,0
+DA:14,0
+DA:15,0
+DA:18,0
+DA:26,0
+DA:27,0
+DA:29,0
+DA:34,0
+DA:39,0
+DA:40,0
+LF:14
+LH:0
+BRDA:14,0,0,0
+BRDA:14,0,1,0
+BRDA:14,1,0,0
+BRDA:14,1,1,0
+BRDA:14,2,0,0
+BRDA:14,2,1,0
+BRDA:15,3,0,0
+BRDA:15,3,1,0
+BRDA:15,4,0,0
+BRDA:15,4,1,0
+BRDA:15,5,0,0
+BRDA:15,5,1,0
+BRDA:32,6,0,0
+BRDA:32,6,1,0
+BRF:14
+BRH:0
+end_of_record
+TN:
+SF:src/server/services/logger/index.ts
+FN:42,formatError
+FN:55,log
+FN:64,(anonymous_2)
+FN:67,(anonymous_3)
+FN:70,(anonymous_4)
+FN:73,(anonymous_5)
+FNF:6
+FNH:0
+FNDA:0,formatError
+FNDA:0,log
+FNDA:0,(anonymous_2)
+FNDA:0,(anonymous_3)
+FNDA:0,(anonymous_4)
+FNDA:0,(anonymous_5)
+DA:1,0
+DA:2,0
+DA:4,0
+DA:6,0
+DA:21,0
+DA:22,0
+DA:43,0
+DA:44,0
+DA:50,0
+DA:56,0
+DA:57,0
+DA:58,0
+DA:60,0
+DA:63,0
+DA:65,0
+DA:68,0
+DA:71,0
+DA:74,0
+LF:18
+LH:0
+BRDA:21,0,0,0
+BRDA:43,1,0,0
+BRDA:57,2,0,0
+BRF:3
+BRH:0
+end_of_record
+TN:
+SF:src/server/types/events.ts
+FNF:0
+FNH:0
+DA:1,0
+LF:1
+LH:0
+BRF:0
+BRH:0
+end_of_record
+TN:
+SF:src/server/workers/player_worker.ts
+FN:19,(anonymous_0)
+FN:67,(anonymous_1)
+FN:74,(anonymous_2)
+FNF:3
+FNH:0
+FNDA:0,(anonymous_0)
+FNDA:0,(anonymous_1)
+FNDA:0,(anonymous_2)
+DA:1,0
+DA:2,0
+DA:11,0
+DA:12,0
+DA:14,0
+DA:15,0
+DA:16,0
+DA:17,0
+DA:19,0
+DA:20,0
+DA:21,0
+DA:23,0
+DA:24,0
+DA:28,0
+DA:32,0
+DA:36,0
+DA:37,0
+DA:41,0
+DA:46,0
+DA:51,0
+DA:55,0
+DA:60,0
+DA:67,0
+DA:68,0
+DA:74,0
+DA:75,0
+DA:81,0
+LF:27
+LH:0
+BRDA:14,0,0,0
+BRDA:19,1,0,0
+BRDA:19,1,1,0
+BRDA:19,2,0,0
+BRDA:19,2,1,0
+BRDA:21,3,0,0
+BRDA:21,3,1,0
+BRDA:21,3,2,0
+BRDA:21,3,3,0
+BRDA:26,4,0,0
+BRDA:26,4,1,0
+BRDA:28,5,0,0
+BRDA:28,5,1,0
+BRDA:28,6,0,0
+BRDA:28,6,1,0
+BRDA:37,7,0,0
+BRDA:37,7,1,0
+BRDA:37,8,0,0
+BRDA:37,8,1,0
+BRDA:58,9,0,0
+BRDA:58,9,1,0
+BRDA:60,10,0,0
+BRDA:60,10,1,0
+BRDA:60,11,0,0
+BRDA:60,11,1,0
+BRDA:62,12,0,0
+BRDA:62,12,1,0
+BRDA:68,13,0,0
+BRDA:68,13,1,0
+BRDA:68,14,0,0
+BRDA:68,14,1,0
+BRDA:75,15,0,0
+BRDA:75,15,1,0
+BRDA:75,16,0,0
+BRDA:75,16,1,0
+BRF:35
+BRH:0
+end_of_record
diff --git a/coverage/prettify.css b/coverage/prettify.css
new file mode 100644
index 0000000..b317a7c
--- /dev/null
+++ b/coverage/prettify.css
@@ -0,0 +1 @@
+.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun,.opn,.clo{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}
diff --git a/coverage/prettify.js b/coverage/prettify.js
new file mode 100644
index 0000000..b322523
--- /dev/null
+++ b/coverage/prettify.js
@@ -0,0 +1,2 @@
+/* eslint-disable */
+window.PR_SHOULD_USE_CONTINUATION=true;(function(){var h=["break,continue,do,else,for,if,return,while"];var u=[h,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];var p=[u,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"];var l=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];var x=[p,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];var R=[x,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];var r="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes";var w=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"];var s="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END";var I=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];var f=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];var H=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"];var A=[l,R,w,s+I,f,H];var e=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;var C="str";var z="kwd";var j="com";var O="typ";var G="lit";var L="pun";var F="pln";var m="tag";var E="dec";var J="src";var P="atn";var n="atv";var N="nocode";var M="(?:^^\\.?|[+-]|\\!|\\!=|\\!==|\\#|\\%|\\%=|&|&&|&&=|&=|\\(|\\*|\\*=|\\+=|\\,|\\-=|\\->|\\/|\\/=|:|::|\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\@|\\[|\\^|\\^=|\\^\\^|\\^\\^=|\\{|\\||\\|=|\\|\\||\\|\\|=|\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*";function k(Z){var ad=0;var S=false;var ac=false;for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.ignoreCase){ac=true}else{if(/[a-z]/i.test(ae.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){S=true;ac=false;break}}}var Y={b:8,t:9,n:10,v:11,f:12,r:13};function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if("0"<=af&&af<="7"){return parseInt(ah.substring(1),8)}else{if(af==="u"||af==="x"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}}function T(af){if(af<32){return(af<16?"\\x0":"\\x")+af.toString(16)}var ag=String.fromCharCode(af);if(ag==="\\"||ag==="-"||ag==="["||ag==="]"){ag="\\"+ag}return ag}function X(am){var aq=am.substring(1,am.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));var ak=[];var af=[];var ao=aq[0]==="^";for(var ar=ao?1:0,aj=aq.length;ar<aj;++ar){var ah=aq[ar];if(/\\[bdsw]/i.test(ah)){ak.push(ah)}else{var ag=ab(ah);var al;if(ar+2<aj&&"-"===aq[ar+1]){al=ab(aq[ar+2]);ar+=2}else{al=ag}af.push([ag,al]);if(!(al<65||ag>122)){if(!(al<65||ag>90)){af.push([Math.max(65,ag)|32,Math.min(al,90)|32])}if(!(al<97||ag>122)){af.push([Math.max(97,ag)&~32,Math.min(al,122)&~32])}}}}af.sort(function(av,au){return(av[0]-au[0])||(au[1]-av[1])});var ai=[];var ap=[NaN,NaN];for(var ar=0;ar<af.length;++ar){var at=af[ar];if(at[0]<=ap[1]+1){ap[1]=Math.max(ap[1],at[1])}else{ai.push(ap=at)}}var an=["["];if(ao){an.push("^")}an.push.apply(an,ak);for(var ar=0;ar<ai.length;++ar){var at=ai[ar];an.push(T(at[0]));if(at[1]>at[0]){if(at[1]+1>at[0]){an.push("-")}an.push(T(at[1]))}}an.push("]");return an.join("")}function W(al){var aj=al.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g"));var ah=aj.length;var an=[];for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}}}for(var ak=1;ak<an.length;++ak){if(-1===an[ak]){an[ak]=++ad}}for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am;if(an[am]===undefined){aj[ak]="(?:"}}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]="\\"+an[am]}}}}for(var ak=0,am=0;ak<ah;++ak){if("^"===aj[ak]&&"^"!==aj[ak+1]){aj[ak]=""}}if(al.ignoreCase&&S){for(var ak=0;ak<ah;++ak){var ag=aj[ak];var ai=ag.charAt(0);if(ag.length>=2&&ai==="["){aj[ak]=X(ag)}else{if(ai!=="\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return"["+String.fromCharCode(ap&~32,ap|32)+"]"})}}}}return aj.join("")}var aa=[];for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.global||ae.multiline){throw new Error(""+ae)}aa.push("(?:"+W(ae)+")")}return new RegExp(aa.join("|"),ac?"gi":"g")}function a(V){var U=/(?:^|\s)nocode(?:\s|$)/;var X=[];var T=0;var Z=[];var W=0;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Y=S&&"pre"===S.substring(0,3);function aa(ab){switch(ab.nodeType){case 1:if(U.test(ab.className)){return}for(var ae=ab.firstChild;ae;ae=ae.nextSibling){aa(ae)}var ad=ab.nodeName;if("BR"===ad||"LI"===ad){X[W]="\n";Z[W<<1]=T++;Z[(W++<<1)|1]=ab}break;case 3:case 4:var ac=ab.nodeValue;if(ac.length){if(!Y){ac=ac.replace(/[ \t\r\n]+/g," ")}else{ac=ac.replace(/\r\n?/g,"\n")}X[W]=ac;Z[W<<1]=T;T+=ac.length;Z[(W++<<1)|1]=ab}break}}aa(V);return{sourceCode:X.join("").replace(/\n$/,""),spans:Z}}function B(S,U,W,T){if(!U){return}var V={sourceCode:U,basePos:S};W(V);T.push.apply(T,V.decorations)}var v=/\S/;function o(S){var V=undefined;for(var U=S.firstChild;U;U=U.nextSibling){var T=U.nodeType;V=(T===1)?(V?S:U):(T===3)?(v.test(U.nodeValue)?S:V):V}return V===S?undefined:V}function g(U,T){var S={};var V;(function(){var ad=U.concat(T);var ah=[];var ag={};for(var ab=0,Z=ad.length;ab<Z;++ab){var Y=ad[ab];var ac=Y[3];if(ac){for(var ae=ac.length;--ae>=0;){S[ac.charAt(ae)]=Y}}var af=Y[1];var aa=""+af;if(!ag.hasOwnProperty(aa)){ah.push(af);ag[aa]=null}}ah.push(/[\0-\uffff]/);V=k(ah)})();var X=T.length;var W=function(ah){var Z=ah.sourceCode,Y=ah.basePos;var ad=[Y,F];var af=0;var an=Z.match(V)||[];var aj={};for(var ae=0,aq=an.length;ae<aq;++ae){var ag=an[ae];var ap=aj[ag];var ai=void 0;var am;if(typeof ap==="string"){am=false}else{var aa=S[ag.charAt(0)];if(aa){ai=ag.match(aa[1]);ap=aa[0]}else{for(var ao=0;ao<X;++ao){aa=T[ao];ai=ag.match(aa[1]);if(ai){ap=aa[0];break}}if(!ai){ap=F}}am=ap.length>=5&&"lang-"===ap.substring(0,5);if(am&&!(ai&&typeof ai[1]==="string")){am=false;ap=J}if(!am){aj[ag]=ap}}var ab=af;af+=ag.length;if(!am){ad.push(Y+ab,ap)}else{var al=ai[1];var ak=ag.indexOf(al);var ac=ak+al.length;if(ai[2]){ac=ag.length-ai[2].length;ak=ac-al.length}var ar=ap.substring(5);B(Y+ab,ag.substring(0,ak),W,ad);B(Y+ab+ak,al,q(ar,al),ad);B(Y+ab+ac,ag.substring(ac),W,ad)}}ah.decorations=ad};return W}function i(T){var W=[],S=[];if(T.tripleQuotedStrings){W.push([C,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""])}else{if(T.multiLineStrings){W.push([C,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"])}else{W.push([C,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"])}}if(T.verbatimStrings){S.push([C,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null])}var Y=T.hashComments;if(Y){if(T.cStyleComments){if(Y>1){W.push([j,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"])}else{W.push([j,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"])}S.push([C,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,null])}else{W.push([j,/^#[^\r\n]*/,null,"#"])}}if(T.cStyleComments){S.push([j,/^\/\/[^\r\n]*/,null]);S.push([j,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(T.regexLiterals){var X=("/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/");S.push(["lang-regex",new RegExp("^"+M+"("+X+")")])}var V=T.types;if(V){S.push([O,V])}var U=(""+T.keywords).replace(/^ | $/g,"");if(U.length){S.push([z,new RegExp("^(?:"+U.replace(/[\s,]+/g,"|")+")\\b"),null])}W.push([F,/^\s+/,null," \r\n\t\xA0"]);S.push([G,/^@[a-z_$][a-z_$@0-9]*/i,null],[O,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[F,/^[a-z_$][a-z_$@0-9]*/i,null],[G,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[F,/^\\[\s\S]?/,null],[L,/^.[^\s\w\.$@\'\"\`\/\#\\]*/,null]);return g(W,S)}var K=i({keywords:A,hashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true});function Q(V,ag){var U=/(?:^|\s)nocode(?:\s|$)/;var ab=/\r\n?|\n/;var ac=V.ownerDocument;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Z=S&&"pre"===S.substring(0,3);var af=ac.createElement("LI");while(V.firstChild){af.appendChild(V.firstChild)}var W=[af];function ae(al){switch(al.nodeType){case 1:if(U.test(al.className)){break}if("BR"===al.nodeName){ad(al);if(al.parentNode){al.parentNode.removeChild(al)}}else{for(var an=al.firstChild;an;an=an.nextSibling){ae(an)}}break;case 3:case 4:if(Z){var am=al.nodeValue;var aj=am.match(ab);if(aj){var ai=am.substring(0,aj.index);al.nodeValue=ai;var ah=am.substring(aj.index+aj[0].length);if(ah){var ak=al.parentNode;ak.insertBefore(ac.createTextNode(ah),al.nextSibling)}ad(al);if(!ai){al.parentNode.removeChild(al)}}}break}}function ad(ak){while(!ak.nextSibling){ak=ak.parentNode;if(!ak){return}}function ai(al,ar){var aq=ar?al.cloneNode(false):al;var ao=al.parentNode;if(ao){var ap=ai(ao,1);var an=al.nextSibling;ap.appendChild(aq);for(var am=an;am;am=an){an=am.nextSibling;ap.appendChild(am)}}return aq}var ah=ai(ak.nextSibling,0);for(var aj;(aj=ah.parentNode)&&aj.nodeType===1;){ah=aj}W.push(ah)}for(var Y=0;Y<W.length;++Y){ae(W[Y])}if(ag===(ag|0)){W[0].setAttribute("value",ag)}var aa=ac.createElement("OL");aa.className="linenums";var X=Math.max(0,((ag-1))|0)||0;for(var Y=0,T=W.length;Y<T;++Y){af=W[Y];af.className="L"+((Y+X)%10);if(!af.firstChild){af.appendChild(ac.createTextNode("\xA0"))}aa.appendChild(af)}V.appendChild(aa)}function D(ac){var aj=/\bMSIE\b/.test(navigator.userAgent);var am=/\n/g;var al=ac.sourceCode;var an=al.length;var V=0;var aa=ac.spans;var T=aa.length;var ah=0;var X=ac.decorations;var Y=X.length;var Z=0;X[Y]=an;var ar,aq;for(aq=ar=0;aq<Y;){if(X[aq]!==X[aq+2]){X[ar++]=X[aq++];X[ar++]=X[aq++]}else{aq+=2}}Y=ar;for(aq=ar=0;aq<Y;){var at=X[aq];var ab=X[aq+1];var W=aq+2;while(W+2<=Y&&X[W+1]===ab){W+=2}X[ar++]=at;X[ar++]=ab;aq=W}Y=X.length=ar;var ae=null;while(ah<T){var af=aa[ah];var S=aa[ah+2]||an;var ag=X[Z];var ap=X[Z+2]||an;var W=Math.min(S,ap);var ak=aa[ah+1];var U;if(ak.nodeType!==1&&(U=al.substring(V,W))){if(aj){U=U.replace(am,"\r")}ak.nodeValue=U;var ai=ak.ownerDocument;var ao=ai.createElement("SPAN");ao.className=X[Z+1];var ad=ak.parentNode;ad.replaceChild(ao,ak);ao.appendChild(ak);if(V<S){aa[ah+1]=ak=ai.createTextNode(al.substring(W,S));ad.insertBefore(ak,ao.nextSibling)}}V=W;if(V>=S){ah+=2}if(V>=ap){Z+=2}}}var t={};function c(U,V){for(var S=V.length;--S>=0;){var T=V[S];if(!t.hasOwnProperty(T)){t[T]=U}else{if(window.console){console.warn("cannot override language handler %s",T)}}}}function q(T,S){if(!(T&&t.hasOwnProperty(T))){T=/^\s*</.test(S)?"default-markup":"default-code"}return t[T]}c(K,["default-code"]);c(g([],[[F,/^[^<?]+/],[E,/^<!\w[^>]*(?:>|$)/],[j,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[L,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);c(g([[F,/^[\s]+/,null," \t\r\n"],[n,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[m,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[P,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[L,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);c(g([],[[n,/^[\s\S]+/]]),["uq.val"]);c(i({keywords:l,hashComments:true,cStyleComments:true,types:e}),["c","cc","cpp","cxx","cyc","m"]);c(i({keywords:"null,true,false"}),["json"]);c(i({keywords:R,hashComments:true,cStyleComments:true,verbatimStrings:true,types:e}),["cs"]);c(i({keywords:x,cStyleComments:true}),["java"]);c(i({keywords:H,hashComments:true,multiLineStrings:true}),["bsh","csh","sh"]);c(i({keywords:I,hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);c(i({keywords:s,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl","pl","pm"]);c(i({keywords:f,hashComments:true,multiLineStrings:true,regexLiterals:true}),["rb"]);c(i({keywords:w,cStyleComments:true,regexLiterals:true}),["js"]);c(i({keywords:r,hashComments:3,cStyleComments:true,multilineStrings:true,tripleQuotedStrings:true,regexLiterals:true}),["coffee"]);c(g([],[[C,/^[\s\S]+/]]),["regex"]);function d(V){var U=V.langExtension;try{var S=a(V.sourceNode);var T=S.sourceCode;V.sourceCode=T;V.spans=S.spans;V.basePos=0;q(U,T)(V);D(V)}catch(W){if("console" in window){console.log(W&&W.stack?W.stack:W)}}}function y(W,V,U){var S=document.createElement("PRE");S.innerHTML=W;if(U){Q(S,U)}var T={langExtension:V,numberLines:U,sourceNode:S};d(T);return S.innerHTML}function b(ad){function Y(af){return document.getElementsByTagName(af)}var ac=[Y("pre"),Y("code"),Y("xmp")];var T=[];for(var aa=0;aa<ac.length;++aa){for(var Z=0,V=ac[aa].length;Z<V;++Z){T.push(ac[aa][Z])}}ac=null;var W=Date;if(!W.now){W={now:function(){return +(new Date)}}}var X=0;var S;var ab=/\blang(?:uage)?-([\w.]+)(?!\S)/;var ae=/\bprettyprint\b/;function U(){var ag=(window.PR_SHOULD_USE_CONTINUATION?W.now()+250:Infinity);for(;X<T.length&&W.now()<ag;X++){var aj=T[X];var ai=aj.className;if(ai.indexOf("prettyprint")>=0){var ah=ai.match(ab);var am;if(!ah&&(am=o(aj))&&"CODE"===am.tagName){ah=am.className.match(ab)}if(ah){ah=ah[1]}var al=false;for(var ak=aj.parentNode;ak;ak=ak.parentNode){if((ak.tagName==="pre"||ak.tagName==="code"||ak.tagName==="xmp")&&ak.className&&ak.className.indexOf("prettyprint")>=0){al=true;break}}if(!al){var af=aj.className.match(/\blinenums\b(?::(\d+))?/);af=af?af[1]&&af[1].length?+af[1]:true:false;if(af){Q(aj,af)}S={langExtension:ah,sourceNode:aj,numberLines:af};d(S)}}}if(X<T.length){setTimeout(U,250)}else{if(ad){ad()}}}U()}window.prettyPrintOne=y;window.prettyPrint=b;window.PR={createSimpleLexer:g,registerLangHandler:c,sourceDecorator:i,PR_ATTRIB_NAME:P,PR_ATTRIB_VALUE:n,PR_COMMENT:j,PR_DECLARATION:E,PR_KEYWORD:z,PR_LITERAL:G,PR_NOCODE:N,PR_PLAIN:F,PR_PUNCTUATION:L,PR_SOURCE:J,PR_STRING:C,PR_TAG:m,PR_TYPE:O}})();PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_DECLARATION,/^<!\w[^>]*(?:>|$)/],[PR.PR_COMMENT,/^<\!--[\s\S]*?(?:-\->|$)/],[PR.PR_PUNCTUATION,/^(?:<[%?]|[%?]>)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-handlebars",/^<script\b[^>]*type\s*=\s*['"]?text\/x-handlebars-template['"]?\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i],[PR.PR_DECLARATION,/^{{[#^>/]?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{&?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{{>?\s*[\w.][^}]*}}}/],[PR.PR_COMMENT,/^{{![^}]*}}/]]),["handlebars","hbs"]);PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN,/^[ \t\r\n\f]+/,null," \t\r\n\f"]],[[PR.PR_STRING,/^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/,null],[PR.PR_STRING,/^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/,null],["lang-css-str",/^url\(([^\)\"\']*)\)/i],[PR.PR_KEYWORD,/^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i],[PR.PR_COMMENT,/^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//],[PR.PR_COMMENT,/^(?:<!--|-->)/],[PR.PR_LITERAL,/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],[PR.PR_LITERAL,/^#(?:[0-9a-f]{3}){1,2}/i],[PR.PR_PLAIN,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i],[PR.PR_PUNCTUATION,/^[^\s\w\'\"]+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_KEYWORD,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_STRING,/^[^\)\"\']+/]]),["css-str"]);
diff --git a/coverage/sorter.js b/coverage/sorter.js
new file mode 100644
index 0000000..2bb296a
--- /dev/null
+++ b/coverage/sorter.js
@@ -0,0 +1,196 @@
+/* eslint-disable */
+var addSorting = (function() {
+    'use strict';
+    var cols,
+        currentSort = {
+            index: 0,
+            desc: false
+        };
+
+    // returns the summary table element
+    function getTable() {
+        return document.querySelector('.coverage-summary');
+    }
+    // returns the thead element of the summary table
+    function getTableHeader() {
+        return getTable().querySelector('thead tr');
+    }
+    // returns the tbody element of the summary table
+    function getTableBody() {
+        return getTable().querySelector('tbody');
+    }
+    // returns the th element for nth column
+    function getNthColumn(n) {
+        return getTableHeader().querySelectorAll('th')[n];
+    }
+
+    function onFilterInput() {
+        const searchValue = document.getElementById('fileSearch').value;
+        const rows = document.getElementsByTagName('tbody')[0].children;
+        for (let i = 0; i < rows.length; i++) {
+            const row = rows[i];
+            if (
+                row.textContent
+                    .toLowerCase()
+                    .includes(searchValue.toLowerCase())
+            ) {
+                row.style.display = '';
+            } else {
+                row.style.display = 'none';
+            }
+        }
+    }
+
+    // loads the search box
+    function addSearchBox() {
+        var template = document.getElementById('filterTemplate');
+        var templateClone = template.content.cloneNode(true);
+        templateClone.getElementById('fileSearch').oninput = onFilterInput;
+        template.parentElement.appendChild(templateClone);
+    }
+
+    // loads all columns
+    function loadColumns() {
+        var colNodes = getTableHeader().querySelectorAll('th'),
+            colNode,
+            cols = [],
+            col,
+            i;
+
+        for (i = 0; i < colNodes.length; i += 1) {
+            colNode = colNodes[i];
+            col = {
+                key: colNode.getAttribute('data-col'),
+                sortable: !colNode.getAttribute('data-nosort'),
+                type: colNode.getAttribute('data-type') || 'string'
+            };
+            cols.push(col);
+            if (col.sortable) {
+                col.defaultDescSort = col.type === 'number';
+                colNode.innerHTML =
+                    colNode.innerHTML + '<span class="sorter"></span>';
+            }
+        }
+        return cols;
+    }
+    // attaches a data attribute to every tr element with an object
+    // of data values keyed by column name
+    function loadRowData(tableRow) {
+        var tableCols = tableRow.querySelectorAll('td'),
+            colNode,
+            col,
+            data = {},
+            i,
+            val;
+        for (i = 0; i < tableCols.length; i += 1) {
+            colNode = tableCols[i];
+            col = cols[i];
+            val = colNode.getAttribute('data-value');
+            if (col.type === 'number') {
+                val = Number(val);
+            }
+            data[col.key] = val;
+        }
+        return data;
+    }
+    // loads all row data
+    function loadData() {
+        var rows = getTableBody().querySelectorAll('tr'),
+            i;
+
+        for (i = 0; i < rows.length; i += 1) {
+            rows[i].data = loadRowData(rows[i]);
+        }
+    }
+    // sorts the table using the data for the ith column
+    function sortByIndex(index, desc) {
+        var key = cols[index].key,
+            sorter = function(a, b) {
+                a = a.data[key];
+                b = b.data[key];
+                return a < b ? -1 : a > b ? 1 : 0;
+            },
+            finalSorter = sorter,
+            tableBody = document.querySelector('.coverage-summary tbody'),
+            rowNodes = tableBody.querySelectorAll('tr'),
+            rows = [],
+            i;
+
+        if (desc) {
+            finalSorter = function(a, b) {
+                return -1 * sorter(a, b);
+            };
+        }
+
+        for (i = 0; i < rowNodes.length; i += 1) {
+            rows.push(rowNodes[i]);
+            tableBody.removeChild(rowNodes[i]);
+        }
+
+        rows.sort(finalSorter);
+
+        for (i = 0; i < rows.length; i += 1) {
+            tableBody.appendChild(rows[i]);
+        }
+    }
+    // removes sort indicators for current column being sorted
+    function removeSortIndicators() {
+        var col = getNthColumn(currentSort.index),
+            cls = col.className;
+
+        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');
+        col.className = cls;
+    }
+    // adds sort indicators for current column being sorted
+    function addSortIndicators() {
+        getNthColumn(currentSort.index).className += currentSort.desc
+            ? ' sorted-desc'
+            : ' sorted';
+    }
+    // adds event listeners for all sorter widgets
+    function enableUI() {
+        var i,
+            el,
+            ithSorter = function ithSorter(i) {
+                var col = cols[i];
+
+                return function() {
+                    var desc = col.defaultDescSort;
+
+                    if (currentSort.index === i) {
+                        desc = !currentSort.desc;
+                    }
+                    sortByIndex(i, desc);
+                    removeSortIndicators();
+                    currentSort.index = i;
+                    currentSort.desc = desc;
+                    addSortIndicators();
+                };
+            };
+        for (i = 0; i < cols.length; i += 1) {
+            if (cols[i].sortable) {
+                // add the click event handler on the th so users
+                // dont have to click on those tiny arrows
+                el = getNthColumn(i).querySelector('.sorter').parentElement;
+                if (el.addEventListener) {
+                    el.addEventListener('click', ithSorter(i));
+                } else {
+                    el.attachEvent('onclick', ithSorter(i));
+                }
+            }
+        }
+    }
+    // adds sorting functionality to the UI
+    return function() {
+        if (!getTable()) {
+            return;
+        }
+        cols = loadColumns();
+        loadData();
+        addSearchBox();
+        addSortIndicators();
+        enableUI();
+    };
+})();
+
+window.addEventListener('load', addSorting);
diff --git a/coverage/src/cli/index.html b/coverage/src/cli/index.html
new file mode 100644
index 0000000..ea2cedf
--- /dev/null
+++ b/coverage/src/cli/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/cli</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/cli</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/527</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/165</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/507</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="livelink.ts"><a href="livelink.ts.html">livelink.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="527" class="abs low">0/527</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="165" class="abs low">0/165</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="507" class="abs low">0/507</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/cli/livelink.ts.html b/coverage/src/cli/livelink.ts.html
new file mode 100644
index 0000000..906fe13
--- /dev/null
+++ b/coverage/src/cli/livelink.ts.html
@@ -0,0 +1,3454 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/cli/livelink.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/cli</a> livelink.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/527</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/165</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/507</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">#!/usr/bin/env node
+<span class="cstat-no" title="statement not covered" >import { program } from 'commander';</span>
+<span class="cstat-no" title="statement not covered" >import fetch, { Response } from 'node-fetch';</span>
+<span class="cstat-no" title="statement not covered" >import chalk from 'chalk';</span>
+import type { Stream, StreamSource } from '../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../server/services/logger.js';</span>
+&nbsp;
+const API_URL = <span class="cstat-no" title="statement not covered" >'http://localhost:3001/api';</span>
+&nbsp;
+function <span class="fstat-no" title="function not covered" >getTimestamp(</span>): string {
+  const now = <span class="cstat-no" title="statement not covered" >new Date();</span>
+<span class="cstat-no" title="statement not covered" >  return now.toLocaleTimeString();</span>
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >formatUptime(</span>startTime: number | string): string {
+  const start = <span class="cstat-no" title="statement not covered" >typeof startTime === 'string' ? new Date(startTime).getTime() : startTime;</span>
+  const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+  const diff = <span class="cstat-no" title="statement not covered" >Math.floor((now - start) / 1000);</span>
+  
+  const hours = <span class="cstat-no" title="statement not covered" >Math.floor(diff / 3600);</span>
+  const minutes = <span class="cstat-no" title="statement not covered" >Math.floor((diff % 3600) / 60);</span>
+  const seconds = <span class="cstat-no" title="statement not covered" >diff % 60;</span>
+  
+<span class="cstat-no" title="statement not covered" >  if (hours &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    return `${hours}h ${minutes}m ${seconds}s`;</span>
+  } else <span class="cstat-no" title="statement not covered" >if (minutes &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    return `${minutes}m ${seconds}s`;</span>
+  } else {
+<span class="cstat-no" title="statement not covered" >    return `${seconds}s`;</span>
+  }
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleResponse&lt;</span>T&gt;(response: Response): Promise&lt;T&gt; {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+    const errorText = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >    throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);</span>
+  }
+  const data = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >  return data as T;</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .name('livelink')
+  .version('0.2.0')
+  .description('LiveLink CLI - Control and manage LiveLink streams')
+  .option('-d, --debug', 'Enable debug output');
+&nbsp;
+// Create command categories for better organization
+const streamCommands = <span class="cstat-no" title="statement not covered" >program.command('stream').description('Stream management commands');</span>
+const queueCommands = <span class="cstat-no" title="statement not covered" >program.command('queue').description('Queue management commands');</span>
+const playerCommands = <span class="cstat-no" title="statement not covered" >program.command('player').description('Player control commands');</span>
+const screenCommands = <span class="cstat-no" title="statement not covered" >program.command('screen').description('Screen management commands');</span>
+const serverCommands = <span class="cstat-no" title="statement not covered" >program.command('server').description('Server control commands');</span>
+&nbsp;
+// Stream Management Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('list')
+  .description('List all active streams')
+  .action(handleStreamList);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('start')
+  .description('Start a new stream')
+  .requiredOption('-u, --url &lt;url&gt;', 'Stream URL')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .option('-v, --volume &lt;number&gt;', 'Volume level (0-100)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));</span>
+      
+      // First check if URL is already playing on any screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.url === options.url)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));</span>
+        const proceed = <span class="cstat-no" title="statement not covered" >process.argv.includes('--force');</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!proceed) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Use --force to start anyway.'));</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+      }
+&nbsp;
+      const requestBody: {
+        url: string;
+        quality: string;
+        screen: number;
+        volume?: number;
+      } = <span class="cstat-no" title="statement not covered" >{</span>
+        url: options.url,
+        quality: options.quality,
+        screen: parseInt(options.screen)
+      };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (options.volume) {</span>
+<span class="cstat-no" title="statement not covered" >        requestBody.volume = parseInt(options.volume);</span>
+      }
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify(requestBody)
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream started:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('stop')
+  .description('Stop a stream')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Stopping stream on screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/${screen}`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream stopped:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('restart')
+  .description('Restart streams')
+  .option('-s, --screen &lt;number&gt;', 'Screen number (optional, restarts all screens if not specified)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      if (options.screen) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue(`Restarting stream on screen ${options.screen}...`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue('Restarting all streams...'));</span>
+      }
+      
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/restart`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify(options.screen ? { screen: parseInt(options.screen) } : {})
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Streams restarted:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// New stream refresh commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('refresh')
+  .description('Force refresh streams data')
+  .argument('[screen]', 'Screen number (optional, refreshes all screens if not specified)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      if (screen) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue(`Forcing refresh for screen ${screen}...`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.blue('Forcing refresh for all screens...'));</span>
+      }
+      
+      const endpoint = <span class="cstat-no" title="statement not covered" >screen ? `${API_URL}/streams/refresh/${screen}` : `${API_URL}/streams/refresh`;</span>
+      
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(endpoint, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Streams refreshed:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Stream Category Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('vtubers')
+  .description('List VTuber streams')
+  .option('-l, --limit &lt;number&gt;', 'Number of streams to fetch', '20')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching VTuber streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/vtubers?limit=${options.limit}`);</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;Stream[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No VTuber streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nFound ${streams.length} VTuber Streams:`));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('japanese')
+  .description('List Japanese streams')
+  .option('-l, --limit &lt;number&gt;', 'Number of streams to fetch', '20')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching Japanese streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/japanese?limit=${options.limit}`);</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;Stream[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No Japanese streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nFound ${streams.length} Japanese Streams:`));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Screen Management Commands
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('enable')
+  .description('Enable a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Enabling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/enable`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Screen enabled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('disable')
+  .description('Disable a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Disabling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/disable`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Screen disabled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('info')
+  .description('Get current screen information')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Fetching information for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}`);</span>
+      const screenInfo = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nScreen ${screen} Information:`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(JSON.stringify(screenInfo, null, 2));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('list')
+  .description('List all screens and their status')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching all screens information...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens`);</span>
+      const screens = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('\nScreens Information:'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(JSON.stringify(screens, null, 2));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('toggle')
+  .description('Toggle screen enabled/disabled state')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Toggling screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/toggle`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;{ success: boolean; enabled: boolean }&gt;(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`Screen ${screen} ${result.enabled ? 'enabled' : 'disabled'}`));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >screenCommands</span>
+  .command('new-player')
+  .description('Start a new player instance for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Opening new player...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}/new-player`, {</span>
+        method: 'POST'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;{ success: boolean }&gt;(response);</span>
+<span class="cstat-no" title="statement not covered" >      if (result.success) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green('New player started successfully'));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('Failed to start new player'));</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Queue Management Commands
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('show')
+  .description('Show queue for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen: string) =&gt; <span class="cstat-no" title="statement not covered" >handleQueueShow(parseInt(screen, 10)))</span>;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('reorder')
+  .description('Reorder queue items')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;fromIndex&gt;', 'Source index (0-based)')
+  .argument('&lt;toIndex&gt;', 'Target index (0-based)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen, fromIndex, toIndex) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Reordering queue for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/reorder`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          screen: parseInt(screen),
+          sourceIndex: parseInt(fromIndex),
+          targetIndex: parseInt(toIndex)
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue reordered:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >queueCommands</span>
+  .command('clear')
+  .description('Clear queue for a screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Clearing queue for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue cleared:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Watched Streams Commands
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('watched')
+  .description('Show watched streams')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Fetching watched streams...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`);</span>
+      const watched = <span class="cstat-no" title="statement not covered" >await handleResponse&lt;string[]&gt;(response);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (watched.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No watched streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nWatched Streams (${watched.length} total):`));</span>
+<span class="cstat-no" title="statement not covered" >      watched.forEach(<span class="fstat-no" title="function not covered" >(u</span>rl, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`${index + 1}. ${url}`));</span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('clear-watched')
+  .description('Clear watched streams history')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Clearing watched streams history...'));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`, {</span>
+        method: 'DELETE'
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Watched streams cleared:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('mark-watched')
+  .description('Mark a stream as watched')
+  .argument('&lt;url&gt;', 'Stream URL')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(url) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Marking stream as watched: ${url}`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/watched`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ url })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream marked as watched:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Player Control Commands
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('set-priority')
+  .description('Set player priority')
+  .argument('&lt;level&gt;', 'Priority level (realtime, high, above_normal, normal, below_normal, low, idle)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(level) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const validLevels = <span class="cstat-no" title="statement not covered" >['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!validLevels.includes(level)) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error: Invalid priority level. Valid values are:'), validLevels.join(', '));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Setting player priority to ${level}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/priority`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ priority: level })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Priority set:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('command')
+  .description('Send command to MPV player instance(s)')
+  .argument('&lt;command&gt;', 'MPV command to send (e.g. "set pause yes")')
+  .option('-s, --screen &lt;number&gt;', 'Send to specific screen')
+  .option('-a, --all', 'Send to all screens')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(command, options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!options.screen &amp;&amp; !options.all) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error:'), 'Must specify either --screen or --all');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      const target = <span class="cstat-no" title="statement not covered" >options.all ? 'all screens' : `screen ${options.screen}`;</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Sending command to ${target}: ${command}`));</span>
+&nbsp;
+      const endpoint = <span class="cstat-no" title="statement not covered" >options.all ? </span>
+        `${API_URL}/player/command/all` :
+        `${API_URL}/player/command/${options.screen}`;
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(endpoint, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command })
+      });
+      
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Command sent:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('pause')
+  .description('Toggle pause')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Toggling pause for screen ${screen}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/command/${screen}`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command: 'cycle pause' })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Pause toggled:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >playerCommands</span>
+  .command('volume')
+  .description('Set volume (0-100)')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;level&gt;', 'Volume level (0-100)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen, level) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const volumeLevel = <span class="cstat-no" title="statement not covered" >parseInt(level);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(volumeLevel) || volumeLevel &lt; 0 || volumeLevel &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.red('Error:'), 'Volume level must be between 0 and 100');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Setting volume for screen ${screen} to ${volumeLevel}...`));</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/player/command/${screen}`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({ command: `set volume ${volumeLevel}` })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Volume set:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Server Control Commands
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('start')
+  .description('Start only the LiveLink server (no frontend)')
+  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(players: string[]) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Convert arguments to numbers
+      const screenPlayers = <span class="cstat-no" title="statement not covered" >players.map(Number);</span>
+      
+      // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >        screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+        });
+      }
+&nbsp;
+      // Import and start the server
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >      await import('</span>../server/api.js');</span></span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('LiveLink server started'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('stop')
+  .description('Stop the LiveLink server')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping LiveLink server...'));</span>
+      
+      // Create AbortController for timeout
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 5000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/stop', {</span>
+          method: 'POST',
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('Server shutdown initiated successfully'));</span>
+          // Wait a moment for cleanup to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        } else {
+          const error = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(1);</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >          if (error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Server shutdown timed out'));</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Failed to stop server:'), error.message);</span>
+          }
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop server:'), String(error));</span>
+        }
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop server:'), error instanceof Error ? error.message : String(error));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('stop-all')
+  .description('Stop all players and the LiveLink server')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping all players and the LiveLink server...'));</span>
+      
+      // Create AbortController for timeout (longer timeout since we're stopping all players first)
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 10000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/stop-all', {</span>
+          method: 'POST',
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('All players and server shutdown initiated successfully'));</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Waiting for processes to terminate...'));</span>
+          // Wait a moment for cleanup to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 3000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        } else {
+          const error = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop players and server:'), error);</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(1);</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >          if (error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Stop-all command timed out'));</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            console.error(chalk.red('Failed to stop players and server:'), error.message);</span>
+          }
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.error(chalk.red('Failed to stop players and server:'), String(error));</span>
+        }
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop players and server:'), error instanceof Error ? error.message : String(error));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >serverCommands</span>
+  .command('status')
+  .description('Get server status')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Checking server status...'));</span>
+      const controller = <span class="cstat-no" title="statement not covered" >new AbortController();</span>
+      const timeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >controller.abort(),</span> 2000);</span>
+      
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const response = <span class="cstat-no" title="statement not covered" >await fetch('http://localhost:3001/api/server/status', {</span>
+          signal: controller.signal
+        });
+        
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (response.ok) {</span>
+          const status = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.green('Server is running'));</span>
+<span class="cstat-no" title="statement not covered" >          console.log(JSON.stringify(status, null, 2));</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not responding properly'));</span>
+        }
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        clearTimeout(timeout);</span>
+<span class="cstat-no" title="statement not covered" >        if (error instanceof Error &amp;&amp; error.name === 'AbortError') {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not responding (timeout)'));</span>
+        } else <span class="cstat-no" title="statement not covered" >if (error instanceof Error &amp;&amp; 'code' in error &amp;&amp; error.code === 'ECONNREFUSED') {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Server is not running'));</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.red('Failed to check server status:'), error instanceof Error ? error.message : String(error));</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Web Control Commands
+const webCommands = <span class="cstat-no" title="statement not covered" >program.command('web').description('Web frontend control commands');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >webCommands</span>
+  .command('start')
+  .description('Start only the web frontend')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Starting web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start web frontend:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >webCommands</span>
+  .command('stop')
+  .description('Stop the web frontend')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Stopping web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to stop web frontend:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+// Add start command at root level
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('start')
+  .description('Start both server and web frontend')
+  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(players: string[]) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Convert arguments to numbers
+      const screenPlayers = <span class="cstat-no" title="statement not covered" >players.map(Number);</span>
+      
+      // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >        screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+        });
+      }
+&nbsp;
+      // Start both server and frontend
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Starting LiveLink server and web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >      await import('</span>../server/api.js');</span></span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('LiveLink server started'));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Failed to start:'), error);</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(1);</span>
+    }
+  });
+&nbsp;
+// Add backwards compatibility for old command structure
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('list-streams')
+  .description('List all active streams (legacy command)')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Note: This command is deprecated. Use "stream list" instead.'));</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Fetching active streams', 'CLI');</span>
+      const streams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow('No active streams found.'));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('Active Streams:'));</span>
+<span class="cstat-no" title="statement not covered" >      streams.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`\nScreen ${stream.screen}:`));</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >        console.log(`Quality: ${stream.quality}`);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.title) <span class="cstat-no" title="statement not covered" >console.log(`Title: ${stream.title}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        console.log(`Status: ${stream.status || 'playing'}`);</span>
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('start-stream')
+  .description('Start a new stream (legacy command)')
+  .requiredOption('-u, --url &lt;url&gt;', 'Stream URL')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Note: This command is deprecated. Use "stream start" instead.'));</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));</span>
+      
+      // First check if URL is already playing on any screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.url === options.url)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));</span>
+        const proceed = <span class="cstat-no" title="statement not covered" >process.argv.includes('--force');</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!proceed) {</span>
+<span class="cstat-no" title="statement not covered" >          console.log(chalk.yellow('Use --force to start anyway.'));</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+      }
+&nbsp;
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          url: options.url,
+          quality: options.quality,
+          screen: parseInt(options.screen)
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream started:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+// Set debug mode if flag is present
+const options = <span class="cstat-no" title="statement not covered" >program.opts();</span>
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (options.debug) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.setLevel('debug');</span>
+<span class="cstat-no" title="statement not covered" >  logger.debug('Debug mode enabled', 'CLI');</span>
+}
+&nbsp;
+// Parse command line arguments
+<span class="cstat-no" title="statement not covered" >program.parse(process.argv);</span>
+&nbsp;
+// Start both server and frontend if no arguments provided (except for help)
+<span class="cstat-no" title="statement not covered" >if (process.argv.length &lt;= 2 &amp;&amp; !process.argv.includes('-h') &amp;&amp; !process.argv.includes('--help')) {</span>
+  // Get the number of players to start on each screen from arguments
+  const args = <span class="cstat-no" title="statement not covered" >process.argv.slice(2);</span>
+  const screenPlayers = <span class="cstat-no" title="statement not covered" >args.map(Number);</span>
+  
+  // Set environment variables for screen configuration
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (screenPlayers.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >    process.env.START_SCREENS = screenPlayers.length.toString();</span>
+<span class="cstat-no" title="statement not covered" >    screenPlayers.forEach(<span class="fstat-no" title="function not covered" >(n</span>umPlayers: number, index: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();</span>
+    });
+  }
+&nbsp;
+  // Start both server and frontend
+<span class="cstat-no" title="statement not covered" >  console.log(chalk.blue('Starting LiveLink server and web frontend...'));</span>
+<span class="cstat-no" title="statement not covered" ><span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >  import('</span>../server/api.js').t</span>hen(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.green('LiveLink server started'));</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Web frontend functionality is not yet implemented'));</span>
+  }).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.error(chalk.red('Failed to start:'), error);</span>
+<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
+  });
+} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (process.argv.length &lt;= 2) {</span>
+  // Show help if only -h or --help is provided
+<span class="cstat-no" title="statement not covered" >  program.help();</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >streamCommands</span>
+  .command('switch')
+  .description('Switch current stream to a new URL')
+  .requiredOption('-u, --url &lt;url&gt;', 'New stream URL')
+  .option('-s, --screen &lt;number&gt;', 'Screen number', '1')
+  .option('-q, --quality &lt;quality&gt;', 'Stream quality', 'best')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(options) =&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(options.screen);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`Switching stream on screen ${screen} to ${options.url}...`));</span>
+&nbsp;
+      // First get current stream to mark as watched
+      const activeStreams = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`)</span>
+        .then(<span class="fstat-no" title="function not covered" >res </span>=&gt; <span class="cstat-no" title="statement not covered" >handleResponse&lt;Stream[]&gt;(res))</span>;
+      
+      const currentStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (currentStream?.url) {</span>
+        // Mark current stream as watched
+<span class="cstat-no" title="statement not covered" >        await fetch(`${API_URL}/streams/watched`, {</span>
+          method: 'POST',
+          headers: { 'Content-Type': 'application/json' },
+          body: JSON.stringify({ url: currentStream.url })
+        });
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.gray(`Marked current stream as watched: ${currentStream.url}`));</span>
+      }
+&nbsp;
+      // Stop current stream
+<span class="cstat-no" title="statement not covered" >      await fetch(`${API_URL}/streams/${screen}`, {</span>
+        method: 'DELETE'
+      });
+&nbsp;
+      // Start new stream
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/url`, {</span>
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+        body: JSON.stringify({
+          url: options.url,
+          quality: options.quality,
+          screen
+        })
+      });
+      const result = <span class="cstat-no" title="statement not covered" >await handleResponse(response);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Stream switched successfully:'), result);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error);</span>
+    }
+  });
+&nbsp;
+interface ScreenInfo {
+  enabled: boolean;
+  queueProcessing?: boolean;
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleQueueShow(</span>screen: number) {
+<span class="cstat-no" title="statement not covered" >  console.log(chalk.blue(`Fetching queue for screen ${screen}...`));</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // First, get information about any active stream on this screen
+    const activeStreamsResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`);</span>
+    const activeStreams = <span class="cstat-no" title="statement not covered" >await activeStreamsResponse.json() as Stream[];</span>
+    const activeStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`\nActive stream on screen ${screen}:`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.bold(`Title: ${activeStream.title || 'No Title'}`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${activeStream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${activeStream.platform}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Status: ${activeStream.status}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.gray('----------------------------------------'));</span>
+    }
+    
+    // Next, trigger a queue refresh
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.yellow('Triggering queue refresh...'));</span>
+    const refreshResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}/refresh`, {</span>
+      method: 'POST'
+    });
+    
+<span class="cstat-no" title="statement not covered" >    if (!refreshResponse.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Warning: Could not refresh queue'));</span>
+    } else {
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue refresh successful'));</span>
+    }
+&nbsp;
+    // Now get the queue
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/queue/${screen}`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (response.status === 404) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow(`No queue found for screen ${screen}`));</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >await response.json() as StreamSource[];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!queue || queue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('Queue is empty'));</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Get screen info to show enabled/disabled status
+    const screenInfoResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/screens/${screen}`);</span>
+    const screenInfo = <span class="cstat-no" title="statement not covered" >screenInfoResponse.ok ? await screenInfoResponse.json() as ScreenInfo : null;</span>
+    
+    // Display screen status if available
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (screenInfo) {</span>
+      const screenStatus = <span class="cstat-no" title="statement not covered" >screenInfo.enabled ? chalk.green('Enabled') : chalk.red('Disabled');</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue(`\nScreen ${screen} Status: ${screenStatus}`));</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.blue(`\nQueue for Screen ${screen} (${queue.length} items):`));</span>
+<span class="cstat-no" title="statement not covered" >    console.log(chalk.gray('----------------------------------------'));</span>
+    
+<span class="cstat-no" title="statement not covered" >    queue.forEach(<span class="fstat-no" title="function not covered" >(s</span>tream: StreamSource, index: number) =&gt; {</span>
+      // Title with source type and priority indicator
+      const sourceType = <span class="cstat-no" title="statement not covered" >stream.subtype === 'favorites' ? chalk.magenta('[FAV]') :</span>
+                        stream.organization ? chalk.cyan(`[${stream.organization}]`) :
+                        '';
+      const priorityIndicator = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined ? </span>
+        chalk.gray(`(P${stream.priority})`) : '';
+      
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green(`\n${index + 1}. ${sourceType} ${priorityIndicator} ${stream.title || 'No Title'}`));</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${stream.platform || 'Unknown'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${stream.viewerCount.toLocaleString()}`);</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.organization) <span class="cstat-no" title="statement not covered" >console.log(`Organization: ${stream.organization}`);</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.sourceStatus) {</span>
+        const statusColor = <span class="cstat-no" title="statement not covered" >stream.sourceStatus === 'live' ? chalk.green :</span>
+                          stream.sourceStatus === 'upcoming' ? chalk.yellow :
+                          chalk.red;
+<span class="cstat-no" title="statement not covered" >        console.log(`Status: ${statusColor(stream.sourceStatus)}`);</span>
+      }
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.gray('----------------------------------------'));</span>
+    });
+&nbsp;
+    // Show queue processing status if available
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (screenInfo?.queueProcessing) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.yellow('\nQueue is currently being processed...'));</span>
+    }
+    
+    // If there's an active stream, show a note about what will happen next
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.blue('\nNote:'), 'When the current stream ends, the next stream in the queue will automatically start.');</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+  }
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >handleStreamList(</span>) {
+<span class="cstat-no" title="statement not covered" >  console.log(getTimestamp(), '[INFO] [CLI] Fetching active streams');</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/active`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`HTTP error! status: ${response.status}`);</span>
+    }
+&nbsp;
+    const streams = <span class="cstat-no" title="statement not covered" >await response.json() as Stream[];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streams || streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      console.log('No active streams');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    console.log('\nActive Streams:\n');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    for (const stream of streams) {</span>
+      // Get additional details for each stream
+      const detailsResponse = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/${stream.screen}/details`);</span>
+      const details = <span class="cstat-no" title="statement not covered" >detailsResponse.ok ? await detailsResponse.json() as Stream : null;</span>
+      
+<span class="cstat-no" title="statement not covered" >      console.log(`Screen ${stream.screen} ${stream.status === 'playing' ? '●' : '○'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Title: ${stream.title || details?.title || 'No Title'}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`URL: ${stream.url}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Platform: ${stream.platform}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Quality: ${stream.quality}`);</span>
+<span class="cstat-no" title="statement not covered" >      console.log(`Status: ${stream.status}`);</span>
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (details) {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (details.viewerCount) <span class="cstat-no" title="statement not covered" >console.log(`Viewers: ${details.viewerCount.toLocaleString()}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (details.organization) <span class="cstat-no" title="statement not covered" >console.log(`Organization: ${details.organization}`);</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.startTime) {</span>
+          const uptime = <span class="cstat-no" title="statement not covered" >formatUptime(stream.startTime);</span>
+<span class="cstat-no" title="statement not covered" >          console.log(`Uptime: ${uptime}`);</span>
+        }
+      }
+<span class="cstat-no" title="statement not covered" >      console.log('');</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error('Error:', error instanceof Error ? error.message : String(error));</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('force-start')
+  .description('Force start a stream on a specific screen')
+  .argument('&lt;screen&gt;', 'Screen number')
+  .argument('&lt;url&gt;', 'Stream URL to start')
+  .action(<span class="fstat-no" title="function not covered" >async </span>(screen: string, url: string) =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(getTimestamp(), `[INFO] [CLI] Forcing stream start on screen ${screen} with URL: ${url}`);</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/start`, {</span>
+        method: 'POST',
+        headers: {
+          'Content-Type': 'application/json'
+        },
+        body: JSON.stringify({
+          url,
+          screen: parseInt(screen, 10),
+          quality: 'best',
+          manual: true
+        })
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+      }
+&nbsp;
+      const result = <span class="cstat-no" title="statement not covered" >await response.json() as { success: boolean; error?: string };</span>
+<span class="cstat-no" title="statement not covered" >      if (result.success) {</span>
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.green(`Stream started successfully on screen ${screen}`));</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        console.log(chalk.yellow(`Failed to start stream: ${result.error || 'Unknown error'}`));</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+    }
+  });
+&nbsp;
+// Add command to force refresh queues
+<span class="cstat-no" title="statement not covered" >program</span>
+  .command('refresh')
+  .description('Force refresh all stream queues')
+  .action(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >    console.log(getTimestamp(), '[INFO] [CLI] Forcing queue refresh');</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const response = <span class="cstat-no" title="statement not covered" >await fetch(`${API_URL}/streams/refresh`, {</span>
+        method: 'POST'
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      console.log(chalk.green('Queue refresh triggered successfully'));</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));</span>
+    }
+  });</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/hooks.client.ts.html b/coverage/src/hooks.client.ts.html
new file mode 100644
index 0000000..90c0ecc
--- /dev/null
+++ b/coverage/src/hooks.client.ts.html
@@ -0,0 +1,376 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.client.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.client.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/38</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/25</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/37</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { HandleClientError } from '@sveltejs/kit';
+&nbsp;
+// Cache for API responses
+const apiCache = <span class="cstat-no" title="statement not covered" >new Map&lt;string, { data: any; timestamp: number }&gt;();</span>
+const CACHE_TTL = <span class="cstat-no" title="statement not covered" >30000;</span> // 30 seconds cache lifetime
+&nbsp;
+// Debounce timers for API requests
+const debounceTimers = <span class="cstat-no" title="statement not covered" >new Map&lt;string, NodeJS.Timeout&gt;();</span>
+const DEBOUNCE_TIME = <span class="cstat-no" title="statement not covered" >300;</span> // 300ms debounce time
+&nbsp;
+// Initialize client hooks
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >i</span>nit(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    version: '1.0.0'
+  };
+}
+&nbsp;
+// Handle client-side errors
+export const <span class="cstat-no" title="statement not covered" >handleError: HandleClientError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(</span>{</span> error, event }) =&gt; {</span>
+  const errorId = <span class="cstat-no" title="statement not covered" >crypto.randomUUID();</span>
+  
+  // Log the error with a unique ID
+<span class="cstat-no" title="statement not covered" >  console.error(`[${errorId}] Client error:`, error);</span>
+  
+  // Return a user-friendly error
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    message: 'An unexpected error occurred',
+    errorId
+  };
+};
+&nbsp;
+// Add these functions to the window object for use in components
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (typeof window !== 'undefined') {</span>
+  // Cached fetch function to reduce API calls
+<span class="cstat-no" title="statement not covered" >  window.cachedFetch = <span class="fstat-no" title="function not covered" >async </span>(url: string, options?: RequestInit) =&gt; {</span>
+    const cacheKey = <span class="cstat-no" title="statement not covered" >`${options?.method || 'GET'}:${url}`;</span>
+    
+    // Return cached data if it's still valid
+    const cached = <span class="cstat-no" title="statement not covered" >apiCache.get(cacheKey);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (cached &amp;&amp; Date.now() - cached.timestamp &lt; CACHE_TTL) {</span>
+<span class="cstat-no" title="statement not covered" >      return { ...cached.data, fromCache: true };</span>
+    }
+    
+    // Make the actual fetch request
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(url, options);</span>
+    
+    // Only cache successful GET requests
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (response.ok &amp;&amp; (!options?.method || options.method === 'GET')) {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const data = <span class="cstat-no" title="statement not covered" >await response.clone().json();</span>
+<span class="cstat-no" title="statement not covered" >        apiCache.set(cacheKey, { data, timestamp: Date.now() });</span>
+<span class="cstat-no" title="statement not covered" >        return data;</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        console.warn('Failed to cache response:', error);</span>
+<span class="cstat-no" title="statement not covered" >        return await response.json();</span>
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    return await response.json();</span>
+  };
+  
+  // Debounced fetch to prevent rapid API calls
+<span class="cstat-no" title="statement not covered" >  window.debouncedFetch = <span class="fstat-no" title="function not covered" >(u</span>rl: string, options?: RequestInit) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+      const cacheKey = <span class="cstat-no" title="statement not covered" >`${options?.method || 'GET'}:${url}`;</span>
+      
+      // Clear existing timer
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (debounceTimers.has(cacheKey)) {</span>
+<span class="cstat-no" title="statement not covered" >        clearTimeout(debounceTimers.get(cacheKey));</span>
+      }
+      
+      // Set new timer
+<span class="cstat-no" title="statement not covered" >      debounceTimers.set(</span>
+        cacheKey,
+        setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {
+<span class="cstat-no" title="statement not covered" >          try {</span>
+            const response = <span class="cstat-no" title="statement not covered" >await fetch(url, options);</span>
+            const data = <span class="cstat-no" title="statement not covered" >await response.json();</span>
+<span class="cstat-no" title="statement not covered" >            resolve(data);</span>
+          } catch (error) {
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } finally {
+<span class="cstat-no" title="statement not covered" >            debounceTimers.delete(cacheKey);</span>
+          }
+        }, DEBOUNCE_TIME)
+      );
+    });
+  };
+}
+&nbsp;
+// Add type definitions
+declare global {
+  interface Window {
+    cachedFetch: (url: string, options?: RequestInit) =&gt; Promise&lt;any&gt;;
+    debouncedFetch: (url: string, options?: RequestInit) =&gt; Promise&lt;any&gt;;
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/hooks.server.ts.html b/coverage/src/hooks.server.ts.html
new file mode 100644
index 0000000..fb409c1
--- /dev/null
+++ b/coverage/src/hooks.server.ts.html
@@ -0,0 +1,121 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.server.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.server.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { Handle } from '@sveltejs/kit';
+<span class="cstat-no" title="statement not covered" >import { locale } from '$lib/i18n/index.js';</span>
+import type { Locale } from '$lib/i18n/index.js';
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >handle: Handle = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >a</span>sync </span>({ event, resolve }) =&gt; {</span>
+  // Get locale from URL or default to 'en'
+  const lang = <span class="cstat-no" title="statement not covered" >event.url.pathname.split('/')[1];</span>
+  const validLocale = <span class="cstat-no" title="statement not covered" >(lang === 'en' || lang === 'ja') ? lang as Locale : 'en';</span>
+<span class="cstat-no" title="statement not covered" >  locale.set(validLocale);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  return resolve(event);</span>
+};
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/hooks.ts.html b/coverage/src/hooks.ts.html
new file mode 100644
index 0000000..b7b9c2f
--- /dev/null
+++ b/coverage/src/hooks.ts.html
@@ -0,0 +1,139 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/hooks.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> hooks.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { locale } from '$lib/i18n/index.js';</span>
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >prerender = true;</span>
+export const <span class="cstat-no" title="statement not covered" >trailingSlash = 'always';</span>
+&nbsp;
+// Initialize with default locale
+<span class="cstat-no" title="statement not covered" >locale.set('en');</span>
+&nbsp;
+// Add missing exports required by SvelteKit
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >r</span>eroute(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return null;</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >t</span>ransport(</span>) {
+  // This function is required by SvelteKit
+<span class="cstat-no" title="statement not covered" >  return null;</span>
+}
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/index.html b/coverage/src/index.html
new file mode 100644
index 0000000..0bf787d
--- /dev/null
+++ b/coverage/src/index.html
@@ -0,0 +1,146 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../prettify.css" />
+    <link rel="stylesheet" href="../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../index.html">All files</a> src</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/53</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/51</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="hooks.client.ts"><a href="hooks.client.ts.html">hooks.client.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="38" class="abs low">0/38</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="25" class="abs low">0/25</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="37" class="abs low">0/37</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="hooks.server.ts"><a href="hooks.server.ts.html">hooks.server.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="hooks.ts"><a href="hooks.ts.html">hooks.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../sorter.js"></script>
+        <script src="../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/api.ts.html b/coverage/src/lib/api.ts.html
new file mode 100644
index 0000000..f34e1d1
--- /dev/null
+++ b/coverage/src/lib/api.ts.html
@@ -0,0 +1,835 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/lib</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/61</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { Stream, StreamSource, PlayerSettings, ScreenConfig } from '../types/stream.js';
+&nbsp;
+<span class="fstat-no" title="function not covered" >class A</span>piClient {
+  private <span class="cstat-no" title="statement not covered" >baseUrl = '/api';</span>
+  private <span class="cstat-no" title="statement not covered" >useCaching = true;</span>
+&nbsp;
+  // Helper method to safely parse JSON
+  private <span class="fstat-no" title="function not covered" >async </span>safeJsonParse(response: Response): Promise&lt;any&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      return await response.json();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error('JSON parsing error:', error);</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('Invalid JSON response from server');</span>
+    }
+  }
+&nbsp;
+  // Helper method to make API requests with error handling and caching
+  private <span class="fstat-no" title="function not covered" >async </span>request&lt;T&gt;(
+    endpoint: string, 
+    options?: RequestInit, 
+    useCache: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >true</span>
+  ): Promise&lt;T&gt; {
+    const url = <span class="cstat-no" title="statement not covered" >`${this.baseUrl}${endpoint}`;</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      let response: Response;
+      
+      // For GET requests, use caching or debouncing if enabled
+<span class="cstat-no" title="statement not covered" >      if (options?.method === undefined || options?.method === 'GET') {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (this.useCaching &amp;&amp; typeof window !== 'undefined') {</span>
+          // Check if window.cachedFetch exists
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof (window as any).cachedFetch === 'function') {</span>
+<span class="cstat-no" title="statement not covered" >            return await (window as any).cachedFetch(url, options);</span>
+          }
+          // Check if window.debouncedFetch exists
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof (window as any).debouncedFetch === 'function') {</span>
+<span class="cstat-no" title="statement not covered" >            return await (window as any).debouncedFetch(url, options);</span>
+          }
+        }
+        
+        // Fall back to regular fetch if caching is disabled or the functions don't exist
+<span class="cstat-no" title="statement not covered" >        response = await fetch(url, options);</span>
+      } else {
+        // For non-GET requests, use regular fetch
+<span class="cstat-no" title="statement not covered" >        response = await fetch(url, options);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+        const errorText = <span class="cstat-no" title="statement not covered" >await response.text();</span>
+        let errorMessage = <span class="cstat-no" title="statement not covered" >`API error (${response.status}): `;</span>
+        
+<span class="cstat-no" title="statement not covered" >        try {</span>
+          // Try to parse error as JSON
+          const errorJson = <span class="cstat-no" title="statement not covered" >JSON.parse(errorText);</span>
+<span class="cstat-no" title="statement not covered" >          errorMessage += errorJson.error || errorJson.message || errorText;</span>
+        } catch {
+          // If not JSON, use text
+<span class="cstat-no" title="statement not covered" >          errorMessage += errorText || response.statusText;</span>
+        }
+        
+<span class="cstat-no" title="statement not covered" >        throw new Error(errorMessage);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      return await this.safeJsonParse(response);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      console.error(`API request failed for ${endpoint}:`, error);</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  // Stream Management
+<span class="fstat-no" title="function not covered" >  async </span>getActiveStreams(): Promise&lt;Stream[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;Stream[]&gt;('/streams/active');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>startStream(url: string, screen?: number, quality?: string): Promise&lt;any&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;any&gt;('/streams/start', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ url, screen, quality })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/${screen}`, {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>restartStream(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/restart', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ screen })
+    }, false);
+  }
+&nbsp;
+  // Queue Management
+<span class="fstat-no" title="function not covered" >  async </span>getQueue(screen: number): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;StreamSource[]&gt;(`/streams/queue/${screen}`);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>addToQueue(screen: number, stream: StreamSource): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/queue/${screen}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(stream)
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>removeFromQueue(screen: number, index: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/streams/queue/${screen}/${index}`, {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/reorder', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ screen, sourceIndex, targetIndex })
+    }, false);
+  }
+&nbsp;
+  // Player Controls
+<span class="fstat-no" title="function not covered" >  async </span>sendCommand(screen: number, command: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/command/${screen}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ command })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>sendCommandToAll(command: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/player/command/all', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ command })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setVolume(target: number | 'all', level: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/volume/${target}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ level })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>togglePause(target: number | 'all'): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/pause/${target}`, {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>seek(target: number | 'all', seconds: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/player/seek/${target}`, {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ seconds })
+    }, false);
+  }
+&nbsp;
+  // Settings
+<span class="fstat-no" title="function not covered" >  async </span>getPlayerSettings(): Promise&lt;PlayerSettings&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;PlayerSettings&gt;('/player/settings');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>updatePlayerSettings(settings: Partial&lt;PlayerSettings&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/player/settings', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(settings)
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getScreenConfigs(): Promise&lt;ScreenConfig[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;ScreenConfig[]&gt;('/screens');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>updateScreenConfig(screen: number, config: Partial&lt;ScreenConfig&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;(`/screens/${screen}`, {</span>
+      method: 'PUT',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(config)
+    }, false);
+  }
+&nbsp;
+  // Watched Streams
+<span class="fstat-no" title="function not covered" >  async </span>getWatchedStreams(): Promise&lt;string[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;string[]&gt;('/streams/watched');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>markStreamAsWatched(url: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/watched', {</span>
+      method: 'POST',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify({ url })
+    }, false);
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>clearWatchedStreams(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/watched', {</span>
+      method: 'DELETE'
+    }, false);
+  }
+&nbsp;
+  // Server Control
+<span class="fstat-no" title="function not covered" >  async </span>stopServer(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/server/stop', {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+  // Get all streams
+<span class="fstat-no" title="function not covered" >  async </span>getAllStreams(options: { organization?: string, limit?: number } = <span class="branch-0 cbranch-no" title="branch not covered" >{})</span>: Promise&lt;StreamSource[]&gt; {
+    const params = <span class="cstat-no" title="statement not covered" >new URLSearchParams();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (options.organization) <span class="cstat-no" title="statement not covered" >params.append('organization', options.organization);</span></span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (options.limit) <span class="cstat-no" title="statement not covered" >params.append('limit', options.limit.toString());</span></span>
+    
+    const queryString = <span class="cstat-no" title="statement not covered" >params.toString() ? `?${params.toString()}` : '';</span>
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;StreamSource[]&gt;(`/streams${queryString}`);</span>
+  }
+&nbsp;
+  // Get organizations
+<span class="fstat-no" title="function not covered" >  async </span>getOrganizations(): Promise&lt;string[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.request&lt;string[]&gt;('/organizations');</span>
+  }
+&nbsp;
+  // Auto-start streams
+<span class="fstat-no" title="function not covered" >  async </span>autoStartStreams(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.request&lt;void&gt;('/streams/autostart', {</span>
+      method: 'POST'
+    }, false);
+  }
+&nbsp;
+  // Enable/disable caching
+<span class="fstat-no" title="function not covered" >  setCaching(</span>enabled: boolean): void {
+<span class="cstat-no" title="statement not covered" >    this.useCaching = enabled;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getStreamStatus(screen: number) {
+    const response = <span class="cstat-no" title="statement not covered" >await fetch(`${this.baseUrl}/streams/${screen}/status`);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!response.ok) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('Failed to get stream status');</span>
+    }
+<span class="cstat-no" title="statement not covered" >    return response.json();</span>
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >api = new ApiClient(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/i18n/helpers.ts.html b/coverage/src/lib/i18n/helpers.ts.html
new file mode 100644
index 0000000..c3c67c9
--- /dev/null
+++ b/coverage/src/lib/i18n/helpers.ts.html
@@ -0,0 +1,130 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n/helpers.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/i18n</a> helpers.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { get } from 'svelte/store';</span>
+<span class="cstat-no" title="statement not covered" >import { locale, t, type Locale } from './index.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >u</span>seTranslation(</span>) {
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    t,
+    locale,
+    setLocale: <span class="fstat-no" title="function not covered" >(n</span>ewLocale: Locale) =&gt; <span class="cstat-no" title="statement not covered" >locale.set(newLocale),</span>
+    getLocale: <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >get(locale)</span>
+  };
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export function <span class="fstat-no" title="function not covered" >g</span>etLocaleFromPath(</span>path: string): Locale {
+  const lang = <span class="cstat-no" title="statement not covered" >path.split('/')[1];</span>
+<span class="cstat-no" title="statement not covered" >  return (lang === 'en' || lang === 'ja') ? lang as Locale : 'en';</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/i18n/index.html b/coverage/src/lib/i18n/index.html
new file mode 100644
index 0000000..68b6c8d
--- /dev/null
+++ b/coverage/src/lib/i18n/index.html
@@ -0,0 +1,131 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/lib/i18n</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="helpers.ts"><a href="helpers.ts.html">helpers.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/i18n/index.ts.html b/coverage/src/lib/i18n/index.ts.html
new file mode 100644
index 0000000..db9088a
--- /dev/null
+++ b/coverage/src/lib/i18n/index.ts.html
@@ -0,0 +1,235 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/i18n/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/i18n</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable, derived } from 'svelte/store';</span>
+&nbsp;
+export type Locale = 'en' | 'ja';
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >translations = {</span>
+  en: {
+    welcome: 'Welcome to LiveLink',
+    streams: 'Streams',
+    settings: 'Settings',
+    queue: 'Queue',
+    connectTwitch: 'Connect Twitch',
+    streamControl: {
+      play: 'Play',
+      pause: 'Pause',
+      stop: 'Stop',
+      volume: 'Volume',
+      quality: 'Quality'
+    },
+    errors: {
+      streamStart: 'Failed to start stream',
+      streamStop: 'Failed to stop stream',
+      connection: 'Connection error'
+    }
+  },
+  ja: {
+    welcome: 'LiveLinkへようこそ',
+    streams: 'ストリーム',
+    settings: '設定',
+    queue: 'キュー',
+    connectTwitch: 'Twitchと接続',
+    streamControl: {
+      play: '再生',
+      pause: '一時停止',
+      stop: '停止',
+      volume: '音量',
+      quality: '画質'
+    },
+    errors: {
+      streamStart: 'ストリームの開始に失敗しました',
+      streamStop: 'ストリームの停止に失敗しました',
+      connection: '接続エラー'
+    }
+  }
+} as const;
+&nbsp;
+export type Translation = typeof translations;
+export type TranslationKeys = keyof Translation['en'];
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >locale = writable&lt;Locale&gt;('en');</span>
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >t = derived(locale, <span class="fstat-no" title="function not covered" >($</span>locale) =&gt; <span class="cstat-no" title="statement not covered" >translations[$locale])</span>; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/index.html b/coverage/src/lib/index.html
new file mode 100644
index 0000000..16d0166
--- /dev/null
+++ b/coverage/src/lib/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/lib</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/29</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/61</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="29" class="abs low">0/29</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="61" class="abs low">0/61</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/stores/auth.ts.html b/coverage/src/lib/stores/auth.ts.html
new file mode 100644
index 0000000..ba3f3d1
--- /dev/null
+++ b/coverage/src/lib/stores/auth.ts.html
@@ -0,0 +1,121 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores/auth.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/stores</a> auth.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable } from 'svelte/store';</span>
+&nbsp;
+interface TwitchUser {
+  id: string;
+  username: string;
+  isAuthenticated: boolean;
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >twitchUser = writable&lt;TwitchUser&gt;({</span>
+  id: '',
+  username: '',
+  isAuthenticated: false
+}); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/stores/index.html b/coverage/src/lib/stores/index.html
new file mode 100644
index 0000000..55f6f23
--- /dev/null
+++ b/coverage/src/lib/stores/index.html
@@ -0,0 +1,131 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/lib/stores</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/49</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="auth.ts"><a href="auth.ts.html">auth.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="47" class="abs low">0/47</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="7" class="abs low">0/7</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="46" class="abs low">0/46</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/lib/stores/index.ts.html b/coverage/src/lib/stores/index.ts.html
new file mode 100644
index 0000000..50f0a87
--- /dev/null
+++ b/coverage/src/lib/stores/index.ts.html
@@ -0,0 +1,445 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/lib/stores/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/lib/stores</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/47</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/7</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/46</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { writable } from 'svelte/store';</span>
+import type { Stream, StreamSource } from '../../types/stream.js';
+&nbsp;
+// Active streams store
+export const <span class="cstat-no" title="statement not covered" >activeStreams = writable&lt;Stream[]&gt;([]);</span>
+&nbsp;
+// Queue store for each screen
+export const <span class="cstat-no" title="statement not covered" >streamQueues = writable&lt;Map&lt;number, StreamSource[]&gt;&gt;(new Map());</span>
+&nbsp;
+// Screen configuration store
+export const <span class="cstat-no" title="statement not covered" >screenConfigs = writable&lt;Map&lt;number, {</span>
+  enabled: boolean;
+  width: number;
+  height: number;
+  x: number;
+  y: number;
+  volume: number;
+  quality: string;
+  windowMaximized: boolean;
+}&gt;&gt;(new Map());
+&nbsp;
+// Player settings store
+export const <span class="cstat-no" title="statement not covered" >playerSettings = writable({</span>
+  preferStreamlink: false,
+  defaultQuality: 'best',
+  defaultVolume: 0,
+  windowMaximized: true,
+  maxStreams: 2,
+  autoStart: true
+});
+&nbsp;
+// Initialize all stores
+<span class="cstat-no" title="statement not covered" >export a</span>sync function <span class="fstat-no" title="function not covered" >initializeStores(</span>) {
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Fetch active streams
+    const streamsResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/streams/active');</span>
+    const streams = <span class="cstat-no" title="statement not covered" >await streamsResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >    activeStreams.set(streams);</span>
+&nbsp;
+    // Fetch player settings
+    const settingsResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/player/settings');</span>
+    const settings = <span class="cstat-no" title="statement not covered" >await settingsResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >    playerSettings.set(settings);</span>
+&nbsp;
+    // Set up screen configs
+    const screensResponse = <span class="cstat-no" title="statement not covered" >await fetch('/api/screens');</span>
+    const screens = <span class="cstat-no" title="statement not covered" >await screensResponse.json();</span>
+    const screenConfigMap = <span class="cstat-no" title="statement not covered" >new Map();</span>
+<span class="cstat-no" title="statement not covered" >    screens.forEach(<span class="fstat-no" title="function not covered" >(s</span>creen: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      screenConfigMap.set(screen.id, {</span>
+        enabled: screen.enabled,
+        width: screen.width,
+        height: screen.height,
+        x: screen.x,
+        y: screen.y,
+        volume: screen.volume,
+        quality: screen.quality,
+        windowMaximized: screen.windowMaximized
+      });
+    });
+<span class="cstat-no" title="statement not covered" >    screenConfigs.set(screenConfigMap);</span>
+&nbsp;
+    // Set up stream queues
+    const queueMap = <span class="cstat-no" title="statement not covered" >new Map();</span>
+<span class="cstat-no" title="statement not covered" >    for (const screen of screens) {</span>
+      const queueResponse = <span class="cstat-no" title="statement not covered" >await fetch(`/api/streams/queue/${screen.id}`);</span>
+      const queue = <span class="cstat-no" title="statement not covered" >await queueResponse.json();</span>
+<span class="cstat-no" title="statement not covered" >      queueMap.set(screen.id, queue);</span>
+    }
+<span class="cstat-no" title="statement not covered" >    streamQueues.set(queueMap);</span>
+&nbsp;
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    console.error('Failed to initialize stores:', error);</span>
+  }
+}
+&nbsp;
+// Subscribe to WebSocket updates
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (typeof window !== 'undefined') {</span>
+  const ws = <span class="cstat-no" title="statement not covered" >new WebSocket(`ws://${window.location.host}/ws`);</span>
+  
+<span class="cstat-no" title="statement not covered" >  ws.onmessage = <span class="fstat-no" title="function not covered" >(e</span>vent) =&gt; {</span>
+    const data = <span class="cstat-no" title="statement not covered" >JSON.parse(event.data);</span>
+    
+<span class="cstat-no" title="statement not covered" >    switch (data.type) {</span>
+      case 'streamUpdate':
+<span class="cstat-no" title="statement not covered" >        activeStreams.update(<span class="fstat-no" title="function not covered" >streams </span>=&gt; {</span>
+          const index = <span class="cstat-no" title="statement not covered" >streams.findIndex(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === data.stream.screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >          if (index !== -1) {</span>
+<span class="cstat-no" title="statement not covered" >            streams[index] = data.stream;</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            streams.push(data.stream);</span>
+          }
+<span class="cstat-no" title="statement not covered" >          return streams;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+        
+      case 'queueUpdate':
+<span class="cstat-no" title="statement not covered" >        streamQueues.update(<span class="fstat-no" title="function not covered" >queues </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          queues.set(data.screen, data.queue);</span>
+<span class="cstat-no" title="statement not covered" >          return queues;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+        
+      case 'screenUpdate':
+<span class="cstat-no" title="statement not covered" >        screenConfigs.update(<span class="fstat-no" title="function not covered" >configs </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          configs.set(data.screen.id, {</span>
+            enabled: data.screen.enabled,
+            width: data.screen.width,
+            height: data.screen.height,
+            x: data.screen.x,
+            y: data.screen.y,
+            volume: data.screen.volume,
+            quality: data.screen.quality,
+            windowMaximized: data.screen.windowMaximized
+          });
+<span class="cstat-no" title="statement not covered" >          return configs;</span>
+        });
+<span class="cstat-no" title="statement not covered" >        break;</span>
+    }
+  };
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/api.ts.html b/coverage/src/server/api.ts.html
new file mode 100644
index 0000000..a491fab
--- /dev/null
+++ b/coverage/src/server/api.ts.html
@@ -0,0 +1,478 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/76</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/10</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/73</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Koa from 'koa';</span>
+<span class="cstat-no" title="statement not covered" >import bodyParser from 'koa-bodyparser';</span>
+<span class="cstat-no" title="statement not covered" >import cors from '@koa/cors';</span>
+<span class="cstat-no" title="statement not covered" >import serve from 'koa-static';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import { apiRouter } from './routes/api.js';</span>
+<span class="cstat-no" title="statement not covered" >import appRouter from './router.js';</span>
+<span class="cstat-no" title="statement not covered" >import { db } from './db/database.js';</span>
+<span class="cstat-no" title="statement not covered" >import { streamManager } from './stream_manager.js';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { exec } from 'child_process';</span>
+&nbsp;
+const __filename = <span class="cstat-no" title="statement not covered" >fileURLToPath(import.meta.url);</span>
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(__filename);</span>
+const app = <span class="cstat-no" title="statement not covered" >new Koa();</span>
+&nbsp;
+// Initialize database
+<span class="cstat-no" title="statement not covered" >logger.info('Initializing database...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >await db.initialize();</span>
+<span class="cstat-no" title="statement not covered" >logger.info('Database initialized', 'Server');</span>
+&nbsp;
+// Auto-start streams
+<span class="cstat-no" title="statement not covered" >logger.info('Auto-starting streams...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >try {</span>
+<span class="cstat-no" title="statement not covered" >  await streamManager.autoStartStreams();</span>
+<span class="cstat-no" title="statement not covered" >  logger.info('Auto-start complete', 'Server');</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  logger.error('Error during auto-start', 'Server', error as Error);</span>
+}
+&nbsp;
+// Middleware
+<span class="cstat-no" title="statement not covered" >logger.debug('Setting up middleware...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >app.use(cors());</span>
+<span class="cstat-no" title="statement not covered" >app.use(bodyParser());</span>
+&nbsp;
+// Static files
+const staticPath = <span class="cstat-no" title="statement not covered" >path.join(__dirname, '../../static');</span>
+<span class="cstat-no" title="statement not covered" >app.use(serve(staticPath));</span>
+&nbsp;
+// Routes
+<span class="cstat-no" title="statement not covered" >app.use(apiRouter.routes());</span>
+<span class="cstat-no" title="statement not covered" >app.use(apiRouter.allowedMethods());</span>
+<span class="cstat-no" title="statement not covered" >app.use(appRouter.routes());</span>
+<span class="cstat-no" title="statement not covered" >app.use(appRouter.allowedMethods());</span>
+&nbsp;
+// Error handling
+<span class="cstat-no" title="statement not covered" >app.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr, ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Server error', 'Server', err);</span>
+});
+&nbsp;
+const PORT = <span class="cstat-no" title="statement not covered" >parseInt(process.env.PORT || '3001', 10);</span>
+&nbsp;
+// Function to check if port is in use
+async function <span class="fstat-no" title="function not covered" >isPortInUse(</span>port: number): Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >  return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; {</span>
+    const server = <span class="cstat-no" title="statement not covered" >app.listen(port)</span>
+      .once('error', <span class="fstat-no" title="function not covered" >(e</span>rr: NodeJS.ErrnoException) =&gt; {
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (err.code === 'EADDRINUSE') {</span>
+<span class="cstat-no" title="statement not covered" >          resolve(true);</span>
+        }
+      })
+      .once('listening', <span class="fstat-no" title="function not covered" >() =</span>&gt; {
+<span class="cstat-no" title="statement not covered" >        server.close();</span>
+<span class="cstat-no" title="statement not covered" >        resolve(false);</span>
+      });
+  });
+}
+&nbsp;
+// Function to find and kill process using port
+async function <span class="fstat-no" title="function not covered" >killProcessOnPort(</span>port: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >  return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    exec(`lsof -i :${port} | grep LISTEN | awk '{print $2}' | xargs kill -9`, <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      if (error &amp;&amp; error.code !== 1) { // code 1 means no process found</span>
+<span class="cstat-no" title="statement not covered" >        reject(error);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        resolve();</span>
+      }
+    });
+  });
+}
+&nbsp;
+// Start server with retry logic
+async function <span class="fstat-no" title="function not covered" >startServer(</span>retries = <span class="branch-0 cbranch-no" title="branch not covered" >3)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >  for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; retries; i++) {</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (await isPortInUse(PORT)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Port ${PORT} is in use, attempting to kill existing process...`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        await killProcessOnPort(PORT);</span>
+        // Wait a moment for the port to be freed
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+      }
+&nbsp;
+      const server = <span class="cstat-no" title="statement not covered" >app.listen(PORT, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Server running on http://localhost:${PORT}`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Routes:', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        apiRouter.stack.forEach(<span class="fstat-no" title="function not covered" >layer </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`${layer.methods.join(',')} ${layer.path}`, 'Server');</span>
+        });
+      });
+&nbsp;
+      // Handle server shutdown
+<span class="cstat-no" title="statement not covered" >      process.on('SIGINT', <span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Received SIGINT. Shutting down gracefully...', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        server.close(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info('Server closed', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >          process.exit(0);</span>
+        });
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(`Failed to start server (attempt ${i + 1}/${retries})`, 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (i === retries - 1) {</span>
+<span class="cstat-no" title="statement not covered" >        throw error;</span>
+      }
+      // Wait before retrying
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+    }
+  }
+}
+&nbsp;
+// Start the server
+<span class="cstat-no" title="statement not covered" >try {</span>
+<span class="cstat-no" title="statement not covered" >  await startServer();</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  logger.error('Failed to start server after multiple attempts', 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >  process.exit(1);</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export default app;</span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/config.ts.html b/coverage/src/server/config.ts.html
new file mode 100644
index 0000000..59bdad3
--- /dev/null
+++ b/coverage/src/server/config.ts.html
@@ -0,0 +1,556 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/config.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> config.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { StreamConfig, PlayerSettings, FavoriteChannels } from '../types/stream.js';
+&nbsp;
+export interface Config {
+  streams: Array&lt;{
+    id: number;
+    enabled: boolean;
+    screen: number;
+    sources: Array&lt;{
+      type: string;
+      subtype?: string;
+      name?: string;
+      enabled: boolean;
+      limit: number;
+      priority: number;
+      tags?: string[];
+    }&gt;;
+    sorting: {
+      field: string;
+      order: 'asc' | 'desc';
+    };
+    refresh: number;
+    autoStart: boolean;
+    quality: string;
+    volume: number;
+    windowMaximized: boolean;
+  }&gt;;
+  organizations: string[];
+  favoriteChannels: FavoriteChannels;
+  holodex: {
+    apiKey: string;
+  };
+  twitch: {
+    clientId: string;
+    clientSecret: string;
+    streamersFile: string;
+  };
+  player: PlayerSettings &amp; {
+    screens: StreamConfig[];
+  };
+  mpv: {
+    priority?: string;
+    'gpu-context'?: string;
+  };
+  streamlink: {
+    path?: string;
+    options?: Record&lt;string, string&gt;;
+    http_header?: Record&lt;string, string&gt;;
+  };
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >defaultConfig: Config = {</span>
+  streams: [
+    {
+      id: 1,
+      enabled: true,
+      screen: 1,
+      sources: [
+        {
+          type: 'holodex',
+          subtype: 'favorites',
+          enabled: true,
+          limit: 25,
+          priority: 1
+        },
+        {
+          type: 'holodex',
+          subtype: 'organization',
+          name: 'Hololive',
+          enabled: true,
+          limit: 25,
+          priority: 2
+        },
+        {
+          type: 'holodex',
+          subtype: 'organization',
+          name: 'Independents',
+          enabled: true,
+          limit: 25,
+          priority: 4
+        }
+      ],
+      sorting: {
+        field: 'viewerCount',
+        order: 'desc'
+      },
+      refresh: 300,
+      autoStart: true,
+      quality: 'best',
+      volume: 100,
+      windowMaximized: false
+    },
+    {
+      id: 2,
+      enabled: true,
+      screen: 2,
+      sources: [
+        {
+          type: 'twitch',
+          subtype: 'favorites',
+          enabled: true,
+          limit: 100,
+          priority: 2
+        },
+        {
+          type: 'twitch',
+          enabled: true,
+          limit: 25,
+          priority: 3,
+          tags: ['vtuber']
+        }
+      ],
+      sorting: {
+        field: 'viewerCount',
+        order: 'desc'
+      },
+      refresh: 300,
+      autoStart: true,
+      quality: 'best',
+      volume: 0,
+      windowMaximized: false
+    }
+  ],
+  organizations: [],
+  favoriteChannels: {
+    holodex: [],
+    twitch: [],
+    youtube: []
+  },
+  holodex: {
+    apiKey: process.env.HOLODEX_API_KEY || ''
+  },
+  twitch: {
+    clientId: process.env.TWITCH_CLIENT_ID || '',
+    clientSecret: process.env.TWITCH_CLIENT_SECRET || '',
+    streamersFile: 'config/streamers.txt'
+  },
+  player: {
+    preferStreamlink: false,
+    defaultQuality: 'best',
+    defaultVolume: 50,
+    windowMaximized: false,
+    maxStreams: 4,
+    autoStart: true,
+    processPriority: 'normal',
+    windowMode: 'windowed',
+    force_player: false,
+    screens: []
+  },
+  mpv: {
+    priority: 'normal',
+    'gpu-context': 'auto'
+  },
+  streamlink: {
+    path: '',
+    options: {},
+    http_header: {}
+  }
+}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/db/database.ts.html b/coverage/src/server/db/database.ts.html
new file mode 100644
index 0000000..d5513d2
--- /dev/null
+++ b/coverage/src/server/db/database.ts.html
@@ -0,0 +1,400 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/db/database.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/db</a> database.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/33</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import sqlite3 from 'sqlite3';</span>
+<span class="cstat-no" title="statement not covered" >import { open, Database } from 'sqlite';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs/promises';</span>
+<span class="cstat-no" title="statement not covered" >import { env } from '../../config/env.js';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+&nbsp;
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(fileURLToPath(import.meta.url));</span>
+&nbsp;
+export interface TwitchAuth {
+  userId: string;
+  accessToken: string;
+  refreshToken: string;
+  expiresAt: number;
+}
+&nbsp;
+class DatabaseError extends Error {
+<span class="fstat-no" title="function not covered" >  constructor(m</span>essage: string) {
+<span class="cstat-no" title="statement not covered" >    super(message);</span>
+<span class="cstat-no" title="statement not covered" >    this.name = 'DatabaseError';</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class D</span>atabaseService {
+  private <span class="cstat-no" title="statement not covered" >db: Database | null = null;</span>
+  private dbPath: string;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    this.dbPath = path.resolve(process.cwd(), env.DATABASE_PATH);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>initialize() {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Ensure the database directory exists
+      const dbDir = <span class="cstat-no" title="statement not covered" >path.dirname(this.dbPath);</span>
+<span class="cstat-no" title="statement not covered" >      await fs.mkdir(dbDir, { recursive: true });</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Initializing database at ${this.dbPath}`, 'Database');</span>
+<span class="cstat-no" title="statement not covered" >      this.db = await open({</span>
+        filename: this.dbPath,
+        driver: sqlite3.Database
+      });
+&nbsp;
+      // Initialize tables
+<span class="cstat-no" title="statement not covered" >      await this.db.exec(`</span>
+        CREATE TABLE IF NOT EXISTS streams (
+          id INTEGER PRIMARY KEY AUTOINCREMENT,
+          url TEXT NOT NULL,
+          screen INTEGER NOT NULL,
+          quality TEXT NOT NULL,
+          created_at DATETIME DEFAULT CURRENT_TIMESTAMP
+        );
+      `);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      await this.db.exec(`</span>
+        CREATE TABLE IF NOT EXISTS twitch_auth (
+          user_id TEXT PRIMARY KEY,
+          access_token TEXT NOT NULL,
+          refresh_token TEXT NOT NULL,
+          expires_at INTEGER NOT NULL
+        )
+      `);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info('Database initialized successfully', 'Database');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to initialize database: ${error}`,
+        'Database',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to initialize database: ${error}`);</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>saveTwitchAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.db) <span class="cstat-no" title="statement not covered" >throw new DatabaseError('Database not initialized');</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await this.db.run(</span>
+        `INSERT OR REPLACE INTO twitch_auth (user_id, access_token, refresh_token, expires_at)
+         VALUES (?, ?, ?, ?)`,
+        [auth.userId, auth.accessToken, auth.refreshToken, auth.expiresAt]
+      );
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to save Twitch auth: ${error}`);</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getTwitchAuth(userId: string): Promise&lt;TwitchAuth | null&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.db) <span class="cstat-no" title="statement not covered" >throw new DatabaseError('Database not initialized');</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const row = <span class="cstat-no" title="statement not covered" >await this.db.get(</span>
+        'SELECT user_id as userId, access_token as accessToken, refresh_token as refreshToken, expires_at as expiresAt FROM twitch_auth WHERE user_id = ?',
+        userId
+      ) as TwitchAuth | undefined;
+      
+<span class="cstat-no" title="statement not covered" >      return row || null;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new DatabaseError(`Failed to get Twitch auth: ${error}`);</span>
+    }
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >db = new DatabaseService(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/db/index.html b/coverage/src/server/db/index.html
new file mode 100644
index 0000000..fa1f100
--- /dev/null
+++ b/coverage/src/server/db/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/db</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/db</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/5</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/33</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="database.ts"><a href="database.ts.html">database.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="5" class="abs low">0/5</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="33" class="abs low">0/33</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/index.html b/coverage/src/server/index.html
new file mode 100644
index 0000000..9c4338a
--- /dev/null
+++ b/coverage/src/server/index.html
@@ -0,0 +1,191 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> src/server</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/918</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/420</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/172</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/876</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="76" class="abs low">0/76</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="10" class="abs low">0/10</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="73" class="abs low">0/73</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="config.ts"><a href="config.ts.html">config.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="65" class="abs low">0/65</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="12" class="abs low">0/12</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="62" class="abs low">0/62</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="router.ts"><a href="router.ts.html">router.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="stream_manager.ts"><a href="stream_manager.ts.html">stream_manager.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="733" class="abs low">0/733</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="387" class="abs low">0/387</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="129" class="abs low">0/129</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="697" class="abs low">0/697</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="websocket.ts"><a href="websocket.ts.html">websocket.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="2" class="abs low">0/2</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="30" class="abs low">0/30</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/index.ts.html b/coverage/src/server/index.ts.html
new file mode 100644
index 0000000..14f3048
--- /dev/null
+++ b/coverage/src/server/index.ts.html
@@ -0,0 +1,475 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/65</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/12</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/62</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { streamManager } from './stream_manager.js';</span>
+import type { StreamInstance } from '../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { exec } from 'child_process';</span>
+&nbsp;
+// Handle multiple termination signals
+const signals = <span class="cstat-no" title="statement not covered" >['SIGINT', 'SIGTERM', 'SIGQUIT'];</span>
+&nbsp;
+let isShuttingDown = <span class="cstat-no" title="statement not covered" >false;</span>
+&nbsp;
+// Add this before server startup
+// Check if API keys are set
+const holodexApiKey = <span class="cstat-no" title="statement not covered" >process.env.HOLODEX_API_KEY;</span>
+const twitchClientId = <span class="cstat-no" title="statement not covered" >process.env.TWITCH_CLIENT_ID;</span>
+const twitchClientSecret = <span class="cstat-no" title="statement not covered" >process.env.TWITCH_CLIENT_SECRET;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!holodexApiKey) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('HOLODEX_API_KEY is not set in environment variables', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Holodex streams will not be available', 'Server');</span>
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!twitchClientId || !twitchClientSecret) {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('TWITCH_CLIENT_ID or TWITCH_CLIENT_SECRET is not set in environment variables', 'Server');</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Twitch streams will not be available', 'Server');</span>
+}
+&nbsp;
+async function <span class="fstat-no" title="function not covered" >shutdown(</span>) {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+<span class="cstat-no" title="statement not covered" >  isShuttingDown = true;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  logger.info('Shutting down server...', 'Server');</span>
+  
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Force kill all MPV processes
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const killPromises = <span class="cstat-no" title="statement not covered" >activeStreams.map(<span class="fstat-no" title="function not covered" >async </span>(stream) =&gt; {</span>
+      const processInstance = <span class="cstat-no" title="statement not covered" >stream as unknown as StreamInstance;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (processInstance.process) {</span>
+        const childProcess = <span class="cstat-no" title="statement not covered" >processInstance.process as unknown as { pid: number };</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (childProcess.pid) {</span>
+<span class="cstat-no" title="statement not covered" >          try {</span>
+            // Try SIGINT first
+<span class="cstat-no" title="statement not covered" >            process.kill(childProcess.pid, 'SIGINT');</span>
+            
+            // Wait a bit and force kill if still running
+<span class="cstat-no" title="statement not covered" >            await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 2000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >            try {</span>
+              // Check if process still exists
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 0);</span>
+              // If we get here, process still exists, force kill it
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 'SIGKILL');</span>
+            } catch (e) {
+              // Process doesn't exist anymore, which is good
+            }
+          } catch (e) {
+            // Process might already be gone, try SIGKILL
+<span class="cstat-no" title="statement not covered" >            try {</span>
+<span class="cstat-no" title="statement not covered" >              process.kill(childProcess.pid, 'SIGKILL');</span>
+            } catch {
+              // Ignore if process is already gone
+            }
+          }
+        }
+      }
+    });
+&nbsp;
+    // Wait for all processes to be killed
+<span class="cstat-no" title="statement not covered" >    await Promise.all(killPromises);</span>
+&nbsp;
+    // Kill any remaining mpv processes
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        exec('pkill -9 mpv', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          if (error &amp;&amp; error.code !== 1) { // code 1 means no processes found</span>
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            resolve(undefined);</span>
+          }
+        });
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Error killing remaining mpv processes', 'Server', error as Error);</span>
+    }
+&nbsp;
+    // Kill any remaining streamlink processes
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        exec('pkill -9 streamlink', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          if (error &amp;&amp; error.code !== 1) { // code 1 means no processes found</span>
+<span class="cstat-no" title="statement not covered" >            reject(error);</span>
+          } else {
+<span class="cstat-no" title="statement not covered" >            resolve(undefined);</span>
+          }
+        });
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Error killing remaining streamlink processes', 'Server', error as Error);</span>
+    }
+&nbsp;
+    // Cleanup resources
+<span class="cstat-no" title="statement not covered" >    await streamManager.cleanup();</span>
+    
+    // Final delay to ensure all cleanup is complete
+<span class="cstat-no" title="statement not covered" >    await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    process.exit(0);</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error('Error during shutdown', 'Server', error as Error);</span>
+<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
+  }
+}
+&nbsp;
+// Register signal handlers
+<span class="cstat-no" title="statement not covered" >signals.forEach(<span class="fstat-no" title="function not covered" >signal </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  process.on(signal, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Received ${signal} signal`, 'Server');</span>
+<span class="cstat-no" title="statement not covered" >    void shutdown();</span>
+  });
+});
+&nbsp;
+// Handle uncaught exceptions
+<span class="cstat-no" title="statement not covered" >process.on('uncaughtException', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Uncaught exception', 'Server', error);</span>
+<span class="cstat-no" title="statement not covered" >  void shutdown();</span>
+});
+&nbsp;
+// Handle unhandled rejections
+<span class="cstat-no" title="statement not covered" >process.on('unhandledRejection', <span class="fstat-no" title="function not covered" >(r</span>eason) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  logger.error('Unhandled rejection', 'Server', reason as Error);</span>
+<span class="cstat-no" title="statement not covered" >  void shutdown();</span>
+}); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/router.ts.html b/coverage/src/server/router.ts.html
new file mode 100644
index 0000000..876a366
--- /dev/null
+++ b/coverage/src/server/router.ts.html
@@ -0,0 +1,166 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/router.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> router.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Router from 'koa-router';</span>
+<span class="cstat-no" title="statement not covered" >import send from 'koa-send';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+&nbsp;
+const __dirname = <span class="cstat-no" title="statement not covered" >path.dirname(fileURLToPath(import.meta.url));</span>
+const router = <span class="cstat-no" title="statement not covered" >new Router();</span>
+&nbsp;
+// Serve static files from the build directory
+<span class="cstat-no" title="statement not covered" >router.get('/assets', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  await send(ctx, ctx.path, { </span>
+    root: path.resolve(__dirname, '../../build') 
+  });
+});
+&nbsp;
+// Handle SvelteKit app routes
+<span class="cstat-no" title="statement not covered" >router.get(['/', '/manager'], <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  await send(ctx, 'index.html', { </span>
+    root: path.resolve(__dirname, '../../build') 
+  });
+});
+&nbsp;
+// Define routes
+<span class="cstat-no" title="statement not covered" >router.get('/', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = { message: 'Server is running' };</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export default router; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/routes/api.ts.html b/coverage/src/server/routes/api.ts.html
new file mode 100644
index 0000000..8db1451
--- /dev/null
+++ b/coverage/src/server/routes/api.ts.html
@@ -0,0 +1,2815 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/routes/api.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/routes</a> api.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/475</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/112</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/470</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import Router from 'koa-router';</span>
+import type { Context } from 'koa';
+<span class="cstat-no" title="statement not covered" >import { streamManager } from '../stream_manager.js';</span>
+import type { StreamSource, PlayerSettings, StreamConfig, StreamOptions } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+&nbsp;
+const router = <span class="cstat-no" title="statement not covered" >new Router();</span>
+&nbsp;
+// Add type for request body
+interface AddToQueueBody {
+  url: string;
+  title?: string;
+  platform?: string;
+}
+&nbsp;
+interface ReorderQueueBody {
+  screen: number;
+  sourceIndex: number;
+  targetIndex: number;
+}
+&nbsp;
+interface UpdateConfigBody {
+  streams?: StreamConfig[];
+  organizations?: string[];
+  favoriteChannels?: {
+    holodex: string[];
+    twitch: string[];
+    youtube: string[];
+  };
+}
+&nbsp;
+interface MarkWatchedBody {
+  url: string;
+  screen?: number;
+}
+&nbsp;
+// Static routes first (most specific to least specific)
+<span class="cstat-no" title="statement not covered" >router.get('/api/organizations', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getOrganizations();</span>
+});
+&nbsp;
+// More specific routes before general ones
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/active', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const streams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streams;</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get active streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get active streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/vtubers', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { limit } = <span class="cstat-no" title="statement not covered" >ctx.query;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = await streamManager.getVTuberStreams(</span>
+      limit ? parseInt(limit as string) : undefined
+    );
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to fetch VTuber streams', 
+      'API', 
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to fetch VTuber streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/japanese', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { limit } = <span class="cstat-no" title="statement not covered" >ctx.query;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = await streamManager.getJapaneseStreams(</span>
+      limit ? parseInt(limit as string) : undefined
+    );
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to fetch Japanese streams', 
+      'API', 
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to fetch Japanese streams' };</span>
+  }
+});
+&nbsp;
+// General routes
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const streams = <span class="cstat-no" title="statement not covered" >await streamManager.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streams;</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get streams' };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/start', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as { url: string } &amp; Partial&lt;StreamOptions&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!body.url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const response = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({</span>
+      url: body.url,
+      screen: body.screen || 1,
+      quality: body.quality || 'best',
+      volume: body.volume || 50,
+      windowMaximized: body.windowMaximized ?? true
+    });
+<span class="cstat-no" title="statement not covered" >    ctx.body = response;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Dynamic route with validation in handler
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.stopStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: result };</span>
+  } catch (error: unknown) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to stop stream',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to stop stream' };</span>
+  }
+});
+&nbsp;
+// Screen Management
+<span class="cstat-no" title="statement not covered" >router.post('/api/screens/:screen/disable', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+<span class="cstat-no" title="statement not covered" >    await streamManager.disableScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/screens/:screen/enable', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+<span class="cstat-no" title="statement not covered" >    await streamManager.enableScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Stream Control
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/url', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { url, screen, quality, notify_only } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { </span>
+      url: string; 
+      screen?: number; 
+      quality?: string;
+      notify_only?: boolean;
+    };
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if stream is already playing on this screen
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const existingStream = <span class="cstat-no" title="statement not covered" >activeStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream &amp;&amp; existingStream.url === url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream already playing on this screen' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if stream is playing on a higher priority screen
+    const isStreamActive = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >      s.url === url &amp;&amp; s.screen &lt; (screen || 1)</span>
+    );
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamActive) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream already playing on higher priority screen' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // If this is just a notification, don't start the stream
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (notify_only) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { message: 'Stream info updated' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({ </span>
+      url, 
+      screen: screen || 1, 
+      quality: quality || 'best' 
+    });
+<span class="cstat-no" title="statement not covered" >    ctx.body = result;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/restart', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen?: number };</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.restartStreams(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Queue Management
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/queue/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >streamManager.getQueueForScreen(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = queue;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/queue/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen, 10);</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as AddToQueueBody;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!body.url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const source: StreamSource = <span class="cstat-no" title="statement not covered" >{</span>
+      url: body.url,
+      title: body.title,
+      platform: body.platform as 'youtube' | 'twitch' | undefined
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.addToQueue(screen, source);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/queue/:screen/:index', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    const index = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.index);</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen) || isNaN(index)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number or index' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.removeFromQueue(screen, index);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/reorder', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as ReorderQueueBody;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof body.screen !== 'number' || typeof body.sourceIndex !== 'number' || typeof body.targetIndex !== 'number') {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid parameters' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.reorderQueue(body.screen, body.sourceIndex, body.targetIndex);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add stream control endpoints
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/start/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const { url } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { url: string };</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const result = <span class="cstat-no" title="statement not covered" >await streamManager.startStream({ url, screen });</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = result;</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/stop/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    await streamManager.stopStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Process Priority
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/priority', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { priority } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { priority: string };</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.setPlayerPriority(priority);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Watched Streams
+<span class="cstat-no" title="statement not covered" >router.get('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getWatchedStreams();</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { url } = <span class="cstat-no" title="statement not covered" >ctx.request.body as MarkWatchedBody;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!url) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'URL is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+    // Mark the stream as watched
+<span class="cstat-no" title="statement not covered" >    streamManager.markStreamAsWatched(url);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.delete('/api/streams/watched', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Server Control
+<span class="cstat-no" title="statement not covered" >router.post('/api/server/stop', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Received stop server request', 'API');</span>
+    
+    // Set response headers to prevent connection from closing
+<span class="cstat-no" title="statement not covered" >    ctx.set('Connection', 'close');</span>
+    
+    // Send response before cleanup
+<span class="cstat-no" title="statement not covered" >    ctx.status = 200;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Server stopping...' };</span>
+    
+    // Force send the response
+<span class="cstat-no" title="statement not covered" >    ctx.res.end();</span>
+    
+    // Perform cleanup after response is sent
+<span class="cstat-no" title="statement not covered" >    setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Starting server cleanup...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Server cleanup complete, exiting...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(0);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error('Failed to cleanup server', 'API', error instanceof Error ? error : new Error(String(error)));</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    }, 1000);
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Stop server and all player processes
+<span class="cstat-no" title="statement not covered" >router.post('/api/server/stop-all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Received stop-all request (stopping all players and server)', 'API');</span>
+    
+    // Set response headers to prevent connection from closing
+<span class="cstat-no" title="statement not covered" >    ctx.set('Connection', 'close');</span>
+    
+    // Send response before cleanup
+<span class="cstat-no" title="statement not covered" >    ctx.status = 200;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Stopping all players and server...' };</span>
+    
+    // Force send the response
+<span class="cstat-no" title="statement not covered" >    ctx.res.end();</span>
+    
+    // Perform cleanup after response is sent
+<span class="cstat-no" title="statement not covered" >    setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Stopping all player processes...', 'API');</span>
+        
+        // Get all active streams and stop them
+        const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        if (activeStreams.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Found ${activeStreams.length} active streams to stop`, 'API');</span>
+          
+          const stopPromises = <span class="cstat-no" title="statement not covered" >activeStreams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(`Stopping player on screen ${stream.screen}`, 'API');</span>
+<span class="cstat-no" title="statement not covered" >            return streamManager.stopStream(stream.screen, true);</span>
+          });
+          
+          // Wait for all streams to be stopped
+<span class="cstat-no" title="statement not covered" >          await Promise.allSettled(stopPromises);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info('All player processes stopped', 'API');</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info('No active streams to stop', 'API');</span>
+        }
+        
+        // Then perform server cleanup
+<span class="cstat-no" title="statement not covered" >        logger.info('Starting server cleanup...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('Server cleanup complete, exiting...', 'API');</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(0);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error('Failed during stop-all sequence', 'API', error instanceof Error ? error : new Error(String(error)));</span>
+<span class="cstat-no" title="statement not covered" >        process.exit(1);</span>
+      }
+    }, 1000);
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add these new routes after the existing player/priority route
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/command/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    const { command } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { command: string };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!command) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Command is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.sendCommandToScreen(screen, command);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/command/all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { command } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { command: string };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!command) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Command is required' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.sendCommandToAll(command);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after existing player commands
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/volume/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { level } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { level: number };</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof level !== 'number' || level &lt; 0 || level &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Volume must be between 0-100' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll(`set volume ${level}`);</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, `set volume ${level}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/pause/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll('cycle pause');</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, 'cycle pause');</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/seek/:target', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { seconds } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { seconds: number };</span>
+    const target = <span class="cstat-no" title="statement not covered" >ctx.params.target;</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof seconds !== 'number') {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Seconds must be a number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    if (target === 'all') {</span>
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToAll(`seek ${seconds}`);</span>
+    } else {
+      const screen = <span class="cstat-no" title="statement not covered" >parseInt(target);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+<span class="cstat-no" title="statement not covered" >      streamManager.sendCommandToScreen(screen, `seek ${seconds}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Get player settings endpoint
+<span class="cstat-no" title="statement not covered" >router.get('/api/player/settings', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getPlayerSettings();</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Update player settings endpoint
+<span class="cstat-no" title="statement not covered" >router.post('/api/player/settings', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const settings = <span class="cstat-no" title="statement not covered" >ctx.request.body as Partial&lt;PlayerSettings&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.updatePlayerSettings(settings);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : String(error) };</span>
+  }
+});
+&nbsp;
+// Add screen configuration endpoints
+<span class="cstat-no" title="statement not covered" >router.get('/api/screens', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getScreenConfigs();</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.put('/api/screens/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const config = <span class="cstat-no" title="statement not covered" >ctx.request.body as Partial&lt;StreamConfig&gt;;</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.updateScreenConfig(screen, config);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add these new routes before the export
+<span class="cstat-no" title="statement not covered" >router.get('/api/config', <span class="fstat-no" title="function not covered" >(c</span>tx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  ctx.body = streamManager.getConfig();</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >router.put('/api/config', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const body = <span class="cstat-no" title="statement not covered" >ctx.request.body as UpdateConfigBody;</span>
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateConfig(body);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Screen endpoints
+<span class="cstat-no" title="statement not covered" >router.get('/screens/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = streamManager.getScreenInfo(screen);</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: error instanceof Error ? error.message : 'Unknown error' };</span>
+  }
+});
+&nbsp;
+// Add after other stream routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/autostart', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen?: number };</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (screen) {</span>
+      // Start streams on specific screen
+      const screenConfig = <span class="cstat-no" title="statement not covered" >streamManager.getScreenConfig(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >        ctx.body = { error: `Invalid screen number: ${screen}` };</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Enable screen if disabled
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >        await streamManager.enableScreen(screen);</span>
+      }
+      
+      // Stop any existing streams
+<span class="cstat-no" title="statement not covered" >      await streamManager.stopStream(screen);</span>
+      
+      // Start new streams
+<span class="cstat-no" title="statement not covered" >      await streamManager.handleQueueEmpty(screen);</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: true, message: `Auto-started streams on screen ${screen}` };</span>
+    } else {
+      // Start streams on all screens
+<span class="cstat-no" title="statement not covered" >      await streamManager.autoStartStreams();</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: true, message: 'Auto-started streams on all screens' };</span>
+    }
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after other stream routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/close-all', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Get all active screens
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    
+    // Stop all streams
+<span class="cstat-no" title="statement not covered" >    for (const stream of activeStreams) {</span>
+<span class="cstat-no" title="statement not covered" >      await streamManager.stopStream(stream.screen, true);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'All players closed' };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add after other player routes
+<span class="cstat-no" title="statement not covered" >router.post('/api/log', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen, type, data } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { screen: number; type: string; data: unknown };</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof screen !== 'number' || !type) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid message format' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    streamManager.handleLuaMessage(screen, type, data);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Update playlist endpoint
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/playlist', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const { screen, data } = <span class="cstat-no" title="statement not covered" >ctx.request.body as { </span>
+      screen: number; 
+      data: Array&lt;{
+        filename: string;
+        title?: string;
+        current: boolean;
+      }&gt;;
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen || !Array.isArray(data)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { error: 'Invalid playlist data' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Update playlist in stream manager
+<span class="cstat-no" title="statement not covered" >    streamManager.handlePlaylistUpdate(screen, data);</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: String(error) };</span>
+  }
+});
+&nbsp;
+// Add a refresh endpoint to force stream refresh
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/refresh', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Force refreshing all streams', 'API');</span>
+    
+    // Reset the last refresh timestamps for all screens
+    const enabledScreens = <span class="cstat-no" title="statement not covered" >streamManager.getEnabledScreens();</span>
+<span class="cstat-no" title="statement not covered" >    streamManager.resetRefreshTimestamps(enabledScreens);</span>
+    
+    // Update streams queue for all enabled screens
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateAllQueues(true);</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: 'Stream data refresh initiated for all screens' };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to refresh streams',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: false, error: 'Failed to refresh streams' };</span>
+  }
+});
+&nbsp;
+// Add a refresh endpoint for specific screen
+<span class="cstat-no" title="statement not covered" >router.post('/api/streams/refresh/:screen', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const screen = <span class="cstat-no" title="statement not covered" >parseInt(ctx.params.screen);</span>
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (isNaN(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      ctx.status = 400;</span>
+<span class="cstat-no" title="statement not covered" >      ctx.body = { success: false, error: 'Invalid screen number' };</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Force refreshing streams for screen ${screen}`, 'API');</span>
+    
+    // Reset the refresh timestamp for this screen
+<span class="cstat-no" title="statement not covered" >    streamManager.resetRefreshTimestamps([screen]);</span>
+    
+    // Update queue for this screen
+<span class="cstat-no" title="statement not covered" >    await streamManager.updateQueue(screen, true);</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: true, message: `Stream data refresh initiated for screen ${screen}` };</span>
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      `Failed to refresh streams for screen ${ctx.params.screen}`,
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { success: false, error: 'Failed to refresh streams' };</span>
+  }
+});
+&nbsp;
+// Server status endpoint
+<span class="cstat-no" title="statement not covered" >router.get('/api/server/status', <span class="fstat-no" title="function not covered" >async </span>(ctx: Context) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    const uptimeSeconds = <span class="cstat-no" title="statement not covered" >process.uptime();</span>
+    const uptimeFormatted = <span class="cstat-no" title="statement not covered" >formatUptime(uptimeSeconds);</span>
+    
+    const activeStreams = <span class="cstat-no" title="statement not covered" >streamManager.getActiveStreams();</span>
+    const memUsage = <span class="cstat-no" title="statement not covered" >process.memoryUsage();</span>
+    
+<span class="cstat-no" title="statement not covered" >    ctx.body = {</span>
+      status: 'running',
+      uptime: uptimeFormatted,
+      activeStreams: activeStreams.length,
+      version: process.env.npm_package_version || '1.0.0',
+      nodeVersion: process.version,
+      platform: process.platform,
+      memory: {
+        rss: `${Math.round(memUsage.rss / 1024 / 1024)} MB`,
+        heapTotal: `${Math.round(memUsage.heapTotal / 1024 / 1024)} MB`,
+        heapUsed: `${Math.round(memUsage.heapUsed / 1024 / 1024)} MB`,
+        external: `${Math.round(memUsage.external / 1024 / 1024)} MB`
+      }
+    };
+  } catch (error) {
+<span class="cstat-no" title="statement not covered" >    logger.error(</span>
+      'Failed to get server status',
+      'API',
+      error instanceof Error ? error : new Error(String(error))
+    );
+<span class="cstat-no" title="statement not covered" >    ctx.status = 500;</span>
+<span class="cstat-no" title="statement not covered" >    ctx.body = { error: 'Failed to get server status' };</span>
+  }
+});
+&nbsp;
+// Helper function to format uptime
+function <span class="fstat-no" title="function not covered" >formatUptime(</span>seconds: number): string {
+  const days = <span class="cstat-no" title="statement not covered" >Math.floor(seconds / (3600 * 24));</span>
+  const hours = <span class="cstat-no" title="statement not covered" >Math.floor((seconds % (3600 * 24)) / 3600);</span>
+  const minutes = <span class="cstat-no" title="statement not covered" >Math.floor((seconds % 3600) / 60);</span>
+  const remainingSeconds = <span class="cstat-no" title="statement not covered" >Math.floor(seconds % 60);</span>
+  
+  const parts = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (days &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${days}d`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (hours &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${hours}h`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (minutes &gt; 0) <span class="cstat-no" title="statement not covered" >parts.push(`${minutes}m`);</span></span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (remainingSeconds &gt; 0 || parts.length === 0) <span class="cstat-no" title="statement not covered" >parts.push(`${remainingSeconds}s`);</span></span>
+  
+<span class="cstat-no" title="statement not covered" >  return parts.join(' ');</span>
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >apiRouter = router; </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/routes/index.html b/coverage/src/server/routes/index.html
new file mode 100644
index 0000000..3394959
--- /dev/null
+++ b/coverage/src/server/routes/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/routes</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/routes</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/475</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/112</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/48</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/470</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="api.ts"><a href="api.ts.html">api.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="475" class="abs low">0/475</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="112" class="abs low">0/112</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="48" class="abs low">0/48</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="470" class="abs low">0/470</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/holodex.ts.html b/coverage/src/server/services/holodex.ts.html
new file mode 100644
index 0000000..d6f00d5
--- /dev/null
+++ b/coverage/src/server/services/holodex.ts.html
@@ -0,0 +1,937 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/holodex.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> holodex.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/115</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/168</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/105</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { </span>
+  HolodexApiClient,
+  type VideoStatus,
+  type Video,
+  type VideoType,
+  VideoRaw
+} from 'holodex.js';
+import type { StreamSource, Config } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+import type { StreamService } from '../../types/stream.js';
+&nbsp;
+interface GetLiveStreamsOptions {
+  channels?: string[];
+  organization?: string;
+  limit?: number;
+  sort?: 'start_scheduled' | 'available_at' | 'live_viewers';
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class H</span>olodexService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >client: HolodexApiClient | null = null;</span>
+  private favoriteChannels: string[];
+  private filters: string[];
+  private config: Config;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(a</span>piKey: string, filters: string[], favoriteChannels: string[], config: Config) {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favoriteChannels;</span>
+<span class="cstat-no" title="statement not covered" >    this.filters = filters;</span>
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      this.client = new HolodexApiClient({</span>
+        apiKey: apiKey
+      });
+<span class="cstat-no" title="statement not covered" >      logger.info('Holodex service initialized', 'HolodexService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn('Failed to initialize Holodex service - some features will be disabled', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(options: GetLiveStreamsOptions): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn('Holodex service not initialized - returning empty streams', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >        return [];</span>
+      }
+&nbsp;
+      const params: Record&lt;string, string | number&gt; = <span class="cstat-no" title="statement not covered" >{</span>
+        limit: options.limit || 25,
+        sort: options.sort || 'available_at',
+        order: 'asc'
+      };
+&nbsp;
+      const organization = <span class="cstat-no" title="statement not covered" >options?.organization;</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options?.channels;</span>
+&nbsp;
+      let videos: Video[];
+      const channelOrderMap = <span class="cstat-no" title="statement not covered" >new Map&lt;string, number&gt;();</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // Create a map of channel IDs to their original position in the favorites array
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          channelOrderMap.set(channelId, index);</span>
+        });
+        
+        // Fetch all channels in parallel but preserve order
+        const promises = <span class="cstat-no" title="statement not covered" >channels.map(<span class="fstat-no" title="function not covered" >channelId </span>=&gt;</span>
+<span class="cstat-no" title="statement not covered" >          this.client!.getLiveVideos({</span>
+            channel_id: channelId,
+            status: 'live' as VideoStatus,
+            type: 'stream' as VideoType,
+            max_upcoming_hours: 0,
+            sort: 'live_viewers' as keyof VideoRaw &amp; string,
+          }).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {
+<span class="cstat-no" title="statement not covered" >            logger.error(`Failed to fetch streams for channel ${channelId}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >            logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >            return [];</span>
+          })
+        );
+        
+        const results = <span class="cstat-no" title="statement not covered" >await Promise.all(promises);</span>
+        
+        // Flatten results but maintain channel order
+<span class="cstat-no" title="statement not covered" >        videos = [];</span>
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+          const channelVideos = <span class="cstat-no" title="statement not covered" >results[index]</span>
+            // Filter out videos where the channel ID doesn't match (collabs)
+            .filter(<span class="fstat-no" title="function not covered" >video </span>=&gt; <span class="cstat-no" title="statement not covered" >video.channel?.channelId === channelId);</span>
+            
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (channelVideos &amp;&amp; channelVideos.length &gt; 0) {</span>
+            // Sort videos for each channel: live first, then by viewer count
+<span class="cstat-no" title="statement not covered" >            channelVideos.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (a.status === 'live' &amp;&amp; b.status !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (a.status !== 'live' &amp;&amp; b.status === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+<span class="cstat-no" title="statement not covered" >              return (b.liveViewers || 0) - (a.liveViewers || 0);</span>
+            });
+<span class="cstat-no" title="statement not covered" >            videos.push(...channelVideos);</span>
+          }
+        });
+        
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Found ${videos.length} live/upcoming streams from favorite channels`, 'HolodexService');</span>
+      } else {
+        // Fetch streams by organization or all
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (organization) {</span>
+<span class="cstat-no" title="statement not covered" >          params.org = organization;</span>
+        }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Fetching ${params.limit} live streams${organization ? ` for ${organization}` : ''}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >        videos = await this.client.getLiveVideos(params);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${videos.length} live streams`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (videos.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.debug(`Stream details: ${JSON.stringify(videos.slice(0, 3).map(<span class="fstat-no" title="function not covered" >v </span>=&gt; <span class="cstat-no" title="statement not covered" >({</span></span>
+          title: v.title,
+          channel: v.channel?.name,
+          viewers: v.liveViewers,
+          id: v.videoId,
+          status: v.status
+        })))}`, 'HolodexService');
+      }
+&nbsp;
+      // Filter out channels that should be excluded
+      const filteredVideos = <span class="cstat-no" title="statement not covered" >videos.filter(<span class="fstat-no" title="function not covered" >video </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isChannelFiltered(video)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Filtering out video from channel ${video.channel?.name}`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      });
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (videos.length !== filteredVideos.length) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Some videos were filtered out due to channel exclusions`, 'HolodexService');</span>
+      }
+      // Convert to StreamSource format with channel order preserved
+      const streamSources = <span class="cstat-no" title="statement not covered" >filteredVideos.map(<span class="fstat-no" title="function not covered" >video </span>=&gt; {</span>
+        const channelId = <span class="cstat-no" title="statement not covered" >video.channel?.channelId;</span>
+        const channelOrder = <span class="cstat-no" title="statement not covered" >channelId &amp;&amp; channels?.includes(channelId) ? channelOrderMap.get(channelId) : undefined;</span>
+        
+<span class="cstat-no" title="statement not covered" >        return {</span>
+          url: `https://youtube.com/watch?v=${video.videoId}`,
+          title: video.title,
+          platform: 'youtube' as const,
+          viewerCount: video.liveViewers,
+          thumbnail: video.channel?.avatarUrl,
+          startTime: video.actualStart ? new Date(video.actualStart).getTime() : 
+                    video.availableAt ? new Date(video.availableAt).getTime() : undefined,
+          sourceStatus: video.status === 'live' ? 'live' as const : 
+                       video.status === 'upcoming' ? 'upcoming' as const : 'ended' as const,
+          channelId: channelId,
+          organization: video.channel?.organization,
+          // Set priority based on channel order for favorites
+          priority: channelOrder !== undefined ? channelOrder : undefined
+        };
+      });
+&nbsp;
+      // Sort streams based on context
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // For favorites, sort by:
+        // 1. Channel order in favorites
+        // 2. Live status (live before upcoming)
+        // 3. Viewer count for same channel
+<span class="cstat-no" title="statement not covered" >        streamSources.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          // First by channel order (favorites order)
+          const aOrder = <span class="cstat-no" title="statement not covered" >a.priority ?? 999;</span>
+          const bOrder = <span class="cstat-no" title="statement not covered" >b.priority ?? 999;</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aOrder !== bOrder) <span class="cstat-no" title="statement not covered" >return aOrder - bOrder;</span></span>
+          
+          // Then by live status
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus !== 'live' &amp;&amp; b.sourceStatus === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+          
+          // Then by viewer count for streams from the same channel
+<span class="cstat-no" title="statement not covered" >          return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+        });
+      } else {
+        // For non-favorite streams, sort by:
+        // 1. Live status
+        // 2. Viewer count
+        // 3. Start time
+<span class="cstat-no" title="statement not covered" >        streamSources.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus !== 'live') <span class="cstat-no" title="statement not covered" >return -1;</span></span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus !== 'live' &amp;&amp; b.sourceStatus === 'live') <span class="cstat-no" title="statement not covered" >return 1;</span></span>
+          
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (a.sourceStatus === 'live' &amp;&amp; b.sourceStatus === 'live') {</span>
+<span class="cstat-no" title="statement not covered" >            return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+          }
+          
+          const aTime = <span class="cstat-no" title="statement not covered" >a.startTime || 0;</span>
+          const bTime = <span class="cstat-no" title="statement not covered" >b.startTime || 0;</span>
+<span class="cstat-no" title="statement not covered" >          return aTime - bTime;</span>
+        });
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return streamSources;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Failed to fetch Holodex live streams', 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getFavoriteStreams(): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) <span class="cstat-no" title="statement not covered" >return [];</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const promises = <span class="cstat-no" title="statement not covered" >this.favoriteChannels.map(<span class="fstat-no" title="function not covered" >channelId </span>=&gt;</span>
+<span class="cstat-no" title="statement not covered" >        this.client!.getLiveVideos({ </span>
+          channel_id: channelId,
+          status: 'live' as VideoStatus,
+          max_upcoming_hours: 0
+        })
+      );
+&nbsp;
+      const videoArrays = <span class="cstat-no" title="statement not covered" >await Promise.all(promises);</span>
+      const videos = <span class="cstat-no" title="statement not covered" >videoArrays.flat();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return videos.map(<span class="fstat-no" title="function not covered" >video </span>=&gt; <span class="cstat-no" title="statement not covered" >({</span></span>
+        url: `https://youtube.com/watch?v=${video.videoId}`,
+        title: video.title,
+        platform: 'youtube' as const,
+        viewerCount: video.liveViewers,
+        channelId: video.channel?.channelId,
+        organization: video.channel?.organization
+      }));
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch favorite streams', 
+        'HolodexService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >isChannelFiltered(</span>video: Video): boolean {
+    const channelId = <span class="cstat-no" title="statement not covered" >video.channel?.channelId;</span>
+    const channelName = <span class="cstat-no" title="statement not covered" >video.channel?.name;</span>
+    const englishName = <span class="cstat-no" title="statement not covered" >video.channel?.englishName;</span>
+    
+    // If channel is in favorites, don't filter it
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (channelId &amp;&amp; this.favoriteChannels.includes(channelId)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Channel ${channelName} (${channelId}) is in favorites, not filtering`, 'HolodexService');</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+    
+    // If no channel names, don't filter
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!channelName &amp;&amp; !englishName) {</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+&nbsp;
+    // Normalize channel names: lowercase and remove all spaces and special characters
+    const normalizedNames = <span class="cstat-no" title="statement not covered" >[</span>
+      channelName?.toLowerCase().replace(/[\s\-_]+/g, ''),
+      englishName?.toLowerCase().replace(/[\s\-_]+/g, '')
+    ].filter(Boolean);
+    
+    // Check if any of the normalized names exactly match any filter
+<span class="cstat-no" title="statement not covered" >    for (const filter of this.filters) {</span>
+      const normalizedFilter = <span class="cstat-no" title="statement not covered" >filter.toLowerCase().replace(/[\s\-_]+/g, '');</span>
+      
+      // Check if any of the normalized names match the filter
+<span class="cstat-no" title="statement not covered" >      for (const normalizedName of normalizedNames) {</span>
+        // Only filter if the normalized name matches the filter exactly or contains the full filter name
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (normalizedName === normalizedFilter || normalizedName.includes(normalizedFilter)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Filtering out channel ${channelName}${englishName ? ` (${englishName})` : ''} - matched filter "${filter}"`,
+            'HolodexService'
+          );
+<span class="cstat-no" title="statement not covered" >          return true;</span>
+        }
+      }
+    }
+    
+    // If no filters matched, don't filter out the channel
+<span class="cstat-no" title="statement not covered" >    logger.debug(</span>
+      `Channel ${channelName}${englishName ? ` (${englishName})` : ''} does not match any filters, keeping`,
+      'HolodexService'
+    );
+<span class="cstat-no" title="statement not covered" >    return false;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/index.html b/coverage/src/server/services/index.html
new file mode 100644
index 0000000..85c811e
--- /dev/null
+++ b/coverage/src/server/services/index.html
@@ -0,0 +1,236 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/services</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1088</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/733</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/184</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1038</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="holodex.ts"><a href="holodex.ts.html">holodex.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="115" class="abs low">0/115</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="168" class="abs low">0/168</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="105" class="abs low">0/105</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="keyboard_service.ts"><a href="keyboard_service.ts.html">keyboard_service.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="25" class="abs low">0/25</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="12" class="abs low">0/12</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="60" class="abs low">0/60</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="keyboard_worker.ts"><a href="keyboard_worker.ts.html">keyboard_worker.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="59" class="abs low">0/59</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="logger.ts"><a href="logger.ts.html">logger.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="72" class="abs low">0/72</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="39" class="abs low">0/39</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="13" class="abs low">0/13</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="63" class="abs low">0/63</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="player.ts"><a href="player.ts.html">player.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="585" class="abs low">0/585</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="332" class="abs low">0/332</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="89" class="abs low">0/89</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="568" class="abs low">0/568</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="player_manager.ts"><a href="player_manager.ts.html">player_manager.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="42" class="abs low">0/42</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="9" class="abs low">0/9</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="8" class="abs low">0/8</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="41" class="abs low">0/41</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="queue_service.ts"><a href="queue_service.ts.html">queue_service.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="76" class="abs low">0/76</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="36" class="abs low">0/36</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="20" class="abs low">0/20</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="74" class="abs low">0/74</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="twitch.ts"><a href="twitch.ts.html">twitch.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="81" class="abs low">0/81</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="51" class="abs low">0/51</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="74" class="abs low">0/74</td>
+	</tr>
+
+<tr>
+	<td class="file low" data-value="youtube.ts"><a href="youtube.ts.html">youtube.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="15" class="abs low">0/15</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="4" class="abs low">0/4</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="14" class="abs low">0/14</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/keyboard_service.ts.html b/coverage/src/server/services/keyboard_service.ts.html
new file mode 100644
index 0000000..95bdc7c
--- /dev/null
+++ b/coverage/src/server/services/keyboard_service.ts.html
@@ -0,0 +1,514 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/keyboard_service.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> keyboard_service.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/25</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/12</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/60</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { Worker } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { fileURLToPath } from 'url';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+&nbsp;
+// Create a singleton event emitter for keyboard events
+export const <span class="cstat-no" title="statement not covered" >keyboardEvents = new EventEmitter();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class K</span>eyboardService {
+  private worker?: Worker;
+  private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+  private initializationTimeout?: NodeJS.Timeout;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    this.setupWorker();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Keyboard service initializing...', 'KeyboardService');</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupWorker(</span>) {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Create a new worker thread using the keyboard worker file
+      const workerPath = <span class="cstat-no" title="statement not covered" >path.join(path.dirname(fileURLToPath(import.meta.url)), 'keyboard_worker.js');</span>
+<span class="cstat-no" title="statement not covered" >      this.worker = new Worker(workerPath);</span>
+&nbsp;
+      // Set a timeout for initialization
+<span class="cstat-no" title="statement not covered" >      this.initializationTimeout = setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Keyboard service initialization timed out. Please check your system permissions.',
+            'KeyboardService'
+          );
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      }, 5000);
+&nbsp;
+      // Handle messages from the worker
+<span class="cstat-no" title="statement not covered" >      this.worker.on('message', <span class="fstat-no" title="function not covered" >async </span>(message: { type: string; screen?: number; error?: string }) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+<span class="cstat-no" title="statement not covered" >          switch (message.type) {</span>
+            case 'ready': {
+<span class="cstat-no" title="statement not covered" >              clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >              logger.info('Keyboard service initialized successfully', 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'error': {
+<span class="cstat-no" title="statement not covered" >              clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >              logger.error(</span>
+                'Keyboard initialization error. Please ensure you have the required permissions:',
+                'KeyboardService',
+                new Error(message.error || 'Unknown error')
+              );
+<span class="cstat-no" title="statement not covered" >              logger.info(</span>
+                'To fix permission issues, try the following:\n' +
+                '1. Install required packages:\n' +
+                '   sudo apt-get install libx11-dev libxtst-dev libpng-dev\n' +
+                '2. Set input device permissions:\n' +
+                '   sudo chmod +r /dev/input/event*\n' +
+                '3. Add your user to the input group:\n' +
+                '   sudo usermod -a -G input $USER\n' +
+                '4. Log out and log back in for group changes to take effect',
+                'KeyboardService'
+              );
+<span class="cstat-no" title="statement not covered" >              this.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'autostart': {
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (message.screen) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`Keyboard shortcut: Alt+${message.screen === 1 ? 'L' : 'K'} - Auto-starting screen ${message.screen}`, 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >                keyboardEvents.emit('autostart', message.screen);</span>
+              }
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+            case 'closeall': {
+<span class="cstat-no" title="statement not covered" >              logger.info('Keyboard shortcut: Alt+F1 - Closing all players', 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >              keyboardEvents.emit('closeall');</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            }
+          }
+        } catch (error) {
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Failed to handle keyboard shortcut',
+            'KeyboardService',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        }
+      });
+&nbsp;
+      // Handle worker errors
+<span class="cstat-no" title="statement not covered" >      this.worker.on('error', <span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            'Keyboard worker error',
+            'KeyboardService',
+            error instanceof Error ? error : new Error(String(error))
+          );
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      });
+&nbsp;
+      // Handle worker exit
+<span class="cstat-no" title="statement not covered" >      this.worker.on('exit', <span class="fstat-no" title="function not covered" >(c</span>ode) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (code !== 0 &amp;&amp; !this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >          clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(`Keyboard worker stopped with exit code ${code}`, 'KeyboardService');</span>
+<span class="cstat-no" title="statement not covered" >          this.cleanup();</span>
+        }
+      });
+&nbsp;
+      // Set up signal handlers
+<span class="cstat-no" title="statement not covered" >      this.setupSignalHandlers();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to initialize keyboard service',
+        'KeyboardService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      this.cleanup();</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupSignalHandlers(</span>) {
+    // Ensure cleanup happens on process termination
+<span class="cstat-no" title="statement not covered" >    process.on('SIGINT', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+<span class="cstat-no" title="statement not covered" >    process.on('SIGTERM', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+<span class="cstat-no" title="statement not covered" >    process.on('exit', <span class="fstat-no" title="function not covered" >() =</span>&gt; <span class="cstat-no" title="statement not covered" >this.cleanup())</span>;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  cleanup(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >    clearTimeout(this.initializationTimeout);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.worker) {</span>
+      // Send cleanup message to worker
+<span class="cstat-no" title="statement not covered" >      this.worker.postMessage('cleanup');</span>
+      // Give the worker a chance to clean up
+<span class="cstat-no" title="statement not covered" >      setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        this.worker?.terminate();</span>
+<span class="cstat-no" title="statement not covered" >        this.worker = undefined;</span>
+      }, 1000);
+    }
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/keyboard_worker.ts.html b/coverage/src/server/services/keyboard_worker.ts.html
new file mode 100644
index 0000000..7f4b348
--- /dev/null
+++ b/coverage/src/server/services/keyboard_worker.ts.html
@@ -0,0 +1,385 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/keyboard_worker.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> keyboard_worker.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/59</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { parentPort } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { GlobalKeyboardListener } from 'node-global-key-listener';</span>
+<span class="cstat-no" title="statement not covered" >import { execSync } from 'child_process';</span>
+&nbsp;
+function <span class="fstat-no" title="function not covered" >checkInputPermissions(</span>) {
+<span class="cstat-no" title="statement not covered" >  try {</span>
+    // Check if user has access to input devices
+    const result = <span class="cstat-no" title="statement not covered" >execSync('ls -l /dev/input/event* 2&gt;/dev/null || true', { encoding: 'utf8' });</span>
+    const hasAccess = <span class="cstat-no" title="statement not covered" >result.split('\n').some(<span class="fstat-no" title="function not covered" >line </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >      line.includes(`input`) || line.includes(process.env.USER || '')</span>
+    );
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!hasAccess) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('No access to input devices. Please run: sudo usermod -a -G input $USER');</span>
+    }
+&nbsp;
+    // Check if uinput module is loaded
+    const modules = <span class="cstat-no" title="statement not covered" >execSync('lsmod | grep uinput || true', { encoding: 'utf8' });</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!modules.includes('uinput')) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error('uinput module not loaded. Please run: sudo modprobe uinput');</span>
+    }
+&nbsp;
+    // Check if streamlink is installed
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      execSync('which streamlink', { encoding: 'utf8' });</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      throw new Error('streamlink is not installed. Please install it with: sudo pacman -S streamlink');</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return true;</span>
+  } catch (error) {
+    const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >    throw new Error(`Permission check failed: ${errorMessage}`);</span>
+  }
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >try {</span>
+  // Check permissions first
+<span class="cstat-no" title="statement not covered" >  checkInputPermissions();</span>
+&nbsp;
+  // Initialize keyboard listener with minimal configuration
+  const keyboard = <span class="cstat-no" title="statement not covered" >new GlobalKeyboardListener({</span>
+    x11: {
+      onError: <span class="fstat-no" title="function not covered" >(e</span>rrorCode) =&gt; {
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (errorCode !== null) {</span>
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'error', 
+            error: `X11 keyboard error: ${errorCode}. Please ensure you have the correct permissions:
+1. Add user to input group: sudo usermod -a -G input $USER
+2. Load uinput module: sudo modprobe uinput
+3. Set permissions: sudo chmod 660 /dev/input/event*
+4. Log out and log back in for group changes to take effect` 
+          });
+        }
+      },
+      onInfo: <span class="fstat-no" title="function not covered" >(d</span>ata) =&gt; {
+<span class="cstat-no" title="statement not covered" >        parentPort?.postMessage({ </span>
+          type: 'info', 
+          data 
+        });
+      }
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  keyboard.addListener(<span class="fstat-no" title="function not covered" >(e</span>, down) =&gt; {</span>
+    // Alt + L: Auto-start screen 1
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'L' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'autostart', screen: 1 });</span>
+    }
+    
+    // Alt + K: Auto-start screen 2
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'K' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'autostart', screen: 2 });</span>
+    }
+    
+    // Alt + F1: Close all players
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (e.state === 'DOWN' &amp;&amp; e.name === 'F1' &amp;&amp; (down['LEFT ALT'] || down['RIGHT ALT'])) {</span>
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ type: 'closeall' });</span>
+    }
+&nbsp;
+    // Return true to prevent the event from being propagated
+<span class="cstat-no" title="statement not covered" >    return true;</span>
+  });
+&nbsp;
+  // Handle cleanup message from main thread
+<span class="cstat-no" title="statement not covered" >  parentPort?.on('message', <span class="fstat-no" title="function not covered" >(m</span>essage) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (message === 'cleanup') {</span>
+<span class="cstat-no" title="statement not covered" >      keyboard.kill();</span>
+<span class="cstat-no" title="statement not covered" >      process.exit(0);</span>
+    }
+  });
+&nbsp;
+  // Notify main thread that initialization was successful
+<span class="cstat-no" title="statement not covered" >  parentPort?.postMessage({ type: 'ready' });</span>
+} catch (error) {
+<span class="cstat-no" title="statement not covered" >  parentPort?.postMessage({ </span>
+    type: 'error', 
+    error: error instanceof Error ? error.message : String(error)
+  });
+<span class="cstat-no" title="statement not covered" >  process.exit(1);</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/logger.ts.html b/coverage/src/server/services/logger.ts.html
new file mode 100644
index 0000000..ee08b44
--- /dev/null
+++ b/coverage/src/server/services/logger.ts.html
@@ -0,0 +1,655 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> logger.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/72</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/39</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/63</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import chalk from 'chalk';</span>
+<span class="cstat-no" title="statement not covered" >import { createLogger, format, transports } from 'winston';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+&nbsp;
+const { combine, timestamp, printf } = <span class="cstat-no" title="statement not covered" >format;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >export enum L</span>ogLevel {</span>
+<span class="cstat-no" title="statement not covered" >  ERROR = 'error',</span>
+<span class="cstat-no" title="statement not covered" >  WARN = 'warn',</span>
+<span class="cstat-no" title="statement not covered" >  INFO = 'info',</span>
+<span class="cstat-no" title="statement not covered" >  DEBUG = 'debug'</span>
+}
+&nbsp;
+interface LogMessage {
+  level: LogLevel;
+  message: string;
+  timestamp?: string;
+  context?: string;
+  error?: Error | unknown;
+}
+&nbsp;
+// Parse command line arguments
+const args = <span class="cstat-no" title="statement not covered" >process.argv.slice(2);</span>
+const isDebug = <span class="cstat-no" title="statement not covered" >args.includes('-d') || args.includes('--debug');</span>
+const isVerbose = <span class="cstat-no" title="statement not covered" >args.includes('-v') || args.includes('--verbose');</span>
+const envDebug = <span class="cstat-no" title="statement not covered" >process.env.DEBUG === '1' || process.env.VERBOSE === '1';</span>
+&nbsp;
+// Create a custom format for consistent logging
+const customFormat = <span class="cstat-no" title="statement not covered" >printf(<span class="fstat-no" title="function not covered" >({</span> level, message, timestamp, context, error, trace }) =&gt; {</span>
+  const colorize = <span class="cstat-no" title="statement not covered" >{</span>
+    [LogLevel.ERROR]: chalk.red,
+    [LogLevel.WARN]: chalk.yellow,
+    [LogLevel.INFO]: chalk.blue,
+    [LogLevel.DEBUG]: chalk.gray
+  };
+&nbsp;
+  const colorFn = <span class="cstat-no" title="statement not covered" >colorize[level as LogLevel] || chalk.white;</span>
+  const contextStr = <span class="cstat-no" title="statement not covered" >context ? `[${context}] ` : '';</span>
+  const timestampStr = <span class="cstat-no" title="statement not covered" >isVerbose </span>
+    ? String(timestamp) 
+    : (String(timestamp).split('T')[1] || '').split('.')[0];
+  const baseMessage = <span class="cstat-no" title="statement not covered" >`${timestampStr} [${level.toUpperCase()}] ${contextStr}${message}`;</span>
+  
+  let fullMessage = <span class="cstat-no" title="statement not covered" >colorFn(baseMessage);</span>
+  
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >    fullMessage += '\n' + chalk.red(error.stack);</span>
+  }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (isVerbose &amp;&amp; trace) {</span>
+<span class="cstat-no" title="statement not covered" >    fullMessage += '\n' + chalk.gray(trace);</span>
+  }
+  
+<span class="cstat-no" title="statement not covered" >  return fullMessage;</span>
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class L</span>ogger {
+  private logger;
+  private currentLevel: LogLevel;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+    // Set initial log level based on arguments and environment
+<span class="cstat-no" title="statement not covered" >    this.currentLevel = (isDebug || isVerbose || envDebug) ? LogLevel.DEBUG : LogLevel.INFO;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    this.logger = createLogger({</span>
+      level: this.currentLevel,
+      format: combine(
+        timestamp(),
+        format.errors({ stack: true }),
+        customFormat
+      ),
+      transports: [
+        new transports.Console({
+          level: this.currentLevel
+        }),
+        new transports.File({ 
+          filename: path.join('logs', 'error.log'), 
+          level: 'error',
+          format: format.uncolorize() // Remove colors for file output
+        }),
+        new transports.File({ 
+          filename: path.join('logs', 'combined.log'),
+          format: format.uncolorize() // Remove colors for file output
+        })
+      ]
+    });
+&nbsp;
+    // Log initial debug state
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.currentLevel === LogLevel.DEBUG) {</span>
+      const reason = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isDebug) <span class="cstat-no" title="statement not covered" >reason.push('--debug flag');</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isVerbose) <span class="cstat-no" title="statement not covered" >reason.push('--verbose flag');</span></span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (envDebug) <span class="cstat-no" title="statement not covered" >reason.push('DEBUG/VERBOSE environment variable');</span></span>
+<span class="cstat-no" title="statement not covered" >      this.debug('Debug logging enabled via: %s', reason.join(', '));</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  setLevel(</span>level: LogLevel | string) {
+<span class="cstat-no" title="statement not covered" >    this.currentLevel = level.toLowerCase() as LogLevel;</span>
+<span class="cstat-no" title="statement not covered" >    this.logger.level = this.currentLevel;</span>
+<span class="cstat-no" title="statement not covered" >    this.debug('Log level set to %s', this.currentLevel);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  shouldLog(</span>level: LogLevel): boolean {
+    const levels = <span class="cstat-no" title="statement not covered" >{</span>
+      [LogLevel.ERROR]: 0,
+      [LogLevel.WARN]: 1,
+      [LogLevel.INFO]: 2,
+      [LogLevel.DEBUG]: 3
+    };
+<span class="cstat-no" title="statement not covered" >    return levels[level] &lt;= levels[this.currentLevel];</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >formatMessage(</span>message: string, ...args: (string | number)[]): string {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (args.length === 0) <span class="cstat-no" title="statement not covered" >return message;</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      return message.replace(/%[sdj%]/g, <span class="fstat-no" title="function not covered" >(m</span>atch: string): string =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (match === '%%') <span class="cstat-no" title="statement not covered" >return '%';</span></span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (args.length === 0) <span class="cstat-no" title="statement not covered" >return match;</span></span>
+        const arg = <span class="cstat-no" title="statement not covered" >args.shift();</span>
+<span class="cstat-no" title="statement not covered" >        switch (match) {</span>
+          case '%s': <span class="cstat-no" title="statement not covered" >return String(arg);</span>
+          case '%d': <span class="cstat-no" title="statement not covered" >return String(Number(arg));</span>
+          case '%j': <span class="cstat-no" title="statement not covered" >return JSON.stringify(arg);</span>
+          default: <span class="cstat-no" title="statement not covered" >return match;</span>
+        }
+      });
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      return message;</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >getStackTrace(</span>): string | undefined {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!isVerbose) <span class="cstat-no" title="statement not covered" >return undefined;</span></span>
+    const stack = <span class="cstat-no" title="statement not covered" >new Error().stack;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stack) <span class="cstat-no" title="statement not covered" >return undefined;</span></span>
+    
+    // Get the calling function's location
+    const lines = <span class="cstat-no" title="statement not covered" >stack.split('\n').slice(3);</span> // Skip Error, getStackTrace, and log calls
+<span class="cstat-no" title="statement not covered" >    return lines.join('\n');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  log(</span>logData: LogMessage) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.shouldLog(logData.level)) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    this.logger.log({</span>
+      level: logData.level,
+      message: logData.message,
+      context: logData.context,
+      error: logData.error,
+      timestamp: new Date().toISOString(),
+      trace: this.getStackTrace()
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  error(</span>message: string, context?: string, error?: Error) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.ERROR, 
+      message: this.formatMessage(message), 
+      context, 
+      error 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  warn(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.WARN, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  info(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.INFO, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  debug(</span>message: string, context?: string, ...args: (string | number)[]) {
+<span class="cstat-no" title="statement not covered" >    this.log({ </span>
+      level: LogLevel.DEBUG, 
+      message: this.formatMessage(message, ...args), 
+      context 
+    });
+  }
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >logger = new Logger(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/logger/index.html b/coverage/src/server/services/logger/index.html
new file mode 100644
index 0000000..16ea839
--- /dev/null
+++ b/coverage/src/server/services/logger/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../../prettify.css" />
+    <link rel="stylesheet" href="../../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../../index.html">All files</a> src/server/services/logger</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="6" class="abs low">0/6</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="18" class="abs low">0/18</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../../sorter.js"></script>
+        <script src="../../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/logger/index.ts.html b/coverage/src/server/services/logger/index.ts.html
new file mode 100644
index 0000000..08055c7
--- /dev/null
+++ b/coverage/src/server/services/logger/index.ts.html
@@ -0,0 +1,310 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/logger/index.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../../prettify.css" />
+    <link rel="stylesheet" href="../../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../../index.html">All files</a> / <a href="index.html">src/server/services/logger</a> index.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/6</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/18</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { createLogger, format, transports } from 'winston';</span>
+<span class="cstat-no" title="statement not covered" >import { join } from 'path';</span>
+&nbsp;
+const logDir = <span class="cstat-no" title="statement not covered" >join(process.cwd(), 'logs');</span>
+&nbsp;
+const winstonLogger = <span class="cstat-no" title="statement not covered" >createLogger({</span>
+  level: 'debug',
+  format: format.combine(
+    format.timestamp(),
+    format.errors({ stack: true }),
+    format.splat(),
+    format.json()
+  ),
+  defaultMeta: { service: 'livelink' },
+  transports: [
+    new transports.File({ filename: join(logDir, 'error.log'), level: 'error' }),
+    new transports.File({ filename: join(logDir, 'combined.log') })
+  ]
+});
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (process.env.NODE_ENV !== 'production') {</span>
+<span class="cstat-no" title="statement not covered" >  winstonLogger.add(new transports.Console({</span>
+    format: format.combine(
+      format.colorize(),
+      format.simple()
+    )
+  }));
+}
+&nbsp;
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+export type LogError = Error | string | number;
+&nbsp;
+interface LogContext {
+  context: string;
+  error?: {
+    message?: string;
+    stack?: string;
+    details?: unknown;
+  };
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >formatError(</span>error: LogError): LogContext['error'] {
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error instanceof Error) {</span>
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      message: error.message,
+      stack: error.stack,
+      details: error
+    };
+  }
+<span class="cstat-no" title="statement not covered" >  return {</span>
+    message: String(error)
+  };
+}
+&nbsp;
+function <span class="fstat-no" title="function not covered" >log(</span>level: LogLevel, message: string, context: string, error?: LogError) {
+  const meta: LogContext = <span class="cstat-no" title="statement not covered" >{ context };</span>
+<span class="cstat-no" title="statement not covered" >  <span class="missing-if-branch" title="if path not taken" >I</span>if (error !== undefined) {</span>
+<span class="cstat-no" title="statement not covered" >    meta.error = formatError(error);</span>
+  }
+<span class="cstat-no" title="statement not covered" >  winstonLogger.log(level, message, meta);</span>
+}
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >logger = {</span>
+  debug: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('debug', message, context, error);</span>
+  },
+  info: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('info', message, context, error);</span>
+  },
+  warn: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('warn', message, context, error);</span>
+  },
+  error: <span class="fstat-no" title="function not covered" >(m</span>essage: string, context: string, error?: LogError) =&gt; {
+<span class="cstat-no" title="statement not covered" >    log('error', message, context, error);</span>
+  }
+}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../../sorter.js"></script>
+        <script src="../../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/player.ts.html b/coverage/src/server/services/player.ts.html
new file mode 100644
index 0000000..e99a233
--- /dev/null
+++ b/coverage/src/server/services/player.ts.html
@@ -0,0 +1,4555 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/player.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> player.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/585</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/332</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/89</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/568</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a>
+<a name='L1125'></a><a href='#L1125'>1125</a>
+<a name='L1126'></a><a href='#L1126'>1126</a>
+<a name='L1127'></a><a href='#L1127'>1127</a>
+<a name='L1128'></a><a href='#L1128'>1128</a>
+<a name='L1129'></a><a href='#L1129'>1129</a>
+<a name='L1130'></a><a href='#L1130'>1130</a>
+<a name='L1131'></a><a href='#L1131'>1131</a>
+<a name='L1132'></a><a href='#L1132'>1132</a>
+<a name='L1133'></a><a href='#L1133'>1133</a>
+<a name='L1134'></a><a href='#L1134'>1134</a>
+<a name='L1135'></a><a href='#L1135'>1135</a>
+<a name='L1136'></a><a href='#L1136'>1136</a>
+<a name='L1137'></a><a href='#L1137'>1137</a>
+<a name='L1138'></a><a href='#L1138'>1138</a>
+<a name='L1139'></a><a href='#L1139'>1139</a>
+<a name='L1140'></a><a href='#L1140'>1140</a>
+<a name='L1141'></a><a href='#L1141'>1141</a>
+<a name='L1142'></a><a href='#L1142'>1142</a>
+<a name='L1143'></a><a href='#L1143'>1143</a>
+<a name='L1144'></a><a href='#L1144'>1144</a>
+<a name='L1145'></a><a href='#L1145'>1145</a>
+<a name='L1146'></a><a href='#L1146'>1146</a>
+<a name='L1147'></a><a href='#L1147'>1147</a>
+<a name='L1148'></a><a href='#L1148'>1148</a>
+<a name='L1149'></a><a href='#L1149'>1149</a>
+<a name='L1150'></a><a href='#L1150'>1150</a>
+<a name='L1151'></a><a href='#L1151'>1151</a>
+<a name='L1152'></a><a href='#L1152'>1152</a>
+<a name='L1153'></a><a href='#L1153'>1153</a>
+<a name='L1154'></a><a href='#L1154'>1154</a>
+<a name='L1155'></a><a href='#L1155'>1155</a>
+<a name='L1156'></a><a href='#L1156'>1156</a>
+<a name='L1157'></a><a href='#L1157'>1157</a>
+<a name='L1158'></a><a href='#L1158'>1158</a>
+<a name='L1159'></a><a href='#L1159'>1159</a>
+<a name='L1160'></a><a href='#L1160'>1160</a>
+<a name='L1161'></a><a href='#L1161'>1161</a>
+<a name='L1162'></a><a href='#L1162'>1162</a>
+<a name='L1163'></a><a href='#L1163'>1163</a>
+<a name='L1164'></a><a href='#L1164'>1164</a>
+<a name='L1165'></a><a href='#L1165'>1165</a>
+<a name='L1166'></a><a href='#L1166'>1166</a>
+<a name='L1167'></a><a href='#L1167'>1167</a>
+<a name='L1168'></a><a href='#L1168'>1168</a>
+<a name='L1169'></a><a href='#L1169'>1169</a>
+<a name='L1170'></a><a href='#L1170'>1170</a>
+<a name='L1171'></a><a href='#L1171'>1171</a>
+<a name='L1172'></a><a href='#L1172'>1172</a>
+<a name='L1173'></a><a href='#L1173'>1173</a>
+<a name='L1174'></a><a href='#L1174'>1174</a>
+<a name='L1175'></a><a href='#L1175'>1175</a>
+<a name='L1176'></a><a href='#L1176'>1176</a>
+<a name='L1177'></a><a href='#L1177'>1177</a>
+<a name='L1178'></a><a href='#L1178'>1178</a>
+<a name='L1179'></a><a href='#L1179'>1179</a>
+<a name='L1180'></a><a href='#L1180'>1180</a>
+<a name='L1181'></a><a href='#L1181'>1181</a>
+<a name='L1182'></a><a href='#L1182'>1182</a>
+<a name='L1183'></a><a href='#L1183'>1183</a>
+<a name='L1184'></a><a href='#L1184'>1184</a>
+<a name='L1185'></a><a href='#L1185'>1185</a>
+<a name='L1186'></a><a href='#L1186'>1186</a>
+<a name='L1187'></a><a href='#L1187'>1187</a>
+<a name='L1188'></a><a href='#L1188'>1188</a>
+<a name='L1189'></a><a href='#L1189'>1189</a>
+<a name='L1190'></a><a href='#L1190'>1190</a>
+<a name='L1191'></a><a href='#L1191'>1191</a>
+<a name='L1192'></a><a href='#L1192'>1192</a>
+<a name='L1193'></a><a href='#L1193'>1193</a>
+<a name='L1194'></a><a href='#L1194'>1194</a>
+<a name='L1195'></a><a href='#L1195'>1195</a>
+<a name='L1196'></a><a href='#L1196'>1196</a>
+<a name='L1197'></a><a href='#L1197'>1197</a>
+<a name='L1198'></a><a href='#L1198'>1198</a>
+<a name='L1199'></a><a href='#L1199'>1199</a>
+<a name='L1200'></a><a href='#L1200'>1200</a>
+<a name='L1201'></a><a href='#L1201'>1201</a>
+<a name='L1202'></a><a href='#L1202'>1202</a>
+<a name='L1203'></a><a href='#L1203'>1203</a>
+<a name='L1204'></a><a href='#L1204'>1204</a>
+<a name='L1205'></a><a href='#L1205'>1205</a>
+<a name='L1206'></a><a href='#L1206'>1206</a>
+<a name='L1207'></a><a href='#L1207'>1207</a>
+<a name='L1208'></a><a href='#L1208'>1208</a>
+<a name='L1209'></a><a href='#L1209'>1209</a>
+<a name='L1210'></a><a href='#L1210'>1210</a>
+<a name='L1211'></a><a href='#L1211'>1211</a>
+<a name='L1212'></a><a href='#L1212'>1212</a>
+<a name='L1213'></a><a href='#L1213'>1213</a>
+<a name='L1214'></a><a href='#L1214'>1214</a>
+<a name='L1215'></a><a href='#L1215'>1215</a>
+<a name='L1216'></a><a href='#L1216'>1216</a>
+<a name='L1217'></a><a href='#L1217'>1217</a>
+<a name='L1218'></a><a href='#L1218'>1218</a>
+<a name='L1219'></a><a href='#L1219'>1219</a>
+<a name='L1220'></a><a href='#L1220'>1220</a>
+<a name='L1221'></a><a href='#L1221'>1221</a>
+<a name='L1222'></a><a href='#L1222'>1222</a>
+<a name='L1223'></a><a href='#L1223'>1223</a>
+<a name='L1224'></a><a href='#L1224'>1224</a>
+<a name='L1225'></a><a href='#L1225'>1225</a>
+<a name='L1226'></a><a href='#L1226'>1226</a>
+<a name='L1227'></a><a href='#L1227'>1227</a>
+<a name='L1228'></a><a href='#L1228'>1228</a>
+<a name='L1229'></a><a href='#L1229'>1229</a>
+<a name='L1230'></a><a href='#L1230'>1230</a>
+<a name='L1231'></a><a href='#L1231'>1231</a>
+<a name='L1232'></a><a href='#L1232'>1232</a>
+<a name='L1233'></a><a href='#L1233'>1233</a>
+<a name='L1234'></a><a href='#L1234'>1234</a>
+<a name='L1235'></a><a href='#L1235'>1235</a>
+<a name='L1236'></a><a href='#L1236'>1236</a>
+<a name='L1237'></a><a href='#L1237'>1237</a>
+<a name='L1238'></a><a href='#L1238'>1238</a>
+<a name='L1239'></a><a href='#L1239'>1239</a>
+<a name='L1240'></a><a href='#L1240'>1240</a>
+<a name='L1241'></a><a href='#L1241'>1241</a>
+<a name='L1242'></a><a href='#L1242'>1242</a>
+<a name='L1243'></a><a href='#L1243'>1243</a>
+<a name='L1244'></a><a href='#L1244'>1244</a>
+<a name='L1245'></a><a href='#L1245'>1245</a>
+<a name='L1246'></a><a href='#L1246'>1246</a>
+<a name='L1247'></a><a href='#L1247'>1247</a>
+<a name='L1248'></a><a href='#L1248'>1248</a>
+<a name='L1249'></a><a href='#L1249'>1249</a>
+<a name='L1250'></a><a href='#L1250'>1250</a>
+<a name='L1251'></a><a href='#L1251'>1251</a>
+<a name='L1252'></a><a href='#L1252'>1252</a>
+<a name='L1253'></a><a href='#L1253'>1253</a>
+<a name='L1254'></a><a href='#L1254'>1254</a>
+<a name='L1255'></a><a href='#L1255'>1255</a>
+<a name='L1256'></a><a href='#L1256'>1256</a>
+<a name='L1257'></a><a href='#L1257'>1257</a>
+<a name='L1258'></a><a href='#L1258'>1258</a>
+<a name='L1259'></a><a href='#L1259'>1259</a>
+<a name='L1260'></a><a href='#L1260'>1260</a>
+<a name='L1261'></a><a href='#L1261'>1261</a>
+<a name='L1262'></a><a href='#L1262'>1262</a>
+<a name='L1263'></a><a href='#L1263'>1263</a>
+<a name='L1264'></a><a href='#L1264'>1264</a>
+<a name='L1265'></a><a href='#L1265'>1265</a>
+<a name='L1266'></a><a href='#L1266'>1266</a>
+<a name='L1267'></a><a href='#L1267'>1267</a>
+<a name='L1268'></a><a href='#L1268'>1268</a>
+<a name='L1269'></a><a href='#L1269'>1269</a>
+<a name='L1270'></a><a href='#L1270'>1270</a>
+<a name='L1271'></a><a href='#L1271'>1271</a>
+<a name='L1272'></a><a href='#L1272'>1272</a>
+<a name='L1273'></a><a href='#L1273'>1273</a>
+<a name='L1274'></a><a href='#L1274'>1274</a>
+<a name='L1275'></a><a href='#L1275'>1275</a>
+<a name='L1276'></a><a href='#L1276'>1276</a>
+<a name='L1277'></a><a href='#L1277'>1277</a>
+<a name='L1278'></a><a href='#L1278'>1278</a>
+<a name='L1279'></a><a href='#L1279'>1279</a>
+<a name='L1280'></a><a href='#L1280'>1280</a>
+<a name='L1281'></a><a href='#L1281'>1281</a>
+<a name='L1282'></a><a href='#L1282'>1282</a>
+<a name='L1283'></a><a href='#L1283'>1283</a>
+<a name='L1284'></a><a href='#L1284'>1284</a>
+<a name='L1285'></a><a href='#L1285'>1285</a>
+<a name='L1286'></a><a href='#L1286'>1286</a>
+<a name='L1287'></a><a href='#L1287'>1287</a>
+<a name='L1288'></a><a href='#L1288'>1288</a>
+<a name='L1289'></a><a href='#L1289'>1289</a>
+<a name='L1290'></a><a href='#L1290'>1290</a>
+<a name='L1291'></a><a href='#L1291'>1291</a>
+<a name='L1292'></a><a href='#L1292'>1292</a>
+<a name='L1293'></a><a href='#L1293'>1293</a>
+<a name='L1294'></a><a href='#L1294'>1294</a>
+<a name='L1295'></a><a href='#L1295'>1295</a>
+<a name='L1296'></a><a href='#L1296'>1296</a>
+<a name='L1297'></a><a href='#L1297'>1297</a>
+<a name='L1298'></a><a href='#L1298'>1298</a>
+<a name='L1299'></a><a href='#L1299'>1299</a>
+<a name='L1300'></a><a href='#L1300'>1300</a>
+<a name='L1301'></a><a href='#L1301'>1301</a>
+<a name='L1302'></a><a href='#L1302'>1302</a>
+<a name='L1303'></a><a href='#L1303'>1303</a>
+<a name='L1304'></a><a href='#L1304'>1304</a>
+<a name='L1305'></a><a href='#L1305'>1305</a>
+<a name='L1306'></a><a href='#L1306'>1306</a>
+<a name='L1307'></a><a href='#L1307'>1307</a>
+<a name='L1308'></a><a href='#L1308'>1308</a>
+<a name='L1309'></a><a href='#L1309'>1309</a>
+<a name='L1310'></a><a href='#L1310'>1310</a>
+<a name='L1311'></a><a href='#L1311'>1311</a>
+<a name='L1312'></a><a href='#L1312'>1312</a>
+<a name='L1313'></a><a href='#L1313'>1313</a>
+<a name='L1314'></a><a href='#L1314'>1314</a>
+<a name='L1315'></a><a href='#L1315'>1315</a>
+<a name='L1316'></a><a href='#L1316'>1316</a>
+<a name='L1317'></a><a href='#L1317'>1317</a>
+<a name='L1318'></a><a href='#L1318'>1318</a>
+<a name='L1319'></a><a href='#L1319'>1319</a>
+<a name='L1320'></a><a href='#L1320'>1320</a>
+<a name='L1321'></a><a href='#L1321'>1321</a>
+<a name='L1322'></a><a href='#L1322'>1322</a>
+<a name='L1323'></a><a href='#L1323'>1323</a>
+<a name='L1324'></a><a href='#L1324'>1324</a>
+<a name='L1325'></a><a href='#L1325'>1325</a>
+<a name='L1326'></a><a href='#L1326'>1326</a>
+<a name='L1327'></a><a href='#L1327'>1327</a>
+<a name='L1328'></a><a href='#L1328'>1328</a>
+<a name='L1329'></a><a href='#L1329'>1329</a>
+<a name='L1330'></a><a href='#L1330'>1330</a>
+<a name='L1331'></a><a href='#L1331'>1331</a>
+<a name='L1332'></a><a href='#L1332'>1332</a>
+<a name='L1333'></a><a href='#L1333'>1333</a>
+<a name='L1334'></a><a href='#L1334'>1334</a>
+<a name='L1335'></a><a href='#L1335'>1335</a>
+<a name='L1336'></a><a href='#L1336'>1336</a>
+<a name='L1337'></a><a href='#L1337'>1337</a>
+<a name='L1338'></a><a href='#L1338'>1338</a>
+<a name='L1339'></a><a href='#L1339'>1339</a>
+<a name='L1340'></a><a href='#L1340'>1340</a>
+<a name='L1341'></a><a href='#L1341'>1341</a>
+<a name='L1342'></a><a href='#L1342'>1342</a>
+<a name='L1343'></a><a href='#L1343'>1343</a>
+<a name='L1344'></a><a href='#L1344'>1344</a>
+<a name='L1345'></a><a href='#L1345'>1345</a>
+<a name='L1346'></a><a href='#L1346'>1346</a>
+<a name='L1347'></a><a href='#L1347'>1347</a>
+<a name='L1348'></a><a href='#L1348'>1348</a>
+<a name='L1349'></a><a href='#L1349'>1349</a>
+<a name='L1350'></a><a href='#L1350'>1350</a>
+<a name='L1351'></a><a href='#L1351'>1351</a>
+<a name='L1352'></a><a href='#L1352'>1352</a>
+<a name='L1353'></a><a href='#L1353'>1353</a>
+<a name='L1354'></a><a href='#L1354'>1354</a>
+<a name='L1355'></a><a href='#L1355'>1355</a>
+<a name='L1356'></a><a href='#L1356'>1356</a>
+<a name='L1357'></a><a href='#L1357'>1357</a>
+<a name='L1358'></a><a href='#L1358'>1358</a>
+<a name='L1359'></a><a href='#L1359'>1359</a>
+<a name='L1360'></a><a href='#L1360'>1360</a>
+<a name='L1361'></a><a href='#L1361'>1361</a>
+<a name='L1362'></a><a href='#L1362'>1362</a>
+<a name='L1363'></a><a href='#L1363'>1363</a>
+<a name='L1364'></a><a href='#L1364'>1364</a>
+<a name='L1365'></a><a href='#L1365'>1365</a>
+<a name='L1366'></a><a href='#L1366'>1366</a>
+<a name='L1367'></a><a href='#L1367'>1367</a>
+<a name='L1368'></a><a href='#L1368'>1368</a>
+<a name='L1369'></a><a href='#L1369'>1369</a>
+<a name='L1370'></a><a href='#L1370'>1370</a>
+<a name='L1371'></a><a href='#L1371'>1371</a>
+<a name='L1372'></a><a href='#L1372'>1372</a>
+<a name='L1373'></a><a href='#L1373'>1373</a>
+<a name='L1374'></a><a href='#L1374'>1374</a>
+<a name='L1375'></a><a href='#L1375'>1375</a>
+<a name='L1376'></a><a href='#L1376'>1376</a>
+<a name='L1377'></a><a href='#L1377'>1377</a>
+<a name='L1378'></a><a href='#L1378'>1378</a>
+<a name='L1379'></a><a href='#L1379'>1379</a>
+<a name='L1380'></a><a href='#L1380'>1380</a>
+<a name='L1381'></a><a href='#L1381'>1381</a>
+<a name='L1382'></a><a href='#L1382'>1382</a>
+<a name='L1383'></a><a href='#L1383'>1383</a>
+<a name='L1384'></a><a href='#L1384'>1384</a>
+<a name='L1385'></a><a href='#L1385'>1385</a>
+<a name='L1386'></a><a href='#L1386'>1386</a>
+<a name='L1387'></a><a href='#L1387'>1387</a>
+<a name='L1388'></a><a href='#L1388'>1388</a>
+<a name='L1389'></a><a href='#L1389'>1389</a>
+<a name='L1390'></a><a href='#L1390'>1390</a>
+<a name='L1391'></a><a href='#L1391'>1391</a>
+<a name='L1392'></a><a href='#L1392'>1392</a>
+<a name='L1393'></a><a href='#L1393'>1393</a>
+<a name='L1394'></a><a href='#L1394'>1394</a>
+<a name='L1395'></a><a href='#L1395'>1395</a>
+<a name='L1396'></a><a href='#L1396'>1396</a>
+<a name='L1397'></a><a href='#L1397'>1397</a>
+<a name='L1398'></a><a href='#L1398'>1398</a>
+<a name='L1399'></a><a href='#L1399'>1399</a>
+<a name='L1400'></a><a href='#L1400'>1400</a>
+<a name='L1401'></a><a href='#L1401'>1401</a>
+<a name='L1402'></a><a href='#L1402'>1402</a>
+<a name='L1403'></a><a href='#L1403'>1403</a>
+<a name='L1404'></a><a href='#L1404'>1404</a>
+<a name='L1405'></a><a href='#L1405'>1405</a>
+<a name='L1406'></a><a href='#L1406'>1406</a>
+<a name='L1407'></a><a href='#L1407'>1407</a>
+<a name='L1408'></a><a href='#L1408'>1408</a>
+<a name='L1409'></a><a href='#L1409'>1409</a>
+<a name='L1410'></a><a href='#L1410'>1410</a>
+<a name='L1411'></a><a href='#L1411'>1411</a>
+<a name='L1412'></a><a href='#L1412'>1412</a>
+<a name='L1413'></a><a href='#L1413'>1413</a>
+<a name='L1414'></a><a href='#L1414'>1414</a>
+<a name='L1415'></a><a href='#L1415'>1415</a>
+<a name='L1416'></a><a href='#L1416'>1416</a>
+<a name='L1417'></a><a href='#L1417'>1417</a>
+<a name='L1418'></a><a href='#L1418'>1418</a>
+<a name='L1419'></a><a href='#L1419'>1419</a>
+<a name='L1420'></a><a href='#L1420'>1420</a>
+<a name='L1421'></a><a href='#L1421'>1421</a>
+<a name='L1422'></a><a href='#L1422'>1422</a>
+<a name='L1423'></a><a href='#L1423'>1423</a>
+<a name='L1424'></a><a href='#L1424'>1424</a>
+<a name='L1425'></a><a href='#L1425'>1425</a>
+<a name='L1426'></a><a href='#L1426'>1426</a>
+<a name='L1427'></a><a href='#L1427'>1427</a>
+<a name='L1428'></a><a href='#L1428'>1428</a>
+<a name='L1429'></a><a href='#L1429'>1429</a>
+<a name='L1430'></a><a href='#L1430'>1430</a>
+<a name='L1431'></a><a href='#L1431'>1431</a>
+<a name='L1432'></a><a href='#L1432'>1432</a>
+<a name='L1433'></a><a href='#L1433'>1433</a>
+<a name='L1434'></a><a href='#L1434'>1434</a>
+<a name='L1435'></a><a href='#L1435'>1435</a>
+<a name='L1436'></a><a href='#L1436'>1436</a>
+<a name='L1437'></a><a href='#L1437'>1437</a>
+<a name='L1438'></a><a href='#L1438'>1438</a>
+<a name='L1439'></a><a href='#L1439'>1439</a>
+<a name='L1440'></a><a href='#L1440'>1440</a>
+<a name='L1441'></a><a href='#L1441'>1441</a>
+<a name='L1442'></a><a href='#L1442'>1442</a>
+<a name='L1443'></a><a href='#L1443'>1443</a>
+<a name='L1444'></a><a href='#L1444'>1444</a>
+<a name='L1445'></a><a href='#L1445'>1445</a>
+<a name='L1446'></a><a href='#L1446'>1446</a>
+<a name='L1447'></a><a href='#L1447'>1447</a>
+<a name='L1448'></a><a href='#L1448'>1448</a>
+<a name='L1449'></a><a href='#L1449'>1449</a>
+<a name='L1450'></a><a href='#L1450'>1450</a>
+<a name='L1451'></a><a href='#L1451'>1451</a>
+<a name='L1452'></a><a href='#L1452'>1452</a>
+<a name='L1453'></a><a href='#L1453'>1453</a>
+<a name='L1454'></a><a href='#L1454'>1454</a>
+<a name='L1455'></a><a href='#L1455'>1455</a>
+<a name='L1456'></a><a href='#L1456'>1456</a>
+<a name='L1457'></a><a href='#L1457'>1457</a>
+<a name='L1458'></a><a href='#L1458'>1458</a>
+<a name='L1459'></a><a href='#L1459'>1459</a>
+<a name='L1460'></a><a href='#L1460'>1460</a>
+<a name='L1461'></a><a href='#L1461'>1461</a>
+<a name='L1462'></a><a href='#L1462'>1462</a>
+<a name='L1463'></a><a href='#L1463'>1463</a>
+<a name='L1464'></a><a href='#L1464'>1464</a>
+<a name='L1465'></a><a href='#L1465'>1465</a>
+<a name='L1466'></a><a href='#L1466'>1466</a>
+<a name='L1467'></a><a href='#L1467'>1467</a>
+<a name='L1468'></a><a href='#L1468'>1468</a>
+<a name='L1469'></a><a href='#L1469'>1469</a>
+<a name='L1470'></a><a href='#L1470'>1470</a>
+<a name='L1471'></a><a href='#L1471'>1471</a>
+<a name='L1472'></a><a href='#L1472'>1472</a>
+<a name='L1473'></a><a href='#L1473'>1473</a>
+<a name='L1474'></a><a href='#L1474'>1474</a>
+<a name='L1475'></a><a href='#L1475'>1475</a>
+<a name='L1476'></a><a href='#L1476'>1476</a>
+<a name='L1477'></a><a href='#L1477'>1477</a>
+<a name='L1478'></a><a href='#L1478'>1478</a>
+<a name='L1479'></a><a href='#L1479'>1479</a>
+<a name='L1480'></a><a href='#L1480'>1480</a>
+<a name='L1481'></a><a href='#L1481'>1481</a>
+<a name='L1482'></a><a href='#L1482'>1482</a>
+<a name='L1483'></a><a href='#L1483'>1483</a>
+<a name='L1484'></a><a href='#L1484'>1484</a>
+<a name='L1485'></a><a href='#L1485'>1485</a>
+<a name='L1486'></a><a href='#L1486'>1486</a>
+<a name='L1487'></a><a href='#L1487'>1487</a>
+<a name='L1488'></a><a href='#L1488'>1488</a>
+<a name='L1489'></a><a href='#L1489'>1489</a>
+<a name='L1490'></a><a href='#L1490'>1490</a>
+<a name='L1491'></a><a href='#L1491'>1491</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { Config, StreamOptions } from '../../types/stream.js';
+import type { StreamOutput, StreamError, StreamResponse } from '../../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger/index.js';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs';</span>
+<span class="cstat-no" title="statement not covered" >import net from 'net';</span>
+<span class="cstat-no" title="statement not covered" >import { spawn, exec, execSync, type ChildProcess } from 'child_process';</span>
+&nbsp;
+interface LocalStreamInstance {
+	id: number;
+	screen: number;
+	url: string;
+	quality: string;
+	status: string;
+	volume: number;
+	process: ChildProcess;
+	platform: 'youtube' | 'twitch';
+	title?: string;
+	startTime?: number;
+	options: StreamOptions &amp; { screen: number };
+}
+&nbsp;
+interface LocalStreamEnd {
+	screen: number;
+	error?: Error | string;
+	code?: number;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class P</span>layerService {
+	private readonly BASE_LOG_DIR: string;
+	private readonly <span class="cstat-no" title="statement not covered" >MAX_RETRIES = 2;</span>
+	private readonly <span class="cstat-no" title="statement not covered" >RETRY_INTERVAL = 500;</span>
+	private readonly <span class="cstat-no" title="statement not covered" >STREAM_REFRESH_INTERVAL = 4 * 60 * 60 * 1000; </span>// 4 hours
+	private readonly <span class="cstat-no" title="statement not covered" >INACTIVE_RESET_TIMEOUT = 5 * 60 * 1000; </span>// 5 minutes
+	private readonly <span class="cstat-no" title="statement not covered" >STARTUP_TIMEOUT = 30000; </span>// 30 seconds for startup
+	private readonly <span class="cstat-no" title="statement not covered" >SHUTDOWN_TIMEOUT = 2000; </span>// 2 seconds for shutdown
+	private readonly SCRIPTS_PATH: string;
+	private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, LocalStreamInstance&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamRetries: Map&lt;number, number&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamStartTimes: Map&lt;number, number&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >streamRefreshTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >inactiveTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >healthCheckIntervals: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >startupLocks: Map&lt;number, boolean&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >manuallyClosedScreens: Set&lt;number&gt; = new Set();</span>
+	private <span class="cstat-no" title="statement not covered" >disabledScreens: Set&lt;number&gt; = new Set();</span>
+	private <span class="cstat-no" title="statement not covered" >ipcPaths: Map&lt;number, string&gt; = new Map();</span>
+	private <span class="cstat-no" title="statement not covered" >retryTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+&nbsp;
+	private readonly config: Config;
+	private readonly mpvPath: string;
+	private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+	private <span class="cstat-no" title="statement not covered" >events = new EventEmitter();</span>
+	private outputCallback?: (data: StreamOutput) =&gt; void;
+	private errorCallback?: (data: StreamError) =&gt; void;
+	private endCallback?: (data: LocalStreamEnd) =&gt; void;
+&nbsp;
+<span class="fstat-no" title="function not covered" >	constructor(c</span>onfig: Config) {
+<span class="cstat-no" title="statement not covered" >		this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >		this.BASE_LOG_DIR = path.join(process.cwd(), 'logs');</span>
+<span class="cstat-no" title="statement not covered" >		this.SCRIPTS_PATH = path.join(process.cwd(), 'scripts/mpv');</span>
+<span class="cstat-no" title="statement not covered" >		this.mpvPath = this.findMpvPath();</span>
+&nbsp;
+		// Initialize directories
+<span class="cstat-no" title="statement not covered" >		this.initializeDirectories();</span>
+<span class="cstat-no" title="statement not covered" >		this.registerSignalHandlers();</span>
+&nbsp;
+		// Start health checks
+<span class="cstat-no" title="statement not covered" >		this.startHealthChecks();</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >startHealthChecks(</span>): void {
+		// Check every 30 seconds
+<span class="cstat-no" title="statement not covered" >		setInterval(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			for (const [screen, stream] of this.streams.entries()) {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!stream.process || !stream.process.pid) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					process.kill(stream.process.pid, 0); </span>// Test if process exists
+				} catch {
+					// Process is dead but not cleaned up
+<span class="cstat-no" title="statement not covered" >					logger.warn(`Found dead process for screen ${screen}, cleaning up`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.handleProcessExit(screen, -1);</span>
+				}
+			}
+		}, 30000);
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >findMpvPath(</span>): string {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			return execSync('which mpv').toString().trim();</span>
+		} catch {
+<span class="cstat-no" title="statement not covered" >			logger.warn('MPV not found in PATH, using default "mpv"', 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return 'mpv';</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>initializeDirectories(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Create log directories
+			const logDirs = <span class="cstat-no" title="statement not covered" >['mpv', 'streamlink'].map(<span class="fstat-no" title="function not covered" >(d</span>ir) =&gt; <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, dir))</span>;</span>
+<span class="cstat-no" title="statement not covered" >			for (const dir of logDirs) {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(dir)) {</span>
+<span class="cstat-no" title="statement not covered" >					fs.mkdirSync(dir, { recursive: true });</span>
+				}
+			}
+&nbsp;
+			// Create .livelink directory in home
+			const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (homedir) {</span>
+				const livelinkDir = <span class="cstat-no" title="statement not covered" >path.join(homedir, '.livelink');</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(livelinkDir)) {</span>
+<span class="cstat-no" title="statement not covered" >					fs.mkdirSync(livelinkDir, { recursive: true });</span>
+				}
+			}
+&nbsp;
+			// Clean old logs
+<span class="cstat-no" title="statement not covered" >			await this.cleanOldLogs();</span>
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Failed to initialize directories',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+<span class="cstat-no" title="statement not covered" >			throw error;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>cleanOldLogs(): Promise&lt;void&gt; {
+		const maxAge = <span class="cstat-no" title="statement not covered" >7 * 24 * 60 * 60 * 1000;</span> // 7 days
+		const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		for (const dir of ['mpv', 'streamlink']) {</span>
+			const logDir = <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, dir);</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!fs.existsSync(logDir)) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				const files = <span class="cstat-no" title="statement not covered" >fs.readdirSync(logDir);</span>
+<span class="cstat-no" title="statement not covered" >				for (const file of files) {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!file.endsWith('.log')) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+					const filePath = <span class="cstat-no" title="statement not covered" >path.join(logDir, file);</span>
+					const stats = <span class="cstat-no" title="statement not covered" >fs.statSync(filePath);</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (now - stats.mtime.getTime() &gt; maxAge) {</span>
+<span class="cstat-no" title="statement not covered" >						fs.unlinkSync(filePath);</span>
+<span class="cstat-no" title="statement not covered" >						logger.debug(`Deleted old log file: ${filePath}`, 'PlayerService');</span>
+					}
+				}
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Failed to clean logs in ${dir}`,
+					'PlayerService',
+					error instanceof Error ? error : new Error(String(error))
+				);
+			}
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >registerSignalHandlers(</span>): void {
+<span class="cstat-no" title="statement not covered" >		['SIGINT', 'SIGTERM', 'SIGQUIT'].forEach(<span class="fstat-no" title="function not covered" >(s</span>ignal) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			process.once(signal, <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.info(`Received ${signal} signal`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.cleanup();</span>
+				}
+			});
+		});
+	}
+&nbsp;
+<span class="fstat-no" title="function not covered" >	async </span>startStream(options: StreamOptions &amp; { screen: number }): Promise&lt;StreamResponse&gt; {
+		const { screen } = <span class="cstat-no" title="statement not covered" >options;</span>
+&nbsp;
+		// Check maximum streams limit
+		const activeStreams = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.values()).filter(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.process !== null)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreams.length &gt;= this.config.player.maxStreams) {</span>
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Maximum number of streams (${this.config.player.maxStreams}) reached`,
+				error: `Maximum number of streams (${this.config.player.maxStreams}) reached`,
+				success: false
+			};
+		}
+&nbsp;
+		// Check startup lock
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.startupLocks.get(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Stream startup in progress for screen ${screen}`,
+				success: false
+			};
+		}
+&nbsp;
+		// Set startup lock with timeout
+<span class="cstat-no" title="statement not covered" >		this.startupLocks.set(screen, true);</span>
+		const lockTimeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			this.startupLocks.set(screen, false);</span>
+		}, this.STARTUP_TIMEOUT);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Stop existing stream if any
+<span class="cstat-no" title="statement not covered" >			await this.stopStream(screen);</span>
+&nbsp;
+			// Get screen configuration
+			const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error(`Invalid screen number: ${screen}`);</span>
+			}
+&nbsp;
+			// Check if screen is disabled
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.disabledScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error(`Screen ${screen} is disabled`);</span>
+			}
+&nbsp;
+			// Don't start during shutdown
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >				throw new Error('Server is shutting down');</span>
+			}
+&nbsp;
+			// Clear manually closed flag - we're explicitly starting a new stream
+<span class="cstat-no" title="statement not covered" >			this.manuallyClosedScreens.delete(screen);</span>
+&nbsp;
+			// Determine player type
+			const useStreamlink =
+<span class="cstat-no" title="statement not covered" >				screenConfig.playerType === 'streamlink' ||</span>
+				(!screenConfig.playerType &amp;&amp; this.config.player.preferStreamlink);
+&nbsp;
+			// Ensure we have metadata for the title
+			const streamTitle =
+<span class="cstat-no" title="statement not covered" >				options.title || this.extractTitleFromUrl(options.url) || 'Unknown Stream';</span>
+&nbsp;
+			// Get current date/time for the title
+			const currentTime = <span class="cstat-no" title="statement not covered" >new Date().toLocaleTimeString();</span>
+&nbsp;
+			// Add metadata to options for use in player commands
+<span class="cstat-no" title="statement not covered" >			options.title = streamTitle;</span>
+<span class="cstat-no" title="statement not covered" >			options.viewerCount = options.viewerCount || 0;</span>
+<span class="cstat-no" title="statement not covered" >			options.startTime = options.startTime || currentTime;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Starting stream with title: ${streamTitle}, viewers: ${options.viewerCount}, time: ${options.startTime}, screen: ${screen}`,
+				'PlayerService'
+			);
+&nbsp;
+			// Start the stream
+			const process = <span class="cstat-no" title="statement not covered" >useStreamlink</span>
+				? await this.startStreamlinkProcess(options)
+				: await this.startMpvProcess(options);
+&nbsp;
+			// Create stream instance
+			const instance: LocalStreamInstance = <span class="cstat-no" title="statement not covered" >{</span>
+				id: Date.now(),
+				screen,
+				url: options.url,
+				quality: options.quality || 'best',
+				status: 'playing',
+				volume: options.volume || screenConfig.volume || this.config.player.defaultVolume,
+				process,
+				platform: options.url.includes('youtube.com') ? 'youtube' : 'twitch',
+				title: streamTitle,
+				startTime:
+					typeof options.startTime === 'string'
+						? new Date(options.startTime).getTime()
+						: options.startTime,
+				options: options
+			};
+&nbsp;
+			// Store stream instance
+<span class="cstat-no" title="statement not covered" >			this.streams.set(screen, instance);</span>
+&nbsp;
+			// Setup monitoring
+<span class="cstat-no" title="statement not covered" >			this.setupStreamMonitoring(screen, process, options);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: `Stream started on screen ${screen}`,
+				success: true
+			};
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Failed to start stream on screen ${screen}`,
+				'PlayerService',
+				error instanceof Error ? error.message : String(error)
+			);
+<span class="cstat-no" title="statement not covered" >			return {</span>
+				screen,
+				message: error instanceof Error ? error.message : String(error),
+				success: false
+			};
+		} finally {
+<span class="cstat-no" title="statement not covered" >			clearTimeout(lockTimeout);</span>
+<span class="cstat-no" title="statement not covered" >			this.startupLocks.set(screen, false);</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>startMpvProcess(
+		options: StreamOptions &amp; { screen: number }
+	): Promise&lt;ChildProcess&gt; {
+		const args = <span class="cstat-no" title="statement not covered" >this.getMpvArgs(options);</span>
+		const env = <span class="cstat-no" title="statement not covered" >this.getProcessEnv();</span>
+&nbsp;
+		// Add screen-specific environment variables
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+<span class="cstat-no" title="statement not covered" >		env.SCREEN = options.screen.toString();</span>
+<span class="cstat-no" title="statement not covered" >		env.DATE = timestamp;</span>
+&nbsp;
+		// Sanitize title components to avoid issues with shell escaping
+		const streamTitle = <span class="cstat-no" title="statement not covered" >(options.title || 'Unknown Title').replace(/['"]/g, '');</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+		const startTime = <span class="cstat-no" title="statement not covered" >options.startTime</span>
+			? new Date(options.startTime).toLocaleTimeString()
+			: 'Unknown time';
+&nbsp;
+		// Set environment variables without quotes
+<span class="cstat-no" title="statement not covered" >		env.TITLE = `${streamTitle} - ${viewerCount} - ${startTime} - Screen ${options.screen}`;</span>
+<span class="cstat-no" title="statement not covered" >		env.STREAM_URL = options.url;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(`Starting MPV for screen ${options.screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		logger.debug(`MPV command: ${this.mpvPath} ${args.join(' ')}`, 'PlayerService');</span>
+&nbsp;
+		const process = <span class="cstat-no" title="statement not covered" >spawn(this.mpvPath, args, {</span>
+			env,
+			stdio: ['ignore', 'pipe', 'pipe']
+		});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.setupProcessHandlers(process, options.screen);</span>
+<span class="cstat-no" title="statement not covered" >		return process;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>startStreamlinkProcess(
+		options: StreamOptions &amp; { screen: number }
+	): Promise&lt;ChildProcess&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			const args = <span class="cstat-no" title="statement not covered" >this.getStreamlinkArgs(options.url, options);</span>
+			const env = <span class="cstat-no" title="statement not covered" >this.getProcessEnv();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info(`Starting Streamlink for screen ${options.screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			logger.debug(`Streamlink command: streamlink ${args.join(' ')}`, 'PlayerService');</span>
+&nbsp;
+			const process = <span class="cstat-no" title="statement not covered" >spawn('streamlink', args, {</span>
+				env,
+				stdio: ['ignore', 'pipe', 'pipe']
+			});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+				let errorOutput = <span class="cstat-no" title="statement not covered" >'';</span>
+				let hasStarted = <span class="cstat-no" title="statement not covered" >false;</span>
+				const startTimeout = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+					const error = <span class="cstat-no" title="statement not covered" >new Error('Stream start timeout exceeded');</span>
+<span class="cstat-no" title="statement not covered" >					process.kill();</span>
+<span class="cstat-no" title="statement not covered" >					reject(error);</span>
+				}, this.STARTUP_TIMEOUT);
+&nbsp;
+				const onData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+					const output = <span class="cstat-no" title="statement not covered" >data.toString();</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('Starting player')) {</span>
+<span class="cstat-no" title="statement not covered" >						hasStarted = true;</span>
+<span class="cstat-no" title="statement not covered" >						clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >						resolve(process);</span>
+					}
+					// Check for common error patterns
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.toLowerCase().includes('error')) {</span>
+<span class="cstat-no" title="statement not covered" >						errorOutput += output + '\n';</span>
+					}
+				};
+&nbsp;
+				const onError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >					logger.error(`Streamlink error for screen ${options.screen}`, 'PlayerService', error);</span>
+<span class="cstat-no" title="statement not covered" >					reject(error);</span>
+				};
+&nbsp;
+				const onExit = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(c</span>ode: number | null) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					clearTimeout(startTimeout);</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasStarted) {</span>
+						let errorMessage = <span class="cstat-no" title="statement not covered" >'Stream failed to start';</span>
+&nbsp;
+						// Enhanced error detection
+<span class="cstat-no" title="statement not covered" >						if (errorOutput.toLowerCase().includes('members-only')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable (members-only content)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('no playable streams')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'No playable streams found';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('404')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream not found (404)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (errorOutput.toLowerCase().includes('private')) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream is private';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (code === 1) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable (possibly members-only content)';</span>
+						} else <span class="cstat-no" title="statement not covered" >if (code === 130) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream process interrupted';</span>
+						} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (code === 2) {</span>
+<span class="cstat-no" title="statement not covered" >							errorMessage = 'Stream unavailable or invalid URL';</span>
+						}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >						reject(new Error(errorMessage));</span>
+					}
+				};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				process.stdout?.on('data', onData);</span>
+<span class="cstat-no" title="statement not covered" >				process.stderr?.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					errorOutput += data.toString() + '\n';</span>
+<span class="cstat-no" title="statement not covered" >					onData(data);</span>
+				});
+<span class="cstat-no" title="statement not covered" >				process.on('error', onError);</span>
+<span class="cstat-no" title="statement not covered" >				process.on('exit', onExit);</span>
+			});
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Failed to spawn streamlink process for screen ${options.screen}`,
+				'PlayerService',
+				err instanceof Error ? err.message : String(err)
+			);
+<span class="cstat-no" title="statement not covered" >			throw err;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >setupProcessHandlers(</span>process: ChildProcess, screen: number): void {
+		let hasEndedStream = <span class="cstat-no" title="statement not covered" >false;</span>
+		let cleanupTimeout: NodeJS.Timeout | null = <span class="cstat-no" title="statement not covered" >null;</span>
+&nbsp;
+		const cleanup = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (cleanupTimeout) {</span>
+<span class="cstat-no" title="statement not covered" >				clearTimeout(cleanupTimeout);</span>
+<span class="cstat-no" title="statement not covered" >				cleanupTimeout = null;</span>
+			}
+<span class="cstat-no" title="statement not covered" >			this.clearMonitoring(screen);</span>
+<span class="cstat-no" title="statement not covered" >			this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+		};
+&nbsp;
+		const handleStreamEnd = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: string | Error, code: number = <span class="branch-0 cbranch-no" title="branch not covered" >0)</span> =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasEndedStream) {</span>
+<span class="cstat-no" title="statement not covered" >				hasEndedStream = true;</span>
+<span class="cstat-no" title="statement not covered" >				logger.info(`Stream ended on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				this.errorCallback?.({</span>
+					screen,
+					error: error instanceof Error ? error.message : error,
+					code
+				});
+				// Schedule cleanup after a short delay to ensure all events are processed
+<span class="cstat-no" title="statement not covered" >				cleanupTimeout = setTimeout(cleanup, 1000);</span>
+			}
+		};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stdout) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stdout.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+				const output = <span class="cstat-no" title="statement not covered" >data.toString('utf8').trim();</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (output &amp;&amp; /[\x20-\x7E]/.test(output)) {</span>
+					// Log YouTube-specific state information
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('[youtube]')) {</span>
+<span class="cstat-no" title="statement not covered" >						if (output.includes('Post-Live Manifestless mode')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`[Screen ${screen}] YouTube stream is in post-live state (ended)`,
+								'PlayerService'
+							);
+<span class="cstat-no" title="statement not covered" >							handleStreamEnd('Stream ended (post-live)');</span>
+						} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (output.includes('Downloading MPD manifest')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.debug(</span>
+								`[Screen ${screen}] YouTube stream manifest download attempt`,
+								'PlayerService'
+							);
+						}
+					}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >					logger.debug(`[Screen ${screen}] ${output}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					this.outputCallback?.({</span>
+						screen,
+						data: output,
+						type: 'stdout'
+					});
+&nbsp;
+					// Check for different types of stream endings
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (</span>
+						output.includes('Exiting... (Quit)') ||
+						output.includes('Quit') ||
+						output.includes('Exiting normally') ||
+						output.includes('EOF reached') ||
+						output.includes('User stopped playback')
+					) {
+<span class="cstat-no" title="statement not covered" >						handleStreamEnd('Stream ended normally');</span>
+					}
+				}
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stderr) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stderr.on('data', <span class="fstat-no" title="function not covered" >(d</span>ata: Buffer) =&gt; {</span>
+				const output = <span class="cstat-no" title="statement not covered" >data.toString('utf8').trim();</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (output &amp;&amp; /[\x20-\x7E]/.test(output)) {</span>
+					// Filter out common PipeWire warnings that don't affect functionality
+<span class="cstat-no" title="statement not covered" >					if (output.includes('pw.conf') &amp;&amp; output.includes('deprecated')) {</span>
+<span class="cstat-no" title="statement not covered" >						logger.debug(`[Screen ${screen}] PipeWire config warning: ${output}`, 'PlayerService');</span>
+					} else {
+						// Log YouTube-specific errors with more context
+<span class="cstat-no" title="statement not covered" >						if (output.includes('youtube-dl failed')) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`[Screen ${screen}] YouTube stream error - may be ended or unavailable: ${output}`,
+								'PlayerService'
+							);
+<span class="cstat-no" title="statement not covered" >							handleStreamEnd(new Error('Stream unavailable or ended'));</span>
+						} else {
+<span class="cstat-no" title="statement not covered" >							logger.error(`[Screen ${screen}] ${output}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >							this.handleError(screen, new Error(`Stream error: ${output}`));</span>
+						}
+					}
+				}
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		process.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(`Process error on screen ${screen}`, 'PlayerService', err);</span>
+<span class="cstat-no" title="statement not covered" >			this.handleError(screen, err);</span>
+		});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		process.on('exit', <span class="fstat-no" title="function not covered" >(c</span>ode: number | null) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(`Process exited on screen ${screen} with code ${code}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			handleStreamEnd(new Error(`Process exited with code ${code}`));</span>
+		});
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >setupStreamMonitoring(</span>
+		screen: number,
+		process: ChildProcess,
+		options: StreamOptions
+	): void {
+		// Track last output time to detect stream health
+		let lastOutputTime = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+		let consecutiveFailures = <span class="cstat-no" title="statement not covered" >0;</span>
+		const MAX_OUTPUT_SILENCE = <span class="cstat-no" title="statement not covered" >15000;</span> // 15 seconds without output is suspicious
+		const HEALTH_CHECK_INTERVAL = <span class="cstat-no" title="statement not covered" >5000;</span> // Check every 5 seconds
+		const MAX_CONSECUTIVE_FAILURES = <span class="cstat-no" title="statement not covered" >3;</span>
+&nbsp;
+		// Update last output time when we get data
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stdout) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stdout.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				lastOutputTime = Date.now();</span>
+<span class="cstat-no" title="statement not covered" >				consecutiveFailures = 0; </span>// Reset failures on successful output
+			});
+		}
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (process.stderr) {</span>
+<span class="cstat-no" title="statement not covered" >			process.stderr.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				lastOutputTime = Date.now();</span>
+<span class="cstat-no" title="statement not covered" >				consecutiveFailures = 0; </span>// Reset failures on successful output
+			});
+		}
+&nbsp;
+		// Setup more frequent health checks
+		const healthCheck = <span class="cstat-no" title="statement not covered" >setInterval(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (!process.pid) {</span>
+<span class="cstat-no" title="statement not covered" >				logger.warn(`No PID found for stream on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				return;</span>
+			}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				// Check if process exists and responds
+<span class="cstat-no" title="statement not covered" >				process.kill(0);</span>
+&nbsp;
+				// Also verify the process hasn't been replaced
+				const currentProcess = <span class="cstat-no" title="statement not covered" >this.streams.get(screen)?.process;</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (currentProcess !== process) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`Process mismatch detected for screen ${screen}, clearing health check`,
+						'PlayerService'
+					);
+<span class="cstat-no" title="statement not covered" >					clearInterval(healthCheck);</span>
+<span class="cstat-no" title="statement not covered" >					this.healthCheckIntervals.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >					return;</span>
+				}
+&nbsp;
+				// Check if we haven't received output for too long
+				const timeSinceLastOutput = <span class="cstat-no" title="statement not covered" >Date.now() - lastOutputTime;</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (timeSinceLastOutput &gt; MAX_OUTPUT_SILENCE) {</span>
+<span class="cstat-no" title="statement not covered" >					consecutiveFailures++;</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`No output from stream on screen ${screen} for ${Math.round(timeSinceLastOutput / 1000)}s (failure ${consecutiveFailures}/${MAX_CONSECUTIVE_FAILURES})`,
+						'PlayerService'
+					);
+&nbsp;
+					// After multiple consecutive failures, try to restart
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (consecutiveFailures &gt;= MAX_CONSECUTIVE_FAILURES) {</span>
+<span class="cstat-no" title="statement not covered" >						logger.warn(</span>
+							`Stream on screen ${screen} appears frozen, attempting restart`,
+							'PlayerService'
+						);
+<span class="cstat-no" title="statement not covered" >						await this.restartStream(screen, options);</span>
+<span class="cstat-no" title="statement not covered" >						consecutiveFailures = 0; </span>// Reset after restart attempt
+					}
+				}
+			} catch (err) {
+				// Only restart if the process is actually gone
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (err &amp;&amp; typeof err === 'object' &amp;&amp; 'code' in err &amp;&amp; err.code === 'ESRCH') {</span>
+<span class="cstat-no" title="statement not covered" >					logger.warn(`Stream on screen ${screen} appears to be unresponsive`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					await this.restartStream(screen, options).catch(<span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to restart unresponsive stream on screen ${screen}`,
+							'PlayerService',
+							err
+						);
+					});
+				}
+			}
+		}, HEALTH_CHECK_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.healthCheckIntervals.set(screen, healthCheck);</span>
+&nbsp;
+		// Setup refresh timer
+		const refreshTimer = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(`Refreshing stream on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			this.restartStream(screen, options).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				logger.error(`Failed to refresh stream on screen ${screen}`, 'PlayerService', error);</span>
+			});
+		}, this.STREAM_REFRESH_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.streamRefreshTimers.set(screen, refreshTimer);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.set(screen, Date.now());</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >async </span>restartStream(screen: number, options: StreamOptions): Promise&lt;void&gt; {
+		// Don't restart if the screen was manually closed
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Not restarting stream on screen ${screen} as it was manually closed`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			return;</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(`Restarting stream on screen ${screen}: ${options.url}`, 'PlayerService');</span>
+&nbsp;
+		// Stop existing stream and wait for cleanup
+<span class="cstat-no" title="statement not covered" >		await this.stopStream(screen);</span>
+&nbsp;
+		// Add a longer delay to ensure cleanup is complete
+<span class="cstat-no" title="statement not covered" >		await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+&nbsp;
+		// Double check no existing process before starting new one
+		const existingStream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (existingStream?.process) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.warn(`Found existing process for screen ${screen}, forcing cleanup`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				existingStream.process.kill('SIGKILL');</span>
+<span class="cstat-no" title="statement not covered" >				await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 200))</span>;</span>
+			} catch {
+				// Process might already be gone
+			}
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		await this.startStream({ ...options, screen });</span>
+	}
+	private <span class="fstat-no" title="function not covered" >async </span>handleProcessExit(screen: number, code: number | null): Promise&lt;void&gt; {
+		// Clear monitoring
+<span class="cstat-no" title="statement not covered" >		this.clearMonitoring(screen);</span>
+&nbsp;
+		// Get stream options before removing the instance
+		const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+		const streamOptions = <span class="cstat-no" title="statement not covered" >stream?.options;</span>
+&nbsp;
+		// Remove stream instance
+<span class="cstat-no" title="statement not covered" >		this.streams.delete(screen);</span>
+&nbsp;
+		// Initialize retry count if not exists
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!this.streamRetries.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.set(screen, 0);</span>
+		}
+&nbsp;
+		const retryCount = <span class="cstat-no" title="statement not covered" >this.streamRetries.get(screen) || 0;</span>
+		const MAX_RETRIES = <span class="cstat-no" title="statement not covered" >10;</span> // Increased max retries for network issues
+		const MAX_BACKOFF = <span class="cstat-no" title="statement not covered" >30000;</span> // Maximum backoff of 30 seconds
+&nbsp;
+		// Helper to check if error is likely a network issue
+		const isNetworkError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(c</span>ode: number | null): boolean =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			return (</span>
+				code === 2 || // Streamlink error (often network-related)
+				code === -4 || // Network timeout
+				code === -3 || // Network connection refused
+				code === null
+			); // Process crash (could be network-related)
+		};
+&nbsp;
+		// Handle different exit codes
+<span class="cstat-no" title="statement not covered" >		if (code === 0) {</span>
+			// Normal exit - clear retries and move to next stream
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			logger.info(</span>
+				`Stream ended normally on screen ${screen}, moving to next stream`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			this.errorCallback?.({</span>
+				screen,
+				error: 'Stream ended normally',
+				code: 0
+			});
+		} else <span class="cstat-no" title="statement not covered" >if (isNetworkError(code)) {</span>
+			// Network-related error - use more aggressive retry strategy
+<span class="cstat-no" title="statement not covered" >			if (retryCount &lt; MAX_RETRIES &amp;&amp; streamOptions) {</span>
+				const backoffTime = <span class="cstat-no" title="statement not covered" >Math.min(1000 * Math.pow(1.5, retryCount), MAX_BACKOFF);</span>
+<span class="cstat-no" title="statement not covered" >				this.streamRetries.set(screen, retryCount + 1);</span>
+&nbsp;
+				// Log with more specific error context
+<span class="cstat-no" title="statement not covered" >				logger.warn(</span>
+					`Network-related error on screen ${screen} (code ${code}), retry ${retryCount + 1}/${MAX_RETRIES} in ${backoffTime}ms`,
+					'PlayerService'
+				);
+&nbsp;
+				// Cleanup any existing retry timer for this screen
+<span class="cstat-no" title="statement not covered" >				this.clearRetryTimer(screen);</span>
+&nbsp;
+				// Set up retry timer
+				const retryTimer = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					try {</span>
+						// Check network connectivity before retry
+						const isConnected = <span class="cstat-no" title="statement not covered" >await this.testConnection();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >						if (isConnected) {</span>
+<span class="cstat-no" title="statement not covered" >							logger.info(</span>
+								`Network is back online, retrying stream on screen ${screen}`,
+								'PlayerService'
+							);
+&nbsp;
+							// Check if another process has already started a stream for this screen
+<span class="cstat-no" title="statement not covered" >							if (!this.streams.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >								await this.startStream(streamOptions);</span>
+							} else {
+<span class="cstat-no" title="statement not covered" >								logger.info(</span>
+									`Stream already started on screen ${screen}, skipping retry`,
+									'PlayerService'
+								);
+							}
+						} else {
+							// Network still down, schedule another retry
+<span class="cstat-no" title="statement not covered" >							logger.warn(</span>
+								`Network still unavailable for screen ${screen}, scheduling another retry`,
+								'PlayerService'
+							);
+							// Don't recursively call handleProcessExit as it can lead to multiple overlapping retries
+							// Instead, increment retry count and set a new timer
+							const currentRetryCount = <span class="cstat-no" title="statement not covered" >this.streamRetries.get(screen) || 0;</span>
+<span class="cstat-no" title="statement not covered" >							if (currentRetryCount &lt; MAX_RETRIES) {</span>
+								const nextBackoffTime = <span class="cstat-no" title="statement not covered" >Math.min(</span>
+									1000 * Math.pow(1.5, currentRetryCount),
+									MAX_BACKOFF
+								);
+<span class="cstat-no" title="statement not covered" >								this.clearRetryTimer(screen);</span>
+<span class="cstat-no" title="statement not covered" >								this.retryTimers.set(</span>
+									screen,
+									setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {
+<span class="cstat-no" title="statement not covered" >										this.handleProcessExit(screen, code).catch(<span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >											logger.error(</span>
+												`Error in retry handler for screen ${screen}`,
+												'PlayerService',
+												err
+											);
+										});
+									}, nextBackoffTime)
+								);
+							} else {
+								// Max retries reached
+<span class="cstat-no" title="statement not covered" >								this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >								logger.error(</span>
+									`Stream failed after ${MAX_RETRIES} retries on screen ${screen} (network still down)`,
+									'PlayerService'
+								);
+<span class="cstat-no" title="statement not covered" >								this.errorCallback?.({</span>
+									screen,
+									error: `Stream failed after ${MAX_RETRIES} retries (network still down)`,
+									code: -1
+								});
+							}
+						}
+					} catch (error) {
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to restart stream on screen ${screen}`,
+							'PlayerService',
+							error instanceof Error ? error : new Error(String(error))
+						);
+						// Ensure we clean up retry state on error
+<span class="cstat-no" title="statement not covered" >						this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >						this.errorCallback?.({</span>
+							screen,
+							error: `Failed to restart stream: ${error instanceof Error ? error.message : String(error)}`,
+							code: -1
+						});
+					}
+				}, backoffTime);
+&nbsp;
+				// Store retry timer for cleanup
+<span class="cstat-no" title="statement not covered" >				this.retryTimers.set(screen, retryTimer);</span>
+			} else {
+				// Max retries reached or no options available
+<span class="cstat-no" title="statement not covered" >				this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Stream failed after ${MAX_RETRIES} retries on screen ${screen}, moving to next stream`,
+					'PlayerService'
+				);
+<span class="cstat-no" title="statement not covered" >				this.errorCallback?.({</span>
+					screen,
+					error: `Stream failed after ${MAX_RETRIES} retries (network issues)`,
+					code: -1
+				});
+			}
+		} else {
+			// Other error codes - move to next stream
+<span class="cstat-no" title="statement not covered" >			this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Stream ended with error code ${code} on screen ${screen}, moving to next stream`,
+				'PlayerService'
+			);
+<span class="cstat-no" title="statement not covered" >			this.errorCallback?.({</span>
+				screen,
+				error: `Stream ended with error code ${code}`,
+				code: -1
+			});
+		}
+	}
+&nbsp;
+	// Helper method to clear retry timer
+	private <span class="fstat-no" title="function not covered" >clearRetryTimer(</span>screen: number): void {
+		const timer = <span class="cstat-no" title="statement not covered" >this.retryTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >			this.retryTimers.delete(screen);</span>
+		}
+	}
+&nbsp;
+	// Network connectivity test function
+	private <span class="fstat-no" title="function not covered" >async </span>testConnection(): Promise&lt;boolean&gt; {
+		// List of URLs to test connectivity
+		const testUrls = <span class="cstat-no" title="statement not covered" >[</span>
+			'https://8.8.8.8', // Google DNS
+			'https://1.1.1.1', // Cloudflare DNS
+			'https://www.google.com',
+			'https://www.cloudflare.com',
+			'https://www.amazon.com'
+		];
+&nbsp;
+		// Try each URL until one succeeds or all fail
+<span class="cstat-no" title="statement not covered" >		for (const url of testUrls) {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				await fetch(url, {</span>
+					mode: 'no-cors', // Prevent CORS issues
+				});
+<span class="cstat-no" title="statement not covered" >				logger.debug(`Connection successful via ${url}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >				return true; </span>// Connection successful
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.debug(</span>
+					`Failed to connect to ${url}: ${error instanceof Error ? error.message : String(error)}`,
+					'PlayerService'
+				);
+				// Continue to the next URL
+			}
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.warn('All connection test attempts failed', 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		return false; </span>// All connection attempts failed
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >clearMonitoring(</span>screen: number): void {
+		// Clear health check
+		const healthCheck = <span class="cstat-no" title="statement not covered" >this.healthCheckIntervals.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (healthCheck) {</span>
+<span class="cstat-no" title="statement not covered" >			clearInterval(healthCheck);</span>
+<span class="cstat-no" title="statement not covered" >			this.healthCheckIntervals.delete(screen);</span>
+		}
+&nbsp;
+		// Clear refresh timer
+		const refreshTimer = <span class="cstat-no" title="statement not covered" >this.streamRefreshTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (refreshTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(refreshTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.streamRefreshTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear inactive timer
+		const inactiveTimer = <span class="cstat-no" title="statement not covered" >this.inactiveTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (inactiveTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(inactiveTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.inactiveTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear retry timer
+		const retryTimer = <span class="cstat-no" title="statement not covered" >this.retryTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (retryTimer) {</span>
+<span class="cstat-no" title="statement not covered" >			clearTimeout(retryTimer);</span>
+<span class="cstat-no" title="statement not covered" >			this.retryTimers.delete(screen);</span>
+		}
+&nbsp;
+		// Clear other state
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.delete(screen);</span>
+		// Don't clear retry count here to maintain retry state across restarts
+		// this.streamRetries.delete(screen);
+	}
+&nbsp;
+	/**
+	 * Stop a stream that is currently playing on a screen
+	 */
+<span class="fstat-no" title="function not covered" >	async </span>stopStream(screen: number, force: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`Stopping stream on screen ${screen}`, 'PlayerService');</span>
+&nbsp;
+		const player = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!player || !player.process) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.debug(`No player to stop on screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return true; </span>// Nothing to stop, so consider it a success
+		}
+&nbsp;
+		// Try graceful shutdown via IPC first
+		let gracefulShutdown = <span class="cstat-no" title="statement not covered" >false;</span>
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			await this.sendMpvCommand(screen, 'quit');</span>
+&nbsp;
+			// Give it a moment to shutdown gracefully
+<span class="cstat-no" title="statement not covered" >			await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+&nbsp;
+			// Check if the process has exited
+<span class="cstat-no" title="statement not covered" >			gracefulShutdown = !this.isProcessRunning(player.process.pid);</span>
+<span class="cstat-no" title="statement not covered" >			if (gracefulShutdown) {</span>
+<span class="cstat-no" title="statement not covered" >				logger.debug(`Graceful shutdown successful for screen ${screen}`, 'PlayerService');</span>
+			} else {
+<span class="cstat-no" title="statement not covered" >				logger.debug(</span>
+					`Graceful shutdown failed for screen ${screen}, will try force kill`,
+					'PlayerService'
+				);
+			}
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.debug(</span>
+				`IPC command failed for screen ${screen}, will try force kill: ${error instanceof Error ? error.message : String(error)}`,
+				'PlayerService'
+			);
+		}
+&nbsp;
+		// If graceful shutdown failed or force is true, use the forceful method
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!gracefulShutdown || force) {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+<span class="cstat-no" title="statement not covered" >				player.process.kill('SIGTERM');</span>
+&nbsp;
+				// Give it a moment to respond to SIGTERM
+<span class="cstat-no" title="statement not covered" >				await new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve) =&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 300))</span>;</span>
+&nbsp;
+				// Check if we need to force kill with SIGKILL
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isProcessRunning(player.process.pid)) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.debug(`SIGTERM didn't work for screen ${screen}, using SIGKILL`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >					player.process.kill('SIGKILL');</span>
+				}
+			} catch (error) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Error killing process for screen ${screen}: ${error instanceof Error ? error.message : String(error)}`,
+					'PlayerService'
+				);
+			}
+		}
+&nbsp;
+		// Clean up regardless of kill success
+<span class="cstat-no" title="statement not covered" >		this.cleanup_after_stop(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return true;</span>
+	}
+&nbsp;
+	/**
+	 * Clean up resources after a stream is stopped
+	 */
+	private <span class="fstat-no" title="function not covered" >cleanup_after_stop(</span>screen: number): void {
+		// Clean up the monitoring interval
+		const monitorInterval = <span class="cstat-no" title="statement not covered" >this.healthCheckIntervals.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (monitorInterval) {</span>
+<span class="cstat-no" title="statement not covered" >			clearInterval(monitorInterval);</span>
+<span class="cstat-no" title="statement not covered" >			this.healthCheckIntervals.delete(screen);</span>
+		}
+&nbsp;
+		// Clean up player state
+<span class="cstat-no" title="statement not covered" >		this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamStartTimes.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.streamRefreshTimers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.inactiveTimers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.delete(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.debug(`Cleaned up resources for screen ${screen}`, 'PlayerService');</span>
+	}
+&nbsp;
+	/**
+	 * Check if a process is still running without sending a signal
+	 */
+	private <span class="fstat-no" title="function not covered" >isProcessRunning(</span>pid: number | undefined): boolean {
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!pid) <span class="cstat-no" title="statement not covered" >return false;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// The kill with signal 0 doesn't actually kill the process
+			// It just checks if the process exists
+<span class="cstat-no" title="statement not covered" >			process.kill(pid, 0);</span>
+<span class="cstat-no" title="statement not covered" >			return true;</span>
+		} catch {
+<span class="cstat-no" title="statement not covered" >			return false;</span>
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getMpvArgs(</span>options: StreamOptions &amp; { screen: number }): string[] {
+		const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === options.screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(`Invalid screen number: ${options.screen}`);</span>
+		}
+&nbsp;
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+		const logFile = <span class="cstat-no" title="statement not covered" >path.join(</span>
+			this.BASE_LOG_DIR,
+			'mpv',
+			`mpv-screen${options.screen}-${timestamp}.log`
+		);
+		const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+		const ipcPath = <span class="cstat-no" title="statement not covered" >homedir</span>
+			? path.join(homedir, '.livelink', `mpv-ipc-${options.screen}`)
+			: `/tmp/mpv-ipc-${options.screen}`;
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.set(options.screen, ipcPath);</span>
+&nbsp;
+		// Get stream metadata for title
+		const streamTitle = <span class="cstat-no" title="statement not covered" >options.title || 'Unknown Title';</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+&nbsp;
+		// Sanitize title components to avoid issues with shell escaping
+		const sanitizedTitle = <span class="cstat-no" title="statement not covered" >streamTitle.replace(/['"]/g, '');</span>
+&nbsp;
+		// Format the title without quotes in the argument
+		const titleArg = <span class="cstat-no" title="statement not covered" >`--title="${sanitizedTitle} - ${viewerCount} - Screen ${options.screen}"`;</span>
+&nbsp;
+		// Base arguments for MPV direct playback
+		const baseArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			// IPC and config
+			`--input-ipc-server=${ipcPath}`,
+			`--config-dir=${this.SCRIPTS_PATH}`,
+			`--log-file=${logFile}`,
+&nbsp;
+			// Window position and size
+			`--geometry=${screenConfig.width}x${screenConfig.height}+${screenConfig.x}+${screenConfig.y}`,
+&nbsp;
+			// Audio settings
+			`--volume=${options.volume !== undefined ? options.volume : screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume}`,
+&nbsp;
+			// Title
+			titleArg,
+&nbsp;
+			// URL must be last
+			options.url
+		];
+&nbsp;
+		// Combine all arguments
+		const allArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			...baseArgs,
+			...(options.windowMaximized || screenConfig.windowMaximized ? ['--window-maximized=yes'] : [])
+		];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return allArgs;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getStreamlinkArgs(</span>url: string, options: StreamOptions &amp; { screen: number }): string[] {
+		const screen = <span class="cstat-no" title="statement not covered" >options.screen;</span>
+		const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >(s</span>) =&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(`Invalid screen number: ${screen}`);</span>
+		}
+&nbsp;
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+		const logFile = <span class="cstat-no" title="statement not covered" >path.join(this.BASE_LOG_DIR, 'mpv', `mpv-screen${screen}-${timestamp}.log`);</span>
+		const homedir = <span class="cstat-no" title="statement not covered" >process.env.HOME || process.env.USERPROFILE;</span>
+		const ipcPath = <span class="cstat-no" title="statement not covered" >homedir</span>
+			? path.join(homedir, '.livelink', `mpv-ipc-${screen}`)
+			: `/tmp/mpv-ipc-${screen}`;
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.set(screen, ipcPath);</span>
+&nbsp;
+		// Get stream metadata for title
+		const streamTitle = <span class="cstat-no" title="statement not covered" >options.title || 'Unknown Title';</span>
+		const viewerCount =
+<span class="cstat-no" title="statement not covered" >			options.viewerCount !== undefined ? `${options.viewerCount} viewers` : 'Unknown viewers';</span>
+		const sanitizedTitle = <span class="cstat-no" title="statement not covered" >streamTitle.replace(/['"]/g, '');</span>
+		const titleArg = <span class="cstat-no" title="statement not covered" >`--title="${sanitizedTitle} - ${viewerCount} - Screen ${options.screen}"`;</span>
+&nbsp;
+		// MPV arguments specifically for Streamlink
+		const mpvArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			// Window position and size
+			`--geometry=${screenConfig.width}x${screenConfig.height}+${screenConfig.x}+${screenConfig.y}`,
+&nbsp;
+			// Audio settings
+			`--volume=${screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume}`,
+&nbsp;
+			// IPC and config
+			`--input-ipc-server=${ipcPath}`,
+			`--config-dir=${this.SCRIPTS_PATH}`,
+			`--log-file=${logFile}`,
+&nbsp;
+			// Title
+			titleArg,
+&nbsp;
+			// Window state
+			...(options.windowMaximized || screenConfig.windowMaximized ? ['--window-maximized=yes'] : [])
+		].filter(Boolean);
+&nbsp;
+		// Streamlink-specific arguments
+		const streamlinkArgs = <span class="cstat-no" title="statement not covered" >[</span>
+			url,
+			'best', // Quality selection
+			...(url.includes('youtube.com')
+				? [
+						'--stream-segment-threads=2', // Reduced from 3 to 2
+						'--stream-timeout=60',
+						'--hls-segment-threads=2', // Reduced from 3 to 2
+						'--ringbuffer-size=32M', // Limit ring buffer size
+						'--hls-segment-stream-data', // Stream segments directly
+						'--hls-live-edge=2', // Reduce live edge buffer
+						'--stream-segment-attempts=3', // Limit segment retry attempts
+						'--player-no-close', // Don't close player on stream end
+						'--hls-playlist-reload-time=2' // Faster playlist reload
+					]
+				: []),
+			'--player',
+			this.mpvPath,
+			'--player-args',
+			mpvArgs.join(' ')
+		];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return streamlinkArgs;</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >getProcessEnv(</span>): NodeJS.ProcessEnv {
+		const timestamp = <span class="cstat-no" title="statement not covered" >new Date().toISOString().replace(/[:.]/g, '-');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return {</span>
+			...process.env,
+			MPV_HOME: undefined,
+			XDG_CONFIG_HOME: undefined,
+			DISPLAY: process.env.DISPLAY || ':0',
+			SDL_VIDEODRIVER: 'x11',
+			DATE: timestamp
+		};
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >getActiveStreams(</span>) {
+<span class="cstat-no" title="statement not covered" >		return Array.from(this.streams.entries()).map(<span class="fstat-no" title="function not covered" >([</span>screen, stream]) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+			screen,
+			url: stream.url,
+			quality: stream.quality,
+			platform: stream.platform,
+			status: stream.status
+		}));
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >sendCommandToScreen(</span>screen: number, command: string): void {
+		const ipcPath = <span class="cstat-no" title="statement not covered" >this.ipcPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!ipcPath) {</span>
+<span class="cstat-no" title="statement not covered" >			logger.warn(`No IPC path found for screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			return;</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+<span class="cstat-no" title="statement not covered" >			exec(`echo "${command}" | socat - ${ipcPath}`, <span class="fstat-no" title="function not covered" >(e</span>rr) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (err) {</span>
+<span class="cstat-no" title="statement not covered" >					logger.error(</span>
+						`Failed to send command to screen ${screen}`,
+						'PlayerService',
+						err instanceof Error ? err : new Error(String(err))
+					);
+				}
+			});
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				`Command send error for screen ${screen}`,
+				'PlayerService',
+				err instanceof Error ? err : new Error(String(err))
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >sendCommandToAll(</span>command: string): void {
+<span class="cstat-no" title="statement not covered" >		this.ipcPaths.forEach(<span class="fstat-no" title="function not covered" >(_</span>, screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			this.sendCommandToScreen(screen, command);</span>
+		});
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >onStreamOutput(</span>callback: (data: StreamOutput) =&gt; void): void {
+<span class="cstat-no" title="statement not covered" >		this.outputCallback = callback;</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >onStreamError(</span>callback: (data: StreamError) =&gt; void): void {
+<span class="cstat-no" title="statement not covered" >		this.errorCallback = callback;</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >handleLuaMessage(</span>screen: number, type: string, data: Record&lt;string, unknown&gt;): void {
+<span class="cstat-no" title="statement not covered" >		if (type === 'log' &amp;&amp; typeof data.level === 'string' &amp;&amp; typeof data.message === 'string') {</span>
+<span class="cstat-no" title="statement not covered" >			logger[data.level as 'debug' | 'info' | 'warn' | 'error'](</span>
+				`[MPV-${screen}] ${data.message}`,
+				'PlayerService'
+			);
+		} else {
+<span class="cstat-no" title="statement not covered" >			logger.debug(</span>
+				`Received message from screen ${screen}: ${type} - ${JSON.stringify(data)}`,
+				'PlayerService'
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >async </span>cleanup(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >		logger.info('Cleaning up player service...', 'PlayerService');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Stop all streams
+			const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >			await Promise.all(activeScreens.map(<span class="fstat-no" title="function not covered" >(s</span>creen) =&gt; <span class="cstat-no" title="statement not covered" >this.stopStream(screen, true))</span>);</span>
+&nbsp;
+			// Clear all timers and state
+<span class="cstat-no" title="statement not covered" >			activeScreens.forEach(<span class="fstat-no" title="function not covered" >(s</span>creen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				this.clearMonitoring(screen);</span>
+			});
+&nbsp;
+			// Clean up IPC sockets
+<span class="cstat-no" title="statement not covered" >			this.ipcPaths.forEach(<span class="fstat-no" title="function not covered" >(i</span>pcPath) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (fs.existsSync(ipcPath)) {</span>
+<span class="cstat-no" title="statement not covered" >						fs.unlinkSync(ipcPath);</span>
+					}
+				} catch (error) {
+<span class="cstat-no" title="statement not covered" >					logger.warn(</span>
+						`Failed to remove IPC socket ${ipcPath}`,
+						'PlayerService',
+						error instanceof Error ? error : new Error(String(error))
+					);
+				}
+			});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			this.ipcPaths.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.streams.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.manuallyClosedScreens.clear();</span>
+<span class="cstat-no" title="statement not covered" >			this.disabledScreens.clear();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >			logger.info('Player service cleanup complete', 'PlayerService');</span>
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Error during player service cleanup',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+<span class="cstat-no" title="statement not covered" >			throw error;</span>
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >isRetrying(</span>screen: number): boolean {
+<span class="cstat-no" title="statement not covered" >		return this.streamRetries.has(screen);</span>
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >async </span>ensurePlayersRunning(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Check all screen configs and ensure they have players running if enabled
+<span class="cstat-no" title="statement not covered" >			for (const screen of this.config.player.screens) {</span>
+				// Skip if screen is disabled
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (</span>
+					!screen.enabled ||
+					this.disabledScreens.has(screen.screen) ||
+					this.manuallyClosedScreens.has(screen.screen)
+				) {
+<span class="cstat-no" title="statement not covered" >					logger.debug(</span>
+						`Skipping disabled or manually closed screen ${screen.screen}`,
+						'PlayerService'
+					);
+<span class="cstat-no" title="statement not covered" >					continue;</span>
+				}
+&nbsp;
+				// Skip if a stream is already running on this screen
+				const isStreamRunning = <span class="cstat-no" title="statement not covered" >this.streams.has(screen.screen);</span>
+<span class="cstat-no" title="statement not covered" >				<span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamRunning) {</span>
+<span class="cstat-no" title="statement not covered" >					continue;</span>
+				}
+&nbsp;
+				// Start a player with a dummy source
+				const options: StreamOptions &amp; { screen: number } = <span class="cstat-no" title="statement not covered" >{</span>
+					url: 'about:blank', // Use about:blank as dummy source
+					screen: screen.screen,
+					quality: 'best',
+					volume: screen.volume || this.config.player.defaultVolume
+				};
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				try {</span>
+<span class="cstat-no" title="statement not covered" >					await this.startStream(options);</span>
+<span class="cstat-no" title="statement not covered" >					logger.info(`Started player for screen ${screen.screen}`, 'PlayerService');</span>
+				} catch (error) {
+<span class="cstat-no" title="statement not covered" >					logger.error(</span>
+						`Failed to start player for screen ${screen.screen}`,
+						'PlayerService',
+						error instanceof Error ? error : new Error(String(error))
+					);
+				}
+			}
+		} catch (error) {
+<span class="cstat-no" title="statement not covered" >			logger.error(</span>
+				'Failed to ensure players are running',
+				'PlayerService',
+				error instanceof Error ? error : new Error(String(error))
+			);
+		}
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >disableScreen(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`PlayerService: Disabling screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		this.disabledScreens.add(screen);</span>
+&nbsp;
+		// Stop any running stream for this screen
+<span class="cstat-no" title="statement not covered" >		this.stopStream(screen, true).catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(`Failed to stop stream when disabling screen ${screen}`, 'PlayerService', error);</span>
+		});
+	}
+&nbsp;
+	public <span class="fstat-no" title="function not covered" >enableScreen(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >		logger.debug(`PlayerService: Enabling screen ${screen}`, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >		this.disabledScreens.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >		this.manuallyClosedScreens.delete(screen);</span>
+&nbsp;
+		// Ensure players get restarted on this screen in the next ensurePlayersRunning call
+		// We don't start it immediately to allow for proper initialization
+	}
+&nbsp;
+	// Helper method to extract title from URL
+	private <span class="fstat-no" title="function not covered" >extractTitleFromUrl(</span>url: string): string | null {
+<span class="cstat-no" title="statement not covered" >		try {</span>
+			// Extract video ID from YouTube URL
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('youtube.com') || url.includes('youtu.be')) {</span>
+				const urlObj = <span class="cstat-no" title="statement not covered" >new URL(url);</span>
+				let videoId;
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				if (url.includes('youtube.com/watch')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = urlObj.searchParams.get('v');</span>
+				} else <span class="cstat-no" title="statement not covered" >if (url.includes('youtu.be/')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = url.split('youtu.be/')[1]?.split(/[/?#]/)[0];</span>
+				} else <span class="cstat-no" title="statement not covered" >if (url.includes('youtube.com/live/')) {</span>
+<span class="cstat-no" title="statement not covered" >					videoId = url.split('youtube.com/live/')[1]?.split(/[/?#]/)[0];</span>
+				} else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('youtube.com/channel/')) {</span>
+					const channelId = <span class="cstat-no" title="statement not covered" >url.split('youtube.com/channel/')[1]?.split(/[/?#]/)[0];</span>
+<span class="cstat-no" title="statement not covered" >					return channelId ? `YouTube Channel (${channelId})` : 'YouTube Stream';</span>
+				}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				return videoId ? `YouTube Video (${videoId})` : 'YouTube Stream';</span>
+			}
+&nbsp;
+			// Extract channel name from Twitch URL
+<span class="cstat-no" title="statement not covered" >			<span class="missing-if-branch" title="if path not taken" >I</span>if (url.includes('twitch.tv')) {</span>
+				const channelName = <span class="cstat-no" title="statement not covered" >url.split('twitch.tv/')[1]?.split(/[/?#]/)[0];</span>
+<span class="cstat-no" title="statement not covered" >				return channelName ? `Twitch Stream (${channelName})` : 'Twitch Stream';</span>
+			}
+&nbsp;
+			// For other URLs, use the hostname
+			const hostname = <span class="cstat-no" title="statement not covered" >new URL(url).hostname;</span>
+<span class="cstat-no" title="statement not covered" >			return hostname ? `Stream from ${hostname}` : 'Unknown Stream';</span>
+		} catch (err) {
+<span class="cstat-no" title="statement not covered" >			logger.warn(</span>
+				`Failed to extract title from URL: ${url}`,
+				'PlayerService',
+				err instanceof Error ? err : new Error(String(err))
+			);
+<span class="cstat-no" title="statement not covered" >			return 'Unknown Stream';</span>
+		}
+	}
+&nbsp;
+	/**
+	 * Sends a command directly to the MPV IPC socket
+	 */
+	private <span class="fstat-no" title="function not covered" >async </span>sendMpvCommand(screen: number, command: string): Promise&lt;void&gt; {
+		const ipcPath = <span class="cstat-no" title="statement not covered" >this.ipcPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (!ipcPath) {</span>
+			const errorMessage = <span class="cstat-no" title="statement not covered" >`No IPC socket for screen ${screen}`;</span>
+<span class="cstat-no" title="statement not covered" >			logger.error(errorMessage, 'PlayerService');</span>
+<span class="cstat-no" title="statement not covered" >			throw new Error(errorMessage);</span>
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >			try {</span>
+				const socket = <span class="cstat-no" title="statement not covered" >net.createConnection(ipcPath);</span>
+				let hasResponded = <span class="cstat-no" title="statement not covered" >false;</span>
+&nbsp;
+				// Set a shorter connection timeout
+<span class="cstat-no" title="statement not covered" >				socket.setTimeout(500);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('connect', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+					const mpvCommand = <span class="cstat-no" title="statement not covered" >JSON.stringify({ command: [command] });</span>
+<span class="cstat-no" title="statement not covered" >					socket.write(mpvCommand + '\n', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+						// Wait a brief moment after writing to ensure command is sent
+<span class="cstat-no" title="statement not covered" >						setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >							<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >								hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >								socket.end();</span>
+<span class="cstat-no" title="statement not covered" >								resolve();</span>
+							}
+						}, 100);
+					});
+				});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('error', <span class="fstat-no" title="function not covered" >(e</span>rr: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.destroy();</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Failed to send command to screen ${screen}`,
+							'PlayerService',
+							err.message
+						);
+<span class="cstat-no" title="statement not covered" >						reject(err);</span>
+					}
+				});
+&nbsp;
+<span class="cstat-no" title="statement not covered" >				socket.on('timeout', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.destroy();</span>
+						const error = <span class="cstat-no" title="statement not covered" >new Error('Socket timeout');</span>
+<span class="cstat-no" title="statement not covered" >						logger.error(</span>
+							`Command send timeout for screen ${screen}`,
+							'PlayerService',
+							error.message
+						);
+<span class="cstat-no" title="statement not covered" >						reject(error);</span>
+					}
+				});
+&nbsp;
+				// Cleanup socket on any response
+<span class="cstat-no" title="statement not covered" >				socket.on('data', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						socket.end();</span>
+<span class="cstat-no" title="statement not covered" >						resolve();</span>
+					}
+				});
+&nbsp;
+				// Handle socket close
+<span class="cstat-no" title="statement not covered" >				socket.on('close', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >					<span class="missing-if-branch" title="if path not taken" >I</span>if (!hasResponded) {</span>
+<span class="cstat-no" title="statement not covered" >						hasResponded = true;</span>
+<span class="cstat-no" title="statement not covered" >						reject(new Error('Socket closed unexpectedly'));</span>
+					}
+				});
+			} catch (err) {
+<span class="cstat-no" title="statement not covered" >				logger.error(</span>
+					`Command send error for screen ${screen}`,
+					'PlayerService',
+					err instanceof Error ? err.message : String(err)
+				);
+<span class="cstat-no" title="statement not covered" >				reject(err);</span>
+			}
+		});
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleError(</span>screen: number, error: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >		logger.error(</span>
+			`Stream error on screen ${screen}: ${errorMessage}`,
+			'PlayerService',
+			errorMessage
+		);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.errorCallback) {</span>
+<span class="cstat-no" title="statement not covered" >			this.errorCallback({</span>
+				screen,
+				error: errorMessage,
+				code: -1
+			});
+		}
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleStreamEnd(</span>screen: number, error?: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : error ? String(error) : undefined;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		<span class="missing-if-branch" title="if path not taken" >I</span>if (this.endCallback) {</span>
+<span class="cstat-no" title="statement not covered" >			this.endCallback({</span>
+				screen,
+				error: errorMessage
+			});
+		}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >		logger.info(</span>
+			`Stream ended on screen ${screen}${errorMessage ? `: ${errorMessage}` : ''}`,
+			'PlayerService'
+		);
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >logError(</span>message: string): void {
+<span class="cstat-no" title="statement not covered" >		logger.error(message, 'PlayerService');</span>
+	}
+&nbsp;
+	private <span class="fstat-no" title="function not covered" >handleProcessError(</span>screen: number, error: unknown): void {
+		const errorMessage = <span class="cstat-no" title="statement not covered" >error instanceof Error ? error.message : String(error);</span>
+<span class="cstat-no" title="statement not covered" >		this.handleError(screen, errorMessage);</span>
+	}
+}
+&nbsp;</pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/player_manager.ts.html b/coverage/src/server/services/player_manager.ts.html
new file mode 100644
index 0000000..01f4f5d
--- /dev/null
+++ b/coverage/src/server/services/player_manager.ts.html
@@ -0,0 +1,448 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/player_manager.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> player_manager.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/42</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/9</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/8</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/41</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { StreamInstance } from '../../types/stream_instance.js';
+import type { Config } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+interface WorkerData {
+  screen: number;
+  url: string;
+  config: Config;
+}
+&nbsp;
+interface WorkerMessage {
+  type: string;
+  data?: unknown;
+}
+&nbsp;
+interface WorkerOptions {
+  type?: 'classic' | 'module';
+}
+&nbsp;
+declare class Worker extends EventTarget {
+  constructor(scriptURL: string | URL, options?: WorkerOptions);
+  postMessage(message: WorkerMessage): void;
+  terminate(): void;
+  onmessage: ((this: Worker, ev: MessageEvent&lt;WorkerMessage&gt;) =&gt; void) | null;
+  onerror: ((this: Worker, ev: ErrorEvent) =&gt; void) | null;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class P</span>layerManager extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >workers: Map&lt;number, Worker&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, StreamInstance&gt; = new Map();</span>
+  private config: Config;
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(c</span>onfig: Config) {
+<span class="cstat-no" title="statement not covered" >    super();</span>
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >    this.initialize();</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >initialize(</span>): void {
+    // Create workers for each enabled stream config
+<span class="cstat-no" title="statement not covered" >    for (const stream of this.config.streams) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream.enabled) <span class="cstat-no" title="statement not covered" >continue;</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const worker = <span class="cstat-no" title="statement not covered" >new Worker(new URL('./stream_worker.js', import.meta.url), {</span>
+          type: 'module'
+        });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        this.workers.set(stream.screen, worker);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        worker.onmessage = <span class="fstat-no" title="function not covered" >(e</span>vent: MessageEvent&lt;WorkerMessage&gt;) =&gt; {</span>
+          const message = <span class="cstat-no" title="statement not covered" >event.data;</span>
+<span class="cstat-no" title="statement not covered" >          switch (message.type) {</span>
+            case 'streamInfo':
+<span class="cstat-no" title="statement not covered" >              this.handleStreamInfo(stream.screen, message.data as StreamInstance);</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+            case 'error':
+<span class="cstat-no" title="statement not covered" >              this.handleStreamError(stream.screen, String(message.data));</span>
+<span class="cstat-no" title="statement not covered" >              break;</span>
+          }
+        };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        worker.onerror = <span class="fstat-no" title="function not covered" >(e</span>vent: ErrorEvent) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          this.handleStreamError(stream.screen, event.message);</span>
+        };
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          `Failed to initialize worker for screen ${stream.screen}`,
+          'PlayerManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>startStream(screen: number, url: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const worker = <span class="cstat-no" title="statement not covered" >this.workers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!worker) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error(`No worker found for screen ${screen}`);</span>
+      }
+&nbsp;
+      const data: WorkerData = <span class="cstat-no" title="statement not covered" >{</span>
+        screen,
+        url,
+        config: this.config
+      };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      worker.postMessage({ type: 'start', data });</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to start stream on screen ${screen}`,
+        'PlayerManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number): Promise&lt;void&gt; {
+    const worker = <span class="cstat-no" title="statement not covered" >this.workers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (worker) {</span>
+<span class="cstat-no" title="statement not covered" >      worker.postMessage({ type: 'stop' });</span>
+<span class="cstat-no" title="statement not covered" >      worker.terminate();</span>
+<span class="cstat-no" title="statement not covered" >      this.workers.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >handleStreamInfo(</span>screen: number, data: StreamInstance): void {
+<span class="cstat-no" title="statement not covered" >    this.streams.set(screen, data);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('streamUpdate', { screen, data });</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >handleStreamError(</span>screen: number, error: string): void {
+<span class="cstat-no" title="statement not covered" >    logger.error(`Stream error on screen ${screen}: ${error}`, 'PlayerManager');</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('streamError', { screen, error });</span>
+  }
+&nbsp;
+  // Add methods for volume control, quality changes, etc.
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/queue_service.ts.html b/coverage/src/server/services/queue_service.ts.html
new file mode 100644
index 0000000..3255748
--- /dev/null
+++ b/coverage/src/server/services/queue_service.ts.html
@@ -0,0 +1,601 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/queue_service.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> queue_service.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/76</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/36</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/20</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/74</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+import type { StreamSource } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+export interface QueueEvents {
+  'queue:updated': (screen: number, queue: StreamSource[]) =&gt; void;
+  'queue:empty': (screen: number) =&gt; void;
+  'all:watched': (screen: number) =&gt; void;
+}
+&nbsp;
+class QueueService extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >queues: Map&lt;number, StreamSource[]&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >watchedStreams: Set&lt;string&gt; = new Set();</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor() {</span>
+<span class="cstat-no" title="statement not covered" >    super();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('QueueService initialized', 'QueueService');</span>
+  }
+&nbsp;
+  // Queue Management
+  public <span class="fstat-no" title="function not covered" >setQueue(</span>screen: number, queue: StreamSource[]): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!queue || !Array.isArray(queue)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid queue array provided for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Filter out any null or undefined entries
+    const validQueue = <span class="cstat-no" title="statement not covered" >queue.filter(<span class="fstat-no" title="function not covered" >item </span>=&gt; <span class="cstat-no" title="statement not covered" >item &amp;&amp; item.url)</span>;</span>
+    
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, validQueue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Set queue for screen ${screen}. Queue size: ${validQueue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Queue contents: ${JSON.stringify(validQueue)}`, 'QueueService');</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (validQueue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} is empty, emitting all:watched event`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('all:watched', screen);</span>
+    } else {
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} updated with ${validQueue.length} items`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queue:updated', screen, validQueue);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getQueue(</span>screen: number): StreamSource[] {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Getting queue for screen ${screen}. Queue size: ${queue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    return queue;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >addToQueue(</span>screen: number, source: StreamSource): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!source || !source.url) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid stream source provided for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    const queue = <span class="cstat-no" title="statement not covered" >this.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >    queue.push(source);</span>
+<span class="cstat-no" title="statement not covered" >    this.setQueue(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Added stream ${source.url} to queue for screen ${screen}`, 'QueueService');</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearQueue(</span>screen: number): void {
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, []);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Cleared queue for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:updated', screen, []);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:empty', screen);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearAllQueues(</span>): void {
+<span class="cstat-no" title="statement not covered" >    this.queues.clear();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared all queues', 'QueueService');</span>
+  }
+&nbsp;
+  // Stream Management
+  public <span class="fstat-no" title="function not covered" >getNextStream(</span>screen: number): StreamSource | undefined {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+    const nextStream = <span class="cstat-no" title="statement not covered" >queue[0];</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Getting next stream for screen ${screen}. Next stream: ${nextStream?.url || 'none'}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    return nextStream;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >removeFromQueue(</span>screen: number, index: number): void {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+    
+    // Validate index
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (index &lt; 0 || index &gt;= queue.length) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Invalid index ${index} for queue of screen ${screen} with length ${queue.length}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+    
+    // Remove the item
+    const removedItem = <span class="cstat-no" title="statement not covered" >queue.splice(index, 1)[0];</span>
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, queue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Removed stream ${removedItem.url} from queue for screen ${screen}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Queue size after removal: ${queue.length}`, 'QueueService');</span>
+    
+    // Emit queue updated event
+<span class="cstat-no" title="statement not covered" >    this.emit('queue:updated', screen, queue);</span>
+    
+    // If queue is now empty, emit queue empty event
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (queue.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue for screen ${screen} is now empty`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queue:empty', screen);</span>
+    }
+  }
+&nbsp;
+  // Watched Streams Management
+  public <span class="fstat-no" title="function not covered" >markStreamAsWatched(</span>url: string): void {
+<span class="cstat-no" title="statement not covered" >    this.watchedStreams.add(url);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >isStreamWatched(</span>url: string): boolean {
+<span class="cstat-no" title="statement not covered" >    return this.watchedStreams.has(url);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getWatchedStreams(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return Array.from(this.watchedStreams);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearWatchedStreams(</span>): void {
+<span class="cstat-no" title="statement not covered" >    this.watchedStreams.clear();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared watched streams history', 'QueueService');</span>
+  }
+&nbsp;
+  // Event Handling
+  override <span class="fstat-no" title="function not covered" >on&lt;</span>K extends keyof QueueEvents&gt;(event: K, listener: QueueEvents[K]): this {
+<span class="cstat-no" title="statement not covered" >    super.on(event, listener);</span>
+<span class="cstat-no" title="statement not covered" >    return this;</span>
+  }
+&nbsp;
+  override <span class="fstat-no" title="function not covered" >off&lt;</span>K extends keyof QueueEvents&gt;(event: K, listener: QueueEvents[K]): this {
+<span class="cstat-no" title="statement not covered" >    super.off(event, listener);</span>
+<span class="cstat-no" title="statement not covered" >    return this;</span>
+  }
+&nbsp;
+  // Add method to check if any streams are unwatched
+<span class="fstat-no" title="function not covered" >  hasUnwatchedStreams(</span>streams: StreamSource[]): boolean {
+<span class="cstat-no" title="statement not covered" >    return streams.some(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >!this.watchedStreams.has(stream.url))</span>;</span>
+  }
+&nbsp;
+  // Add method to filter unwatched streams
+  public <span class="fstat-no" title="function not covered" >filterUnwatchedStreams(</span>streams: StreamSource[]): StreamSource[] {
+    // First check if we have any unwatched non-favorite streams
+    const hasUnwatchedNonFavorites = <span class="cstat-no" title="statement not covered" >streams.some(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+      const isFavorite = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined &amp;&amp; stream.priority &lt; 900;</span>
+<span class="cstat-no" title="statement not covered" >      return !isFavorite &amp;&amp; !this.watchedStreams.has(stream.url);</span>
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return streams.filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+      const isFavorite = <span class="cstat-no" title="statement not covered" >stream.priority !== undefined &amp;&amp; stream.priority &lt; 900;</span>
+      const isWatched = <span class="cstat-no" title="statement not covered" >this.isStreamWatched(stream.url);</span>
+      
+      // If it's not watched, always include it
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!isWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      }
+      
+      // If it's watched and a favorite, only include if all non-favorites are watched
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isFavorite &amp;&amp; !hasUnwatchedNonFavorites) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.debug(`QueueService: Including watched favorite stream ${stream.url} with priority ${stream.priority} because all non-favorites are watched`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      }
+      
+      // Otherwise, don't include watched streams
+<span class="cstat-no" title="statement not covered" >      logger.debug(`QueueService: Filtering out watched stream ${stream.url}`, 'QueueService');</span>
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    });
+  }
+}
+&nbsp;
+// Create and export singleton instance
+export const <span class="cstat-no" title="statement not covered" >queueService = new QueueService(); </span></pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/twitch.ts.html b/coverage/src/server/services/twitch.ts.html
new file mode 100644
index 0000000..6dfa15d
--- /dev/null
+++ b/coverage/src/server/services/twitch.ts.html
@@ -0,0 +1,715 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/twitch.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> twitch.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/81</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/51</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/74</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { ApiClient, type HelixStream } from '@twurple/api';</span>
+<span class="cstat-no" title="statement not covered" >import { RefreshingAuthProvider } from '@twurple/auth';</span>
+import type { TwitchAuth } from '../db/database.js';
+import type { StreamSource, StreamService } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+interface GetTwitchStreamsOptions {
+  channels?: string[];
+  limit?: number;
+  sort?: 'viewers' | 'started_at';
+  tags?: string[];
+  language?: string;
+}
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class T</span>witchService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >client: ApiClient | null = null;</span>
+  private clientId: string;
+  private clientSecret: string;
+  private <span class="cstat-no" title="statement not covered" >authProvider: RefreshingAuthProvider | null = null;</span>
+  private <span class="cstat-no" title="statement not covered" >filters: string[] = [];</span>
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: string[] = [];</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(c</span>lientId: string, clientSecret: string, filters: string[] = <span class="branch-0 cbranch-no" title="branch not covered" >[])</span> {
+<span class="cstat-no" title="statement not covered" >    this.clientId = clientId;</span>
+<span class="cstat-no" title="statement not covered" >    this.clientSecret = clientSecret;</span>
+<span class="cstat-no" title="statement not covered" >    this.filters = filters;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Initialize with client credentials flow for non-user-specific requests
+<span class="cstat-no" title="statement not covered" >      this.authProvider = new RefreshingAuthProvider({</span>
+        clientId,
+        clientSecret,
+      });
+<span class="cstat-no" title="statement not covered" >      this.client = new ApiClient({ authProvider: this.authProvider });</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Twitch service initialized', 'TwitchService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn('Failed to initialize Twitch service - some features will be disabled', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getStreams(options: GetTwitchStreamsOptions): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client) <span class="cstat-no" title="statement not covered" >return [];</span></span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const limit = <span class="cstat-no" title="statement not covered" >options.limit || 25;</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options.channels || [];</span>
+      let results: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+      
+      // If we have more than 100 channels, we need to batch the requests
+<span class="cstat-no" title="statement not covered" >      if (channels.length &gt; 100) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Batching ${channels.length} channels into multiple requests (max 100 per request)`, 'TwitchService');</span>
+        
+        // Process channels in batches of 100
+<span class="cstat-no" title="statement not covered" >        for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; channels.length; i += 100) {</span>
+          const batchChannels = <span class="cstat-no" title="statement not covered" >channels.slice(i, i + 100);</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Processing batch ${Math.floor(i/100) + 1} with ${batchChannels.length} channels`, 'TwitchService');</span>
+          
+          const batchStreams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreams({</span>
+            userName: batchChannels,
+            language: options.language
+          });
+          
+          // Convert to StreamSource format and add to results
+          const batchResults = <span class="cstat-no" title="statement not covered" >batchStreams.data.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+            url: `https://twitch.tv/${stream.userName}`,
+            title: stream.title,
+            platform: 'twitch' as const,
+            viewerCount: stream.viewers,
+            startTime: stream.startDate.getTime(),
+            sourceStatus: 'live' as const,
+            channelId: stream.userName.toLowerCase() // Add channelId for sorting
+          }));
+          
+<span class="cstat-no" title="statement not covered" >          results = [...results, ...batchResults];</span>
+          
+          // If we've reached the desired limit, stop processing batches
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (limit &amp;&amp; results.length &gt;= limit) {</span>
+<span class="cstat-no" title="statement not covered" >            results = results.slice(0, limit);</span>
+<span class="cstat-no" title="statement not covered" >            break;</span>
+          }
+        }
+      } else {
+        // Original logic for &lt;= 100 channels
+        const streams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreams({</span>
+          limit,
+          userName: channels,
+          language: options.language
+        });
+&nbsp;
+        // Convert to StreamSource format
+<span class="cstat-no" title="statement not covered" >        results = streams.data.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+          url: `https://twitch.tv/${stream.userName}`,
+          title: stream.title,
+          platform: 'twitch' as const,
+          viewerCount: stream.viewers,
+          startTime: stream.startDate.getTime(),
+          sourceStatus: 'live' as const,
+          channelId: stream.userName.toLowerCase() // Add channelId for sorting
+        }));
+      }
+&nbsp;
+      // If these are favorite channels, preserve their original order
+<span class="cstat-no" title="statement not covered" >      if (channels &amp;&amp; channels.length &gt; 0) {</span>
+        // Create a map of channel IDs to their original position in the favorites array
+        const channelOrderMap = <span class="cstat-no" title="statement not covered" >new Map&lt;string, number&gt;();</span>
+<span class="cstat-no" title="statement not covered" >        channels.forEach(<span class="fstat-no" title="function not covered" >(c</span>hannelId, index) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          channelOrderMap.set(channelId.toLowerCase(), index);</span>
+        });
+        
+        // Sort streams by their channel's position in the favorites array
+<span class="cstat-no" title="statement not covered" >        results.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          const aOrder = <span class="cstat-no" title="statement not covered" >a.channelId ? channelOrderMap.get(a.channelId) ?? 999 : 999;</span>
+          const bOrder = <span class="cstat-no" title="statement not covered" >b.channelId ? channelOrderMap.get(b.channelId) ?? 999 : 999;</span>
+          
+          // First sort by channel order (favorites order)
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aOrder !== bOrder) {</span>
+<span class="cstat-no" title="statement not covered" >            return aOrder - bOrder;</span>
+          }
+          
+          // Then by viewer count for streams from the same channel
+<span class="cstat-no" title="statement not covered" >          return (b.viewerCount || 0) - (a.viewerCount || 0);</span>
+        });
+      }
+      // Sort by viewers if requested (for non-favorite channels)
+      else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (options.sort === 'viewers') {</span>
+<span class="cstat-no" title="statement not covered" >        results.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(b.viewerCount || 0) - (a.viewerCount || 0))</span>;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${results.length} Twitch streams`, 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      return results;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to get Twitch streams',
+        'TwitchService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getVTuberStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.getStreams({</span>
+      limit,
+      tags: ['VTuber']
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getJapaneseStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.getStreams({</span>
+      limit,
+      language: 'ja'
+    });
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getFollowedStreams(userId: string): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.client || !this.authProvider) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn('User not authenticated', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const userClient = <span class="cstat-no" title="statement not covered" >new ApiClient({ authProvider: this.authProvider });</span>
+      // @ts-expect-error - Twitch API types are incomplete
+      const follows = <span class="cstat-no" title="statement not covered" >await userClient.users.getFollows({ userId });</span>
+      const channelIds = <span class="cstat-no" title="statement not covered" >follows.data.map(<span class="fstat-no" title="function not covered" >(f</span>ollow: { followedUserId: string }) =&gt; <span class="cstat-no" title="statement not covered" >follow.followedUserId)</span>;</span>
+      
+      const streams = <span class="cstat-no" title="statement not covered" >await this.client.streams.getStreamsByUserIds(channelIds);</span>
+      const streamData = (<span class="cstat-no" title="statement not covered" >streams as unknown as { data: HelixStream[] }).data;</span>
+      
+<span class="cstat-no" title="statement not covered" >      return streamData.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+        url: `https://twitch.tv/${stream.userName}`,
+        title: stream.title,
+        platform: 'twitch' as const,
+        viewerCount: stream.viewers
+      }));
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch followed streams', 
+        'TwitchService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setUserAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.authProvider) {</span>
+<span class="cstat-no" title="statement not covered" >        throw new Error('Twitch service not initialized');</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      await this.authProvider.addUserForToken({</span>
+        accessToken: auth.accessToken,
+        refreshToken: auth.refreshToken,
+        expiresIn: Math.floor((auth.expiresAt - Date.now()) / 1000),
+        obtainmentTimestamp: Date.now()
+      }, ['user:read:follows']);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Twitch user auth set for user ${auth.userId}`, 'TwitchService');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error('Failed to set Twitch user auth', 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/services/youtube.ts.html b/coverage/src/server/services/youtube.ts.html
new file mode 100644
index 0000000..57a2b2a
--- /dev/null
+++ b/coverage/src/server/services/youtube.ts.html
@@ -0,0 +1,208 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/services/youtube.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/services</a> youtube.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/15</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/4</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/14</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { StreamService } from '../../types/stream.js';
+import type { StreamSource } from '../../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './logger.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class Y</span>ouTubeService implements StreamService {
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: string[] = [];</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(f</span>avoriteChannels: string[]) {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favoriteChannels;</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(options?: { channels?: string[]; limit?: number }): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const channels = <span class="cstat-no" title="statement not covered" >options?.channels || this.favoriteChannels;</span>
+      const limit = <span class="cstat-no" title="statement not covered" >options?.limit || 25;</span>
+&nbsp;
+      // For each channel, create a basic entry that will be updated with live status
+      const streams: StreamSource[] = <span class="cstat-no" title="statement not covered" >channels.map(<span class="fstat-no" title="function not covered" >channel </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+        url: `https://youtube.com/${channel}`,
+        title: `${channel}'s channel`,
+        platform: 'youtube',
+        viewerCount: 0,
+        channelId: channel
+      }));
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.debug(`Found ${streams.length} YouTube channels`, 'YouTubeService');</span>
+<span class="cstat-no" title="statement not covered" >      return streams.slice(0, limit);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch YouTube streams',
+        'YouTubeService',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateFavorites(</span>channels: string[]): void {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = channels;</span>
+<span class="cstat-no" title="statement not covered" >    logger.debug(`Updated YouTube favorites: ${channels.join(', ')}`, 'YouTubeService');</span>
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/stream_manager.ts.html b/coverage/src/server/stream_manager.ts.html
new file mode 100644
index 0000000..8e8b833
--- /dev/null
+++ b/coverage/src/server/stream_manager.ts.html
@@ -0,0 +1,5392 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/stream_manager.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> stream_manager.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/733</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/387</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/129</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/697</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a>
+<a name='L93'></a><a href='#L93'>93</a>
+<a name='L94'></a><a href='#L94'>94</a>
+<a name='L95'></a><a href='#L95'>95</a>
+<a name='L96'></a><a href='#L96'>96</a>
+<a name='L97'></a><a href='#L97'>97</a>
+<a name='L98'></a><a href='#L98'>98</a>
+<a name='L99'></a><a href='#L99'>99</a>
+<a name='L100'></a><a href='#L100'>100</a>
+<a name='L101'></a><a href='#L101'>101</a>
+<a name='L102'></a><a href='#L102'>102</a>
+<a name='L103'></a><a href='#L103'>103</a>
+<a name='L104'></a><a href='#L104'>104</a>
+<a name='L105'></a><a href='#L105'>105</a>
+<a name='L106'></a><a href='#L106'>106</a>
+<a name='L107'></a><a href='#L107'>107</a>
+<a name='L108'></a><a href='#L108'>108</a>
+<a name='L109'></a><a href='#L109'>109</a>
+<a name='L110'></a><a href='#L110'>110</a>
+<a name='L111'></a><a href='#L111'>111</a>
+<a name='L112'></a><a href='#L112'>112</a>
+<a name='L113'></a><a href='#L113'>113</a>
+<a name='L114'></a><a href='#L114'>114</a>
+<a name='L115'></a><a href='#L115'>115</a>
+<a name='L116'></a><a href='#L116'>116</a>
+<a name='L117'></a><a href='#L117'>117</a>
+<a name='L118'></a><a href='#L118'>118</a>
+<a name='L119'></a><a href='#L119'>119</a>
+<a name='L120'></a><a href='#L120'>120</a>
+<a name='L121'></a><a href='#L121'>121</a>
+<a name='L122'></a><a href='#L122'>122</a>
+<a name='L123'></a><a href='#L123'>123</a>
+<a name='L124'></a><a href='#L124'>124</a>
+<a name='L125'></a><a href='#L125'>125</a>
+<a name='L126'></a><a href='#L126'>126</a>
+<a name='L127'></a><a href='#L127'>127</a>
+<a name='L128'></a><a href='#L128'>128</a>
+<a name='L129'></a><a href='#L129'>129</a>
+<a name='L130'></a><a href='#L130'>130</a>
+<a name='L131'></a><a href='#L131'>131</a>
+<a name='L132'></a><a href='#L132'>132</a>
+<a name='L133'></a><a href='#L133'>133</a>
+<a name='L134'></a><a href='#L134'>134</a>
+<a name='L135'></a><a href='#L135'>135</a>
+<a name='L136'></a><a href='#L136'>136</a>
+<a name='L137'></a><a href='#L137'>137</a>
+<a name='L138'></a><a href='#L138'>138</a>
+<a name='L139'></a><a href='#L139'>139</a>
+<a name='L140'></a><a href='#L140'>140</a>
+<a name='L141'></a><a href='#L141'>141</a>
+<a name='L142'></a><a href='#L142'>142</a>
+<a name='L143'></a><a href='#L143'>143</a>
+<a name='L144'></a><a href='#L144'>144</a>
+<a name='L145'></a><a href='#L145'>145</a>
+<a name='L146'></a><a href='#L146'>146</a>
+<a name='L147'></a><a href='#L147'>147</a>
+<a name='L148'></a><a href='#L148'>148</a>
+<a name='L149'></a><a href='#L149'>149</a>
+<a name='L150'></a><a href='#L150'>150</a>
+<a name='L151'></a><a href='#L151'>151</a>
+<a name='L152'></a><a href='#L152'>152</a>
+<a name='L153'></a><a href='#L153'>153</a>
+<a name='L154'></a><a href='#L154'>154</a>
+<a name='L155'></a><a href='#L155'>155</a>
+<a name='L156'></a><a href='#L156'>156</a>
+<a name='L157'></a><a href='#L157'>157</a>
+<a name='L158'></a><a href='#L158'>158</a>
+<a name='L159'></a><a href='#L159'>159</a>
+<a name='L160'></a><a href='#L160'>160</a>
+<a name='L161'></a><a href='#L161'>161</a>
+<a name='L162'></a><a href='#L162'>162</a>
+<a name='L163'></a><a href='#L163'>163</a>
+<a name='L164'></a><a href='#L164'>164</a>
+<a name='L165'></a><a href='#L165'>165</a>
+<a name='L166'></a><a href='#L166'>166</a>
+<a name='L167'></a><a href='#L167'>167</a>
+<a name='L168'></a><a href='#L168'>168</a>
+<a name='L169'></a><a href='#L169'>169</a>
+<a name='L170'></a><a href='#L170'>170</a>
+<a name='L171'></a><a href='#L171'>171</a>
+<a name='L172'></a><a href='#L172'>172</a>
+<a name='L173'></a><a href='#L173'>173</a>
+<a name='L174'></a><a href='#L174'>174</a>
+<a name='L175'></a><a href='#L175'>175</a>
+<a name='L176'></a><a href='#L176'>176</a>
+<a name='L177'></a><a href='#L177'>177</a>
+<a name='L178'></a><a href='#L178'>178</a>
+<a name='L179'></a><a href='#L179'>179</a>
+<a name='L180'></a><a href='#L180'>180</a>
+<a name='L181'></a><a href='#L181'>181</a>
+<a name='L182'></a><a href='#L182'>182</a>
+<a name='L183'></a><a href='#L183'>183</a>
+<a name='L184'></a><a href='#L184'>184</a>
+<a name='L185'></a><a href='#L185'>185</a>
+<a name='L186'></a><a href='#L186'>186</a>
+<a name='L187'></a><a href='#L187'>187</a>
+<a name='L188'></a><a href='#L188'>188</a>
+<a name='L189'></a><a href='#L189'>189</a>
+<a name='L190'></a><a href='#L190'>190</a>
+<a name='L191'></a><a href='#L191'>191</a>
+<a name='L192'></a><a href='#L192'>192</a>
+<a name='L193'></a><a href='#L193'>193</a>
+<a name='L194'></a><a href='#L194'>194</a>
+<a name='L195'></a><a href='#L195'>195</a>
+<a name='L196'></a><a href='#L196'>196</a>
+<a name='L197'></a><a href='#L197'>197</a>
+<a name='L198'></a><a href='#L198'>198</a>
+<a name='L199'></a><a href='#L199'>199</a>
+<a name='L200'></a><a href='#L200'>200</a>
+<a name='L201'></a><a href='#L201'>201</a>
+<a name='L202'></a><a href='#L202'>202</a>
+<a name='L203'></a><a href='#L203'>203</a>
+<a name='L204'></a><a href='#L204'>204</a>
+<a name='L205'></a><a href='#L205'>205</a>
+<a name='L206'></a><a href='#L206'>206</a>
+<a name='L207'></a><a href='#L207'>207</a>
+<a name='L208'></a><a href='#L208'>208</a>
+<a name='L209'></a><a href='#L209'>209</a>
+<a name='L210'></a><a href='#L210'>210</a>
+<a name='L211'></a><a href='#L211'>211</a>
+<a name='L212'></a><a href='#L212'>212</a>
+<a name='L213'></a><a href='#L213'>213</a>
+<a name='L214'></a><a href='#L214'>214</a>
+<a name='L215'></a><a href='#L215'>215</a>
+<a name='L216'></a><a href='#L216'>216</a>
+<a name='L217'></a><a href='#L217'>217</a>
+<a name='L218'></a><a href='#L218'>218</a>
+<a name='L219'></a><a href='#L219'>219</a>
+<a name='L220'></a><a href='#L220'>220</a>
+<a name='L221'></a><a href='#L221'>221</a>
+<a name='L222'></a><a href='#L222'>222</a>
+<a name='L223'></a><a href='#L223'>223</a>
+<a name='L224'></a><a href='#L224'>224</a>
+<a name='L225'></a><a href='#L225'>225</a>
+<a name='L226'></a><a href='#L226'>226</a>
+<a name='L227'></a><a href='#L227'>227</a>
+<a name='L228'></a><a href='#L228'>228</a>
+<a name='L229'></a><a href='#L229'>229</a>
+<a name='L230'></a><a href='#L230'>230</a>
+<a name='L231'></a><a href='#L231'>231</a>
+<a name='L232'></a><a href='#L232'>232</a>
+<a name='L233'></a><a href='#L233'>233</a>
+<a name='L234'></a><a href='#L234'>234</a>
+<a name='L235'></a><a href='#L235'>235</a>
+<a name='L236'></a><a href='#L236'>236</a>
+<a name='L237'></a><a href='#L237'>237</a>
+<a name='L238'></a><a href='#L238'>238</a>
+<a name='L239'></a><a href='#L239'>239</a>
+<a name='L240'></a><a href='#L240'>240</a>
+<a name='L241'></a><a href='#L241'>241</a>
+<a name='L242'></a><a href='#L242'>242</a>
+<a name='L243'></a><a href='#L243'>243</a>
+<a name='L244'></a><a href='#L244'>244</a>
+<a name='L245'></a><a href='#L245'>245</a>
+<a name='L246'></a><a href='#L246'>246</a>
+<a name='L247'></a><a href='#L247'>247</a>
+<a name='L248'></a><a href='#L248'>248</a>
+<a name='L249'></a><a href='#L249'>249</a>
+<a name='L250'></a><a href='#L250'>250</a>
+<a name='L251'></a><a href='#L251'>251</a>
+<a name='L252'></a><a href='#L252'>252</a>
+<a name='L253'></a><a href='#L253'>253</a>
+<a name='L254'></a><a href='#L254'>254</a>
+<a name='L255'></a><a href='#L255'>255</a>
+<a name='L256'></a><a href='#L256'>256</a>
+<a name='L257'></a><a href='#L257'>257</a>
+<a name='L258'></a><a href='#L258'>258</a>
+<a name='L259'></a><a href='#L259'>259</a>
+<a name='L260'></a><a href='#L260'>260</a>
+<a name='L261'></a><a href='#L261'>261</a>
+<a name='L262'></a><a href='#L262'>262</a>
+<a name='L263'></a><a href='#L263'>263</a>
+<a name='L264'></a><a href='#L264'>264</a>
+<a name='L265'></a><a href='#L265'>265</a>
+<a name='L266'></a><a href='#L266'>266</a>
+<a name='L267'></a><a href='#L267'>267</a>
+<a name='L268'></a><a href='#L268'>268</a>
+<a name='L269'></a><a href='#L269'>269</a>
+<a name='L270'></a><a href='#L270'>270</a>
+<a name='L271'></a><a href='#L271'>271</a>
+<a name='L272'></a><a href='#L272'>272</a>
+<a name='L273'></a><a href='#L273'>273</a>
+<a name='L274'></a><a href='#L274'>274</a>
+<a name='L275'></a><a href='#L275'>275</a>
+<a name='L276'></a><a href='#L276'>276</a>
+<a name='L277'></a><a href='#L277'>277</a>
+<a name='L278'></a><a href='#L278'>278</a>
+<a name='L279'></a><a href='#L279'>279</a>
+<a name='L280'></a><a href='#L280'>280</a>
+<a name='L281'></a><a href='#L281'>281</a>
+<a name='L282'></a><a href='#L282'>282</a>
+<a name='L283'></a><a href='#L283'>283</a>
+<a name='L284'></a><a href='#L284'>284</a>
+<a name='L285'></a><a href='#L285'>285</a>
+<a name='L286'></a><a href='#L286'>286</a>
+<a name='L287'></a><a href='#L287'>287</a>
+<a name='L288'></a><a href='#L288'>288</a>
+<a name='L289'></a><a href='#L289'>289</a>
+<a name='L290'></a><a href='#L290'>290</a>
+<a name='L291'></a><a href='#L291'>291</a>
+<a name='L292'></a><a href='#L292'>292</a>
+<a name='L293'></a><a href='#L293'>293</a>
+<a name='L294'></a><a href='#L294'>294</a>
+<a name='L295'></a><a href='#L295'>295</a>
+<a name='L296'></a><a href='#L296'>296</a>
+<a name='L297'></a><a href='#L297'>297</a>
+<a name='L298'></a><a href='#L298'>298</a>
+<a name='L299'></a><a href='#L299'>299</a>
+<a name='L300'></a><a href='#L300'>300</a>
+<a name='L301'></a><a href='#L301'>301</a>
+<a name='L302'></a><a href='#L302'>302</a>
+<a name='L303'></a><a href='#L303'>303</a>
+<a name='L304'></a><a href='#L304'>304</a>
+<a name='L305'></a><a href='#L305'>305</a>
+<a name='L306'></a><a href='#L306'>306</a>
+<a name='L307'></a><a href='#L307'>307</a>
+<a name='L308'></a><a href='#L308'>308</a>
+<a name='L309'></a><a href='#L309'>309</a>
+<a name='L310'></a><a href='#L310'>310</a>
+<a name='L311'></a><a href='#L311'>311</a>
+<a name='L312'></a><a href='#L312'>312</a>
+<a name='L313'></a><a href='#L313'>313</a>
+<a name='L314'></a><a href='#L314'>314</a>
+<a name='L315'></a><a href='#L315'>315</a>
+<a name='L316'></a><a href='#L316'>316</a>
+<a name='L317'></a><a href='#L317'>317</a>
+<a name='L318'></a><a href='#L318'>318</a>
+<a name='L319'></a><a href='#L319'>319</a>
+<a name='L320'></a><a href='#L320'>320</a>
+<a name='L321'></a><a href='#L321'>321</a>
+<a name='L322'></a><a href='#L322'>322</a>
+<a name='L323'></a><a href='#L323'>323</a>
+<a name='L324'></a><a href='#L324'>324</a>
+<a name='L325'></a><a href='#L325'>325</a>
+<a name='L326'></a><a href='#L326'>326</a>
+<a name='L327'></a><a href='#L327'>327</a>
+<a name='L328'></a><a href='#L328'>328</a>
+<a name='L329'></a><a href='#L329'>329</a>
+<a name='L330'></a><a href='#L330'>330</a>
+<a name='L331'></a><a href='#L331'>331</a>
+<a name='L332'></a><a href='#L332'>332</a>
+<a name='L333'></a><a href='#L333'>333</a>
+<a name='L334'></a><a href='#L334'>334</a>
+<a name='L335'></a><a href='#L335'>335</a>
+<a name='L336'></a><a href='#L336'>336</a>
+<a name='L337'></a><a href='#L337'>337</a>
+<a name='L338'></a><a href='#L338'>338</a>
+<a name='L339'></a><a href='#L339'>339</a>
+<a name='L340'></a><a href='#L340'>340</a>
+<a name='L341'></a><a href='#L341'>341</a>
+<a name='L342'></a><a href='#L342'>342</a>
+<a name='L343'></a><a href='#L343'>343</a>
+<a name='L344'></a><a href='#L344'>344</a>
+<a name='L345'></a><a href='#L345'>345</a>
+<a name='L346'></a><a href='#L346'>346</a>
+<a name='L347'></a><a href='#L347'>347</a>
+<a name='L348'></a><a href='#L348'>348</a>
+<a name='L349'></a><a href='#L349'>349</a>
+<a name='L350'></a><a href='#L350'>350</a>
+<a name='L351'></a><a href='#L351'>351</a>
+<a name='L352'></a><a href='#L352'>352</a>
+<a name='L353'></a><a href='#L353'>353</a>
+<a name='L354'></a><a href='#L354'>354</a>
+<a name='L355'></a><a href='#L355'>355</a>
+<a name='L356'></a><a href='#L356'>356</a>
+<a name='L357'></a><a href='#L357'>357</a>
+<a name='L358'></a><a href='#L358'>358</a>
+<a name='L359'></a><a href='#L359'>359</a>
+<a name='L360'></a><a href='#L360'>360</a>
+<a name='L361'></a><a href='#L361'>361</a>
+<a name='L362'></a><a href='#L362'>362</a>
+<a name='L363'></a><a href='#L363'>363</a>
+<a name='L364'></a><a href='#L364'>364</a>
+<a name='L365'></a><a href='#L365'>365</a>
+<a name='L366'></a><a href='#L366'>366</a>
+<a name='L367'></a><a href='#L367'>367</a>
+<a name='L368'></a><a href='#L368'>368</a>
+<a name='L369'></a><a href='#L369'>369</a>
+<a name='L370'></a><a href='#L370'>370</a>
+<a name='L371'></a><a href='#L371'>371</a>
+<a name='L372'></a><a href='#L372'>372</a>
+<a name='L373'></a><a href='#L373'>373</a>
+<a name='L374'></a><a href='#L374'>374</a>
+<a name='L375'></a><a href='#L375'>375</a>
+<a name='L376'></a><a href='#L376'>376</a>
+<a name='L377'></a><a href='#L377'>377</a>
+<a name='L378'></a><a href='#L378'>378</a>
+<a name='L379'></a><a href='#L379'>379</a>
+<a name='L380'></a><a href='#L380'>380</a>
+<a name='L381'></a><a href='#L381'>381</a>
+<a name='L382'></a><a href='#L382'>382</a>
+<a name='L383'></a><a href='#L383'>383</a>
+<a name='L384'></a><a href='#L384'>384</a>
+<a name='L385'></a><a href='#L385'>385</a>
+<a name='L386'></a><a href='#L386'>386</a>
+<a name='L387'></a><a href='#L387'>387</a>
+<a name='L388'></a><a href='#L388'>388</a>
+<a name='L389'></a><a href='#L389'>389</a>
+<a name='L390'></a><a href='#L390'>390</a>
+<a name='L391'></a><a href='#L391'>391</a>
+<a name='L392'></a><a href='#L392'>392</a>
+<a name='L393'></a><a href='#L393'>393</a>
+<a name='L394'></a><a href='#L394'>394</a>
+<a name='L395'></a><a href='#L395'>395</a>
+<a name='L396'></a><a href='#L396'>396</a>
+<a name='L397'></a><a href='#L397'>397</a>
+<a name='L398'></a><a href='#L398'>398</a>
+<a name='L399'></a><a href='#L399'>399</a>
+<a name='L400'></a><a href='#L400'>400</a>
+<a name='L401'></a><a href='#L401'>401</a>
+<a name='L402'></a><a href='#L402'>402</a>
+<a name='L403'></a><a href='#L403'>403</a>
+<a name='L404'></a><a href='#L404'>404</a>
+<a name='L405'></a><a href='#L405'>405</a>
+<a name='L406'></a><a href='#L406'>406</a>
+<a name='L407'></a><a href='#L407'>407</a>
+<a name='L408'></a><a href='#L408'>408</a>
+<a name='L409'></a><a href='#L409'>409</a>
+<a name='L410'></a><a href='#L410'>410</a>
+<a name='L411'></a><a href='#L411'>411</a>
+<a name='L412'></a><a href='#L412'>412</a>
+<a name='L413'></a><a href='#L413'>413</a>
+<a name='L414'></a><a href='#L414'>414</a>
+<a name='L415'></a><a href='#L415'>415</a>
+<a name='L416'></a><a href='#L416'>416</a>
+<a name='L417'></a><a href='#L417'>417</a>
+<a name='L418'></a><a href='#L418'>418</a>
+<a name='L419'></a><a href='#L419'>419</a>
+<a name='L420'></a><a href='#L420'>420</a>
+<a name='L421'></a><a href='#L421'>421</a>
+<a name='L422'></a><a href='#L422'>422</a>
+<a name='L423'></a><a href='#L423'>423</a>
+<a name='L424'></a><a href='#L424'>424</a>
+<a name='L425'></a><a href='#L425'>425</a>
+<a name='L426'></a><a href='#L426'>426</a>
+<a name='L427'></a><a href='#L427'>427</a>
+<a name='L428'></a><a href='#L428'>428</a>
+<a name='L429'></a><a href='#L429'>429</a>
+<a name='L430'></a><a href='#L430'>430</a>
+<a name='L431'></a><a href='#L431'>431</a>
+<a name='L432'></a><a href='#L432'>432</a>
+<a name='L433'></a><a href='#L433'>433</a>
+<a name='L434'></a><a href='#L434'>434</a>
+<a name='L435'></a><a href='#L435'>435</a>
+<a name='L436'></a><a href='#L436'>436</a>
+<a name='L437'></a><a href='#L437'>437</a>
+<a name='L438'></a><a href='#L438'>438</a>
+<a name='L439'></a><a href='#L439'>439</a>
+<a name='L440'></a><a href='#L440'>440</a>
+<a name='L441'></a><a href='#L441'>441</a>
+<a name='L442'></a><a href='#L442'>442</a>
+<a name='L443'></a><a href='#L443'>443</a>
+<a name='L444'></a><a href='#L444'>444</a>
+<a name='L445'></a><a href='#L445'>445</a>
+<a name='L446'></a><a href='#L446'>446</a>
+<a name='L447'></a><a href='#L447'>447</a>
+<a name='L448'></a><a href='#L448'>448</a>
+<a name='L449'></a><a href='#L449'>449</a>
+<a name='L450'></a><a href='#L450'>450</a>
+<a name='L451'></a><a href='#L451'>451</a>
+<a name='L452'></a><a href='#L452'>452</a>
+<a name='L453'></a><a href='#L453'>453</a>
+<a name='L454'></a><a href='#L454'>454</a>
+<a name='L455'></a><a href='#L455'>455</a>
+<a name='L456'></a><a href='#L456'>456</a>
+<a name='L457'></a><a href='#L457'>457</a>
+<a name='L458'></a><a href='#L458'>458</a>
+<a name='L459'></a><a href='#L459'>459</a>
+<a name='L460'></a><a href='#L460'>460</a>
+<a name='L461'></a><a href='#L461'>461</a>
+<a name='L462'></a><a href='#L462'>462</a>
+<a name='L463'></a><a href='#L463'>463</a>
+<a name='L464'></a><a href='#L464'>464</a>
+<a name='L465'></a><a href='#L465'>465</a>
+<a name='L466'></a><a href='#L466'>466</a>
+<a name='L467'></a><a href='#L467'>467</a>
+<a name='L468'></a><a href='#L468'>468</a>
+<a name='L469'></a><a href='#L469'>469</a>
+<a name='L470'></a><a href='#L470'>470</a>
+<a name='L471'></a><a href='#L471'>471</a>
+<a name='L472'></a><a href='#L472'>472</a>
+<a name='L473'></a><a href='#L473'>473</a>
+<a name='L474'></a><a href='#L474'>474</a>
+<a name='L475'></a><a href='#L475'>475</a>
+<a name='L476'></a><a href='#L476'>476</a>
+<a name='L477'></a><a href='#L477'>477</a>
+<a name='L478'></a><a href='#L478'>478</a>
+<a name='L479'></a><a href='#L479'>479</a>
+<a name='L480'></a><a href='#L480'>480</a>
+<a name='L481'></a><a href='#L481'>481</a>
+<a name='L482'></a><a href='#L482'>482</a>
+<a name='L483'></a><a href='#L483'>483</a>
+<a name='L484'></a><a href='#L484'>484</a>
+<a name='L485'></a><a href='#L485'>485</a>
+<a name='L486'></a><a href='#L486'>486</a>
+<a name='L487'></a><a href='#L487'>487</a>
+<a name='L488'></a><a href='#L488'>488</a>
+<a name='L489'></a><a href='#L489'>489</a>
+<a name='L490'></a><a href='#L490'>490</a>
+<a name='L491'></a><a href='#L491'>491</a>
+<a name='L492'></a><a href='#L492'>492</a>
+<a name='L493'></a><a href='#L493'>493</a>
+<a name='L494'></a><a href='#L494'>494</a>
+<a name='L495'></a><a href='#L495'>495</a>
+<a name='L496'></a><a href='#L496'>496</a>
+<a name='L497'></a><a href='#L497'>497</a>
+<a name='L498'></a><a href='#L498'>498</a>
+<a name='L499'></a><a href='#L499'>499</a>
+<a name='L500'></a><a href='#L500'>500</a>
+<a name='L501'></a><a href='#L501'>501</a>
+<a name='L502'></a><a href='#L502'>502</a>
+<a name='L503'></a><a href='#L503'>503</a>
+<a name='L504'></a><a href='#L504'>504</a>
+<a name='L505'></a><a href='#L505'>505</a>
+<a name='L506'></a><a href='#L506'>506</a>
+<a name='L507'></a><a href='#L507'>507</a>
+<a name='L508'></a><a href='#L508'>508</a>
+<a name='L509'></a><a href='#L509'>509</a>
+<a name='L510'></a><a href='#L510'>510</a>
+<a name='L511'></a><a href='#L511'>511</a>
+<a name='L512'></a><a href='#L512'>512</a>
+<a name='L513'></a><a href='#L513'>513</a>
+<a name='L514'></a><a href='#L514'>514</a>
+<a name='L515'></a><a href='#L515'>515</a>
+<a name='L516'></a><a href='#L516'>516</a>
+<a name='L517'></a><a href='#L517'>517</a>
+<a name='L518'></a><a href='#L518'>518</a>
+<a name='L519'></a><a href='#L519'>519</a>
+<a name='L520'></a><a href='#L520'>520</a>
+<a name='L521'></a><a href='#L521'>521</a>
+<a name='L522'></a><a href='#L522'>522</a>
+<a name='L523'></a><a href='#L523'>523</a>
+<a name='L524'></a><a href='#L524'>524</a>
+<a name='L525'></a><a href='#L525'>525</a>
+<a name='L526'></a><a href='#L526'>526</a>
+<a name='L527'></a><a href='#L527'>527</a>
+<a name='L528'></a><a href='#L528'>528</a>
+<a name='L529'></a><a href='#L529'>529</a>
+<a name='L530'></a><a href='#L530'>530</a>
+<a name='L531'></a><a href='#L531'>531</a>
+<a name='L532'></a><a href='#L532'>532</a>
+<a name='L533'></a><a href='#L533'>533</a>
+<a name='L534'></a><a href='#L534'>534</a>
+<a name='L535'></a><a href='#L535'>535</a>
+<a name='L536'></a><a href='#L536'>536</a>
+<a name='L537'></a><a href='#L537'>537</a>
+<a name='L538'></a><a href='#L538'>538</a>
+<a name='L539'></a><a href='#L539'>539</a>
+<a name='L540'></a><a href='#L540'>540</a>
+<a name='L541'></a><a href='#L541'>541</a>
+<a name='L542'></a><a href='#L542'>542</a>
+<a name='L543'></a><a href='#L543'>543</a>
+<a name='L544'></a><a href='#L544'>544</a>
+<a name='L545'></a><a href='#L545'>545</a>
+<a name='L546'></a><a href='#L546'>546</a>
+<a name='L547'></a><a href='#L547'>547</a>
+<a name='L548'></a><a href='#L548'>548</a>
+<a name='L549'></a><a href='#L549'>549</a>
+<a name='L550'></a><a href='#L550'>550</a>
+<a name='L551'></a><a href='#L551'>551</a>
+<a name='L552'></a><a href='#L552'>552</a>
+<a name='L553'></a><a href='#L553'>553</a>
+<a name='L554'></a><a href='#L554'>554</a>
+<a name='L555'></a><a href='#L555'>555</a>
+<a name='L556'></a><a href='#L556'>556</a>
+<a name='L557'></a><a href='#L557'>557</a>
+<a name='L558'></a><a href='#L558'>558</a>
+<a name='L559'></a><a href='#L559'>559</a>
+<a name='L560'></a><a href='#L560'>560</a>
+<a name='L561'></a><a href='#L561'>561</a>
+<a name='L562'></a><a href='#L562'>562</a>
+<a name='L563'></a><a href='#L563'>563</a>
+<a name='L564'></a><a href='#L564'>564</a>
+<a name='L565'></a><a href='#L565'>565</a>
+<a name='L566'></a><a href='#L566'>566</a>
+<a name='L567'></a><a href='#L567'>567</a>
+<a name='L568'></a><a href='#L568'>568</a>
+<a name='L569'></a><a href='#L569'>569</a>
+<a name='L570'></a><a href='#L570'>570</a>
+<a name='L571'></a><a href='#L571'>571</a>
+<a name='L572'></a><a href='#L572'>572</a>
+<a name='L573'></a><a href='#L573'>573</a>
+<a name='L574'></a><a href='#L574'>574</a>
+<a name='L575'></a><a href='#L575'>575</a>
+<a name='L576'></a><a href='#L576'>576</a>
+<a name='L577'></a><a href='#L577'>577</a>
+<a name='L578'></a><a href='#L578'>578</a>
+<a name='L579'></a><a href='#L579'>579</a>
+<a name='L580'></a><a href='#L580'>580</a>
+<a name='L581'></a><a href='#L581'>581</a>
+<a name='L582'></a><a href='#L582'>582</a>
+<a name='L583'></a><a href='#L583'>583</a>
+<a name='L584'></a><a href='#L584'>584</a>
+<a name='L585'></a><a href='#L585'>585</a>
+<a name='L586'></a><a href='#L586'>586</a>
+<a name='L587'></a><a href='#L587'>587</a>
+<a name='L588'></a><a href='#L588'>588</a>
+<a name='L589'></a><a href='#L589'>589</a>
+<a name='L590'></a><a href='#L590'>590</a>
+<a name='L591'></a><a href='#L591'>591</a>
+<a name='L592'></a><a href='#L592'>592</a>
+<a name='L593'></a><a href='#L593'>593</a>
+<a name='L594'></a><a href='#L594'>594</a>
+<a name='L595'></a><a href='#L595'>595</a>
+<a name='L596'></a><a href='#L596'>596</a>
+<a name='L597'></a><a href='#L597'>597</a>
+<a name='L598'></a><a href='#L598'>598</a>
+<a name='L599'></a><a href='#L599'>599</a>
+<a name='L600'></a><a href='#L600'>600</a>
+<a name='L601'></a><a href='#L601'>601</a>
+<a name='L602'></a><a href='#L602'>602</a>
+<a name='L603'></a><a href='#L603'>603</a>
+<a name='L604'></a><a href='#L604'>604</a>
+<a name='L605'></a><a href='#L605'>605</a>
+<a name='L606'></a><a href='#L606'>606</a>
+<a name='L607'></a><a href='#L607'>607</a>
+<a name='L608'></a><a href='#L608'>608</a>
+<a name='L609'></a><a href='#L609'>609</a>
+<a name='L610'></a><a href='#L610'>610</a>
+<a name='L611'></a><a href='#L611'>611</a>
+<a name='L612'></a><a href='#L612'>612</a>
+<a name='L613'></a><a href='#L613'>613</a>
+<a name='L614'></a><a href='#L614'>614</a>
+<a name='L615'></a><a href='#L615'>615</a>
+<a name='L616'></a><a href='#L616'>616</a>
+<a name='L617'></a><a href='#L617'>617</a>
+<a name='L618'></a><a href='#L618'>618</a>
+<a name='L619'></a><a href='#L619'>619</a>
+<a name='L620'></a><a href='#L620'>620</a>
+<a name='L621'></a><a href='#L621'>621</a>
+<a name='L622'></a><a href='#L622'>622</a>
+<a name='L623'></a><a href='#L623'>623</a>
+<a name='L624'></a><a href='#L624'>624</a>
+<a name='L625'></a><a href='#L625'>625</a>
+<a name='L626'></a><a href='#L626'>626</a>
+<a name='L627'></a><a href='#L627'>627</a>
+<a name='L628'></a><a href='#L628'>628</a>
+<a name='L629'></a><a href='#L629'>629</a>
+<a name='L630'></a><a href='#L630'>630</a>
+<a name='L631'></a><a href='#L631'>631</a>
+<a name='L632'></a><a href='#L632'>632</a>
+<a name='L633'></a><a href='#L633'>633</a>
+<a name='L634'></a><a href='#L634'>634</a>
+<a name='L635'></a><a href='#L635'>635</a>
+<a name='L636'></a><a href='#L636'>636</a>
+<a name='L637'></a><a href='#L637'>637</a>
+<a name='L638'></a><a href='#L638'>638</a>
+<a name='L639'></a><a href='#L639'>639</a>
+<a name='L640'></a><a href='#L640'>640</a>
+<a name='L641'></a><a href='#L641'>641</a>
+<a name='L642'></a><a href='#L642'>642</a>
+<a name='L643'></a><a href='#L643'>643</a>
+<a name='L644'></a><a href='#L644'>644</a>
+<a name='L645'></a><a href='#L645'>645</a>
+<a name='L646'></a><a href='#L646'>646</a>
+<a name='L647'></a><a href='#L647'>647</a>
+<a name='L648'></a><a href='#L648'>648</a>
+<a name='L649'></a><a href='#L649'>649</a>
+<a name='L650'></a><a href='#L650'>650</a>
+<a name='L651'></a><a href='#L651'>651</a>
+<a name='L652'></a><a href='#L652'>652</a>
+<a name='L653'></a><a href='#L653'>653</a>
+<a name='L654'></a><a href='#L654'>654</a>
+<a name='L655'></a><a href='#L655'>655</a>
+<a name='L656'></a><a href='#L656'>656</a>
+<a name='L657'></a><a href='#L657'>657</a>
+<a name='L658'></a><a href='#L658'>658</a>
+<a name='L659'></a><a href='#L659'>659</a>
+<a name='L660'></a><a href='#L660'>660</a>
+<a name='L661'></a><a href='#L661'>661</a>
+<a name='L662'></a><a href='#L662'>662</a>
+<a name='L663'></a><a href='#L663'>663</a>
+<a name='L664'></a><a href='#L664'>664</a>
+<a name='L665'></a><a href='#L665'>665</a>
+<a name='L666'></a><a href='#L666'>666</a>
+<a name='L667'></a><a href='#L667'>667</a>
+<a name='L668'></a><a href='#L668'>668</a>
+<a name='L669'></a><a href='#L669'>669</a>
+<a name='L670'></a><a href='#L670'>670</a>
+<a name='L671'></a><a href='#L671'>671</a>
+<a name='L672'></a><a href='#L672'>672</a>
+<a name='L673'></a><a href='#L673'>673</a>
+<a name='L674'></a><a href='#L674'>674</a>
+<a name='L675'></a><a href='#L675'>675</a>
+<a name='L676'></a><a href='#L676'>676</a>
+<a name='L677'></a><a href='#L677'>677</a>
+<a name='L678'></a><a href='#L678'>678</a>
+<a name='L679'></a><a href='#L679'>679</a>
+<a name='L680'></a><a href='#L680'>680</a>
+<a name='L681'></a><a href='#L681'>681</a>
+<a name='L682'></a><a href='#L682'>682</a>
+<a name='L683'></a><a href='#L683'>683</a>
+<a name='L684'></a><a href='#L684'>684</a>
+<a name='L685'></a><a href='#L685'>685</a>
+<a name='L686'></a><a href='#L686'>686</a>
+<a name='L687'></a><a href='#L687'>687</a>
+<a name='L688'></a><a href='#L688'>688</a>
+<a name='L689'></a><a href='#L689'>689</a>
+<a name='L690'></a><a href='#L690'>690</a>
+<a name='L691'></a><a href='#L691'>691</a>
+<a name='L692'></a><a href='#L692'>692</a>
+<a name='L693'></a><a href='#L693'>693</a>
+<a name='L694'></a><a href='#L694'>694</a>
+<a name='L695'></a><a href='#L695'>695</a>
+<a name='L696'></a><a href='#L696'>696</a>
+<a name='L697'></a><a href='#L697'>697</a>
+<a name='L698'></a><a href='#L698'>698</a>
+<a name='L699'></a><a href='#L699'>699</a>
+<a name='L700'></a><a href='#L700'>700</a>
+<a name='L701'></a><a href='#L701'>701</a>
+<a name='L702'></a><a href='#L702'>702</a>
+<a name='L703'></a><a href='#L703'>703</a>
+<a name='L704'></a><a href='#L704'>704</a>
+<a name='L705'></a><a href='#L705'>705</a>
+<a name='L706'></a><a href='#L706'>706</a>
+<a name='L707'></a><a href='#L707'>707</a>
+<a name='L708'></a><a href='#L708'>708</a>
+<a name='L709'></a><a href='#L709'>709</a>
+<a name='L710'></a><a href='#L710'>710</a>
+<a name='L711'></a><a href='#L711'>711</a>
+<a name='L712'></a><a href='#L712'>712</a>
+<a name='L713'></a><a href='#L713'>713</a>
+<a name='L714'></a><a href='#L714'>714</a>
+<a name='L715'></a><a href='#L715'>715</a>
+<a name='L716'></a><a href='#L716'>716</a>
+<a name='L717'></a><a href='#L717'>717</a>
+<a name='L718'></a><a href='#L718'>718</a>
+<a name='L719'></a><a href='#L719'>719</a>
+<a name='L720'></a><a href='#L720'>720</a>
+<a name='L721'></a><a href='#L721'>721</a>
+<a name='L722'></a><a href='#L722'>722</a>
+<a name='L723'></a><a href='#L723'>723</a>
+<a name='L724'></a><a href='#L724'>724</a>
+<a name='L725'></a><a href='#L725'>725</a>
+<a name='L726'></a><a href='#L726'>726</a>
+<a name='L727'></a><a href='#L727'>727</a>
+<a name='L728'></a><a href='#L728'>728</a>
+<a name='L729'></a><a href='#L729'>729</a>
+<a name='L730'></a><a href='#L730'>730</a>
+<a name='L731'></a><a href='#L731'>731</a>
+<a name='L732'></a><a href='#L732'>732</a>
+<a name='L733'></a><a href='#L733'>733</a>
+<a name='L734'></a><a href='#L734'>734</a>
+<a name='L735'></a><a href='#L735'>735</a>
+<a name='L736'></a><a href='#L736'>736</a>
+<a name='L737'></a><a href='#L737'>737</a>
+<a name='L738'></a><a href='#L738'>738</a>
+<a name='L739'></a><a href='#L739'>739</a>
+<a name='L740'></a><a href='#L740'>740</a>
+<a name='L741'></a><a href='#L741'>741</a>
+<a name='L742'></a><a href='#L742'>742</a>
+<a name='L743'></a><a href='#L743'>743</a>
+<a name='L744'></a><a href='#L744'>744</a>
+<a name='L745'></a><a href='#L745'>745</a>
+<a name='L746'></a><a href='#L746'>746</a>
+<a name='L747'></a><a href='#L747'>747</a>
+<a name='L748'></a><a href='#L748'>748</a>
+<a name='L749'></a><a href='#L749'>749</a>
+<a name='L750'></a><a href='#L750'>750</a>
+<a name='L751'></a><a href='#L751'>751</a>
+<a name='L752'></a><a href='#L752'>752</a>
+<a name='L753'></a><a href='#L753'>753</a>
+<a name='L754'></a><a href='#L754'>754</a>
+<a name='L755'></a><a href='#L755'>755</a>
+<a name='L756'></a><a href='#L756'>756</a>
+<a name='L757'></a><a href='#L757'>757</a>
+<a name='L758'></a><a href='#L758'>758</a>
+<a name='L759'></a><a href='#L759'>759</a>
+<a name='L760'></a><a href='#L760'>760</a>
+<a name='L761'></a><a href='#L761'>761</a>
+<a name='L762'></a><a href='#L762'>762</a>
+<a name='L763'></a><a href='#L763'>763</a>
+<a name='L764'></a><a href='#L764'>764</a>
+<a name='L765'></a><a href='#L765'>765</a>
+<a name='L766'></a><a href='#L766'>766</a>
+<a name='L767'></a><a href='#L767'>767</a>
+<a name='L768'></a><a href='#L768'>768</a>
+<a name='L769'></a><a href='#L769'>769</a>
+<a name='L770'></a><a href='#L770'>770</a>
+<a name='L771'></a><a href='#L771'>771</a>
+<a name='L772'></a><a href='#L772'>772</a>
+<a name='L773'></a><a href='#L773'>773</a>
+<a name='L774'></a><a href='#L774'>774</a>
+<a name='L775'></a><a href='#L775'>775</a>
+<a name='L776'></a><a href='#L776'>776</a>
+<a name='L777'></a><a href='#L777'>777</a>
+<a name='L778'></a><a href='#L778'>778</a>
+<a name='L779'></a><a href='#L779'>779</a>
+<a name='L780'></a><a href='#L780'>780</a>
+<a name='L781'></a><a href='#L781'>781</a>
+<a name='L782'></a><a href='#L782'>782</a>
+<a name='L783'></a><a href='#L783'>783</a>
+<a name='L784'></a><a href='#L784'>784</a>
+<a name='L785'></a><a href='#L785'>785</a>
+<a name='L786'></a><a href='#L786'>786</a>
+<a name='L787'></a><a href='#L787'>787</a>
+<a name='L788'></a><a href='#L788'>788</a>
+<a name='L789'></a><a href='#L789'>789</a>
+<a name='L790'></a><a href='#L790'>790</a>
+<a name='L791'></a><a href='#L791'>791</a>
+<a name='L792'></a><a href='#L792'>792</a>
+<a name='L793'></a><a href='#L793'>793</a>
+<a name='L794'></a><a href='#L794'>794</a>
+<a name='L795'></a><a href='#L795'>795</a>
+<a name='L796'></a><a href='#L796'>796</a>
+<a name='L797'></a><a href='#L797'>797</a>
+<a name='L798'></a><a href='#L798'>798</a>
+<a name='L799'></a><a href='#L799'>799</a>
+<a name='L800'></a><a href='#L800'>800</a>
+<a name='L801'></a><a href='#L801'>801</a>
+<a name='L802'></a><a href='#L802'>802</a>
+<a name='L803'></a><a href='#L803'>803</a>
+<a name='L804'></a><a href='#L804'>804</a>
+<a name='L805'></a><a href='#L805'>805</a>
+<a name='L806'></a><a href='#L806'>806</a>
+<a name='L807'></a><a href='#L807'>807</a>
+<a name='L808'></a><a href='#L808'>808</a>
+<a name='L809'></a><a href='#L809'>809</a>
+<a name='L810'></a><a href='#L810'>810</a>
+<a name='L811'></a><a href='#L811'>811</a>
+<a name='L812'></a><a href='#L812'>812</a>
+<a name='L813'></a><a href='#L813'>813</a>
+<a name='L814'></a><a href='#L814'>814</a>
+<a name='L815'></a><a href='#L815'>815</a>
+<a name='L816'></a><a href='#L816'>816</a>
+<a name='L817'></a><a href='#L817'>817</a>
+<a name='L818'></a><a href='#L818'>818</a>
+<a name='L819'></a><a href='#L819'>819</a>
+<a name='L820'></a><a href='#L820'>820</a>
+<a name='L821'></a><a href='#L821'>821</a>
+<a name='L822'></a><a href='#L822'>822</a>
+<a name='L823'></a><a href='#L823'>823</a>
+<a name='L824'></a><a href='#L824'>824</a>
+<a name='L825'></a><a href='#L825'>825</a>
+<a name='L826'></a><a href='#L826'>826</a>
+<a name='L827'></a><a href='#L827'>827</a>
+<a name='L828'></a><a href='#L828'>828</a>
+<a name='L829'></a><a href='#L829'>829</a>
+<a name='L830'></a><a href='#L830'>830</a>
+<a name='L831'></a><a href='#L831'>831</a>
+<a name='L832'></a><a href='#L832'>832</a>
+<a name='L833'></a><a href='#L833'>833</a>
+<a name='L834'></a><a href='#L834'>834</a>
+<a name='L835'></a><a href='#L835'>835</a>
+<a name='L836'></a><a href='#L836'>836</a>
+<a name='L837'></a><a href='#L837'>837</a>
+<a name='L838'></a><a href='#L838'>838</a>
+<a name='L839'></a><a href='#L839'>839</a>
+<a name='L840'></a><a href='#L840'>840</a>
+<a name='L841'></a><a href='#L841'>841</a>
+<a name='L842'></a><a href='#L842'>842</a>
+<a name='L843'></a><a href='#L843'>843</a>
+<a name='L844'></a><a href='#L844'>844</a>
+<a name='L845'></a><a href='#L845'>845</a>
+<a name='L846'></a><a href='#L846'>846</a>
+<a name='L847'></a><a href='#L847'>847</a>
+<a name='L848'></a><a href='#L848'>848</a>
+<a name='L849'></a><a href='#L849'>849</a>
+<a name='L850'></a><a href='#L850'>850</a>
+<a name='L851'></a><a href='#L851'>851</a>
+<a name='L852'></a><a href='#L852'>852</a>
+<a name='L853'></a><a href='#L853'>853</a>
+<a name='L854'></a><a href='#L854'>854</a>
+<a name='L855'></a><a href='#L855'>855</a>
+<a name='L856'></a><a href='#L856'>856</a>
+<a name='L857'></a><a href='#L857'>857</a>
+<a name='L858'></a><a href='#L858'>858</a>
+<a name='L859'></a><a href='#L859'>859</a>
+<a name='L860'></a><a href='#L860'>860</a>
+<a name='L861'></a><a href='#L861'>861</a>
+<a name='L862'></a><a href='#L862'>862</a>
+<a name='L863'></a><a href='#L863'>863</a>
+<a name='L864'></a><a href='#L864'>864</a>
+<a name='L865'></a><a href='#L865'>865</a>
+<a name='L866'></a><a href='#L866'>866</a>
+<a name='L867'></a><a href='#L867'>867</a>
+<a name='L868'></a><a href='#L868'>868</a>
+<a name='L869'></a><a href='#L869'>869</a>
+<a name='L870'></a><a href='#L870'>870</a>
+<a name='L871'></a><a href='#L871'>871</a>
+<a name='L872'></a><a href='#L872'>872</a>
+<a name='L873'></a><a href='#L873'>873</a>
+<a name='L874'></a><a href='#L874'>874</a>
+<a name='L875'></a><a href='#L875'>875</a>
+<a name='L876'></a><a href='#L876'>876</a>
+<a name='L877'></a><a href='#L877'>877</a>
+<a name='L878'></a><a href='#L878'>878</a>
+<a name='L879'></a><a href='#L879'>879</a>
+<a name='L880'></a><a href='#L880'>880</a>
+<a name='L881'></a><a href='#L881'>881</a>
+<a name='L882'></a><a href='#L882'>882</a>
+<a name='L883'></a><a href='#L883'>883</a>
+<a name='L884'></a><a href='#L884'>884</a>
+<a name='L885'></a><a href='#L885'>885</a>
+<a name='L886'></a><a href='#L886'>886</a>
+<a name='L887'></a><a href='#L887'>887</a>
+<a name='L888'></a><a href='#L888'>888</a>
+<a name='L889'></a><a href='#L889'>889</a>
+<a name='L890'></a><a href='#L890'>890</a>
+<a name='L891'></a><a href='#L891'>891</a>
+<a name='L892'></a><a href='#L892'>892</a>
+<a name='L893'></a><a href='#L893'>893</a>
+<a name='L894'></a><a href='#L894'>894</a>
+<a name='L895'></a><a href='#L895'>895</a>
+<a name='L896'></a><a href='#L896'>896</a>
+<a name='L897'></a><a href='#L897'>897</a>
+<a name='L898'></a><a href='#L898'>898</a>
+<a name='L899'></a><a href='#L899'>899</a>
+<a name='L900'></a><a href='#L900'>900</a>
+<a name='L901'></a><a href='#L901'>901</a>
+<a name='L902'></a><a href='#L902'>902</a>
+<a name='L903'></a><a href='#L903'>903</a>
+<a name='L904'></a><a href='#L904'>904</a>
+<a name='L905'></a><a href='#L905'>905</a>
+<a name='L906'></a><a href='#L906'>906</a>
+<a name='L907'></a><a href='#L907'>907</a>
+<a name='L908'></a><a href='#L908'>908</a>
+<a name='L909'></a><a href='#L909'>909</a>
+<a name='L910'></a><a href='#L910'>910</a>
+<a name='L911'></a><a href='#L911'>911</a>
+<a name='L912'></a><a href='#L912'>912</a>
+<a name='L913'></a><a href='#L913'>913</a>
+<a name='L914'></a><a href='#L914'>914</a>
+<a name='L915'></a><a href='#L915'>915</a>
+<a name='L916'></a><a href='#L916'>916</a>
+<a name='L917'></a><a href='#L917'>917</a>
+<a name='L918'></a><a href='#L918'>918</a>
+<a name='L919'></a><a href='#L919'>919</a>
+<a name='L920'></a><a href='#L920'>920</a>
+<a name='L921'></a><a href='#L921'>921</a>
+<a name='L922'></a><a href='#L922'>922</a>
+<a name='L923'></a><a href='#L923'>923</a>
+<a name='L924'></a><a href='#L924'>924</a>
+<a name='L925'></a><a href='#L925'>925</a>
+<a name='L926'></a><a href='#L926'>926</a>
+<a name='L927'></a><a href='#L927'>927</a>
+<a name='L928'></a><a href='#L928'>928</a>
+<a name='L929'></a><a href='#L929'>929</a>
+<a name='L930'></a><a href='#L930'>930</a>
+<a name='L931'></a><a href='#L931'>931</a>
+<a name='L932'></a><a href='#L932'>932</a>
+<a name='L933'></a><a href='#L933'>933</a>
+<a name='L934'></a><a href='#L934'>934</a>
+<a name='L935'></a><a href='#L935'>935</a>
+<a name='L936'></a><a href='#L936'>936</a>
+<a name='L937'></a><a href='#L937'>937</a>
+<a name='L938'></a><a href='#L938'>938</a>
+<a name='L939'></a><a href='#L939'>939</a>
+<a name='L940'></a><a href='#L940'>940</a>
+<a name='L941'></a><a href='#L941'>941</a>
+<a name='L942'></a><a href='#L942'>942</a>
+<a name='L943'></a><a href='#L943'>943</a>
+<a name='L944'></a><a href='#L944'>944</a>
+<a name='L945'></a><a href='#L945'>945</a>
+<a name='L946'></a><a href='#L946'>946</a>
+<a name='L947'></a><a href='#L947'>947</a>
+<a name='L948'></a><a href='#L948'>948</a>
+<a name='L949'></a><a href='#L949'>949</a>
+<a name='L950'></a><a href='#L950'>950</a>
+<a name='L951'></a><a href='#L951'>951</a>
+<a name='L952'></a><a href='#L952'>952</a>
+<a name='L953'></a><a href='#L953'>953</a>
+<a name='L954'></a><a href='#L954'>954</a>
+<a name='L955'></a><a href='#L955'>955</a>
+<a name='L956'></a><a href='#L956'>956</a>
+<a name='L957'></a><a href='#L957'>957</a>
+<a name='L958'></a><a href='#L958'>958</a>
+<a name='L959'></a><a href='#L959'>959</a>
+<a name='L960'></a><a href='#L960'>960</a>
+<a name='L961'></a><a href='#L961'>961</a>
+<a name='L962'></a><a href='#L962'>962</a>
+<a name='L963'></a><a href='#L963'>963</a>
+<a name='L964'></a><a href='#L964'>964</a>
+<a name='L965'></a><a href='#L965'>965</a>
+<a name='L966'></a><a href='#L966'>966</a>
+<a name='L967'></a><a href='#L967'>967</a>
+<a name='L968'></a><a href='#L968'>968</a>
+<a name='L969'></a><a href='#L969'>969</a>
+<a name='L970'></a><a href='#L970'>970</a>
+<a name='L971'></a><a href='#L971'>971</a>
+<a name='L972'></a><a href='#L972'>972</a>
+<a name='L973'></a><a href='#L973'>973</a>
+<a name='L974'></a><a href='#L974'>974</a>
+<a name='L975'></a><a href='#L975'>975</a>
+<a name='L976'></a><a href='#L976'>976</a>
+<a name='L977'></a><a href='#L977'>977</a>
+<a name='L978'></a><a href='#L978'>978</a>
+<a name='L979'></a><a href='#L979'>979</a>
+<a name='L980'></a><a href='#L980'>980</a>
+<a name='L981'></a><a href='#L981'>981</a>
+<a name='L982'></a><a href='#L982'>982</a>
+<a name='L983'></a><a href='#L983'>983</a>
+<a name='L984'></a><a href='#L984'>984</a>
+<a name='L985'></a><a href='#L985'>985</a>
+<a name='L986'></a><a href='#L986'>986</a>
+<a name='L987'></a><a href='#L987'>987</a>
+<a name='L988'></a><a href='#L988'>988</a>
+<a name='L989'></a><a href='#L989'>989</a>
+<a name='L990'></a><a href='#L990'>990</a>
+<a name='L991'></a><a href='#L991'>991</a>
+<a name='L992'></a><a href='#L992'>992</a>
+<a name='L993'></a><a href='#L993'>993</a>
+<a name='L994'></a><a href='#L994'>994</a>
+<a name='L995'></a><a href='#L995'>995</a>
+<a name='L996'></a><a href='#L996'>996</a>
+<a name='L997'></a><a href='#L997'>997</a>
+<a name='L998'></a><a href='#L998'>998</a>
+<a name='L999'></a><a href='#L999'>999</a>
+<a name='L1000'></a><a href='#L1000'>1000</a>
+<a name='L1001'></a><a href='#L1001'>1001</a>
+<a name='L1002'></a><a href='#L1002'>1002</a>
+<a name='L1003'></a><a href='#L1003'>1003</a>
+<a name='L1004'></a><a href='#L1004'>1004</a>
+<a name='L1005'></a><a href='#L1005'>1005</a>
+<a name='L1006'></a><a href='#L1006'>1006</a>
+<a name='L1007'></a><a href='#L1007'>1007</a>
+<a name='L1008'></a><a href='#L1008'>1008</a>
+<a name='L1009'></a><a href='#L1009'>1009</a>
+<a name='L1010'></a><a href='#L1010'>1010</a>
+<a name='L1011'></a><a href='#L1011'>1011</a>
+<a name='L1012'></a><a href='#L1012'>1012</a>
+<a name='L1013'></a><a href='#L1013'>1013</a>
+<a name='L1014'></a><a href='#L1014'>1014</a>
+<a name='L1015'></a><a href='#L1015'>1015</a>
+<a name='L1016'></a><a href='#L1016'>1016</a>
+<a name='L1017'></a><a href='#L1017'>1017</a>
+<a name='L1018'></a><a href='#L1018'>1018</a>
+<a name='L1019'></a><a href='#L1019'>1019</a>
+<a name='L1020'></a><a href='#L1020'>1020</a>
+<a name='L1021'></a><a href='#L1021'>1021</a>
+<a name='L1022'></a><a href='#L1022'>1022</a>
+<a name='L1023'></a><a href='#L1023'>1023</a>
+<a name='L1024'></a><a href='#L1024'>1024</a>
+<a name='L1025'></a><a href='#L1025'>1025</a>
+<a name='L1026'></a><a href='#L1026'>1026</a>
+<a name='L1027'></a><a href='#L1027'>1027</a>
+<a name='L1028'></a><a href='#L1028'>1028</a>
+<a name='L1029'></a><a href='#L1029'>1029</a>
+<a name='L1030'></a><a href='#L1030'>1030</a>
+<a name='L1031'></a><a href='#L1031'>1031</a>
+<a name='L1032'></a><a href='#L1032'>1032</a>
+<a name='L1033'></a><a href='#L1033'>1033</a>
+<a name='L1034'></a><a href='#L1034'>1034</a>
+<a name='L1035'></a><a href='#L1035'>1035</a>
+<a name='L1036'></a><a href='#L1036'>1036</a>
+<a name='L1037'></a><a href='#L1037'>1037</a>
+<a name='L1038'></a><a href='#L1038'>1038</a>
+<a name='L1039'></a><a href='#L1039'>1039</a>
+<a name='L1040'></a><a href='#L1040'>1040</a>
+<a name='L1041'></a><a href='#L1041'>1041</a>
+<a name='L1042'></a><a href='#L1042'>1042</a>
+<a name='L1043'></a><a href='#L1043'>1043</a>
+<a name='L1044'></a><a href='#L1044'>1044</a>
+<a name='L1045'></a><a href='#L1045'>1045</a>
+<a name='L1046'></a><a href='#L1046'>1046</a>
+<a name='L1047'></a><a href='#L1047'>1047</a>
+<a name='L1048'></a><a href='#L1048'>1048</a>
+<a name='L1049'></a><a href='#L1049'>1049</a>
+<a name='L1050'></a><a href='#L1050'>1050</a>
+<a name='L1051'></a><a href='#L1051'>1051</a>
+<a name='L1052'></a><a href='#L1052'>1052</a>
+<a name='L1053'></a><a href='#L1053'>1053</a>
+<a name='L1054'></a><a href='#L1054'>1054</a>
+<a name='L1055'></a><a href='#L1055'>1055</a>
+<a name='L1056'></a><a href='#L1056'>1056</a>
+<a name='L1057'></a><a href='#L1057'>1057</a>
+<a name='L1058'></a><a href='#L1058'>1058</a>
+<a name='L1059'></a><a href='#L1059'>1059</a>
+<a name='L1060'></a><a href='#L1060'>1060</a>
+<a name='L1061'></a><a href='#L1061'>1061</a>
+<a name='L1062'></a><a href='#L1062'>1062</a>
+<a name='L1063'></a><a href='#L1063'>1063</a>
+<a name='L1064'></a><a href='#L1064'>1064</a>
+<a name='L1065'></a><a href='#L1065'>1065</a>
+<a name='L1066'></a><a href='#L1066'>1066</a>
+<a name='L1067'></a><a href='#L1067'>1067</a>
+<a name='L1068'></a><a href='#L1068'>1068</a>
+<a name='L1069'></a><a href='#L1069'>1069</a>
+<a name='L1070'></a><a href='#L1070'>1070</a>
+<a name='L1071'></a><a href='#L1071'>1071</a>
+<a name='L1072'></a><a href='#L1072'>1072</a>
+<a name='L1073'></a><a href='#L1073'>1073</a>
+<a name='L1074'></a><a href='#L1074'>1074</a>
+<a name='L1075'></a><a href='#L1075'>1075</a>
+<a name='L1076'></a><a href='#L1076'>1076</a>
+<a name='L1077'></a><a href='#L1077'>1077</a>
+<a name='L1078'></a><a href='#L1078'>1078</a>
+<a name='L1079'></a><a href='#L1079'>1079</a>
+<a name='L1080'></a><a href='#L1080'>1080</a>
+<a name='L1081'></a><a href='#L1081'>1081</a>
+<a name='L1082'></a><a href='#L1082'>1082</a>
+<a name='L1083'></a><a href='#L1083'>1083</a>
+<a name='L1084'></a><a href='#L1084'>1084</a>
+<a name='L1085'></a><a href='#L1085'>1085</a>
+<a name='L1086'></a><a href='#L1086'>1086</a>
+<a name='L1087'></a><a href='#L1087'>1087</a>
+<a name='L1088'></a><a href='#L1088'>1088</a>
+<a name='L1089'></a><a href='#L1089'>1089</a>
+<a name='L1090'></a><a href='#L1090'>1090</a>
+<a name='L1091'></a><a href='#L1091'>1091</a>
+<a name='L1092'></a><a href='#L1092'>1092</a>
+<a name='L1093'></a><a href='#L1093'>1093</a>
+<a name='L1094'></a><a href='#L1094'>1094</a>
+<a name='L1095'></a><a href='#L1095'>1095</a>
+<a name='L1096'></a><a href='#L1096'>1096</a>
+<a name='L1097'></a><a href='#L1097'>1097</a>
+<a name='L1098'></a><a href='#L1098'>1098</a>
+<a name='L1099'></a><a href='#L1099'>1099</a>
+<a name='L1100'></a><a href='#L1100'>1100</a>
+<a name='L1101'></a><a href='#L1101'>1101</a>
+<a name='L1102'></a><a href='#L1102'>1102</a>
+<a name='L1103'></a><a href='#L1103'>1103</a>
+<a name='L1104'></a><a href='#L1104'>1104</a>
+<a name='L1105'></a><a href='#L1105'>1105</a>
+<a name='L1106'></a><a href='#L1106'>1106</a>
+<a name='L1107'></a><a href='#L1107'>1107</a>
+<a name='L1108'></a><a href='#L1108'>1108</a>
+<a name='L1109'></a><a href='#L1109'>1109</a>
+<a name='L1110'></a><a href='#L1110'>1110</a>
+<a name='L1111'></a><a href='#L1111'>1111</a>
+<a name='L1112'></a><a href='#L1112'>1112</a>
+<a name='L1113'></a><a href='#L1113'>1113</a>
+<a name='L1114'></a><a href='#L1114'>1114</a>
+<a name='L1115'></a><a href='#L1115'>1115</a>
+<a name='L1116'></a><a href='#L1116'>1116</a>
+<a name='L1117'></a><a href='#L1117'>1117</a>
+<a name='L1118'></a><a href='#L1118'>1118</a>
+<a name='L1119'></a><a href='#L1119'>1119</a>
+<a name='L1120'></a><a href='#L1120'>1120</a>
+<a name='L1121'></a><a href='#L1121'>1121</a>
+<a name='L1122'></a><a href='#L1122'>1122</a>
+<a name='L1123'></a><a href='#L1123'>1123</a>
+<a name='L1124'></a><a href='#L1124'>1124</a>
+<a name='L1125'></a><a href='#L1125'>1125</a>
+<a name='L1126'></a><a href='#L1126'>1126</a>
+<a name='L1127'></a><a href='#L1127'>1127</a>
+<a name='L1128'></a><a href='#L1128'>1128</a>
+<a name='L1129'></a><a href='#L1129'>1129</a>
+<a name='L1130'></a><a href='#L1130'>1130</a>
+<a name='L1131'></a><a href='#L1131'>1131</a>
+<a name='L1132'></a><a href='#L1132'>1132</a>
+<a name='L1133'></a><a href='#L1133'>1133</a>
+<a name='L1134'></a><a href='#L1134'>1134</a>
+<a name='L1135'></a><a href='#L1135'>1135</a>
+<a name='L1136'></a><a href='#L1136'>1136</a>
+<a name='L1137'></a><a href='#L1137'>1137</a>
+<a name='L1138'></a><a href='#L1138'>1138</a>
+<a name='L1139'></a><a href='#L1139'>1139</a>
+<a name='L1140'></a><a href='#L1140'>1140</a>
+<a name='L1141'></a><a href='#L1141'>1141</a>
+<a name='L1142'></a><a href='#L1142'>1142</a>
+<a name='L1143'></a><a href='#L1143'>1143</a>
+<a name='L1144'></a><a href='#L1144'>1144</a>
+<a name='L1145'></a><a href='#L1145'>1145</a>
+<a name='L1146'></a><a href='#L1146'>1146</a>
+<a name='L1147'></a><a href='#L1147'>1147</a>
+<a name='L1148'></a><a href='#L1148'>1148</a>
+<a name='L1149'></a><a href='#L1149'>1149</a>
+<a name='L1150'></a><a href='#L1150'>1150</a>
+<a name='L1151'></a><a href='#L1151'>1151</a>
+<a name='L1152'></a><a href='#L1152'>1152</a>
+<a name='L1153'></a><a href='#L1153'>1153</a>
+<a name='L1154'></a><a href='#L1154'>1154</a>
+<a name='L1155'></a><a href='#L1155'>1155</a>
+<a name='L1156'></a><a href='#L1156'>1156</a>
+<a name='L1157'></a><a href='#L1157'>1157</a>
+<a name='L1158'></a><a href='#L1158'>1158</a>
+<a name='L1159'></a><a href='#L1159'>1159</a>
+<a name='L1160'></a><a href='#L1160'>1160</a>
+<a name='L1161'></a><a href='#L1161'>1161</a>
+<a name='L1162'></a><a href='#L1162'>1162</a>
+<a name='L1163'></a><a href='#L1163'>1163</a>
+<a name='L1164'></a><a href='#L1164'>1164</a>
+<a name='L1165'></a><a href='#L1165'>1165</a>
+<a name='L1166'></a><a href='#L1166'>1166</a>
+<a name='L1167'></a><a href='#L1167'>1167</a>
+<a name='L1168'></a><a href='#L1168'>1168</a>
+<a name='L1169'></a><a href='#L1169'>1169</a>
+<a name='L1170'></a><a href='#L1170'>1170</a>
+<a name='L1171'></a><a href='#L1171'>1171</a>
+<a name='L1172'></a><a href='#L1172'>1172</a>
+<a name='L1173'></a><a href='#L1173'>1173</a>
+<a name='L1174'></a><a href='#L1174'>1174</a>
+<a name='L1175'></a><a href='#L1175'>1175</a>
+<a name='L1176'></a><a href='#L1176'>1176</a>
+<a name='L1177'></a><a href='#L1177'>1177</a>
+<a name='L1178'></a><a href='#L1178'>1178</a>
+<a name='L1179'></a><a href='#L1179'>1179</a>
+<a name='L1180'></a><a href='#L1180'>1180</a>
+<a name='L1181'></a><a href='#L1181'>1181</a>
+<a name='L1182'></a><a href='#L1182'>1182</a>
+<a name='L1183'></a><a href='#L1183'>1183</a>
+<a name='L1184'></a><a href='#L1184'>1184</a>
+<a name='L1185'></a><a href='#L1185'>1185</a>
+<a name='L1186'></a><a href='#L1186'>1186</a>
+<a name='L1187'></a><a href='#L1187'>1187</a>
+<a name='L1188'></a><a href='#L1188'>1188</a>
+<a name='L1189'></a><a href='#L1189'>1189</a>
+<a name='L1190'></a><a href='#L1190'>1190</a>
+<a name='L1191'></a><a href='#L1191'>1191</a>
+<a name='L1192'></a><a href='#L1192'>1192</a>
+<a name='L1193'></a><a href='#L1193'>1193</a>
+<a name='L1194'></a><a href='#L1194'>1194</a>
+<a name='L1195'></a><a href='#L1195'>1195</a>
+<a name='L1196'></a><a href='#L1196'>1196</a>
+<a name='L1197'></a><a href='#L1197'>1197</a>
+<a name='L1198'></a><a href='#L1198'>1198</a>
+<a name='L1199'></a><a href='#L1199'>1199</a>
+<a name='L1200'></a><a href='#L1200'>1200</a>
+<a name='L1201'></a><a href='#L1201'>1201</a>
+<a name='L1202'></a><a href='#L1202'>1202</a>
+<a name='L1203'></a><a href='#L1203'>1203</a>
+<a name='L1204'></a><a href='#L1204'>1204</a>
+<a name='L1205'></a><a href='#L1205'>1205</a>
+<a name='L1206'></a><a href='#L1206'>1206</a>
+<a name='L1207'></a><a href='#L1207'>1207</a>
+<a name='L1208'></a><a href='#L1208'>1208</a>
+<a name='L1209'></a><a href='#L1209'>1209</a>
+<a name='L1210'></a><a href='#L1210'>1210</a>
+<a name='L1211'></a><a href='#L1211'>1211</a>
+<a name='L1212'></a><a href='#L1212'>1212</a>
+<a name='L1213'></a><a href='#L1213'>1213</a>
+<a name='L1214'></a><a href='#L1214'>1214</a>
+<a name='L1215'></a><a href='#L1215'>1215</a>
+<a name='L1216'></a><a href='#L1216'>1216</a>
+<a name='L1217'></a><a href='#L1217'>1217</a>
+<a name='L1218'></a><a href='#L1218'>1218</a>
+<a name='L1219'></a><a href='#L1219'>1219</a>
+<a name='L1220'></a><a href='#L1220'>1220</a>
+<a name='L1221'></a><a href='#L1221'>1221</a>
+<a name='L1222'></a><a href='#L1222'>1222</a>
+<a name='L1223'></a><a href='#L1223'>1223</a>
+<a name='L1224'></a><a href='#L1224'>1224</a>
+<a name='L1225'></a><a href='#L1225'>1225</a>
+<a name='L1226'></a><a href='#L1226'>1226</a>
+<a name='L1227'></a><a href='#L1227'>1227</a>
+<a name='L1228'></a><a href='#L1228'>1228</a>
+<a name='L1229'></a><a href='#L1229'>1229</a>
+<a name='L1230'></a><a href='#L1230'>1230</a>
+<a name='L1231'></a><a href='#L1231'>1231</a>
+<a name='L1232'></a><a href='#L1232'>1232</a>
+<a name='L1233'></a><a href='#L1233'>1233</a>
+<a name='L1234'></a><a href='#L1234'>1234</a>
+<a name='L1235'></a><a href='#L1235'>1235</a>
+<a name='L1236'></a><a href='#L1236'>1236</a>
+<a name='L1237'></a><a href='#L1237'>1237</a>
+<a name='L1238'></a><a href='#L1238'>1238</a>
+<a name='L1239'></a><a href='#L1239'>1239</a>
+<a name='L1240'></a><a href='#L1240'>1240</a>
+<a name='L1241'></a><a href='#L1241'>1241</a>
+<a name='L1242'></a><a href='#L1242'>1242</a>
+<a name='L1243'></a><a href='#L1243'>1243</a>
+<a name='L1244'></a><a href='#L1244'>1244</a>
+<a name='L1245'></a><a href='#L1245'>1245</a>
+<a name='L1246'></a><a href='#L1246'>1246</a>
+<a name='L1247'></a><a href='#L1247'>1247</a>
+<a name='L1248'></a><a href='#L1248'>1248</a>
+<a name='L1249'></a><a href='#L1249'>1249</a>
+<a name='L1250'></a><a href='#L1250'>1250</a>
+<a name='L1251'></a><a href='#L1251'>1251</a>
+<a name='L1252'></a><a href='#L1252'>1252</a>
+<a name='L1253'></a><a href='#L1253'>1253</a>
+<a name='L1254'></a><a href='#L1254'>1254</a>
+<a name='L1255'></a><a href='#L1255'>1255</a>
+<a name='L1256'></a><a href='#L1256'>1256</a>
+<a name='L1257'></a><a href='#L1257'>1257</a>
+<a name='L1258'></a><a href='#L1258'>1258</a>
+<a name='L1259'></a><a href='#L1259'>1259</a>
+<a name='L1260'></a><a href='#L1260'>1260</a>
+<a name='L1261'></a><a href='#L1261'>1261</a>
+<a name='L1262'></a><a href='#L1262'>1262</a>
+<a name='L1263'></a><a href='#L1263'>1263</a>
+<a name='L1264'></a><a href='#L1264'>1264</a>
+<a name='L1265'></a><a href='#L1265'>1265</a>
+<a name='L1266'></a><a href='#L1266'>1266</a>
+<a name='L1267'></a><a href='#L1267'>1267</a>
+<a name='L1268'></a><a href='#L1268'>1268</a>
+<a name='L1269'></a><a href='#L1269'>1269</a>
+<a name='L1270'></a><a href='#L1270'>1270</a>
+<a name='L1271'></a><a href='#L1271'>1271</a>
+<a name='L1272'></a><a href='#L1272'>1272</a>
+<a name='L1273'></a><a href='#L1273'>1273</a>
+<a name='L1274'></a><a href='#L1274'>1274</a>
+<a name='L1275'></a><a href='#L1275'>1275</a>
+<a name='L1276'></a><a href='#L1276'>1276</a>
+<a name='L1277'></a><a href='#L1277'>1277</a>
+<a name='L1278'></a><a href='#L1278'>1278</a>
+<a name='L1279'></a><a href='#L1279'>1279</a>
+<a name='L1280'></a><a href='#L1280'>1280</a>
+<a name='L1281'></a><a href='#L1281'>1281</a>
+<a name='L1282'></a><a href='#L1282'>1282</a>
+<a name='L1283'></a><a href='#L1283'>1283</a>
+<a name='L1284'></a><a href='#L1284'>1284</a>
+<a name='L1285'></a><a href='#L1285'>1285</a>
+<a name='L1286'></a><a href='#L1286'>1286</a>
+<a name='L1287'></a><a href='#L1287'>1287</a>
+<a name='L1288'></a><a href='#L1288'>1288</a>
+<a name='L1289'></a><a href='#L1289'>1289</a>
+<a name='L1290'></a><a href='#L1290'>1290</a>
+<a name='L1291'></a><a href='#L1291'>1291</a>
+<a name='L1292'></a><a href='#L1292'>1292</a>
+<a name='L1293'></a><a href='#L1293'>1293</a>
+<a name='L1294'></a><a href='#L1294'>1294</a>
+<a name='L1295'></a><a href='#L1295'>1295</a>
+<a name='L1296'></a><a href='#L1296'>1296</a>
+<a name='L1297'></a><a href='#L1297'>1297</a>
+<a name='L1298'></a><a href='#L1298'>1298</a>
+<a name='L1299'></a><a href='#L1299'>1299</a>
+<a name='L1300'></a><a href='#L1300'>1300</a>
+<a name='L1301'></a><a href='#L1301'>1301</a>
+<a name='L1302'></a><a href='#L1302'>1302</a>
+<a name='L1303'></a><a href='#L1303'>1303</a>
+<a name='L1304'></a><a href='#L1304'>1304</a>
+<a name='L1305'></a><a href='#L1305'>1305</a>
+<a name='L1306'></a><a href='#L1306'>1306</a>
+<a name='L1307'></a><a href='#L1307'>1307</a>
+<a name='L1308'></a><a href='#L1308'>1308</a>
+<a name='L1309'></a><a href='#L1309'>1309</a>
+<a name='L1310'></a><a href='#L1310'>1310</a>
+<a name='L1311'></a><a href='#L1311'>1311</a>
+<a name='L1312'></a><a href='#L1312'>1312</a>
+<a name='L1313'></a><a href='#L1313'>1313</a>
+<a name='L1314'></a><a href='#L1314'>1314</a>
+<a name='L1315'></a><a href='#L1315'>1315</a>
+<a name='L1316'></a><a href='#L1316'>1316</a>
+<a name='L1317'></a><a href='#L1317'>1317</a>
+<a name='L1318'></a><a href='#L1318'>1318</a>
+<a name='L1319'></a><a href='#L1319'>1319</a>
+<a name='L1320'></a><a href='#L1320'>1320</a>
+<a name='L1321'></a><a href='#L1321'>1321</a>
+<a name='L1322'></a><a href='#L1322'>1322</a>
+<a name='L1323'></a><a href='#L1323'>1323</a>
+<a name='L1324'></a><a href='#L1324'>1324</a>
+<a name='L1325'></a><a href='#L1325'>1325</a>
+<a name='L1326'></a><a href='#L1326'>1326</a>
+<a name='L1327'></a><a href='#L1327'>1327</a>
+<a name='L1328'></a><a href='#L1328'>1328</a>
+<a name='L1329'></a><a href='#L1329'>1329</a>
+<a name='L1330'></a><a href='#L1330'>1330</a>
+<a name='L1331'></a><a href='#L1331'>1331</a>
+<a name='L1332'></a><a href='#L1332'>1332</a>
+<a name='L1333'></a><a href='#L1333'>1333</a>
+<a name='L1334'></a><a href='#L1334'>1334</a>
+<a name='L1335'></a><a href='#L1335'>1335</a>
+<a name='L1336'></a><a href='#L1336'>1336</a>
+<a name='L1337'></a><a href='#L1337'>1337</a>
+<a name='L1338'></a><a href='#L1338'>1338</a>
+<a name='L1339'></a><a href='#L1339'>1339</a>
+<a name='L1340'></a><a href='#L1340'>1340</a>
+<a name='L1341'></a><a href='#L1341'>1341</a>
+<a name='L1342'></a><a href='#L1342'>1342</a>
+<a name='L1343'></a><a href='#L1343'>1343</a>
+<a name='L1344'></a><a href='#L1344'>1344</a>
+<a name='L1345'></a><a href='#L1345'>1345</a>
+<a name='L1346'></a><a href='#L1346'>1346</a>
+<a name='L1347'></a><a href='#L1347'>1347</a>
+<a name='L1348'></a><a href='#L1348'>1348</a>
+<a name='L1349'></a><a href='#L1349'>1349</a>
+<a name='L1350'></a><a href='#L1350'>1350</a>
+<a name='L1351'></a><a href='#L1351'>1351</a>
+<a name='L1352'></a><a href='#L1352'>1352</a>
+<a name='L1353'></a><a href='#L1353'>1353</a>
+<a name='L1354'></a><a href='#L1354'>1354</a>
+<a name='L1355'></a><a href='#L1355'>1355</a>
+<a name='L1356'></a><a href='#L1356'>1356</a>
+<a name='L1357'></a><a href='#L1357'>1357</a>
+<a name='L1358'></a><a href='#L1358'>1358</a>
+<a name='L1359'></a><a href='#L1359'>1359</a>
+<a name='L1360'></a><a href='#L1360'>1360</a>
+<a name='L1361'></a><a href='#L1361'>1361</a>
+<a name='L1362'></a><a href='#L1362'>1362</a>
+<a name='L1363'></a><a href='#L1363'>1363</a>
+<a name='L1364'></a><a href='#L1364'>1364</a>
+<a name='L1365'></a><a href='#L1365'>1365</a>
+<a name='L1366'></a><a href='#L1366'>1366</a>
+<a name='L1367'></a><a href='#L1367'>1367</a>
+<a name='L1368'></a><a href='#L1368'>1368</a>
+<a name='L1369'></a><a href='#L1369'>1369</a>
+<a name='L1370'></a><a href='#L1370'>1370</a>
+<a name='L1371'></a><a href='#L1371'>1371</a>
+<a name='L1372'></a><a href='#L1372'>1372</a>
+<a name='L1373'></a><a href='#L1373'>1373</a>
+<a name='L1374'></a><a href='#L1374'>1374</a>
+<a name='L1375'></a><a href='#L1375'>1375</a>
+<a name='L1376'></a><a href='#L1376'>1376</a>
+<a name='L1377'></a><a href='#L1377'>1377</a>
+<a name='L1378'></a><a href='#L1378'>1378</a>
+<a name='L1379'></a><a href='#L1379'>1379</a>
+<a name='L1380'></a><a href='#L1380'>1380</a>
+<a name='L1381'></a><a href='#L1381'>1381</a>
+<a name='L1382'></a><a href='#L1382'>1382</a>
+<a name='L1383'></a><a href='#L1383'>1383</a>
+<a name='L1384'></a><a href='#L1384'>1384</a>
+<a name='L1385'></a><a href='#L1385'>1385</a>
+<a name='L1386'></a><a href='#L1386'>1386</a>
+<a name='L1387'></a><a href='#L1387'>1387</a>
+<a name='L1388'></a><a href='#L1388'>1388</a>
+<a name='L1389'></a><a href='#L1389'>1389</a>
+<a name='L1390'></a><a href='#L1390'>1390</a>
+<a name='L1391'></a><a href='#L1391'>1391</a>
+<a name='L1392'></a><a href='#L1392'>1392</a>
+<a name='L1393'></a><a href='#L1393'>1393</a>
+<a name='L1394'></a><a href='#L1394'>1394</a>
+<a name='L1395'></a><a href='#L1395'>1395</a>
+<a name='L1396'></a><a href='#L1396'>1396</a>
+<a name='L1397'></a><a href='#L1397'>1397</a>
+<a name='L1398'></a><a href='#L1398'>1398</a>
+<a name='L1399'></a><a href='#L1399'>1399</a>
+<a name='L1400'></a><a href='#L1400'>1400</a>
+<a name='L1401'></a><a href='#L1401'>1401</a>
+<a name='L1402'></a><a href='#L1402'>1402</a>
+<a name='L1403'></a><a href='#L1403'>1403</a>
+<a name='L1404'></a><a href='#L1404'>1404</a>
+<a name='L1405'></a><a href='#L1405'>1405</a>
+<a name='L1406'></a><a href='#L1406'>1406</a>
+<a name='L1407'></a><a href='#L1407'>1407</a>
+<a name='L1408'></a><a href='#L1408'>1408</a>
+<a name='L1409'></a><a href='#L1409'>1409</a>
+<a name='L1410'></a><a href='#L1410'>1410</a>
+<a name='L1411'></a><a href='#L1411'>1411</a>
+<a name='L1412'></a><a href='#L1412'>1412</a>
+<a name='L1413'></a><a href='#L1413'>1413</a>
+<a name='L1414'></a><a href='#L1414'>1414</a>
+<a name='L1415'></a><a href='#L1415'>1415</a>
+<a name='L1416'></a><a href='#L1416'>1416</a>
+<a name='L1417'></a><a href='#L1417'>1417</a>
+<a name='L1418'></a><a href='#L1418'>1418</a>
+<a name='L1419'></a><a href='#L1419'>1419</a>
+<a name='L1420'></a><a href='#L1420'>1420</a>
+<a name='L1421'></a><a href='#L1421'>1421</a>
+<a name='L1422'></a><a href='#L1422'>1422</a>
+<a name='L1423'></a><a href='#L1423'>1423</a>
+<a name='L1424'></a><a href='#L1424'>1424</a>
+<a name='L1425'></a><a href='#L1425'>1425</a>
+<a name='L1426'></a><a href='#L1426'>1426</a>
+<a name='L1427'></a><a href='#L1427'>1427</a>
+<a name='L1428'></a><a href='#L1428'>1428</a>
+<a name='L1429'></a><a href='#L1429'>1429</a>
+<a name='L1430'></a><a href='#L1430'>1430</a>
+<a name='L1431'></a><a href='#L1431'>1431</a>
+<a name='L1432'></a><a href='#L1432'>1432</a>
+<a name='L1433'></a><a href='#L1433'>1433</a>
+<a name='L1434'></a><a href='#L1434'>1434</a>
+<a name='L1435'></a><a href='#L1435'>1435</a>
+<a name='L1436'></a><a href='#L1436'>1436</a>
+<a name='L1437'></a><a href='#L1437'>1437</a>
+<a name='L1438'></a><a href='#L1438'>1438</a>
+<a name='L1439'></a><a href='#L1439'>1439</a>
+<a name='L1440'></a><a href='#L1440'>1440</a>
+<a name='L1441'></a><a href='#L1441'>1441</a>
+<a name='L1442'></a><a href='#L1442'>1442</a>
+<a name='L1443'></a><a href='#L1443'>1443</a>
+<a name='L1444'></a><a href='#L1444'>1444</a>
+<a name='L1445'></a><a href='#L1445'>1445</a>
+<a name='L1446'></a><a href='#L1446'>1446</a>
+<a name='L1447'></a><a href='#L1447'>1447</a>
+<a name='L1448'></a><a href='#L1448'>1448</a>
+<a name='L1449'></a><a href='#L1449'>1449</a>
+<a name='L1450'></a><a href='#L1450'>1450</a>
+<a name='L1451'></a><a href='#L1451'>1451</a>
+<a name='L1452'></a><a href='#L1452'>1452</a>
+<a name='L1453'></a><a href='#L1453'>1453</a>
+<a name='L1454'></a><a href='#L1454'>1454</a>
+<a name='L1455'></a><a href='#L1455'>1455</a>
+<a name='L1456'></a><a href='#L1456'>1456</a>
+<a name='L1457'></a><a href='#L1457'>1457</a>
+<a name='L1458'></a><a href='#L1458'>1458</a>
+<a name='L1459'></a><a href='#L1459'>1459</a>
+<a name='L1460'></a><a href='#L1460'>1460</a>
+<a name='L1461'></a><a href='#L1461'>1461</a>
+<a name='L1462'></a><a href='#L1462'>1462</a>
+<a name='L1463'></a><a href='#L1463'>1463</a>
+<a name='L1464'></a><a href='#L1464'>1464</a>
+<a name='L1465'></a><a href='#L1465'>1465</a>
+<a name='L1466'></a><a href='#L1466'>1466</a>
+<a name='L1467'></a><a href='#L1467'>1467</a>
+<a name='L1468'></a><a href='#L1468'>1468</a>
+<a name='L1469'></a><a href='#L1469'>1469</a>
+<a name='L1470'></a><a href='#L1470'>1470</a>
+<a name='L1471'></a><a href='#L1471'>1471</a>
+<a name='L1472'></a><a href='#L1472'>1472</a>
+<a name='L1473'></a><a href='#L1473'>1473</a>
+<a name='L1474'></a><a href='#L1474'>1474</a>
+<a name='L1475'></a><a href='#L1475'>1475</a>
+<a name='L1476'></a><a href='#L1476'>1476</a>
+<a name='L1477'></a><a href='#L1477'>1477</a>
+<a name='L1478'></a><a href='#L1478'>1478</a>
+<a name='L1479'></a><a href='#L1479'>1479</a>
+<a name='L1480'></a><a href='#L1480'>1480</a>
+<a name='L1481'></a><a href='#L1481'>1481</a>
+<a name='L1482'></a><a href='#L1482'>1482</a>
+<a name='L1483'></a><a href='#L1483'>1483</a>
+<a name='L1484'></a><a href='#L1484'>1484</a>
+<a name='L1485'></a><a href='#L1485'>1485</a>
+<a name='L1486'></a><a href='#L1486'>1486</a>
+<a name='L1487'></a><a href='#L1487'>1487</a>
+<a name='L1488'></a><a href='#L1488'>1488</a>
+<a name='L1489'></a><a href='#L1489'>1489</a>
+<a name='L1490'></a><a href='#L1490'>1490</a>
+<a name='L1491'></a><a href='#L1491'>1491</a>
+<a name='L1492'></a><a href='#L1492'>1492</a>
+<a name='L1493'></a><a href='#L1493'>1493</a>
+<a name='L1494'></a><a href='#L1494'>1494</a>
+<a name='L1495'></a><a href='#L1495'>1495</a>
+<a name='L1496'></a><a href='#L1496'>1496</a>
+<a name='L1497'></a><a href='#L1497'>1497</a>
+<a name='L1498'></a><a href='#L1498'>1498</a>
+<a name='L1499'></a><a href='#L1499'>1499</a>
+<a name='L1500'></a><a href='#L1500'>1500</a>
+<a name='L1501'></a><a href='#L1501'>1501</a>
+<a name='L1502'></a><a href='#L1502'>1502</a>
+<a name='L1503'></a><a href='#L1503'>1503</a>
+<a name='L1504'></a><a href='#L1504'>1504</a>
+<a name='L1505'></a><a href='#L1505'>1505</a>
+<a name='L1506'></a><a href='#L1506'>1506</a>
+<a name='L1507'></a><a href='#L1507'>1507</a>
+<a name='L1508'></a><a href='#L1508'>1508</a>
+<a name='L1509'></a><a href='#L1509'>1509</a>
+<a name='L1510'></a><a href='#L1510'>1510</a>
+<a name='L1511'></a><a href='#L1511'>1511</a>
+<a name='L1512'></a><a href='#L1512'>1512</a>
+<a name='L1513'></a><a href='#L1513'>1513</a>
+<a name='L1514'></a><a href='#L1514'>1514</a>
+<a name='L1515'></a><a href='#L1515'>1515</a>
+<a name='L1516'></a><a href='#L1516'>1516</a>
+<a name='L1517'></a><a href='#L1517'>1517</a>
+<a name='L1518'></a><a href='#L1518'>1518</a>
+<a name='L1519'></a><a href='#L1519'>1519</a>
+<a name='L1520'></a><a href='#L1520'>1520</a>
+<a name='L1521'></a><a href='#L1521'>1521</a>
+<a name='L1522'></a><a href='#L1522'>1522</a>
+<a name='L1523'></a><a href='#L1523'>1523</a>
+<a name='L1524'></a><a href='#L1524'>1524</a>
+<a name='L1525'></a><a href='#L1525'>1525</a>
+<a name='L1526'></a><a href='#L1526'>1526</a>
+<a name='L1527'></a><a href='#L1527'>1527</a>
+<a name='L1528'></a><a href='#L1528'>1528</a>
+<a name='L1529'></a><a href='#L1529'>1529</a>
+<a name='L1530'></a><a href='#L1530'>1530</a>
+<a name='L1531'></a><a href='#L1531'>1531</a>
+<a name='L1532'></a><a href='#L1532'>1532</a>
+<a name='L1533'></a><a href='#L1533'>1533</a>
+<a name='L1534'></a><a href='#L1534'>1534</a>
+<a name='L1535'></a><a href='#L1535'>1535</a>
+<a name='L1536'></a><a href='#L1536'>1536</a>
+<a name='L1537'></a><a href='#L1537'>1537</a>
+<a name='L1538'></a><a href='#L1538'>1538</a>
+<a name='L1539'></a><a href='#L1539'>1539</a>
+<a name='L1540'></a><a href='#L1540'>1540</a>
+<a name='L1541'></a><a href='#L1541'>1541</a>
+<a name='L1542'></a><a href='#L1542'>1542</a>
+<a name='L1543'></a><a href='#L1543'>1543</a>
+<a name='L1544'></a><a href='#L1544'>1544</a>
+<a name='L1545'></a><a href='#L1545'>1545</a>
+<a name='L1546'></a><a href='#L1546'>1546</a>
+<a name='L1547'></a><a href='#L1547'>1547</a>
+<a name='L1548'></a><a href='#L1548'>1548</a>
+<a name='L1549'></a><a href='#L1549'>1549</a>
+<a name='L1550'></a><a href='#L1550'>1550</a>
+<a name='L1551'></a><a href='#L1551'>1551</a>
+<a name='L1552'></a><a href='#L1552'>1552</a>
+<a name='L1553'></a><a href='#L1553'>1553</a>
+<a name='L1554'></a><a href='#L1554'>1554</a>
+<a name='L1555'></a><a href='#L1555'>1555</a>
+<a name='L1556'></a><a href='#L1556'>1556</a>
+<a name='L1557'></a><a href='#L1557'>1557</a>
+<a name='L1558'></a><a href='#L1558'>1558</a>
+<a name='L1559'></a><a href='#L1559'>1559</a>
+<a name='L1560'></a><a href='#L1560'>1560</a>
+<a name='L1561'></a><a href='#L1561'>1561</a>
+<a name='L1562'></a><a href='#L1562'>1562</a>
+<a name='L1563'></a><a href='#L1563'>1563</a>
+<a name='L1564'></a><a href='#L1564'>1564</a>
+<a name='L1565'></a><a href='#L1565'>1565</a>
+<a name='L1566'></a><a href='#L1566'>1566</a>
+<a name='L1567'></a><a href='#L1567'>1567</a>
+<a name='L1568'></a><a href='#L1568'>1568</a>
+<a name='L1569'></a><a href='#L1569'>1569</a>
+<a name='L1570'></a><a href='#L1570'>1570</a>
+<a name='L1571'></a><a href='#L1571'>1571</a>
+<a name='L1572'></a><a href='#L1572'>1572</a>
+<a name='L1573'></a><a href='#L1573'>1573</a>
+<a name='L1574'></a><a href='#L1574'>1574</a>
+<a name='L1575'></a><a href='#L1575'>1575</a>
+<a name='L1576'></a><a href='#L1576'>1576</a>
+<a name='L1577'></a><a href='#L1577'>1577</a>
+<a name='L1578'></a><a href='#L1578'>1578</a>
+<a name='L1579'></a><a href='#L1579'>1579</a>
+<a name='L1580'></a><a href='#L1580'>1580</a>
+<a name='L1581'></a><a href='#L1581'>1581</a>
+<a name='L1582'></a><a href='#L1582'>1582</a>
+<a name='L1583'></a><a href='#L1583'>1583</a>
+<a name='L1584'></a><a href='#L1584'>1584</a>
+<a name='L1585'></a><a href='#L1585'>1585</a>
+<a name='L1586'></a><a href='#L1586'>1586</a>
+<a name='L1587'></a><a href='#L1587'>1587</a>
+<a name='L1588'></a><a href='#L1588'>1588</a>
+<a name='L1589'></a><a href='#L1589'>1589</a>
+<a name='L1590'></a><a href='#L1590'>1590</a>
+<a name='L1591'></a><a href='#L1591'>1591</a>
+<a name='L1592'></a><a href='#L1592'>1592</a>
+<a name='L1593'></a><a href='#L1593'>1593</a>
+<a name='L1594'></a><a href='#L1594'>1594</a>
+<a name='L1595'></a><a href='#L1595'>1595</a>
+<a name='L1596'></a><a href='#L1596'>1596</a>
+<a name='L1597'></a><a href='#L1597'>1597</a>
+<a name='L1598'></a><a href='#L1598'>1598</a>
+<a name='L1599'></a><a href='#L1599'>1599</a>
+<a name='L1600'></a><a href='#L1600'>1600</a>
+<a name='L1601'></a><a href='#L1601'>1601</a>
+<a name='L1602'></a><a href='#L1602'>1602</a>
+<a name='L1603'></a><a href='#L1603'>1603</a>
+<a name='L1604'></a><a href='#L1604'>1604</a>
+<a name='L1605'></a><a href='#L1605'>1605</a>
+<a name='L1606'></a><a href='#L1606'>1606</a>
+<a name='L1607'></a><a href='#L1607'>1607</a>
+<a name='L1608'></a><a href='#L1608'>1608</a>
+<a name='L1609'></a><a href='#L1609'>1609</a>
+<a name='L1610'></a><a href='#L1610'>1610</a>
+<a name='L1611'></a><a href='#L1611'>1611</a>
+<a name='L1612'></a><a href='#L1612'>1612</a>
+<a name='L1613'></a><a href='#L1613'>1613</a>
+<a name='L1614'></a><a href='#L1614'>1614</a>
+<a name='L1615'></a><a href='#L1615'>1615</a>
+<a name='L1616'></a><a href='#L1616'>1616</a>
+<a name='L1617'></a><a href='#L1617'>1617</a>
+<a name='L1618'></a><a href='#L1618'>1618</a>
+<a name='L1619'></a><a href='#L1619'>1619</a>
+<a name='L1620'></a><a href='#L1620'>1620</a>
+<a name='L1621'></a><a href='#L1621'>1621</a>
+<a name='L1622'></a><a href='#L1622'>1622</a>
+<a name='L1623'></a><a href='#L1623'>1623</a>
+<a name='L1624'></a><a href='#L1624'>1624</a>
+<a name='L1625'></a><a href='#L1625'>1625</a>
+<a name='L1626'></a><a href='#L1626'>1626</a>
+<a name='L1627'></a><a href='#L1627'>1627</a>
+<a name='L1628'></a><a href='#L1628'>1628</a>
+<a name='L1629'></a><a href='#L1629'>1629</a>
+<a name='L1630'></a><a href='#L1630'>1630</a>
+<a name='L1631'></a><a href='#L1631'>1631</a>
+<a name='L1632'></a><a href='#L1632'>1632</a>
+<a name='L1633'></a><a href='#L1633'>1633</a>
+<a name='L1634'></a><a href='#L1634'>1634</a>
+<a name='L1635'></a><a href='#L1635'>1635</a>
+<a name='L1636'></a><a href='#L1636'>1636</a>
+<a name='L1637'></a><a href='#L1637'>1637</a>
+<a name='L1638'></a><a href='#L1638'>1638</a>
+<a name='L1639'></a><a href='#L1639'>1639</a>
+<a name='L1640'></a><a href='#L1640'>1640</a>
+<a name='L1641'></a><a href='#L1641'>1641</a>
+<a name='L1642'></a><a href='#L1642'>1642</a>
+<a name='L1643'></a><a href='#L1643'>1643</a>
+<a name='L1644'></a><a href='#L1644'>1644</a>
+<a name='L1645'></a><a href='#L1645'>1645</a>
+<a name='L1646'></a><a href='#L1646'>1646</a>
+<a name='L1647'></a><a href='#L1647'>1647</a>
+<a name='L1648'></a><a href='#L1648'>1648</a>
+<a name='L1649'></a><a href='#L1649'>1649</a>
+<a name='L1650'></a><a href='#L1650'>1650</a>
+<a name='L1651'></a><a href='#L1651'>1651</a>
+<a name='L1652'></a><a href='#L1652'>1652</a>
+<a name='L1653'></a><a href='#L1653'>1653</a>
+<a name='L1654'></a><a href='#L1654'>1654</a>
+<a name='L1655'></a><a href='#L1655'>1655</a>
+<a name='L1656'></a><a href='#L1656'>1656</a>
+<a name='L1657'></a><a href='#L1657'>1657</a>
+<a name='L1658'></a><a href='#L1658'>1658</a>
+<a name='L1659'></a><a href='#L1659'>1659</a>
+<a name='L1660'></a><a href='#L1660'>1660</a>
+<a name='L1661'></a><a href='#L1661'>1661</a>
+<a name='L1662'></a><a href='#L1662'>1662</a>
+<a name='L1663'></a><a href='#L1663'>1663</a>
+<a name='L1664'></a><a href='#L1664'>1664</a>
+<a name='L1665'></a><a href='#L1665'>1665</a>
+<a name='L1666'></a><a href='#L1666'>1666</a>
+<a name='L1667'></a><a href='#L1667'>1667</a>
+<a name='L1668'></a><a href='#L1668'>1668</a>
+<a name='L1669'></a><a href='#L1669'>1669</a>
+<a name='L1670'></a><a href='#L1670'>1670</a>
+<a name='L1671'></a><a href='#L1671'>1671</a>
+<a name='L1672'></a><a href='#L1672'>1672</a>
+<a name='L1673'></a><a href='#L1673'>1673</a>
+<a name='L1674'></a><a href='#L1674'>1674</a>
+<a name='L1675'></a><a href='#L1675'>1675</a>
+<a name='L1676'></a><a href='#L1676'>1676</a>
+<a name='L1677'></a><a href='#L1677'>1677</a>
+<a name='L1678'></a><a href='#L1678'>1678</a>
+<a name='L1679'></a><a href='#L1679'>1679</a>
+<a name='L1680'></a><a href='#L1680'>1680</a>
+<a name='L1681'></a><a href='#L1681'>1681</a>
+<a name='L1682'></a><a href='#L1682'>1682</a>
+<a name='L1683'></a><a href='#L1683'>1683</a>
+<a name='L1684'></a><a href='#L1684'>1684</a>
+<a name='L1685'></a><a href='#L1685'>1685</a>
+<a name='L1686'></a><a href='#L1686'>1686</a>
+<a name='L1687'></a><a href='#L1687'>1687</a>
+<a name='L1688'></a><a href='#L1688'>1688</a>
+<a name='L1689'></a><a href='#L1689'>1689</a>
+<a name='L1690'></a><a href='#L1690'>1690</a>
+<a name='L1691'></a><a href='#L1691'>1691</a>
+<a name='L1692'></a><a href='#L1692'>1692</a>
+<a name='L1693'></a><a href='#L1693'>1693</a>
+<a name='L1694'></a><a href='#L1694'>1694</a>
+<a name='L1695'></a><a href='#L1695'>1695</a>
+<a name='L1696'></a><a href='#L1696'>1696</a>
+<a name='L1697'></a><a href='#L1697'>1697</a>
+<a name='L1698'></a><a href='#L1698'>1698</a>
+<a name='L1699'></a><a href='#L1699'>1699</a>
+<a name='L1700'></a><a href='#L1700'>1700</a>
+<a name='L1701'></a><a href='#L1701'>1701</a>
+<a name='L1702'></a><a href='#L1702'>1702</a>
+<a name='L1703'></a><a href='#L1703'>1703</a>
+<a name='L1704'></a><a href='#L1704'>1704</a>
+<a name='L1705'></a><a href='#L1705'>1705</a>
+<a name='L1706'></a><a href='#L1706'>1706</a>
+<a name='L1707'></a><a href='#L1707'>1707</a>
+<a name='L1708'></a><a href='#L1708'>1708</a>
+<a name='L1709'></a><a href='#L1709'>1709</a>
+<a name='L1710'></a><a href='#L1710'>1710</a>
+<a name='L1711'></a><a href='#L1711'>1711</a>
+<a name='L1712'></a><a href='#L1712'>1712</a>
+<a name='L1713'></a><a href='#L1713'>1713</a>
+<a name='L1714'></a><a href='#L1714'>1714</a>
+<a name='L1715'></a><a href='#L1715'>1715</a>
+<a name='L1716'></a><a href='#L1716'>1716</a>
+<a name='L1717'></a><a href='#L1717'>1717</a>
+<a name='L1718'></a><a href='#L1718'>1718</a>
+<a name='L1719'></a><a href='#L1719'>1719</a>
+<a name='L1720'></a><a href='#L1720'>1720</a>
+<a name='L1721'></a><a href='#L1721'>1721</a>
+<a name='L1722'></a><a href='#L1722'>1722</a>
+<a name='L1723'></a><a href='#L1723'>1723</a>
+<a name='L1724'></a><a href='#L1724'>1724</a>
+<a name='L1725'></a><a href='#L1725'>1725</a>
+<a name='L1726'></a><a href='#L1726'>1726</a>
+<a name='L1727'></a><a href='#L1727'>1727</a>
+<a name='L1728'></a><a href='#L1728'>1728</a>
+<a name='L1729'></a><a href='#L1729'>1729</a>
+<a name='L1730'></a><a href='#L1730'>1730</a>
+<a name='L1731'></a><a href='#L1731'>1731</a>
+<a name='L1732'></a><a href='#L1732'>1732</a>
+<a name='L1733'></a><a href='#L1733'>1733</a>
+<a name='L1734'></a><a href='#L1734'>1734</a>
+<a name='L1735'></a><a href='#L1735'>1735</a>
+<a name='L1736'></a><a href='#L1736'>1736</a>
+<a name='L1737'></a><a href='#L1737'>1737</a>
+<a name='L1738'></a><a href='#L1738'>1738</a>
+<a name='L1739'></a><a href='#L1739'>1739</a>
+<a name='L1740'></a><a href='#L1740'>1740</a>
+<a name='L1741'></a><a href='#L1741'>1741</a>
+<a name='L1742'></a><a href='#L1742'>1742</a>
+<a name='L1743'></a><a href='#L1743'>1743</a>
+<a name='L1744'></a><a href='#L1744'>1744</a>
+<a name='L1745'></a><a href='#L1745'>1745</a>
+<a name='L1746'></a><a href='#L1746'>1746</a>
+<a name='L1747'></a><a href='#L1747'>1747</a>
+<a name='L1748'></a><a href='#L1748'>1748</a>
+<a name='L1749'></a><a href='#L1749'>1749</a>
+<a name='L1750'></a><a href='#L1750'>1750</a>
+<a name='L1751'></a><a href='#L1751'>1751</a>
+<a name='L1752'></a><a href='#L1752'>1752</a>
+<a name='L1753'></a><a href='#L1753'>1753</a>
+<a name='L1754'></a><a href='#L1754'>1754</a>
+<a name='L1755'></a><a href='#L1755'>1755</a>
+<a name='L1756'></a><a href='#L1756'>1756</a>
+<a name='L1757'></a><a href='#L1757'>1757</a>
+<a name='L1758'></a><a href='#L1758'>1758</a>
+<a name='L1759'></a><a href='#L1759'>1759</a>
+<a name='L1760'></a><a href='#L1760'>1760</a>
+<a name='L1761'></a><a href='#L1761'>1761</a>
+<a name='L1762'></a><a href='#L1762'>1762</a>
+<a name='L1763'></a><a href='#L1763'>1763</a>
+<a name='L1764'></a><a href='#L1764'>1764</a>
+<a name='L1765'></a><a href='#L1765'>1765</a>
+<a name='L1766'></a><a href='#L1766'>1766</a>
+<a name='L1767'></a><a href='#L1767'>1767</a>
+<a name='L1768'></a><a href='#L1768'>1768</a>
+<a name='L1769'></a><a href='#L1769'>1769</a>
+<a name='L1770'></a><a href='#L1770'>1770</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { 
+  StreamSource, 
+  StreamOptions, 
+  PlayerSettings,
+  Config,
+  StreamConfig,
+  FavoriteChannels,
+  Stream
+} from '../types/stream.js';
+import type { 
+  StreamOutput, 
+  StreamError, 
+  StreamInstance,
+  StreamResponse 
+} from '../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from './services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { loadAllConfigs } from '../config/loader.js';</span>
+<span class="cstat-no" title="statement not covered" >import { TwitchService } from './services/twitch.js';</span>
+<span class="cstat-no" title="statement not covered" >import { HolodexService } from './services/holodex.js';</span>
+<span class="cstat-no" title="statement not covered" >import { YouTubeService } from './services/youtube.js';</span>
+<span class="cstat-no" title="statement not covered" >import { PlayerService } from './services/player.js';</span>
+import type { TwitchAuth } from './db/database.js';
+<span class="cstat-no" title="statement not covered" >import { env } from '../config/env.js';</span>
+<span class="cstat-no" title="statement not covered" >import { queueService } from './services/queue_service.js';</span>
+<span class="cstat-no" title="statement not covered" >import fs from 'fs';</span>
+<span class="cstat-no" title="statement not covered" >import path from 'path';</span>
+<span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+<span class="cstat-no" title="statement not covered" >import { KeyboardService, keyboardEvents } from './services/keyboard_service.js';</span>
+<span class="cstat-no" title="statement not covered" >import './types/events.js';</span>
+&nbsp;
+/**
+ * Manages multiple video streams across different screens
+ */
+<span class="cstat-no" title="statement not covered" >export class S</span>treamManager extends EventEmitter {
+  private <span class="cstat-no" title="statement not covered" >streams: Map&lt;number, StreamInstance&gt; = new Map();</span>
+  private config: Config;
+  private twitchService: TwitchService;
+  private holodexService: HolodexService;
+  private youtubeService: YouTubeService;
+  private playerService: PlayerService;
+  private keyboardService: KeyboardService;
+  private <span class="cstat-no" title="statement not covered" >cleanupHandler: (() =&gt; void) | null = null;</span>
+  private <span class="cstat-no" title="statement not covered" >isShuttingDown = false;</span>
+  private <span class="cstat-no" title="statement not covered" >updateInterval: NodeJS.Timeout | null = null;</span>
+  private readonly <span class="cstat-no" title="statement not covered" >QUEUE_UPDATE_INTERVAL = 15 * 60 * 1000; </span>// 15 minutes in milliseconds
+  private <span class="cstat-no" title="statement not covered" >favoriteChannels: FavoriteChannels = {</span>
+    holodex: [],
+    twitch: [],
+    youtube: []
+  };
+  private <span class="cstat-no" title="statement not covered" >queues: Map&lt;number, StreamSource[]&gt; = new Map();</span>
+  private readonly <span class="cstat-no" title="statement not covered" >RETRY_INTERVAL = 5000; </span>// 5 seconds
+  private errorCallback?: (data: StreamError) =&gt; void;
+  private <span class="cstat-no" title="statement not covered" >manuallyClosedScreens: Set&lt;number&gt; = new Set();</span>
+  private <span class="cstat-no" title="statement not covered" >streamRetries: Map&lt;number, number&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >streamRefreshTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >inactiveTimers: Map&lt;number, NodeJS.Timeout&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >fifoPaths: Map&lt;number, string&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >ipcPaths: Map&lt;number, string&gt; = new Map();</span>
+  private <span class="cstat-no" title="statement not covered" >cachedStreams: StreamSource[] = []; </span>// Cache for stream metadata
+  private <span class="cstat-no" title="statement not covered" >lastStreamFetch: number = 0; </span>// Timestamp of last stream fetch
+  private readonly <span class="cstat-no" title="statement not covered" >STREAM_CACHE_TTL = 60000; </span>// 1 minute cache TTL
+  private <span class="cstat-no" title="statement not covered" >queueProcessing: Set&lt;number&gt; = new Set(); </span>// Track screens where queue is being processed
+  private <span class="cstat-no" title="statement not covered" >lastStreamRefresh: Map&lt;number, number&gt; = new Map(); </span>// Track last refresh time per screen
+  private readonly <span class="cstat-no" title="statement not covered" >STREAM_REFRESH_INTERVAL = 5 * 60 * 1000; </span>// 5 minutes refresh interval
+&nbsp;
+  /**
+   * Creates a new StreamManager instance
+   */
+<span class="fstat-no" title="function not covered" >  constructor(</span>
+    config: Config,
+    holodexService: HolodexService,
+    twitchService: TwitchService,
+    youtubeService: YouTubeService,
+    playerService: PlayerService
+  ) {
+<span class="cstat-no" title="statement not covered" >    super(); </span>// Initialize EventEmitter
+<span class="cstat-no" title="statement not covered" >    this.config = config;</span>
+<span class="cstat-no" title="statement not covered" >    this.holodexService = holodexService;</span>
+<span class="cstat-no" title="statement not covered" >    this.twitchService = twitchService;</span>
+<span class="cstat-no" title="statement not covered" >    this.youtubeService = youtubeService;</span>
+<span class="cstat-no" title="statement not covered" >    this.playerService = playerService;</span>
+<span class="cstat-no" title="statement not covered" >    this.keyboardService = new KeyboardService();</span>
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = {</span>
+      holodex: config.favoriteChannels.holodex || [],
+      twitch: config.favoriteChannels.twitch || [],
+      youtube: config.favoriteChannels.youtube || []
+    };
+<span class="cstat-no" title="statement not covered" >    this.initializeQueues();</span>
+    
+    // Synchronize disabled screens from config
+<span class="cstat-no" title="statement not covered" >    this.synchronizeDisabledScreens();</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info('Stream manager initialized', 'StreamManager');</span>
+&nbsp;
+    // Handle stream end events
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamError(<span class="fstat-no" title="function not covered" >async </span>(data) =&gt; {</span>
+      // Don't handle retrying streams or during shutdown
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.playerService.isRetrying(data.screen) || this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Check if we're already processing this screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(data.screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Queue processing already in progress for screen ${data.screen}, ignoring stream end event`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Check if this was a normal end (code 0) or error
+<span class="cstat-no" title="statement not covered" >      if (data.code === 0) {</span>
+        // Check if the error message indicates a user-initiated exit
+        const isUserExit = <span class="cstat-no" title="statement not covered" >data.error === 'Stream ended by user' || data.error === 'Stream ended';</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (isUserExit) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Stream on screen ${data.screen} was ended by user, starting next stream`, 'StreamManager');</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`Stream ended normally on screen ${data.screen}, starting next stream`, 'StreamManager');</span>
+        }
+        
+        // Always move to the next stream for normal exits or user-initiated exits
+<span class="cstat-no" title="statement not covered" >        await this.handleStreamEnd(data.screen);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Stream error on screen ${data.screen}: ${data.error}`, 'StreamManager');</span>
+        // For error cases, wait for any potential retries to complete before starting next stream
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.playerService.isRetrying(data.screen)) {</span>
+          // Add a small delay to allow any in-progress operations to complete
+<span class="cstat-no" title="statement not covered" >          await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 1000))</span>;</span>
+<span class="cstat-no" title="statement not covered" >          await this.handleStreamEnd(data.screen).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            logger.error(</span>
+              `Failed to start next stream on screen ${data.screen}`,
+              'StreamManager',
+              error instanceof Error ? error : new Error(String(error))
+            );
+          });
+        }
+      }
+    });
+&nbsp;
+    // Start continuous queue updates
+<span class="cstat-no" title="statement not covered" >    this.startQueueUpdates();</span>
+&nbsp;
+    // Update cleanup handler
+<span class="cstat-no" title="statement not covered" >    this.cleanupHandler = <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Cleaning up stream processes...', 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      this.isShuttingDown = true;</span>
+<span class="cstat-no" title="statement not covered" >      this.stopQueueUpdates();</span>
+<span class="cstat-no" title="statement not covered" >      this.keyboardService.cleanup();</span>
+<span class="cstat-no" title="statement not covered" >      for (const [screen] of this.streams) {</span>
+<span class="cstat-no" title="statement not covered" >        this.stopStream(screen).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to stop stream on screen ${screen}`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        });
+      }
+    };
+&nbsp;
+    // Register cleanup handlers
+<span class="cstat-no" title="statement not covered" >    process.on('exit', this.cleanupHandler);</span>
+&nbsp;
+    // Set up queue event handlers
+<span class="cstat-no" title="statement not covered" >    queueService.on('all:watched', <span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleAllStreamsWatched(screen);</span>
+      }
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    queueService.on('queue:empty', <span class="fstat-no" title="function not covered" >async </span>(screen) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleEmptyQueue(screen);</span>
+      }
+    });
+&nbsp;
+    // Handle keyboard events
+<span class="cstat-no" title="statement not covered" >    keyboardEvents.on('autostart', <span class="fstat-no" title="function not covered" >async </span>(screen: number) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screen);</span>
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          `Failed to handle autostart for screen ${screen}`,
+          'StreamManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    keyboardEvents.on('closeall', <span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+        const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        await Promise.all(</span>
+          activeStreams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >this.stopStream(stream.screen, true))</span>
+        );
+      } catch (error) {
+<span class="cstat-no" title="statement not covered" >        logger.error(</span>
+          'Failed to close all streams',
+          'StreamManager',
+          error instanceof Error ? error : new Error(String(error))
+        );
+      }
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleStreamEnd(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Check if we're already processing the queue for this screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Queue processing already in progress for screen ${screen}, not handling stream end`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Mark this screen as being processed
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.add(screen);</span>
+&nbsp;
+      // Get the current queue and log it for debugging
+      const currentQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Current queue for screen ${screen} has ${currentQueue.length} items`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      currentQueue.forEach(<span class="fstat-no" title="function not covered" >(i</span>tem, index) =&gt; {</span>
+        const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(item.url);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`  Queue item ${index}: ${item.url} (watched: ${isWatched ? 'yes' : 'no'})`, 'StreamManager');</span>
+      });
+&nbsp;
+      // Get next stream from queue
+      const nextStream = <span class="cstat-no" title="statement not covered" >queueService.getNextStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!nextStream) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`No next stream in queue for screen ${screen}, fetching new streams`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleEmptyQueue(screen);</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Next stream in queue for screen ${screen}: ${nextStream.url}`, 'StreamManager');</span>
+      
+      // Check if stream is already marked as watched
+      const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(nextStream.url);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Stream ${nextStream.url} is${isWatched ? '' : ' not'} already marked as watched`, 'StreamManager');</span>
+      
+      // Get screen configuration to check skipWatchedStreams setting
+      const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.error(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Check if we should skip watched streams for this screen
+      const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+      
+      // If the stream is already watched and not a favorite, skip it (unless skipWatchedStreams is false)
+      const isFavorite = <span class="cstat-no" title="statement not covered" >nextStream.priority !== undefined &amp;&amp; nextStream.priority &lt; 900;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isWatched &amp;&amp; !isFavorite &amp;&amp; skipWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Stream ${nextStream.url} is already watched and not a favorite, skipping`, 'StreamManager');</span>
+        // Remove from queue and try the next one
+<span class="cstat-no" title="statement not covered" >        queueService.removeFromQueue(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleStreamEnd(screen);</span>
+      }
+      
+      // If skipWatchedStreams is false, log that we're playing a watched stream
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isWatched &amp;&amp; !skipWatched) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Stream ${nextStream.url} is already watched but skipWatchedStreams is false, playing anyway`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Check if this stream is already playing on a higher priority screen
+      const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+      const isStreamActive = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >        s.url === nextStream.url &amp;&amp; s.screen &lt; screen</span>
+      );
+&nbsp;
+      // Always play favorite streams, even if they're playing on another screen
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isStreamActive &amp;&amp; !isFavorite) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(</span>
+          `Stream ${nextStream.url} is already playing on a higher priority screen, skipping`,
+          'StreamManager'
+        );
+        // Remove this stream from the queue and try the next one
+<span class="cstat-no" title="statement not covered" >        queueService.removeFromQueue(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return this.handleStreamEnd(screen);</span>
+      }
+&nbsp;
+      // We already got the screen configuration above
+&nbsp;
+      // Check if the screen was manually closed by the user
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} was manually closed, not starting next stream`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      // Mark as watched and remove from queue before starting the new stream
+      // This prevents the same stream from being restarted if there's an error
+<span class="cstat-no" title="statement not covered" >      queueService.markStreamAsWatched(nextStream.url);</span>
+<span class="cstat-no" title="statement not covered" >      queueService.removeFromQueue(screen, 0);</span>
+      
+      // Start the stream with metadata from the queue
+<span class="cstat-no" title="statement not covered" >      logger.info(`Starting stream ${nextStream.url} on screen ${screen} with metadata: ${nextStream.title}, ${nextStream.viewerCount} viewers`, 'StreamManager');</span>
+      
+      // Start the stream immediately without additional delays
+<span class="cstat-no" title="statement not covered" >      await this.startStream({</span>
+        url: nextStream.url,
+        screen,
+        quality: screenConfig.quality || this.config.player.defaultQuality,
+        windowMaximized: screenConfig.windowMaximized,
+        volume: screenConfig.volume,
+        // Pass metadata from the queue
+        title: nextStream.title,
+        viewerCount: nextStream.viewerCount,
+        startTime: nextStream.startTime
+      });
+      
+      // Pre-fetch the next stream in the queue to prepare it
+      const upcomingStream = <span class="cstat-no" title="statement not covered" >queueService.getNextStream(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (upcomingStream) {</span>
+        // Just log that we're preparing the next stream, but don't wait for it
+<span class="cstat-no" title="statement not covered" >        logger.info(`Preparing next stream in queue for screen ${screen}: ${upcomingStream.url}`, 'StreamManager');</span>
+      }
+      
+      // Clear processing flag once we've started the stream
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.delete(screen);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to handle stream end for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+      // Clear processing flag
+<span class="cstat-no" title="statement not covered" >      this.queueProcessing.delete(screen);</span>
+      // Try to handle empty queue as a fallback
+<span class="cstat-no" title="statement not covered" >      return this.handleEmptyQueue(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleEmptyQueue(screen: number): Promise&lt;void&gt; {
+    // Debounce queue processing - if already processing this screen's queue, return
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Queue processing already in progress for screen ${screen}, skipping`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Check if there's already an active stream on this screen
+    const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Screen ${screen} already has an active stream (${activeStream.url}), not starting a new one`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Mark queue as being processed
+<span class="cstat-no" title="statement not covered" >    this.queueProcessing.add(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Get screen configuration
+      const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+      const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+      const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+      const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+      
+      // Check if we should refresh streams
+      let allStreams = <span class="cstat-no" title="statement not covered" >this.cachedStreams;</span>
+<span class="cstat-no" title="statement not covered" >      if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || allStreams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Time since last refresh: ${timeSinceLastRefresh}ms, fetching new streams for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.lastStreamFetch = 0; </span>// Reset cache to force fresh fetch
+<span class="cstat-no" title="statement not covered" >        allStreams = await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, now);</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.info(`Using cached streams for screen ${screen} (last refresh: ${timeSinceLastRefresh}ms ago)`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Check again if a stream was started while we were fetching
+      const activeStreamAfterFetch = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreamAfterFetch) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} now has an active stream (${activeStreamAfterFetch.url}), aborting queue processing`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+      // Filter streams for this screen
+      const availableStreams = <span class="cstat-no" title="statement not covered" >allStreams.filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+        // Filter streams for this screen
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.screen !== screen) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is assigned to screen ${stream.screen}, not ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+        
+        // Check if stream is already playing on another screen
+        const activeStreams = <span class="cstat-no" title="statement not covered" >this.getActiveStreams();</span>
+        const isPlaying = <span class="cstat-no" title="statement not covered" >activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url === stream.url)</span>;</span>
+        
+        // Allow high priority streams (favorites) to play on multiple screens
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (isPlaying &amp;&amp; (!stream.priority || stream.priority &gt;= 900)) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is already playing and is not high priority`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+&nbsp;
+        // Only include streams that are actually live
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (stream.sourceStatus &amp;&amp; stream.sourceStatus !== 'live') {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Stream ${stream.url} is not live (status: ${stream.sourceStatus})`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return false;</span>
+        }
+        
+<span class="cstat-no" title="statement not covered" >        return true;</span>
+      });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info(`Found ${availableStreams.length} streams for screen ${screen}`, 'StreamManager');</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      if (availableStreams.length &gt; 0) {</span>
+        // Sort streams by priority (lower number = higher priority)
+        const sortedStreams = <span class="cstat-no" title="statement not covered" >availableStreams.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
+          // First by priority (undefined priority goes last)
+          const aPriority = <span class="cstat-no" title="statement not covered" >a.priority ?? 999;</span>
+          const bPriority = <span class="cstat-no" title="statement not covered" >b.priority ?? 999;</span>
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (aPriority !== bPriority) <span class="cstat-no" title="statement not covered" >return aPriority - bPriority;</span></span>
+          
+          // Then by viewer count for same priority
+<span class="cstat-no" title="statement not covered" >          return 0;</span>
+        });
+&nbsp;
+        // Debug: Log watched status of streams
+<span class="cstat-no" title="statement not covered" >        sortedStreams.forEach(<span class="fstat-no" title="function not covered" >stream </span>=&gt; {</span>
+          const isWatched = <span class="cstat-no" title="statement not covered" >queueService.isStreamWatched(stream.url);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Stream ${stream.url} (priority: ${stream.priority ?? 'none'}) is${isWatched ? '' : ' not'} marked as watched`,
+            'StreamManager'
+          );
+        });
+&nbsp;
+        // Check if we should skip watched streams for this screen
+        const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+        
+        let combinedStreams: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+<span class="cstat-no" title="statement not covered" >        if (skipWatched) {</span>
+          // Filter out watched streams unless all streams have been watched
+          const unwatchedStreams = <span class="cstat-no" title="statement not covered" >queueService.filterUnwatchedStreams(sortedStreams);</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`After filtering (skipWatchedStreams: ${skipWatched}): ${unwatchedStreams.length} unwatched streams available`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          combinedStreams = unwatchedStreams.length &gt; 0 ? unwatchedStreams : sortedStreams;</span>
+        } else {
+          // Don't filter watched streams if skipWatchedStreams is false
+<span class="cstat-no" title="statement not covered" >          logger.info(`Not filtering watched streams (skipWatchedStreams: ${skipWatched}), using all ${sortedStreams.length} streams`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          combinedStreams = sortedStreams;</span>
+        }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        if (combinedStreams.length &gt; 0) {</span>
+          const [firstStream, ...remainingStreams] = <span class="cstat-no" title="statement not covered" >combinedStreams;</span>
+          
+<span class="cstat-no" title="statement not covered" >          logger.info(</span>
+            `Starting stream ${firstStream.url} on screen ${screen} (Priority: ${firstStream.priority ?? 'none'}) with metadata: ${firstStream.title}, ${firstStream.viewerCount} viewers`,
+            'StreamManager'
+          );
+          
+          // Start first stream with all available metadata
+<span class="cstat-no" title="statement not covered" >          await this.startStream({</span>
+            url: firstStream.url,
+            screen: screen,
+            quality: screenConfig.quality || this.config.player.defaultQuality,
+            windowMaximized: screenConfig.windowMaximized,
+            volume: screenConfig.volume,
+            title: firstStream.title,
+            viewerCount: firstStream.viewerCount,
+            startTime: firstStream.startTime
+          });
+          
+          // Mark the stream as watched
+<span class="cstat-no" title="statement not covered" >          queueService.markStreamAsWatched(firstStream.url);</span>
+&nbsp;
+          // Queue remaining streams, maintaining priority order
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (remainingStreams.length &gt; 0) {</span>
+<span class="cstat-no" title="statement not covered" >            queueService.setQueue(screen, remainingStreams);</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(</span>
+              `Queued ${remainingStreams.length} streams for screen ${screen}. ` +
+              `First in queue: ${remainingStreams[0].url} (Priority: ${remainingStreams[0].priority ?? 'none'})`,
+              'StreamManager'
+            );
+          }
+        } else <span class="cstat-no" title="statement not covered" >if (skipWatched) {</span>
+          // Only clear watched history if skipWatchedStreams is true
+<span class="cstat-no" title="statement not covered" >          logger.info(`No unwatched streams available for screen ${screen}, clearing watched history`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearWatchedStreams(); </span>// Reset watched history to start over with high priority streams
+<span class="cstat-no" title="statement not covered" >          return this.handleEmptyQueue(screen); </span>// Retry with cleared history
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`No streams available for screen ${screen} even with skipWatchedStreams disabled`, 'StreamManager');</span>
+        }
+      } else {
+        // Check if a forced fetch was performed 
+        const wasRefreshForced = <span class="cstat-no" title="statement not covered" >timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || allStreams.length === 0;</span>
+        
+        // If we just did a fresh fetch and found nothing, schedule a retry
+<span class="cstat-no" title="statement not covered" >        if (wasRefreshForced) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`No available streams for screen ${screen} after forced refresh, will retry in ${this.RETRY_INTERVAL}ms`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearQueue(screen);</span>
+          // Schedule a retry after the interval
+<span class="cstat-no" title="statement not covered" >          setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >            <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >              this.queueProcessing.delete(screen); </span>// Remove processing flag before retrying
+<span class="cstat-no" title="statement not covered" >              this.handleEmptyQueue(screen).catch(<span class="fstat-no" title="function not covered" >(e</span>rror: Error | unknown) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                logger.error(</span>
+                  `Failed to retry empty queue for screen ${screen}`,
+                  'StreamManager',
+                  error instanceof Error ? error : new Error(String(error))
+                );
+              });
+            }
+          }, this.RETRY_INTERVAL);
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`No available streams for screen ${screen} in cache, will wait for next refresh interval`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          queueService.clearQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >          this.queueProcessing.delete(screen);</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to handle empty queue for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+    } finally {
+      // Remove processing flag unless we scheduled a retry
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown &amp;&amp; this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        this.queueProcessing.delete(screen);</span>
+      }
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>handleAllStreamsWatched(screen: number) {
+<span class="cstat-no" title="statement not covered" >    logger.info(`All streams watched for screen ${screen}, waiting before refetching...`);</span>
+    
+    // Clear watched history to allow playing again
+<span class="cstat-no" title="statement not covered" >    queueService.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Cleared watched streams history for screen ${screen}`, 'StreamManager');</span>
+    
+    // Check if we should immediately refetch based on time since last refresh
+    const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+    const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+    const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+    
+<span class="cstat-no" title="statement not covered" >    if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+      // If refresh interval has elapsed, fetch new streams
+<span class="cstat-no" title="statement not covered" >      logger.info(`Refresh interval elapsed for screen ${screen}, fetching new streams after all watched`, 'StreamManager');</span>
+      
+      // Wait a bit before refetching to avoid hammering the APIs
+<span class="cstat-no" title="statement not covered" >      await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 5000))</span>; </span>// 5 second delay
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleEmptyQueue(screen);</span>
+      }
+    } else {
+<span class="cstat-no" title="statement not covered" >      logger.info(`Refresh interval not elapsed for screen ${screen}, will wait for next periodic update`, 'StreamManager');</span>
+      // Leave it for the next periodic update to handle
+    }
+  }
+&nbsp;
+  /**
+   * Starts a new stream on the specified screen
+   */
+<span class="fstat-no" title="function not covered" >  async </span>startStream(options: StreamOptions &amp; { url: string }): Promise&lt;StreamResponse&gt; {
+    // Find first available screen
+    let screen = <span class="cstat-no" title="statement not covered" >options.screen;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen) {</span>
+      const activeScreens = <span class="cstat-no" title="statement not covered" >new Set(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >      for (const streamConfig of this.config.player.screens) {</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!activeScreens.has(streamConfig.screen)) {</span>
+<span class="cstat-no" title="statement not covered" >          screen = streamConfig.screen;</span>
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+      }
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screen) {</span>
+<span class="cstat-no" title="statement not covered" >      return {</span>
+        screen: options.screen || 1,
+        message: 'No available screens',
+        success: false
+      };
+    }
+&nbsp;
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      return {</span>
+        screen,
+        message: `Invalid screen number: ${screen}`,
+        success: false
+      };
+    }
+&nbsp;
+    // Try to find stream metadata from our sources
+    let streamMetadata: Partial&lt;StreamSource&gt; = <span class="cstat-no" title="statement not covered" >{};</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Use cached streams if available, otherwise get all live streams
+      const allStreams = <span class="cstat-no" title="statement not covered" >this.cachedStreams.length &gt; 0 &amp;&amp; Date.now() - this.lastStreamFetch &lt; this.STREAM_CACHE_TTL</span>
+        ? this.cachedStreams
+        : await this.getLiveStreams();
+        
+      const matchingStream = <span class="cstat-no" title="statement not covered" >allStreams.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url === options.url)</span>;</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (matchingStream) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Found metadata for stream ${options.url}: ${matchingStream.title}, ${matchingStream.viewerCount} viewers`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        streamMetadata = matchingStream;</span>
+      } else {
+<span class="cstat-no" title="statement not covered" >        logger.info(`No metadata found for stream ${options.url}, using defaults`, 'StreamManager');</span>
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Error fetching stream metadata: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+    }
+&nbsp;
+    // Prepare enhanced options with metadata
+    const enhancedOptions = <span class="cstat-no" title="statement not covered" >{</span>
+      ...options,
+      screen,
+      quality: options.quality || streamConfig.quality,
+      volume: options.volume || streamConfig.volume,
+      windowMaximized: options.windowMaximized ?? streamConfig.windowMaximized,
+      // Use metadata if available, otherwise use provided options or defaults
+      title: options.title || streamMetadata.title,
+      viewerCount: options.viewerCount || streamMetadata.viewerCount,
+      startTime: options.startTime || streamMetadata.startTime || new Date().toLocaleTimeString()
+    };
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Starting stream with enhanced metadata: ${enhancedOptions.title}, ${enhancedOptions.viewerCount} viewers, ${enhancedOptions.startTime}`, 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    return this.playerService.startStream(enhancedOptions);</span>
+  }
+&nbsp;
+  /**
+   * Stops a stream on the specified screen
+   */
+<span class="fstat-no" title="function not covered" >  async </span>stopStream(screen: number, isManualStop: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;boolean&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream) {</span>
+        // If no active stream, emit a basic stopped state
+<span class="cstat-no" title="statement not covered" >        this.emit('streamUpdate', {</span>
+          screen,
+          url: '',
+          quality: '',
+          platform: 'twitch',  // Default platform
+          playerStatus: 'stopped',
+          volume: 0,
+          process: null
+        } as Stream);
+<span class="cstat-no" title="statement not covered" >        return false;</span>
+      }
+&nbsp;
+      // If manual stop, mark the screen as manually closed
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (isManualStop) {</span>
+<span class="cstat-no" title="statement not covered" >        this.manuallyClosedScreens.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} marked as manually closed`, 'StreamManager');</span>
+      }
+&nbsp;
+      // Clear any pending retries
+<span class="cstat-no" title="statement not covered" >      this.streamRetries.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.clearInactiveTimer(screen);</span>
+<span class="cstat-no" title="statement not covered" >      this.clearStreamRefresh(screen);</span>
+&nbsp;
+      // Stop the stream in the player service
+      const result = <span class="cstat-no" title="statement not covered" >await this.playerService.stopStream(screen, isManualStop);</span>
+      
+      // Emit stopped state with stream info
+<span class="cstat-no" title="statement not covered" >      this.emit('streamUpdate', {</span>
+        ...stream,
+        playerStatus: 'stopped',
+        error: undefined,
+        process: null
+      } as Stream);
+&nbsp;
+      // Cleanup IPC/FIFO after process death
+<span class="cstat-no" title="statement not covered" >      setTimeout(<span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+        const fifoPath = <span class="cstat-no" title="statement not covered" >this.fifoPaths.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (fifoPath) {</span>
+<span class="cstat-no" title="statement not covered" >          try { </span>
+<span class="cstat-no" title="statement not covered" >            fs.unlinkSync(fifoPath); </span>
+          } catch {
+            // Ignore error, file may not exist
+<span class="cstat-no" title="statement not covered" >            logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');</span>
+          }
+<span class="cstat-no" title="statement not covered" >          this.fifoPaths.delete(screen);</span>
+        }
+<span class="cstat-no" title="statement not covered" >        this.ipcPaths.delete(screen);</span>
+      }, 200); // Reduced from 2000ms to 500ms
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Stream stopped on screen ${screen}${isManualStop ? ' (manual stop)' : ''}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return result;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to stop stream', 
+        'StreamManager', 
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      return false;</span>
+    }
+  }
+&nbsp;
+  /**
+   * Gets information about all active streams
+   */
+<span class="fstat-no" title="function not covered" >  getActiveStreams(</span>) {
+<span class="cstat-no" title="statement not covered" >    return this.playerService.getActiveStreams();</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  onStreamOutput(</span>callback: (data: StreamOutput) =&gt; void) {
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamOutput(callback);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  onStreamError(</span>callback: (data: StreamError) =&gt; void) {
+<span class="cstat-no" title="statement not covered" >    this.playerService.onStreamError(callback);</span>
+  }
+&nbsp;
+  /**
+   * Gets available organizations
+   */
+<span class="fstat-no" title="function not covered" >  getOrganizations(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return this.config.organizations;</span>
+  }
+&nbsp;
+  /**
+   * Fetches live streams from both Holodex and Twitch based on config
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getLiveStreams(retryCount = <span class="branch-0 cbranch-no" title="branch not covered" >0)</span>: Promise&lt;StreamSource[]&gt; {
+    // Check if we have a recent cache
+    const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.cachedStreams.length &gt; 0 &amp;&amp; now - this.lastStreamFetch &lt; this.STREAM_CACHE_TTL) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Using cached streams (${this.cachedStreams.length} streams, age: ${(now - this.lastStreamFetch) / 1000}s)`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return this.cachedStreams;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Fetching fresh stream data (cache expired or forced refresh)`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      const results: Array&lt;StreamSource &amp; { screen?: number; sourceName?: string; priority?: number }&gt; = <span class="cstat-no" title="statement not covered" >[];</span>
+      const streamConfigs = <span class="cstat-no" title="statement not covered" >this.config.streams;</span>
+      
+<span class="cstat-no" title="statement not covered" >      for (const streamConfig of streamConfigs) {</span>
+        const screenNumber = <span class="cstat-no" title="statement not covered" >streamConfig.screen;</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.debug('Screen %s is disabled, skipping', String(screenNumber));</span>
+<span class="cstat-no" title="statement not covered" >          continue;</span>
+        }
+&nbsp;
+        // Sort sources by priority first
+        const sortedSources = <span class="cstat-no" title="statement not covered" >streamConfig.sources &amp;&amp; Array.isArray(streamConfig.sources) </span>
+          ? [...streamConfig.sources]
+              .filter(<span class="fstat-no" title="function not covered" >source </span>=&gt; <span class="cstat-no" title="statement not covered" >source.enabled)</span>
+              .sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(a.priority || 999) - (b.priority || 999))</span>
+          : [];
+&nbsp;
+<span class="cstat-no" title="statement not covered" >        logger.debug(</span>
+          'Sources for screen %s: %s',
+          String(screenNumber),
+          sortedSources.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >`${s.type}:${s.subtype || 'other'} (${s.priority || 999})`)</span>.join(', ')
+        );
+        
+<span class="cstat-no" title="statement not covered" >        for (const source of sortedSources) {</span>
+          const limit = <span class="cstat-no" title="statement not covered" >source.limit || 25;</span>
+          let streams: StreamSource[] = <span class="cstat-no" title="statement not covered" >[];</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >          try {</span>
+<span class="cstat-no" title="statement not covered" >            if (source.type === 'holodex') {</span>
+<span class="cstat-no" title="statement not covered" >              if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.holodexService.getLiveStreams({</span>
+                  channels: this.favoriteChannels.holodex,
+                  limit: limit,
+                  sort: 'start_scheduled'  // Sort by scheduled start time
+                });
+<span class="cstat-no" title="statement not covered" >                logger.debug(</span>
+                  'Fetched %s favorite Holodex streams for screen %s',
+                  String(streams.length),
+                  String(screenNumber)
+                );
+                
+                // For favorites, assign a higher priority based on source priority
+                // This ensures favorites are always prioritized over other sources
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.subtype === 'organization' &amp;&amp; source.name) {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.holodexService.getLiveStreams({</span>
+                  organization: source.name,
+                  limit: limit,
+                  sort: 'start_scheduled'  // Sort by scheduled start time
+                });
+              }
+            } else <span class="cstat-no" title="statement not covered" >if (source.type === 'twitch') {</span>
+<span class="cstat-no" title="statement not covered" >              if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.twitchService.getStreams({</span>
+                  channels: this.favoriteChannels.twitch,
+                  limit: limit
+                });
+                
+                // For favorites, assign a higher priority based on source priority
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.tags?.includes('vtuber')) {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.twitchService.getVTuberStreams(limit);</span>
+                // Sort VTuber streams by viewer count
+<span class="cstat-no" title="statement not covered" >                streams.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(b.viewerCount || 0) - (a.viewerCount || 0))</span>;</span>
+              }
+            } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (source.type === 'youtube') {</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (source.subtype === 'favorites') {</span>
+<span class="cstat-no" title="statement not covered" >                streams = await this.youtubeService.getLiveStreams({</span>
+                  channels: this.favoriteChannels.youtube,
+                  limit
+                });
+                
+                // For favorites, assign a higher priority based on source priority
+                const basePriority = <span class="cstat-no" title="statement not covered" >source.priority || 999;</span>
+<span class="cstat-no" title="statement not covered" >                streams.forEach(<span class="fstat-no" title="function not covered" >s </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >                  s.priority = basePriority - 100; </span>// Make favorites 100 points higher priority
+                });
+              }
+            }
+            
+            // Add source metadata to each stream
+            const streamsWithMetadata = <span class="cstat-no" title="statement not covered" >streams.map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+              ...stream,
+              screen: screenNumber,
+              sourceName: `${source.type}:${source.subtype || 'other'}`,
+              // Only set priority if not already set (favorites already have priority)
+              priority: stream.priority !== undefined ? stream.priority : source.priority || 999
+            }));
+&nbsp;
+<span class="cstat-no" title="statement not covered" >            results.push(...streamsWithMetadata);</span>
+          } catch (error) {
+<span class="cstat-no" title="statement not covered" >            logger.error(</span>
+              `Failed to fetch streams for ${source.type}:${source.subtype || 'other'}`,
+              'StreamManager',
+              error instanceof Error ? error : new Error(String(error))
+            );
+<span class="cstat-no" title="statement not covered" >            continue;</span>
+          }
+        }
+      }
+      // Final sorting of all streams
+      const sortedResults = <span class="cstat-no" title="statement not covered" >results</span>
+      .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.sourceStatus === "live")</span>
+      .sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >(a.priority || 999) - (b.priority || 999))</span>;
+&nbsp;
+      // Update cache
+<span class="cstat-no" title="statement not covered" >      this.cachedStreams = sortedResults;</span>
+<span class="cstat-no" title="statement not covered" >      this.lastStreamFetch = now;</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      return sortedResults;</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Failed to fetch live streams',
+        'StreamManager', 
+        error instanceof Error ? error : new Error(String(error))
+      );
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (retryCount &lt; 3) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Retrying getLiveStreams (attempt ${retryCount + 1})`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, this.RETRY_INTERVAL))</span>;</span>
+<span class="cstat-no" title="statement not covered" >        return this.getLiveStreams(retryCount + 1);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      return [];</span>
+    }
+  }
+&nbsp;
+  /**
+   * Gets VTuber streams from Twitch
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getVTuberStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getVTuberStreams(limit);</span>
+  }
+&nbsp;
+  /**
+   * Gets Japanese language streams
+   */
+<span class="fstat-no" title="function not covered" >  async </span>getJapaneseStreams(limit = <span class="branch-0 cbranch-no" title="branch not covered" >50)</span>: Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getJapaneseStreams(limit);</span>
+  }
+&nbsp;
+  /**
+   * Sets up user authentication for Twitch
+   */
+<span class="fstat-no" title="function not covered" >  async </span>setTwitchUserAuth(auth: TwitchAuth): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    await this.twitchService.setUserAuth(auth);</span>
+  }
+&nbsp;
+  /**
+   * Gets streams from user's followed channels
+   */   
+<span class="fstat-no" title="function not covered" >  async </span>getFollowedStreams(userId: string): Promise&lt;StreamSource[]&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.twitchService.getFollowedStreams(userId);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>autoStartStreams() {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) <span class="cstat-no" title="statement not covered" >return;</span></span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info('Auto-starting streams...', 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Get all enabled screens with autoStart enabled from streams config
+      const autoStartScreens = <span class="cstat-no" title="statement not covered" >this.config.streams</span>
+        .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled &amp;&amp; stream.autoStart)</span>
+        .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+      
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (autoStartScreens.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info('No screens configured for auto-start', 'StreamManager');</span>
+        
+        // Even if no auto-start screens, ensure players are running if force_player is enabled
+<span class="cstat-no" title="statement not covered" >        await this.playerService.ensurePlayersRunning();</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      logger.info(`Auto-starting streams for screens: ${autoStartScreens.join(', ')}`, 'StreamManager');</span>
+      
+      // Reset the last refresh times for all screens to ensure a fresh start
+<span class="cstat-no" title="statement not covered" >      autoStartScreens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+        // Set last refresh to 0 to force initial refresh
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, 0);</span>
+      });
+      
+      // Auto-start streams for each screen
+<span class="cstat-no" title="statement not covered" >      for (const screen of autoStartScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screen);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      logger.info('Auto-start complete', 'StreamManager');</span>
+      
+      // Ensure players are running for all enabled screens if force_player is enabled
+<span class="cstat-no" title="statement not covered" >      await this.playerService.ensurePlayersRunning();</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(`Error during auto-start: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>disableScreen(screen: number): Promise&lt;void&gt; {
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid screen number: ${screen}`);</span>
+    }
+    
+    // Notify the PlayerService first that the screen is disabled
+    // This ensures any new attempts to start streams will be blocked
+<span class="cstat-no" title="statement not covered" >    this.playerService.disableScreen(screen);</span>
+    
+    // Stop any active streams with up to 3 attempts
+<span class="cstat-no" title="statement not covered" >    for (let attempt = <span class="cstat-no" title="statement not covered" >0;</span> attempt &lt; 3; attempt++) {</span>
+      const result = <span class="cstat-no" title="statement not covered" >await this.stopStream(screen, true);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (result) {</span>
+<span class="cstat-no" title="statement not covered" >        break;</span>
+      }
+      // If stopping failed, wait a bit and try again
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (attempt &lt; 2) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.warn(`Failed to stop stream on screen ${screen}, attempt ${attempt + 1}, retrying...`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >        await new Promise(<span class="fstat-no" title="function not covered" >resolve </span>=&gt; <span class="cstat-no" title="statement not covered" >setTimeout(resolve, 500))</span>;</span>
+      }
+    }
+    
+    // Force kill the stream process if it exists
+    const stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (stream &amp;&amp; stream.process) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Forcibly killing stream process for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        stream.process.kill('SIGKILL');</span>
+      } catch (e) {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Failed to kill stream process: ${e}`, 'StreamManager');</span>
+      }
+    }
+    
+    // Force clean up any remaining streams on this screen
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.streams.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`Stream on screen ${screen} could not be stopped properly, forcing cleanup`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      this.streams.delete(screen);</span>
+    }
+    
+    // Disable the screen in config
+<span class="cstat-no" title="statement not covered" >    streamConfig.enabled = false;</span>
+    
+    // Also make sure PlayerService has cleaned up its stream data
+    const activeStreams = <span class="cstat-no" title="statement not covered" >this.playerService.getActiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (activeStreams.some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`PlayerService still has active stream for screen ${screen}, forcing cleanup`, 'StreamManager');</span>
+      // Send a direct command to clean up
+<span class="cstat-no" title="statement not covered" >      try {</span>
+<span class="cstat-no" title="statement not covered" >        await this.playerService.stopStream(screen, true);</span>
+      } catch (e) {
+<span class="cstat-no" title="statement not covered" >        logger.error(`Failed final PlayerService cleanup: ${e}`, 'StreamManager');</span>
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Screen ${screen} disabled`, 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>enableScreen(screen: number): Promise&lt;void&gt; {
+    const streamConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!streamConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid screen number: ${screen}`);</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    streamConfig.enabled = true;</span>
+    
+    // Notify the PlayerService that the screen is enabled
+<span class="cstat-no" title="statement not covered" >    this.playerService.enableScreen(screen);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Screen ${screen} enabled`, 'StreamManager');</span>
+    
+    // Start streams if auto-start is enabled
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.config.player.autoStart) {</span>
+<span class="cstat-no" title="statement not covered" >      await this.handleEmptyQueue(screen);</span>
+    }
+  }
+&nbsp;
+  /**
+   * Handles empty queue by fetching and starting new streams
+   */
+  public <span class="fstat-no" title="function not covered" >async </span>handleQueueEmpty(screen: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    return this.handleEmptyQueue(screen);</span>
+  }
+&nbsp;
+  /**
+   * Restarts streams on specified screen or all screens
+   */
+  public <span class="fstat-no" title="function not covered" >async </span>restartStreams(screen?: number): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    if (screen) {</span>
+      // Restart specific screen
+<span class="cstat-no" title="statement not covered" >      await this.stopStream(screen, false);</span>
+<span class="cstat-no" title="statement not covered" >      await this.handleQueueEmpty(screen);</span>
+    } else {
+      // Restart all screens
+      const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+<span class="cstat-no" title="statement not covered" >      for (const screenId of activeScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        await this.stopStream(screenId, false);</span>
+<span class="cstat-no" title="statement not covered" >        await this.handleQueueEmpty(screenId);</span>
+      }
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (sourceIndex &lt; 0 || sourceIndex &gt;= queue.length || </span>
+        targetIndex &lt; 0 || targetIndex &gt;= queue.length) {
+<span class="cstat-no" title="statement not covered" >      throw new Error('Invalid source or target index');</span>
+    }
+&nbsp;
+    // Reorder the queue
+    const [item] = <span class="cstat-no" title="statement not covered" >queue.splice(sourceIndex, 1);</span>
+<span class="cstat-no" title="statement not covered" >    queue.splice(targetIndex, 0, item);</span>
+<span class="cstat-no" title="statement not covered" >    queueService.setQueue(screen, queue);</span>
+    
+<span class="cstat-no" title="statement not covered" >    logger.info(`Reordered queue for screen ${screen}: moved item from ${sourceIndex} to ${targetIndex}`, 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  getQueueForScreen(</span>screen: number): StreamSource[] {
+<span class="cstat-no" title="statement not covered" >    return queueService.getQueue(screen);</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>setPlayerPriority(priority: string): Promise&lt;void&gt; {
+    // Validate priority
+    const validPriorities = <span class="cstat-no" title="statement not covered" >['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!validPriorities.includes(priority.toLowerCase())) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Invalid priority: ${priority}. Valid values are: ${validPriorities.join(', ')}`);</span>
+    }
+&nbsp;
+    // Update config
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.config.mpv) {</span>
+<span class="cstat-no" title="statement not covered" >      this.config.mpv = {};</span>
+    }
+<span class="cstat-no" title="statement not covered" >    this.config.mpv.priority = priority;</span>
+&nbsp;
+    // Restart all streams to apply new priority
+<span class="cstat-no" title="statement not covered" >    logger.info(`Setting player priority to ${priority}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >    await this.restartStreams();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >markStreamAsWatched(</span>url: string): void {
+<span class="cstat-no" title="statement not covered" >    queueService.markStreamAsWatched(url);</span>
+<span class="cstat-no" title="statement not covered" >    logger.info(`Stream marked as watched: ${url}`, 'StreamManager');</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getWatchedStreams(</span>): string[] {
+<span class="cstat-no" title="statement not covered" >    return queueService.getWatchedStreams();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >clearWatchedStreams(</span>): void {
+<span class="cstat-no" title="statement not covered" >    queueService.clearWatchedStreams();</span>
+<span class="cstat-no" title="statement not covered" >    logger.info('Cleared watched streams history', 'StreamManager');</span>
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  async </span>cleanup() {
+<span class="cstat-no" title="statement not covered" >    this.isShuttingDown = true;</span>
+    
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Stop all keyboard listeners
+<span class="cstat-no" title="statement not covered" >      this.keyboardService.cleanup();</span>
+&nbsp;
+      // Get all active screens
+      const activeScreens = <span class="cstat-no" title="statement not covered" >Array.from(this.streams.keys());</span>
+      
+      // Stop all streams
+      const stopPromises = <span class="cstat-no" title="statement not covered" >activeScreens.map(<span class="fstat-no" title="function not covered" >screen </span>=&gt; </span>
+<span class="cstat-no" title="statement not covered" >        this.stopStream(screen, true).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to stop stream on screen ${screen} during cleanup`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        })
+      );
+&nbsp;
+      // Wait for all streams to stop
+<span class="cstat-no" title="statement not covered" >      await Promise.all(stopPromises);</span>
+&nbsp;
+      // Clear all timers
+<span class="cstat-no" title="statement not covered" >      for (const screen of this.streamRefreshTimers.keys()) {</span>
+<span class="cstat-no" title="statement not covered" >        this.clearStreamRefresh(screen);</span>
+      }
+      
+<span class="cstat-no" title="statement not covered" >      for (const screen of this.inactiveTimers.keys()) {</span>
+<span class="cstat-no" title="statement not covered" >        this.clearInactiveTimer(screen);</span>
+      }
+&nbsp;
+      // Clear all queues
+<span class="cstat-no" title="statement not covered" >      this.queues.clear();</span>
+      
+      // Remove all FIFO files
+<span class="cstat-no" title="statement not covered" >      for (const [, fifoPath] of this.fifoPaths) {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+<span class="cstat-no" title="statement not covered" >          fs.unlinkSync(fifoPath);</span>
+        } catch {
+          // Ignore errors, file might not exist
+<span class="cstat-no" title="statement not covered" >          logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');</span>
+        }
+      }
+<span class="cstat-no" title="statement not covered" >      this.fifoPaths.clear();</span>
+<span class="cstat-no" title="statement not covered" >      this.ipcPaths.clear();</span>
+&nbsp;
+      // Clear all event listeners
+<span class="cstat-no" title="statement not covered" >      this.removeAllListeners();</span>
+      
+<span class="cstat-no" title="statement not covered" >      logger.info('Stream manager cleanup complete', 'StreamManager');</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Error during stream manager cleanup',
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >sendCommandToScreen(</span>screen: number, command: string): void {
+<span class="cstat-no" title="statement not covered" >    this.playerService.sendCommandToScreen(screen, command);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >sendCommandToAll(</span>command: string): void {
+<span class="cstat-no" title="statement not covered" >    this.playerService.sendCommandToAll(command);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>addToQueue(screen: number, source: StreamSource): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    queue.push(source);</span>
+<span class="cstat-no" title="statement not covered" >    this.queues.set(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('queueUpdate', screen, queue);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>removeFromQueue(screen: number, index: number): Promise&lt;void&gt; {
+    const queue = <span class="cstat-no" title="statement not covered" >this.queues.get(screen) || [];</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (index &gt;= 0 &amp;&amp; index &lt; queue.length) {</span>
+<span class="cstat-no" title="statement not covered" >      queue.splice(index, 1);</span>
+<span class="cstat-no" title="statement not covered" >      this.queues.set(screen, queue);</span>
+<span class="cstat-no" title="statement not covered" >      this.emit('queueUpdate', screen, queue);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getPlayerSettings(</span>) {
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      preferStreamlink: this.config.player.preferStreamlink,
+      defaultQuality: this.config.player.defaultQuality,
+      defaultVolume: this.config.player.defaultVolume,
+      windowMaximized: this.config.player.windowMaximized,
+      maxStreams: this.config.player.maxStreams,
+      autoStart: this.config.player.autoStart
+    };
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updatePlayerSettings(settings: Partial&lt;PlayerSettings&gt;): Promise&lt;void&gt; {
+    // Update the settings
+<span class="cstat-no" title="statement not covered" >    Object.assign(this.config.player, settings);</span>
+    
+    // If force_player was enabled, ensure players are running
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (settings.force_player === true) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Force player enabled, ensuring all enabled screens have players running', 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      await this.playerService.ensurePlayersRunning();</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('settingsUpdate', this.config.player);</span>
+<span class="cstat-no" title="statement not covered" >    await this.saveConfig();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getScreenConfigs(</span>) {
+<span class="cstat-no" title="statement not covered" >    return this.config.player.screens;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>saveConfig(): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      await fs.promises.writeFile(</span>
+        path.join(process.cwd(), 'config', 'config.json'),
+        JSON.stringify(this.config, null, 2),
+        'utf-8'
+      );
+<span class="cstat-no" title="statement not covered" >      this.emit('configUpdate', this.config);</span>
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      this.emit('error', error);</span>
+<span class="cstat-no" title="statement not covered" >      throw error;</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getScreenConfig(</span>screen: number): StreamConfig | undefined {
+<span class="cstat-no" title="statement not covered" >    return this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >updateScreenConfig(</span>screen: number, config: Partial&lt;StreamConfig&gt;): void {
+    const screenConfig = <span class="cstat-no" title="statement not covered" >this.getScreenConfig(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Screen ${screen} not found`);</span>
+    }
+    
+    // Update the config
+<span class="cstat-no" title="statement not covered" >    Object.assign(screenConfig, config);</span>
+    
+    // If enabling a screen and force_player is set, ensure player is running
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (config.enabled === true &amp;&amp; this.config.player.force_player) {</span>
+      const isPlayerRunning = <span class="cstat-no" title="statement not covered" >this.playerService.getActiveStreams().some(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!isPlayerRunning &amp;&amp; !this.manuallyClosedScreens.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screen} enabled with force_player active, starting player`, 'StreamManager');</span>
+        // Start player with blank page
+<span class="cstat-no" title="statement not covered" >        this.playerService.startStream({</span>
+          url: 'about:blank',
+          screen,
+          quality: screenConfig.quality || this.config.player.defaultQuality,
+          volume: screenConfig.volume !== undefined ? screenConfig.volume : this.config.player.defaultVolume,
+          windowMaximized: screenConfig.windowMaximized !== undefined ? screenConfig.windowMaximized : this.config.player.windowMaximized
+        }).catch(<span class="fstat-no" title="function not covered" >error </span>=&gt; {
+<span class="cstat-no" title="statement not covered" >          logger.error(`Failed to start player for screen ${screen}: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');</span>
+        });
+      }
+    }
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('screenUpdate', screen, screenConfig);</span>
+<span class="cstat-no" title="statement not covered" >    this.saveConfig();</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getConfig(</span>) {
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      streams: this.config.player.screens,
+      organizations: this.config.organizations,
+      favoriteChannels: this.config.favoriteChannels,
+      holodex: {
+        apiKey: this.config.holodex.apiKey
+      },
+      twitch: {
+        clientId: this.config.twitch.clientId,
+        clientSecret: this.config.twitch.clientSecret,
+        streamersFile: this.config.twitch.streamersFile
+      }
+    };
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updateConfig(newConfig: Partial&lt;Config&gt;): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    Object.assign(this.config, newConfig);</span>
+<span class="cstat-no" title="statement not covered" >    await this.saveConfig();</span>
+<span class="cstat-no" title="statement not covered" >    this.emit('configUpdate', this.getConfig());</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>updateFavorites(favorites: FavoriteChannels): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    this.favoriteChannels = favorites;</span>
+<span class="cstat-no" title="statement not covered" >    this.config.favoriteChannels = favorites;</span>
+    
+    // Update services with new favorites
+<span class="cstat-no" title="statement not covered" >    this.holodexService.updateFavorites(favorites.holodex);</span>
+<span class="cstat-no" title="statement not covered" >    this.twitchService.updateFavorites(favorites.twitch);</span>
+<span class="cstat-no" title="statement not covered" >    this.youtubeService.updateFavorites(favorites.youtube);</span>
+    
+<span class="cstat-no" title="statement not covered" >    await fs.promises.writeFile(</span>
+      path.join(process.cwd(), 'config', 'favorites.json'),
+      JSON.stringify(favorites, null, 2),
+      'utf-8'
+    );
+    
+<span class="cstat-no" title="statement not covered" >    this.emit('favoritesUpdate', favorites);</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >getFavorites(</span>): FavoriteChannels {
+<span class="cstat-no" title="statement not covered" >    return this.favoriteChannels;</span>
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>addFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.favoriteChannels[platform]) {</span>
+<span class="cstat-no" title="statement not covered" >      this.favoriteChannels[platform] = [];</span>
+    }
+    
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.favoriteChannels[platform].includes(channelId)) {</span>
+<span class="cstat-no" title="statement not covered" >      this.favoriteChannels[platform].push(channelId);</span>
+<span class="cstat-no" title="statement not covered" >      await this.updateFavorites(this.favoriteChannels);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >async </span>removeFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string): Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.favoriteChannels[platform]) {</span>
+      const index = <span class="cstat-no" title="statement not covered" >this.favoriteChannels[platform].indexOf(channelId);</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (index !== -1) {</span>
+<span class="cstat-no" title="statement not covered" >        this.favoriteChannels[platform].splice(index, 1);</span>
+<span class="cstat-no" title="statement not covered" >        await this.updateFavorites(this.favoriteChannels);</span>
+      }
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >initializeQueues(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.config.player.screens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.queues.set(screen.screen, []);</span>
+    });
+  }
+&nbsp;
+  /**
+   * Get comprehensive information about a screen, including:
+   * - Current stream
+   * - Queue
+   * - Configuration
+   * - Status
+   */
+  public <span class="fstat-no" title="function not covered" >getScreenInfo(</span>screen: number) {
+    // Get screen configuration
+    const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >      throw new Error(`Screen ${screen} not found`);</span>
+    }
+&nbsp;
+    // Get active stream for this screen
+    const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+&nbsp;
+    // Get queue for this screen
+    const queue = <span class="cstat-no" title="statement not covered" >this.getQueueForScreen(screen);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    return {</span>
+      config: screenConfig,
+      currentStream: activeStream || null,
+      queue,
+      enabled: screenConfig.enabled,
+      status: activeStream?.status || 'stopped',
+      // Additional useful information
+      volume: screenConfig.volume,
+      quality: screenConfig.quality,
+      windowMaximized: screenConfig.windowMaximized,
+      dimensions: {
+        width: screenConfig.width,
+        height: screenConfig.height,
+        x: screenConfig.x,
+        y: screenConfig.y
+      }
+    };
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >clearInactiveTimer(</span>screen: number) {
+    const timer = <span class="cstat-no" title="statement not covered" >this.inactiveTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >      clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >      this.inactiveTimers.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >clearStreamRefresh(</span>screen: number) {
+    const timer = <span class="cstat-no" title="statement not covered" >this.streamRefreshTimers.get(screen);</span>
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (timer) {</span>
+<span class="cstat-no" title="statement not covered" >      clearTimeout(timer);</span>
+<span class="cstat-no" title="statement not covered" >      this.streamRefreshTimers.delete(screen);</span>
+    }
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >async </span>startQueueUpdates() {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.updateInterval) {</span>
+<span class="cstat-no" title="statement not covered" >      return; </span>// Already running
+    }
+&nbsp;
+    const updateQueues = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >        return;</span>
+      }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      logger.info('Updating stream queues...', 'StreamManager');</span>
+      
+      // Get all enabled screens
+      const enabledScreens = <span class="cstat-no" title="statement not covered" >this.config.streams</span>
+        .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled)</span>
+        .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+&nbsp;
+      // Update queues for each screen
+<span class="cstat-no" title="statement not covered" >      for (const screen of enabledScreens) {</span>
+<span class="cstat-no" title="statement not covered" >        try {</span>
+          // Skip screens that are already being processed
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >            logger.info(`Skipping queue update for screen ${screen} - queue is being processed`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >            continue;</span>
+          }
+&nbsp;
+          // Check if there's an active stream on this screen
+          const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+          
+<span class="cstat-no" title="statement not covered" >          if (!activeStream) {</span>
+            // If no active stream and screen isn't manually closed, try to start a new one
+<span class="cstat-no" title="statement not covered" >            if (!this.manuallyClosedScreens.has(screen)) {</span>
+              const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+              const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+              const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+              
+              // Only attempt to start new streams if it's been long enough since last refresh
+<span class="cstat-no" title="statement not covered" >              if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`No active stream on screen ${screen} and refresh interval elapsed, fetching new streams`, 'StreamManager');</span>
+                // Mark as processing to prevent concurrent queue processing
+<span class="cstat-no" title="statement not covered" >                this.queueProcessing.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >                try {</span>
+<span class="cstat-no" title="statement not covered" >                  await this.handleEmptyQueue(screen);</span>
+                } finally {
+<span class="cstat-no" title="statement not covered" >                  this.queueProcessing.delete(screen);</span>
+                }
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No active stream on screen ${screen}, but refresh interval not elapsed. Skipping refresh.`, 'StreamManager');</span>
+              }
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`Screen ${screen} was manually closed, not starting new streams`, 'StreamManager');</span>
+            }
+          } else {
+            // If there's an active stream, just update the queue without starting new stream
+<span class="cstat-no" title="statement not covered" >            logger.info(`Active stream on screen ${screen}, updating queue only`, 'StreamManager');</span>
+            
+            // Only fetch new streams if the refresh interval has elapsed
+            const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+            const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+            const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+            
+            let streams = <span class="cstat-no" title="statement not covered" >this.cachedStreams;</span>
+<span class="cstat-no" title="statement not covered" >            if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL || streams.length === 0) {</span>
+<span class="cstat-no" title="statement not covered" >              logger.info(`Refresh interval elapsed for screen ${screen}, fetching new streams for queue update`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >              streams = await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >              this.lastStreamRefresh.set(screen, now);</span>
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`Using cached streams for queue update on screen ${screen} (last refresh: ${timeSinceLastRefresh}ms ago)`, 'StreamManager');</span>
+            }
+            
+            const availableStreams = <span class="cstat-no" title="statement not covered" >streams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+            
+<span class="cstat-no" title="statement not covered" >            <span class="missing-if-branch" title="if path not taken" >I</span>if (availableStreams.length &gt; 0) {</span>
+              // Get existing queue
+              const existingQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+              
+              // Combine existing queue URLs with available streams
+              const existingUrls = <span class="cstat-no" title="statement not covered" >new Set(existingQueue.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url)</span>);</span>
+              
+              // Add new streams that aren't in the existing queue
+              const newStreams = <span class="cstat-no" title="statement not covered" >availableStreams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >!existingUrls.has(s.url))</span>;</span>
+              
+<span class="cstat-no" title="statement not covered" >              if (newStreams.length &gt; 0) {</span>
+                // Filter unwatched from new streams only
+                const unwatchedNewStreams = <span class="cstat-no" title="statement not covered" >queueService.filterUnwatchedStreams(newStreams);</span>
+                
+<span class="cstat-no" title="statement not covered" >                if (unwatchedNewStreams.length &gt; 0) {</span>
+                  // Add unwatched new streams to end of existing queue
+                  const updatedQueue = <span class="cstat-no" title="statement not covered" >[...existingQueue, ...unwatchedNewStreams];</span>
+<span class="cstat-no" title="statement not covered" >                  queueService.setQueue(screen, updatedQueue);</span>
+<span class="cstat-no" title="statement not covered" >                  logger.info(</span>
+                    `Updated queue for screen ${screen} with ${unwatchedNewStreams.length} new streams. Total queue size: ${updatedQueue.length}`,
+                    'StreamManager'
+                  );
+                } else {
+<span class="cstat-no" title="statement not covered" >                  logger.info(`No new unwatched streams for screen ${screen}`, 'StreamManager');</span>
+                }
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No new streams available for screen ${screen}`, 'StreamManager');</span>
+              }
+            }
+          }
+        } catch (error) {
+<span class="cstat-no" title="statement not covered" >          logger.error(</span>
+            `Failed to update queue for screen ${screen}`,
+            'StreamManager',
+            error instanceof Error ? error : new Error(String(error))
+          );
+        }
+      }
+    };
+&nbsp;
+    // Initial update
+<span class="cstat-no" title="statement not covered" >    await updateQueues();</span>
+&nbsp;
+    // Set up interval for periodic updates
+<span class="cstat-no" title="statement not covered" >    this.updateInterval = setInterval(<span class="fstat-no" title="function not covered" >async </span>() =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      await updateQueues();</span>
+    }, this.QUEUE_UPDATE_INTERVAL);
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`Queue updates started with ${this.QUEUE_UPDATE_INTERVAL / 60000} minute interval`, 'StreamManager');</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >stopQueueUpdates(</span>) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.updateInterval) {</span>
+<span class="cstat-no" title="statement not covered" >      clearInterval(this.updateInterval);</span>
+<span class="cstat-no" title="statement not covered" >      this.updateInterval = null;</span>
+<span class="cstat-no" title="statement not covered" >      logger.info('Queue updates stopped', 'StreamManager');</span>
+    }
+  }
+&nbsp;
+<span class="fstat-no" title="function not covered" >  handleLuaMessage(</span>screen: number, type: string, data: unknown) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (typeof data === 'object' &amp;&amp; data !== null) {</span>
+<span class="cstat-no" title="statement not covered" >      this.playerService.handleLuaMessage(screen, type, data as Record&lt;string, unknown&gt;);</span>
+    }
+  }
+&nbsp;
+  public <span class="fstat-no" title="function not covered" >handlePlaylistUpdate(</span>screen: number, playlist: Array&lt;{ filename: string; title?: string; current: boolean; }&gt;): void {
+    // Get or create stream instance
+    let stream = <span class="cstat-no" title="statement not covered" >this.streams.get(screen);</span>
+    
+    // If no stream exists but we have playlist data, create a new stream instance
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream &amp;&amp; playlist.length &gt; 0) {</span>
+      const currentItem = <span class="cstat-no" title="statement not covered" >playlist.find(<span class="fstat-no" title="function not covered" >item </span>=&gt; <span class="cstat-no" title="statement not covered" >item.current)</span>;</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (currentItem) {</span>
+        // Get screen configuration
+        const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >        <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.warn(`No screen configuration found for screen ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          return;</span>
+        }
+&nbsp;
+        // Create new stream instance
+<span class="cstat-no" title="statement not covered" >        stream = {</span>
+          id: Date.now(),
+          screen,
+          url: currentItem.filename,
+          title: currentItem.title,
+          quality: screenConfig.quality || this.config.player.defaultQuality,
+          status: 'playing',
+          platform: currentItem.filename.includes('youtube.com') ? 'youtube' : 'twitch',
+          volume: screenConfig.volume || this.config.player.defaultVolume,
+          process: null // Process will be attached when available
+        };
+<span class="cstat-no" title="statement not covered" >        this.streams.set(screen, stream);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Created new stream instance for screen ${screen}`, 'StreamManager');</span>
+      }
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!stream) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.warn(`No active stream found for screen ${screen} during playlist update`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Update the stream's playlist
+<span class="cstat-no" title="statement not covered" >    stream.playlist = playlist.map(<span class="fstat-no" title="function not covered" >item </span>=&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
+      id: Date.now(),
+      screen,
+      url: item.filename,
+      title: item.title,
+      quality: stream.quality,
+      status: item.current ? 'playing' : 'stopped',
+      platform: item.filename.includes('youtube.com') ? 'youtube' : 'twitch',
+      volume: stream.volume,
+      process: item.current ? stream.process : null
+    }));
+&nbsp;
+    // Log the update
+<span class="cstat-no" title="statement not covered" >    logger.debug(</span>
+      `Updated playlist for screen ${screen} with ${playlist.length} items`,
+      'StreamManager'
+    );
+&nbsp;
+    // Emit playlist update event
+<span class="cstat-no" title="statement not covered" >    this.emit('playlistUpdate', screen, stream.playlist);</span>
+  }
+&nbsp;
+  /**
+   * Gets a list of all enabled screens
+   */
+<span class="fstat-no" title="function not covered" >  getEnabledScreens(</span>): number[] {
+    // Get all enabled screens from the config
+<span class="cstat-no" title="statement not covered" >    return this.config.streams</span>
+      .filter(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.enabled)</span>
+      .map(<span class="fstat-no" title="function not covered" >stream </span>=&gt; <span class="cstat-no" title="statement not covered" >stream.screen)</span>;
+  }
+&nbsp;
+  /**
+   * Resets the refresh timestamps for specified screens
+   * @param screens Array of screen numbers to reset
+   */
+<span class="fstat-no" title="function not covered" >  resetRefreshTimestamps(</span>screens: number[]): void {
+<span class="cstat-no" title="statement not covered" >    logger.info(`Resetting refresh timestamps for screens: ${screens.join(', ')}`, 'StreamManager');</span>
+    
+<span class="cstat-no" title="statement not covered" >    screens.forEach(<span class="fstat-no" title="function not covered" >screen </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.lastStreamRefresh.set(screen, 0);</span>
+    });
+  }
+&nbsp;
+  /**
+   * Updates the queue for a specific screen, optionally forcing a refresh
+   * @param screen Screen number
+   * @param forceRefresh Whether to force a refresh regardless of time elapsed
+   */
+<span class="fstat-no" title="function not covered" >  async </span>updateQueue(screen: number, forceRefresh = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+    // Skip screens that are already being processed
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.queueProcessing.has(screen)) {</span>
+<span class="cstat-no" title="statement not covered" >      logger.info(`Skipping queue update for screen ${screen} - queue is being processed`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    try {</span>
+      // Check if there's an active stream on this screen
+      const activeStream = <span class="cstat-no" title="statement not covered" >this.getActiveStreams().find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+      
+<span class="cstat-no" title="statement not covered" >      if (forceRefresh) {</span>
+        // Force refresh - set last refresh to 0 to ensure new data is fetched
+<span class="cstat-no" title="statement not covered" >        this.lastStreamRefresh.set(screen, 0);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Forcing refresh for screen ${screen}`, 'StreamManager');</span>
+        
+        // If no active stream and not manually closed, try to start a new one
+<span class="cstat-no" title="statement not covered" >        if (!activeStream &amp;&amp; !this.manuallyClosedScreens.has(screen)) {</span>
+          // Mark as processing to prevent concurrent queue processing
+<span class="cstat-no" title="statement not covered" >          this.queueProcessing.add(screen);</span>
+<span class="cstat-no" title="statement not covered" >          try {</span>
+<span class="cstat-no" title="statement not covered" >            await this.handleEmptyQueue(screen);</span>
+          } finally {
+<span class="cstat-no" title="statement not covered" >            this.queueProcessing.delete(screen);</span>
+          }
+        } else <span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (activeStream) {</span>
+          // If active stream, just update the queue
+<span class="cstat-no" title="statement not covered" >          logger.info(`Active stream on screen ${screen}, updating queue only`, 'StreamManager');</span>
+          
+          // Fetch fresh streams
+          const streams = <span class="cstat-no" title="statement not covered" >await this.getLiveStreams();</span>
+<span class="cstat-no" title="statement not covered" >          this.lastStreamRefresh.set(screen, Date.now());</span>
+          
+          const availableStreams = <span class="cstat-no" title="statement not covered" >streams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+          
+<span class="cstat-no" title="statement not covered" >          <span class="missing-if-branch" title="if path not taken" >I</span>if (availableStreams.length &gt; 0) {</span>
+            // Get existing queue
+            const existingQueue = <span class="cstat-no" title="statement not covered" >queueService.getQueue(screen);</span>
+            
+            // Combine existing queue URLs with available streams
+            const existingUrls = <span class="cstat-no" title="statement not covered" >new Set(existingQueue.map(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.url)</span>);</span>
+            
+            // Add new streams that aren't in the existing queue
+            const newStreams = <span class="cstat-no" title="statement not covered" >availableStreams.filter(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >!existingUrls.has(s.url))</span>;</span>
+            
+<span class="cstat-no" title="statement not covered" >            if (newStreams.length &gt; 0) {</span>
+              // Check if we should skip watched streams for this screen
+              const screenConfig = <span class="cstat-no" title="statement not covered" >this.config.player.screens.find(<span class="fstat-no" title="function not covered" >s </span>=&gt; <span class="cstat-no" title="statement not covered" >s.screen === screen)</span>;</span>
+<span class="cstat-no" title="statement not covered" >              <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig) {</span>
+<span class="cstat-no" title="statement not covered" >                logger.error(`Invalid screen number: ${screen}`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >                return;</span>
+              }
+              
+              // Check if we should skip watched streams for this screen
+              const skipWatched = <span class="cstat-no" title="statement not covered" >screenConfig.skipWatchedStreams !== false;</span> // Default to true if not specified
+              
+              // Filter streams based on skipWatchedStreams setting
+              let streamsToAdd = <span class="cstat-no" title="statement not covered" >newStreams;</span>
+<span class="cstat-no" title="statement not covered" >              if (skipWatched) {</span>
+                // Only filter if skipWatchedStreams is true or undefined
+<span class="cstat-no" title="statement not covered" >                streamsToAdd = queueService.filterUnwatchedStreams(newStreams);</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(`Filtering watched streams for screen ${screen} (skipWatchedStreams: ${skipWatched})`, 'StreamManager');</span>
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`Not filtering watched streams for screen ${screen} (skipWatchedStreams: ${skipWatched})`, 'StreamManager');</span>
+              }
+              
+<span class="cstat-no" title="statement not covered" >              if (streamsToAdd.length &gt; 0) {</span>
+                // Add filtered streams to end of existing queue
+                const updatedQueue = <span class="cstat-no" title="statement not covered" >[...existingQueue, ...streamsToAdd];</span>
+<span class="cstat-no" title="statement not covered" >                queueService.setQueue(screen, updatedQueue);</span>
+<span class="cstat-no" title="statement not covered" >                logger.info(</span>
+                  `Updated queue for screen ${screen} with ${streamsToAdd.length} new streams. Total queue size: ${updatedQueue.length}`,
+                  'StreamManager'
+                );
+              } else {
+<span class="cstat-no" title="statement not covered" >                logger.info(`No new streams to add for screen ${screen}`, 'StreamManager');</span>
+              }
+            } else {
+<span class="cstat-no" title="statement not covered" >              logger.info(`No new streams available for screen ${screen}`, 'StreamManager');</span>
+            }
+          }
+        }
+      } else {
+        // Non-forced update - follow normal refresh interval
+        const now = <span class="cstat-no" title="statement not covered" >Date.now();</span>
+        const lastRefresh = <span class="cstat-no" title="statement not covered" >this.lastStreamRefresh.get(screen) || 0;</span>
+        const timeSinceLastRefresh = <span class="cstat-no" title="statement not covered" >now - lastRefresh;</span>
+        
+<span class="cstat-no" title="statement not covered" >        if (timeSinceLastRefresh &gt;= this.STREAM_REFRESH_INTERVAL) {</span>
+<span class="cstat-no" title="statement not covered" >          logger.info(`Refresh interval elapsed for screen ${screen}, updating queue`, 'StreamManager');</span>
+<span class="cstat-no" title="statement not covered" >          await this.updateQueue(screen, true);</span>
+        } else {
+<span class="cstat-no" title="statement not covered" >          logger.info(`Refresh interval not elapsed for screen ${screen}, skipping queue update`, 'StreamManager');</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        `Failed to update queue for screen ${screen}`,
+        'StreamManager',
+        error instanceof Error ? error : new Error(String(error))
+      );
+    }
+  }
+&nbsp;
+  /**
+   * Updates all queues for enabled screens
+   * @param forceRefresh Whether to force a refresh for all screens
+   */
+<span class="fstat-no" title="function not covered" >  async </span>updateAllQueues(forceRefresh = <span class="branch-0 cbranch-no" title="branch not covered" >false)</span>: Promise&lt;void&gt; {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (this.isShuttingDown) {</span>
+<span class="cstat-no" title="statement not covered" >      return;</span>
+    }
+&nbsp;
+<span class="cstat-no" title="statement not covered" >    logger.info(`${forceRefresh ? 'Force updating' : 'Updating'} all stream queues...`, 'StreamManager');</span>
+    
+    // Get all enabled screens
+    const enabledScreens = <span class="cstat-no" title="statement not covered" >this.getEnabledScreens();</span>
+&nbsp;
+    // Update queues for each screen
+<span class="cstat-no" title="statement not covered" >    for (const screen of enabledScreens) {</span>
+<span class="cstat-no" title="statement not covered" >      await this.updateQueue(screen, forceRefresh);</span>
+    }
+  }
+&nbsp;
+  /**
+   * Synchronize disabled screens from config to PlayerService
+   */
+  private <span class="fstat-no" title="function not covered" >synchronizeDisabledScreens(</span>): void {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (!this.config.player.screens) <span class="cstat-no" title="statement not covered" >return;</span></span>
+    
+    // Mark all disabled screens in the PlayerService
+<span class="cstat-no" title="statement not covered" >    for (const screenConfig of this.config.player.screens) {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (!screenConfig.enabled) {</span>
+<span class="cstat-no" title="statement not covered" >        this.playerService.disableScreen(screenConfig.screen);</span>
+<span class="cstat-no" title="statement not covered" >        logger.info(`Screen ${screenConfig.screen} marked as disabled during initialization`, 'StreamManager');</span>
+      }
+    }
+  }
+}
+&nbsp;
+// Create singleton instance
+const config = <span class="cstat-no" title="statement not covered" >loadAllConfigs();</span>
+const playerService = <span class="cstat-no" title="statement not covered" >new PlayerService(config);</span>
+const holodexService = <span class="cstat-no" title="statement not covered" >new HolodexService(</span>
+  env.HOLODEX_API_KEY,
+  config.filters?.filters ? config.filters.filters.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >typeof f === 'string' ? f : f.value)</span> : [],
+  config.favoriteChannels.holodex,
+  config
+);
+const twitchService = <span class="cstat-no" title="statement not covered" >new TwitchService(</span>
+  env.TWITCH_CLIENT_ID,
+  env.TWITCH_CLIENT_SECRET,
+  config.filters?.filters ? config.filters.filters.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >typeof f === 'string' ? f : f.value)</span> : []
+);
+const youtubeService = <span class="cstat-no" title="statement not covered" >new YouTubeService(</span>
+  config.favoriteChannels.youtube
+);
+&nbsp;
+export const <span class="cstat-no" title="statement not covered" >streamManager = new StreamManager(</span>
+  config,
+  holodexService,
+  twitchService,
+  youtubeService,
+  playerService
+); </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/types/events.ts.html b/coverage/src/server/types/events.ts.html
new file mode 100644
index 0000000..877c212
--- /dev/null
+++ b/coverage/src/server/types/events.ts.html
@@ -0,0 +1,142 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/types/events.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/types</a> events.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { EventEmitter } from 'events';</span>
+&nbsp;
+declare global {
+  interface ProcessEventTypes {
+    'keyboard:autostart': (screen: number) =&gt; void;
+    'keyboard:closeall': () =&gt; void;
+  }
+}
+&nbsp;
+declare module 'events' {
+  export interface Process {
+    on&lt;K extends keyof ProcessEventTypes&gt;(event: K, listener: ProcessEventTypes[K]): this;
+    emit&lt;K extends keyof ProcessEventTypes&gt;(
+      event: K,
+      ...args: Parameters&lt;ProcessEventTypes[K]&gt;
+    ): boolean;
+  }
+}
+&nbsp;
+export {}; </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/types/index.html b/coverage/src/server/types/index.html
new file mode 100644
index 0000000..922c7ad
--- /dev/null
+++ b/coverage/src/server/types/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/types</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/types</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">100% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/0</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/1</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="events.ts"><a href="events.ts.html">events.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="100" class="pct high">100%</td>
+	<td data-value="0" class="abs high">0/0</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="1" class="abs low">0/1</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/websocket.ts.html b/coverage/src/server/websocket.ts.html
new file mode 100644
index 0000000..6dea6c2
--- /dev/null
+++ b/coverage/src/server/websocket.ts.html
@@ -0,0 +1,358 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/websocket.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../prettify.css" />
+    <link rel="stylesheet" href="../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/server</a> websocket.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/2</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/13</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/30</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a>
+<a name='L83'></a><a href='#L83'>83</a>
+<a name='L84'></a><a href='#L84'>84</a>
+<a name='L85'></a><a href='#L85'>85</a>
+<a name='L86'></a><a href='#L86'>86</a>
+<a name='L87'></a><a href='#L87'>87</a>
+<a name='L88'></a><a href='#L88'>88</a>
+<a name='L89'></a><a href='#L89'>89</a>
+<a name='L90'></a><a href='#L90'>90</a>
+<a name='L91'></a><a href='#L91'>91</a>
+<a name='L92'></a><a href='#L92'>92</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { WebSocket, WebSocketServer } from 'ws';</span>
+<span class="cstat-no" title="statement not covered" >import { Server } from 'http';</span>
+import type { Stream, StreamSource } from '../types/stream.js';
+<span class="cstat-no" title="statement not covered" >import { streamManager, type StreamManager } from './stream_manager.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >export class W</span>ebSocketService {
+  private wss: WebSocketServer;
+  private <span class="cstat-no" title="statement not covered" >clients: Set&lt;WebSocket&gt; = new Set();</span>
+&nbsp;
+<span class="fstat-no" title="function not covered" >  constructor(s</span>erver: Server, private <span class="cstat-no" title="statement not covered" >streamManager: StreamManager)</span> {
+<span class="cstat-no" title="statement not covered" >    this.wss = new WebSocketServer({ server });</span>
+<span class="cstat-no" title="statement not covered" >    this.setupWebSocketServer();</span>
+<span class="cstat-no" title="statement not covered" >    this.setupStreamManagerListeners();</span>
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupWebSocketServer(</span>) {
+<span class="cstat-no" title="statement not covered" >    this.wss.on('connection', <span class="fstat-no" title="function not covered" >(w</span>s: WebSocket) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.clients.add(ws);</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" >      ws.addEventListener('close', <span class="fstat-no" title="function not covered" >() =</span>&gt; {</span>
+<span class="cstat-no" title="statement not covered" >        this.clients.delete(ws);</span>
+      });
+&nbsp;
+      // Send initial state
+<span class="cstat-no" title="statement not covered" >      this.sendToClient(ws, {</span>
+        type: 'init',
+        data: {
+          streams: this.streamManager.getActiveStreams(),
+          queues: this.streamManager.getQueueForScreen,
+          screens: this.streamManager.getScreenConfigs()
+        }
+      });
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >setupStreamManagerListeners(</span>) {
+    // Listen for stream updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('streamUpdate', <span class="fstat-no" title="function not covered" >(s</span>tream: Stream) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'streamUpdate',
+        data: { stream }
+      });
+    });
+&nbsp;
+    // Listen for queue updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('queueUpdate', <span class="fstat-no" title="function not covered" >(s</span>creen: number, queue: StreamSource[]) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'queueUpdate',
+        data: { screen, queue }
+      });
+    });
+&nbsp;
+    // Listen for screen config updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('screenUpdate', <span class="fstat-no" title="function not covered" >(s</span>creen: number, config: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'screenUpdate',
+        data: { screen, config }
+      });
+    });
+&nbsp;
+    // Listen for player settings updates
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('settingsUpdate', <span class="fstat-no" title="function not covered" >(s</span>ettings: any) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'settingsUpdate',
+        data: { settings }
+      });
+    });
+&nbsp;
+    // Listen for errors
+<span class="cstat-no" title="statement not covered" >    this.streamManager.on('error', <span class="fstat-no" title="function not covered" >(e</span>rror: Error) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      this.broadcast({</span>
+        type: 'error',
+        data: { message: error.message }
+      });
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >broadcast(</span>message: any) {
+    const data = <span class="cstat-no" title="statement not covered" >JSON.stringify(message);</span>
+<span class="cstat-no" title="statement not covered" >    this.clients.forEach(<span class="fstat-no" title="function not covered" >client </span>=&gt; {</span>
+<span class="cstat-no" title="statement not covered" >      <span class="missing-if-branch" title="if path not taken" >I</span>if (client.readyState === WebSocket.OPEN) {</span>
+<span class="cstat-no" title="statement not covered" >        client.send(data);</span>
+      }
+    });
+  }
+&nbsp;
+  private <span class="fstat-no" title="function not covered" >sendToClient(</span>client: WebSocket, message: any) {
+<span class="cstat-no" title="statement not covered" >    <span class="missing-if-branch" title="if path not taken" >I</span>if (client.readyState === WebSocket.OPEN) {</span>
+<span class="cstat-no" title="statement not covered" >      client.send(JSON.stringify(message));</span>
+    }
+  }
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../sorter.js"></script>
+        <script src="../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/workers/index.html b/coverage/src/server/workers/index.html
new file mode 100644
index 0000000..1042078
--- /dev/null
+++ b/coverage/src/server/workers/index.html
@@ -0,0 +1,116 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/workers</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> src/server/workers</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <div class="pad1">
+<table class="coverage-summary">
+<thead>
+<tr>
+   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
+   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
+   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
+   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
+   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
+   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
+   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
+   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
+</tr>
+</thead>
+<tbody><tr>
+	<td class="file low" data-value="player_worker.ts"><a href="player_worker.ts.html">player_worker.ts</a></td>
+	<td data-value="0" class="pic low">
+	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
+	</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="35" class="abs low">0/35</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="3" class="abs low">0/3</td>
+	<td data-value="0" class="pct low">0%</td>
+	<td data-value="27" class="abs low">0/27</td>
+	</tr>
+
+</tbody>
+</table>
+</div>
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/coverage/src/server/workers/player_worker.ts.html b/coverage/src/server/workers/player_worker.ts.html
new file mode 100644
index 0000000..2931ecc
--- /dev/null
+++ b/coverage/src/server/workers/player_worker.ts.html
@@ -0,0 +1,328 @@
+
+<!doctype html>
+<html lang="en">
+
+<head>
+    <title>Code coverage report for src/server/workers/player_worker.ts</title>
+    <meta charset="utf-8" />
+    <link rel="stylesheet" href="../../../prettify.css" />
+    <link rel="stylesheet" href="../../../base.css" />
+    <link rel="shortcut icon" type="image/x-icon" href="../../../favicon.png" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <style type='text/css'>
+        .coverage-summary .sorter {
+            background-image: url(../../../sort-arrow-sprite.png);
+        }
+    </style>
+</head>
+    
+<body>
+<div class='wrapper'>
+    <div class='pad1'>
+        <h1><a href="../../../index.html">All files</a> / <a href="index.html">src/server/workers</a> player_worker.ts</h1>
+        <div class='clearfix'>
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Statements</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Branches</span>
+                <span class='fraction'>0/35</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Functions</span>
+                <span class='fraction'>0/3</span>
+            </div>
+        
+            
+            <div class='fl pad1y space-right2'>
+                <span class="strong">0% </span>
+                <span class="quiet">Lines</span>
+                <span class='fraction'>0/27</span>
+            </div>
+        
+            
+        </div>
+        <p class="quiet">
+            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
+        </p>
+        <template id="filterTemplate">
+            <div class="quiet">
+                Filter:
+                <input type="search" id="fileSearch">
+            </div>
+        </template>
+    </div>
+    <div class='status-line low'></div>
+    <pre><table class="coverage">
+<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
+<a name='L2'></a><a href='#L2'>2</a>
+<a name='L3'></a><a href='#L3'>3</a>
+<a name='L4'></a><a href='#L4'>4</a>
+<a name='L5'></a><a href='#L5'>5</a>
+<a name='L6'></a><a href='#L6'>6</a>
+<a name='L7'></a><a href='#L7'>7</a>
+<a name='L8'></a><a href='#L8'>8</a>
+<a name='L9'></a><a href='#L9'>9</a>
+<a name='L10'></a><a href='#L10'>10</a>
+<a name='L11'></a><a href='#L11'>11</a>
+<a name='L12'></a><a href='#L12'>12</a>
+<a name='L13'></a><a href='#L13'>13</a>
+<a name='L14'></a><a href='#L14'>14</a>
+<a name='L15'></a><a href='#L15'>15</a>
+<a name='L16'></a><a href='#L16'>16</a>
+<a name='L17'></a><a href='#L17'>17</a>
+<a name='L18'></a><a href='#L18'>18</a>
+<a name='L19'></a><a href='#L19'>19</a>
+<a name='L20'></a><a href='#L20'>20</a>
+<a name='L21'></a><a href='#L21'>21</a>
+<a name='L22'></a><a href='#L22'>22</a>
+<a name='L23'></a><a href='#L23'>23</a>
+<a name='L24'></a><a href='#L24'>24</a>
+<a name='L25'></a><a href='#L25'>25</a>
+<a name='L26'></a><a href='#L26'>26</a>
+<a name='L27'></a><a href='#L27'>27</a>
+<a name='L28'></a><a href='#L28'>28</a>
+<a name='L29'></a><a href='#L29'>29</a>
+<a name='L30'></a><a href='#L30'>30</a>
+<a name='L31'></a><a href='#L31'>31</a>
+<a name='L32'></a><a href='#L32'>32</a>
+<a name='L33'></a><a href='#L33'>33</a>
+<a name='L34'></a><a href='#L34'>34</a>
+<a name='L35'></a><a href='#L35'>35</a>
+<a name='L36'></a><a href='#L36'>36</a>
+<a name='L37'></a><a href='#L37'>37</a>
+<a name='L38'></a><a href='#L38'>38</a>
+<a name='L39'></a><a href='#L39'>39</a>
+<a name='L40'></a><a href='#L40'>40</a>
+<a name='L41'></a><a href='#L41'>41</a>
+<a name='L42'></a><a href='#L42'>42</a>
+<a name='L43'></a><a href='#L43'>43</a>
+<a name='L44'></a><a href='#L44'>44</a>
+<a name='L45'></a><a href='#L45'>45</a>
+<a name='L46'></a><a href='#L46'>46</a>
+<a name='L47'></a><a href='#L47'>47</a>
+<a name='L48'></a><a href='#L48'>48</a>
+<a name='L49'></a><a href='#L49'>49</a>
+<a name='L50'></a><a href='#L50'>50</a>
+<a name='L51'></a><a href='#L51'>51</a>
+<a name='L52'></a><a href='#L52'>52</a>
+<a name='L53'></a><a href='#L53'>53</a>
+<a name='L54'></a><a href='#L54'>54</a>
+<a name='L55'></a><a href='#L55'>55</a>
+<a name='L56'></a><a href='#L56'>56</a>
+<a name='L57'></a><a href='#L57'>57</a>
+<a name='L58'></a><a href='#L58'>58</a>
+<a name='L59'></a><a href='#L59'>59</a>
+<a name='L60'></a><a href='#L60'>60</a>
+<a name='L61'></a><a href='#L61'>61</a>
+<a name='L62'></a><a href='#L62'>62</a>
+<a name='L63'></a><a href='#L63'>63</a>
+<a name='L64'></a><a href='#L64'>64</a>
+<a name='L65'></a><a href='#L65'>65</a>
+<a name='L66'></a><a href='#L66'>66</a>
+<a name='L67'></a><a href='#L67'>67</a>
+<a name='L68'></a><a href='#L68'>68</a>
+<a name='L69'></a><a href='#L69'>69</a>
+<a name='L70'></a><a href='#L70'>70</a>
+<a name='L71'></a><a href='#L71'>71</a>
+<a name='L72'></a><a href='#L72'>72</a>
+<a name='L73'></a><a href='#L73'>73</a>
+<a name='L74'></a><a href='#L74'>74</a>
+<a name='L75'></a><a href='#L75'>75</a>
+<a name='L76'></a><a href='#L76'>76</a>
+<a name='L77'></a><a href='#L77'>77</a>
+<a name='L78'></a><a href='#L78'>78</a>
+<a name='L79'></a><a href='#L79'>79</a>
+<a name='L80'></a><a href='#L80'>80</a>
+<a name='L81'></a><a href='#L81'>81</a>
+<a name='L82'></a><a href='#L82'>82</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span>
+<span class="cline-any cline-no">&nbsp;</span>
+<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { isMainThread, parentPort, workerData } from 'worker_threads';</span>
+<span class="cstat-no" title="statement not covered" >import { PlayerService } from '../services/player.js';</span>
+import type { 
+  WorkerMessage, 
+  WorkerResponse
+} from '../../types/stream.js';
+import type {
+  StreamOutput,
+  StreamError
+} from '../../types/stream_instance.js';
+<span class="cstat-no" title="statement not covered" >import { logger } from '../services/logger.js';</span>
+<span class="cstat-no" title="statement not covered" >import { loadAllConfigs } from '../../config/loader.js';</span>
+&nbsp;
+<span class="cstat-no" title="statement not covered" ><span class="missing-if-branch" title="if path not taken" >I</span>if (!isMainThread) {</span>
+  const config = <span class="cstat-no" title="statement not covered" >loadAllConfigs();</span>
+  const player = <span class="cstat-no" title="statement not covered" >new PlayerService(config);</span>
+  const { streamId } = <span class="cstat-no" title="statement not covered" >workerData;</span>
+  
+<span class="cstat-no" title="statement not covered" >  parentPort?.on('message', <span class="fstat-no" title="function not covered" >async </span>(message: WorkerMessage) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    try {</span>
+<span class="cstat-no" title="statement not covered" >      switch (message.type) {</span>
+        case 'start': {
+          const { screen, ...options } = <span class="cstat-no" title="statement not covered" >message.data;</span>
+          const result = <span class="cstat-no" title="statement not covered" >await player.startStream({</span>
+            ...options,
+            screen: screen || streamId // Use streamId as fallback
+          });
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'startResult', 
+            data: result 
+          } as WorkerResponse);
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'stop': {
+          const success = <span class="cstat-no" title="statement not covered" >await player.stopStream(message.data);</span>
+<span class="cstat-no" title="statement not covered" >          parentPort?.postMessage({ </span>
+            type: 'stopResult', 
+            data: success 
+          } as WorkerResponse);
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'setVolume': {
+          // TODO: Implement volume control
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+          
+        case 'setQuality': {
+          // TODO: Implement quality changes
+<span class="cstat-no" title="statement not covered" >          break;</span>
+        }
+      }
+    } catch (error) {
+<span class="cstat-no" title="statement not covered" >      logger.error(</span>
+        'Player worker error',
+        'PlayerWorker',
+        error instanceof Error ? error : new Error(String(error))
+      );
+<span class="cstat-no" title="statement not covered" >      parentPort?.postMessage({ </span>
+        type: 'error', 
+        error: error instanceof Error ? error.message : String(error)
+      } as WorkerResponse);
+    }
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  player.onStreamOutput(<span class="fstat-no" title="function not covered" >(d</span>ata: StreamOutput) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    parentPort?.postMessage({ </span>
+      type: 'output', 
+      data: { streamId, ...data } 
+    } as WorkerResponse);
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  player.onStreamError(<span class="fstat-no" title="function not covered" >(d</span>ata: StreamError) =&gt; {</span>
+<span class="cstat-no" title="statement not covered" >    parentPort?.postMessage({ </span>
+      type: 'streamError', 
+      data: { streamId, ...data } 
+    } as WorkerResponse);
+  });
+&nbsp;
+<span class="cstat-no" title="statement not covered" >  logger.info(`Player worker ${streamId} initialized`, 'PlayerWorker');</span>
+} </pre></td></tr></table></pre>
+
+                <div class='push'></div><!-- for sticky footer -->
+            </div><!-- /wrapper -->
+            <div class='footer quiet pad2 space-top1 center small'>
+                Code coverage generated by
+                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
+                at 2025-04-12T07:26:15.329Z
+            </div>
+        <script src="../../../prettify.js"></script>
+        <script>
+            window.onload = function () {
+                prettyPrint();
+            };
+        </script>
+        <script src="../../../sorter.js"></script>
+        <script src="../../../block-navigation.js"></script>
+    </body>
+</html>
+    
\ No newline at end of file
diff --git a/jest.config.js b/jest.config.js
index 4ed30d6..f8311a6 100644
--- a/jest.config.js
+++ b/jest.config.js
@@ -1,16 +1,20 @@
 /** @type {import('ts-jest').JestConfigWithTsJest} */
-export default {
-  preset: 'ts-jest',
+module.exports = {
   testEnvironment: 'node',
+  preset: 'ts-jest',
   roots: ['<rootDir>/src'],
   testMatch: ['**/__tests__/**/*.ts?(x)', '**/?(*.)+(spec|test).ts?(x)'],
   transform: {
-    '^.+\\.tsx?$': ['ts-jest', {
-      tsconfig: 'tsconfig.test.json',
-    }]
+    '^.+\\.tsx?$': [
+      'ts-jest',
+      {
+        tsconfig: 'tsconfig.test.json'
+      },
+    ],
   },
   moduleNameMapper: {
-    '^@/(.*)$': '<rootDir>/src/$1'
+    '^@/(.*)$': '<rootDir>/src/$1',
+    '^([.]{1,2}/.*)\\.js$': '$1'
   },
   collectCoverage: true,
   coverageDirectory: 'coverage',
@@ -19,10 +23,9 @@ export default {
     '!src/**/*.d.ts',
     '!src/types/**',
     '!src/config/**',
-    '!**/node_modules/**'
+    '!src/**/__tests__/**'
   ],
   coverageReporters: ['text', 'lcov', 'clover', 'html'],
-  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],
-  testTimeout: 10000, // Increased timeout for async tests
+  setupFilesAfterEnv: ['./jest.setup.js'],
   verbose: true
 };
diff --git a/jest.setup.js b/jest.setup.js
index 6bcbeb3..c973b43 100644
--- a/jest.setup.js
+++ b/jest.setup.js
@@ -1,9 +1,11 @@
-// Global test setup
-import { jest } from '@jest/globals';
+// Global test setup for Jest
+/* global jest, beforeEach, afterEach */
 
-jest.setTimeout(10000); // Longer timeout for async tests
+// Set longer timeout for async tests
+jest.setTimeout(10000);
 
-// Mock console methods to reduce noise during tests
+// Create mock functions for console to reduce noise
+const originalConsole = { ...console };
 global.console = {
   ...console,
   // Keep error logging but suppress other logs during tests
@@ -12,7 +14,7 @@ global.console = {
   debug: jest.fn(),
   warn: jest.fn(),
   // Keep error for debugging test failures
-  error: console.error,
+  error: originalConsole.error,
 };
 
 // Helper to reset all mocks between tests
diff --git a/src/__tests__/server/stream_manager.race.test.ts b/src/__tests__/server/stream_manager.race.test.ts
index e3e7a9c..d967c3d 100644
--- a/src/__tests__/server/stream_manager.race.test.ts
+++ b/src/__tests__/server/stream_manager.race.test.ts
@@ -132,18 +132,23 @@ describe('StreamManager Race Condition Tests', () => {
     });
     
     // Call handleStreamEnd multiple times concurrently for the same screen
+    // Use type assertion to access private method for testing
+    // We need to use 'as any' to access private methods for testing purposes
+    // eslint-disable-next-line @typescript-eslint/no-explicit-any
+    const manager = streamManager as any;
+    
     await executeStaggered([
       () => {
         executionTracker.record('handleStreamEnd:call1');
-        return streamManager.handleStreamEnd(1);
+        return manager.handleStreamEnd(1);
       },
       () => {
         executionTracker.record('handleStreamEnd:call2');
-        return streamManager.handleStreamEnd(1);
+        return manager.handleStreamEnd(1);
       },
       () => {
         executionTracker.record('handleStreamEnd:call3');
-        return streamManager.handleStreamEnd(1);
+        return manager.handleStreamEnd(1);
       }
     ], 10);
     
@@ -209,9 +214,11 @@ describe('StreamManager Race Condition Tests', () => {
     });
     
     // Process streams for both screens concurrently
+    // eslint-disable-next-line @typescript-eslint/no-explicit-any
+    const manager = streamManager as any;
     await Promise.all([
-      streamManager.handleStreamEnd(1),
-      streamManager.handleStreamEnd(2)
+      manager.handleStreamEnd(1),
+      manager.handleStreamEnd(2)
     ]);
     
     // Verify that startStream was called only for screen 2
@@ -305,13 +312,15 @@ describe('StreamManager Race Condition Tests', () => {
     });
     
     // Start processing stream for screen 1 (will take longer)
-    const screen1Promise = streamManager.handleStreamEnd(1);
+    // eslint-disable-next-line @typescript-eslint/no-explicit-any
+    const manager = streamManager as any;
+    const screen1Promise = manager.handleStreamEnd(1);
     
     // Wait a bit to ensure screen 1 processing has started
     await delay(20);
     
     // Start processing stream for screen 2 (will complete faster)
-    const screen2Promise = streamManager.handleStreamEnd(2);
+    const screen2Promise = manager.handleStreamEnd(2);
     
     // Wait for both to complete
     await Promise.all([screen1Promise, screen2Promise]);
@@ -356,11 +365,13 @@ describe('StreamManager Race Condition Tests', () => {
     });
     
     // Process both screens concurrently
+    // eslint-disable-next-line @typescript-eslint/no-explicit-any
+    const manager = streamManager as any;
     await Promise.all([
-      streamManager.handleStreamEnd(1).catch(() => {
+      manager.handleStreamEnd(1).catch(() => {
         executionTracker.record('screen1:error');
       }),
-      streamManager.handleStreamEnd(2)
+      manager.handleStreamEnd(2)
     ]);
     
     // Verify that startStream was called for both screens
diff --git a/src/config/default/player.json b/src/config/default/player.json
index d197adc..44ad919 100644
--- a/src/config/default/player.json
+++ b/src/config/default/player.json
@@ -2,7 +2,7 @@
   "defaultQuality": "best",
   "defaultVolume": 0,
   "windowMaximized": true,
-  "maxStreams": 4,
+  "maxStreams": 2,
   "autoStart": true,
   "force_player": false,
   "screens": [
diff --git a/src/server/routes/api.ts b/src/server/routes/api.ts
index f336fd5..5466445 100644
--- a/src/server/routes/api.ts
+++ b/src/server/routes/api.ts
@@ -436,14 +436,20 @@ router.post('/api/server/stop', async (ctx: Context) => {
     setTimeout(async () => {
       try {
         logger.info('Starting server cleanup...', 'API');
+        // Only call streamManager.cleanup(), which will handle all the 
+        // stream stopping and cleanup logic in a coordinated way
         await streamManager.cleanup();
+        
+        // Brief delay to allow cleanup to complete
+        await new Promise(resolve => setTimeout(resolve, 500));
+        
         logger.info('Server cleanup complete, exiting...', 'API');
         process.exit(0);
       } catch (error) {
         logger.error('Failed to cleanup server', 'API', error instanceof Error ? error : new Error(String(error)));
         process.exit(1);
       }
-    }, 1000);
+    }, 500); // Reduced delay for faster response
   } catch (error) {
     ctx.status = 500;
     ctx.body = { error: String(error) };
@@ -468,35 +474,22 @@ router.post('/api/server/stop-all', async (ctx: Context) => {
     // Perform cleanup after response is sent
     setTimeout(async () => {
       try {
-        logger.info('Stopping all player processes...', 'API');
+        logger.info('Starting cleanup for all players and server...', 'API');
         
-        // Get all active streams and stop them
-        const activeStreams = streamManager.getActiveStreams();
-        if (activeStreams.length > 0) {
-          logger.info(`Found ${activeStreams.length} active streams to stop`, 'API');
-          
-          const stopPromises = activeStreams.map(stream => {
-            logger.info(`Stopping player on screen ${stream.screen}`, 'API');
-            return streamManager.stopStream(stream.screen, true);
-          });
-          
-          // Wait for all streams to be stopped
-          await Promise.allSettled(stopPromises);
-          logger.info('All player processes stopped', 'API');
-        } else {
-          logger.info('No active streams to stop', 'API');
-        }
-        
-        // Then perform server cleanup
-        logger.info('Starting server cleanup...', 'API');
+        // Use the streamManager.cleanup() method which will handle everything
+        // This prevents duplicate quit commands and ensures proper cleanup order
         await streamManager.cleanup();
-        logger.info('Server cleanup complete, exiting...', 'API');
+        
+        // Brief delay to allow cleanup to complete before exit
+        await new Promise(resolve => setTimeout(resolve, 500));
+        
+        logger.info('All cleanup complete, exiting...', 'API');
         process.exit(0);
       } catch (error) {
         logger.error('Failed during stop-all sequence', 'API', error instanceof Error ? error : new Error(String(error)));
         process.exit(1);
       }
-    }, 1000);
+    }, 500); // Reduced delay for faster response
   } catch (error) {
     ctx.status = 500;
     ctx.body = { error: String(error) };
diff --git a/src/server/services/player.ts b/src/server/services/player.ts
index acb0ed9..3aaef23 100644
--- a/src/server/services/player.ts
+++ b/src/server/services/player.ts
@@ -33,7 +33,7 @@ export class PlayerService {
 	private readonly RETRY_INTERVAL = 500;
 	private readonly STREAM_REFRESH_INTERVAL = 4 * 60 * 60 * 1000; // 4 hours
 	private readonly INACTIVE_RESET_TIMEOUT = 5 * 60 * 1000; // 5 minutes
-	private readonly STARTUP_TIMEOUT = 30000; // 30 seconds for startup
+	private readonly STARTUP_TIMEOUT = 30000; // 30 seconds
 	private readonly SHUTDOWN_TIMEOUT = 2000; // 2 seconds for shutdown
 	private readonly SCRIPTS_PATH: string;
 	private streams: Map<number, LocalStreamInstance> = new Map();
@@ -43,10 +43,13 @@ export class PlayerService {
 	private inactiveTimers: Map<number, NodeJS.Timeout> = new Map();
 	private healthCheckIntervals: Map<number, NodeJS.Timeout> = new Map();
 	private startupLocks: Map<number, boolean> = new Map();
+	private globalStartupLock = false;
 	private manuallyClosedScreens: Set<number> = new Set();
 	private disabledScreens: Set<number> = new Set();
 	private ipcPaths: Map<number, string> = new Map();
 	private retryTimers: Map<number, NodeJS.Timeout> = new Map();
+	private fifoPaths: Map<number, string> = new Map();
+	private shuttingDownScreens: Set<number> = new Set(); // Track screens being shut down
 
 	private readonly config: Config;
 	private readonly mpvPath: string;
@@ -173,6 +176,15 @@ export class PlayerService {
 	async startStream(options: StreamOptions & { screen: number }): Promise<StreamResponse> {
 		const { screen } = options;
 
+		// Check global startup lock
+		if (this.globalStartupLock) {
+			return {
+				screen,
+				message: `Stream startup in progress`,
+				success: false
+			};
+		}
+
 		// Check maximum streams limit
 		const activeStreams = Array.from(this.streams.values()).filter((s) => s.process !== null);
 		if (activeStreams.length >= this.config.player.maxStreams) {
@@ -193,9 +205,11 @@ export class PlayerService {
 			};
 		}
 
-		// Set startup lock with timeout
+		// Set global and screen startup locks
+		this.globalStartupLock = true;
 		this.startupLocks.set(screen, true);
 		const lockTimeout = setTimeout(() => {
+			this.globalStartupLock = false;
 			this.startupLocks.set(screen, false);
 		}, this.STARTUP_TIMEOUT);
 
@@ -291,6 +305,7 @@ export class PlayerService {
 			};
 		} finally {
 			clearTimeout(lockTimeout);
+			this.globalStartupLock = false;
 			this.startupLocks.set(screen, false);
 		}
 	}
@@ -429,6 +444,19 @@ export class PlayerService {
 			this.clearMonitoring(screen);
 			this.streams.delete(screen);
 			this.streamRetries.delete(screen);
+			
+			// Clean up FIFO/IPC immediately instead of with delay
+			const fifoPath = this.fifoPaths.get(screen);
+			if (fifoPath) {
+				try { 
+					fs.unlinkSync(fifoPath); 
+				} catch {
+					// Ignore error, file may not exist
+					logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'PlayerService');
+				}
+				this.fifoPaths.delete(screen);
+			}
+			this.ipcPaths.delete(screen);
 		};
 
 		const handleStreamEnd = (error: string | Error, code: number = 0) => {
@@ -440,8 +468,8 @@ export class PlayerService {
 					error: error instanceof Error ? error.message : error,
 					code
 				});
-				// Schedule cleanup after a short delay to ensure all events are processed
-				cleanupTimeout = setTimeout(cleanup, 1000);
+				// Reduce cleanup delay to minimize overlap
+				cleanupTimeout = setTimeout(cleanup, 100);
 			}
 		};
 
@@ -904,6 +932,15 @@ export class PlayerService {
 			return true; // Nothing to stop, so consider it a success
 		}
 
+		// Check if this screen is already shutting down to prevent duplicate quit commands
+		if (this.shuttingDownScreens.has(screen)) {
+			logger.debug(`Screen ${screen} is already shutting down, skipping duplicate stop command`, 'PlayerService');
+			return true;
+		}
+
+		// Mark this screen as shutting down
+		this.shuttingDownScreens.add(screen);
+
 		// Try graceful shutdown via IPC first
 		let gracefulShutdown = false;
 		try {
@@ -952,6 +989,9 @@ export class PlayerService {
 
 		// Clean up regardless of kill success
 		this.cleanup_after_stop(screen);
+		
+		// Remove from shutting down set
+		this.shuttingDownScreens.delete(screen);
 
 		return true;
 	}
@@ -1232,6 +1272,7 @@ export class PlayerService {
 			this.streams.clear();
 			this.manuallyClosedScreens.clear();
 			this.disabledScreens.clear();
+			this.shuttingDownScreens.clear();
 
 			logger.info('Player service cleanup complete', 'PlayerService');
 		} catch (error) {
@@ -1370,6 +1411,12 @@ export class PlayerService {
 			throw new Error(errorMessage);
 		}
 
+		// Special handling for quit command
+		if (command === 'quit' && this.isShuttingDown) {
+			logger.debug(`Skipping quit command for screen ${screen} during application shutdown`, 'PlayerService');
+			return;
+		}
+
 		return new Promise((resolve, reject) => {
 			try {
 				const socket = net.createConnection(ipcPath);
diff --git a/src/server/stream_manager.ts b/src/server/stream_manager.ts
index c7fd206..a4a4c81 100644
--- a/src/server/stream_manager.ts
+++ b/src/server/stream_manager.ts
@@ -1086,7 +1086,13 @@ export class StreamManager extends EventEmitter {
   }
 
   async cleanup() {
+    if (this.isShuttingDown) {
+      logger.debug('Stream manager already shutting down, skipping duplicate cleanup', 'StreamManager');
+      return;
+    }
+    
     this.isShuttingDown = true;
+    logger.info('Starting stream manager cleanup...', 'StreamManager');
     
     try {
       // Stop all keyboard listeners
@@ -1095,19 +1101,25 @@ export class StreamManager extends EventEmitter {
       // Get all active screens
       const activeScreens = Array.from(this.streams.keys());
       
-      // Stop all streams
-      const stopPromises = activeScreens.map(screen => 
-        this.stopStream(screen, true).catch(error => {
+      // Mark the streams as being shut down by the system rather than manually
+      this.manuallyClosedScreens.clear();
+      
+      logger.info(`Stopping ${activeScreens.length} active streams...`, 'StreamManager');
+      
+      // Stop all streams with a short delay between them to avoid IPC race conditions
+      for (const screen of activeScreens) {
+        try {
+          await this.stopStream(screen, true);
+          // Small delay between stream stops to prevent IPC conflicts
+          await new Promise(resolve => setTimeout(resolve, 100));
+        } catch (error) {
           logger.error(
             `Failed to stop stream on screen ${screen} during cleanup`,
             'StreamManager',
             error instanceof Error ? error : new Error(String(error))
           );
-        })
-      );
-
-      // Wait for all streams to stop
-      await Promise.all(stopPromises);
+        }
+      }
 
       // Clear all timers
       for (const screen of this.streamRefreshTimers.keys()) {
@@ -1124,7 +1136,9 @@ export class StreamManager extends EventEmitter {
       // Remove all FIFO files
       for (const [, fifoPath] of this.fifoPaths) {
         try {
-          fs.unlinkSync(fifoPath);
+          if (fs.existsSync(fifoPath)) {
+            fs.unlinkSync(fifoPath);
+          }
         } catch {
           // Ignore errors, file might not exist
           logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');
@@ -1136,6 +1150,10 @@ export class StreamManager extends EventEmitter {
       // Clear all event listeners
       this.removeAllListeners();
       
+      // Finally, call the PlayerService cleanup to handle any remaining processes
+      logger.info('Finalizing cleanup through PlayerService...', 'StreamManager');
+      await this.playerService.cleanup();
+      
       logger.info('Stream manager cleanup complete', 'StreamManager');
     } catch (error) {
       logger.error(
</file>

<file path="stopall.sh">
#!/bin/bash

# Script to stop all streams and the LiveLink server
# Usage: ./stopall.sh

echo "Stopping all streams and the LiveLink server..."
node ./dist/cli/livelink.js server stop-all
</file>

<file path="stopstream.sh">
#!/bin/bash

# Script to stop a stream on a specific screen
# Usage: ./stopstream.sh <screen_number>

if [ -z "$1" ]; then
  echo "Usage: ./stopstream.sh <screen_number>"
  echo "Example: ./stopstream.sh 1"
  exit 1
fi

SCREEN=$1

# Execute the stop command
echo "Stopping stream on screen $SCREEN..."
node ./dist/cli/livelink.js stream stop $SCREEN
</file>

<file path="TESTING.md">
# LiveLink Testing Strategy

This document outlines the comprehensive testing strategy for the LiveLink application, focusing on race conditions, complexity reduction, and code quality.

## Table of Contents

1. [Testing Setup](#testing-setup)
2. [Test Types](#test-types)
3. [Running Tests](#running-tests)
4. [Test Helpers](#test-helpers)
5. [Race Condition Testing](#race-condition-testing)
6. [Test Coverage](#test-coverage)
7. [Test Matrix](#test-matrix)

## Testing Setup

The LiveLink project uses Jest for unit and integration testing. The setup includes:

- **Jest**: Main testing framework
- **ts-jest**: TypeScript support for Jest
- **jest-mock-extended**: Advanced mocking capabilities
- **TimerMock**: Custom timer mocking for time-based tests

### Configuration Files

- `jest.config.js`: Main Jest configuration
- `jest.setup.js`: Global test setup and teardown
- `tsconfig.test.json`: TypeScript configuration for tests

## Test Types

The testing strategy includes several types of tests:

### Unit Tests

Unit tests focus on testing individual components in isolation. They use mocks for dependencies and verify the behavior of a single unit of code.

Example: `queue_service.test.ts`

### Race Condition Tests

These tests specifically target potential race conditions in the codebase by simulating concurrent operations, delayed responses, and out-of-order completions.

Example: `stream_manager.race.test.ts`

### Integration Tests

Integration tests verify that multiple components work together correctly. They focus on the interaction between components and ensure proper behavior across boundaries.

Example: `skipWatchedStreams.test.ts`

## Running Tests

To run the tests, use the following npm scripts:

```bash
# Run all tests
npm run test:jest

# Run tests in watch mode
npm run test:jest:watch

# Generate coverage report
npm run test:jest:coverage

# Run only race condition tests
npm run test:race
```

## Test Helpers

Several helper utilities have been created to facilitate testing:

### Async Utilities (`async-utils.ts`)

- `delay()`: Creates a promise that resolves after a specified time
- `createDeferred()`: Creates a deferred promise that can be resolved externally
- `executeWithDelay()`: Executes promises with controlled timing
- `executeStaggered()`: Executes tasks in parallel with staggered start times
- `ExecutionTracker`: Tracks the order of async operations

### Mock Factory (`mock-factory.ts`)

- `createMockChildProcess()`: Creates a mock child process
- `createMockEventEmitter()`: Creates a mock event emitter
- `createMockStreamSource()`: Creates a mock stream source
- `createMockConfig()`: Creates a mock configuration
- `createMockServices()`: Creates mock services
- `createFetchMock()`: Creates a controlled fetch mock

### Timer Mock (`timer-mock.ts`)

- `TimerMock`: Provides precise control over timers in tests
  - `advanceTime()`: Advances time by a specified amount
  - `runAllTimers()`: Runs all pending timers
  - `runOnlyPendingTimers()`: Runs only currently pending timers

## Race Condition Testing

Race conditions are particularly challenging to test. Our approach includes:

1. **Controlled Timing**: Using custom timer mocks to control when operations occur
2. **Execution Tracking**: Recording the order of operations to verify correct sequencing
3. **Concurrent Operations**: Simulating multiple operations happening simultaneously
4. **Delayed Responses**: Testing behavior when operations complete out of order
5. **Network Failures**: Simulating network failures and verifying recovery

### Example Race Condition Test

```typescript
test('should prevent concurrent handleStreamEnd calls for the same screen', async () => {
  // Set up test data
  
  // Execute multiple operations concurrently
  await executeStaggered([
    () => streamManager.handleStreamEnd(1),
    () => streamManager.handleStreamEnd(1),
    () => streamManager.handleStreamEnd(1)
  ], 10);
  
  // Verify correct behavior
  expect(streamManager.startStream).toHaveBeenCalledTimes(1);
});
```

## Test Coverage

The test coverage report can be generated using:

```bash
npm run test:jest:coverage
```

This will generate a coverage report in the `coverage` directory, which includes:

- Line coverage
- Branch coverage
- Function coverage
- Statement coverage

### Coverage Goals

- **Unit Tests**: 80%+ coverage of core services
- **Race Condition Tests**: Coverage of all identified race condition scenarios
- **Integration Tests**: Coverage of key user workflows

## Test Matrix

The following matrix outlines the key test scenarios covered:

| Component       | Unit Tests | Race Tests | Integration Tests |
|-----------------|------------|------------|------------------|
| StreamManager   | ✅         | ✅         | ✅               |
| PlayerService   | ✅         | ✅         | ✅               |
| QueueService    | ✅         | ❌         | ✅               |
| skipWatchedStreams | ✅      | ✅         | ✅               |
| Network Resilience | ✅      | ✅         | ❌               |
| Resource Cleanup | ✅        | ✅         | ❌               |

### Key Test Scenarios

1. **Stream Processing**
   - Concurrent stream processing
   - Stream end handling
   - Queue management

2. **Network Resilience**
   - Network failure handling
   - Retry mechanisms
   - Backoff strategies

3. **Resource Management**
   - Timer cleanup
   - Process cleanup
   - Memory leak prevention

4. **skipWatchedStreams Feature**
   - Global setting behavior
   - Screen-specific setting behavior
   - Interaction with favorites

5. **Race Conditions**
   - Multiple simultaneous stream starts
   - Network race conditions
   - Concurrent queue updates
</file>

<file path="tsconfig.server.json">
{
  "compilerOptions": {
    "allowJs": true,
    "checkJs": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "target": "ESNext",
    "outDir": "dist",
    "rootDir": "src",
    "paths": {
      "$lib/*": ["./src/lib/*"]
    },
    "types": ["node"]
  },
  "include": [
    "src/server/**/*.ts",
    "src/cli/**/*.ts",
    "src/types/**/*.ts",
    "src/config/**/*.ts",
    "src/lib/**/*.ts"
  ],
  "exclude": [
    "src/routes",
    "src/components",
    ".svelte-kit",
    "build",
    "dist",
    "node_modules/@types/mdx",
    "**/*.test.ts",
    "**/*.spec.ts",
    "**/__tests__/**"
  ]
}
</file>

<file path="src/__tests__/server/stream_manager.race.test.ts">
/**
 * Race condition tests for StreamManager
 * 
 * These tests focus on verifying proper handling of concurrent operations
 * and race conditions in the StreamManager class.
 */
import { describe, test, expect, beforeEach, afterEach, jest } from '@jest/globals';
import { mock } from 'jest-mock-extended';
import { StreamManager } from '../../server/stream_manager';
import { 
  createMockConfig, 
  createMockServices, 
  createMockStreamSource 
} from '../helpers/mock-factory';
import { 
  delay, 
  executeStaggered,
  ExecutionTracker 
} from '../helpers/async-utils';
import { TimerMock } from '../helpers/timer-mock';
import { queueService } from '../../server/services/queue_service';

// Mock the queue service
jest.mock('../../server/services/queue_service', () => {
  const mockQueueService = {
    setQueue: jest.fn(),
    getQueue: jest.fn().mockReturnValue([]),
    addToQueue: jest.fn(),
    clearQueue: jest.fn(),
    clearAllQueues: jest.fn(),
    getNextStream: jest.fn(),
    removeFromQueue: jest.fn(),
    markStreamAsWatched: jest.fn(),
    isStreamWatched: jest.fn().mockReturnValue(false),
    getWatchedStreams: jest.fn().mockReturnValue([]),
    clearWatchedStreams: jest.fn(),
    on: jest.fn(),
    off: jest.fn(),
    hasUnwatchedStreams: jest.fn().mockReturnValue(true),
    filterUnwatchedStreams: jest.fn(streams => streams),
    emit: jest.fn()
  };
  
  return { queueService: mockQueueService };
});

// Mock the logger to reduce noise
jest.mock('../../server/services/logger', () => {
  return {
    logger: {
      info: jest.fn(),
      debug: jest.fn(),
      warn: jest.fn(),
      error: jest.fn()
    }
  };
});

// Mock keyboard events
jest.mock('../../server/services/keyboard_events', () => {
  const mockEmitter = {
    on: jest.fn(),
    off: jest.fn(),
    emit: jest.fn()
  };
  
  return { keyboardEvents: mockEmitter };
});

describe('StreamManager Race Condition Tests', () => {
  let streamManager: StreamManager;
  let mockServices: ReturnType<typeof createMockServices>;
  let mockConfig: ReturnType<typeof createMockConfig>;
  let timerMock: TimerMock;
  let executionTracker: ExecutionTracker;
  
  beforeEach(() => {
    // Reset all mocks
    jest.clearAllMocks();
    
    // Create mock dependencies
    mockServices = createMockServices();
    mockConfig = createMockConfig();
    
    // Set up timer mock
    timerMock = new TimerMock();
    timerMock.install();
    
    // Create execution tracker for tracking async operations
    executionTracker = new ExecutionTracker();
    
    // Create StreamManager instance with mocked dependencies
    streamManager = new StreamManager(
      mockConfig,
      mockServices.holodexService,
      mockServices.twitchService,
      mockServices.youtubeService,
      mockServices.playerService
    );
  });
  
  afterEach(() => {
    // Restore timers
    timerMock.restore();
  });
  
  /**
   * Test that the queueProcessing lock prevents multiple concurrent
   * stream end handlers from processing the same screen
   */
  test('should prevent concurrent handleStreamEnd calls for the same screen', async () => {
    // Create mock stream sources
    const mockStream1 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/1' });
    const mockStream2 = createMockStreamSource({ screen: 1, url: 'https://youtube.com/2' });
    
    // Set up queue service to return different streams on consecutive calls
    (queueService.getNextStream as jest.Mock)
      .mockReturnValueOnce(mockStream1)
      .mockReturnValueOnce(mockStream2);
    
    // Track the streams that were started
    const startedStreams: string[] = [];
    
    // Mock the startStream method to track calls and add delay
    const originalStartStream = streamManager.startStream.bind(streamManager);
    streamManager.startStream = jest.fn().mockImplementation(async (options) => {
      executionTracker.record(`startStream:${options.url}`);
      startedStreams.push(options.url);
      // Add delay to simulate stream starting
      await delay(50);
      return originalStartStream(options);
    });
    
    // Call handleStreamEnd multiple times concurrently for the same screen
    // Use type assertion to access private method for testing
    // We need to use 'as any' to access private methods for testing purposes
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const manager = streamManager as any;
    
    await executeStaggered([
      () => {
        executionTracker.record('handleStreamEnd:call1');
        return manager.handleStreamEnd(1);
      },
      () => {
        executionTracker.record('handleStreamEnd:call2');
        return manager.handleStreamEnd(1);
      },
      () => {
        executionTracker.record('handleStreamEnd:call3');
        return manager.handleStreamEnd(1);
      }
    ], 10);
    
    // Verify that startStream was called only once
    expect(streamManager.startStream).toHaveBeenCalledTimes(1);
    
    // Verify that only the first stream was started
    expect(startedStreams).toEqual([mockStream1.url]);
    
    // Verify the execution order shows the lock working
    const events = executionTracker.getEvents();
    expect(events).toContain('handleStreamEnd:call1');
    expect(events).toContain('startStream:https://youtube.com/1');
    
    // The second and third calls should have been blocked by the queueProcessing lock
    expect(queueService.getNextStream).toHaveBeenCalledTimes(1);
  });
  
  /**
   * Test that skipWatchedStreams option is respected when multiple streams
   * are processed concurrently
   */
  test('should respect skipWatchedStreams setting during concurrent operations', async () => {
    // Create mock stream sources for different screens
    const mockStream1 = createMockStreamSource({ 
      screen: 1, 
      url: 'https://youtube.com/1',
      priority: 100
    });
    
    const mockStream2 = createMockStreamSource({ 
      screen: 2, 
      url: 'https://youtube.com/2',
      priority: 200
    });
    
    // Configure screens with different skipWatchedStreams settings
    mockConfig.player.screens[0].skipWatchedStreams = true;  // Screen 1
    mockConfig.player.screens[1].skipWatchedStreams = false; // Screen 2
    
    // Set up queue service
    (queueService.getNextStream as jest.Mock)
      .mockImplementation((screen) => {
        return screen === 1 ? mockStream1 : mockStream2;
      });
    
    // Mock isStreamWatched to return true for the first stream
    (queueService.isStreamWatched as jest.Mock)
      .mockImplementation((url) => {
        return url === mockStream1.url;
      });
    
    // Track the streams that were started
    const startedStreams: Array<{screen: number, url: string}> = [];
    
    // Mock the startStream method to track calls
    const originalStartStream = streamManager.startStream.bind(streamManager);
    streamManager.startStream = jest.fn().mockImplementation(async (options) => {
      executionTracker.record(`startStream:${options.screen}:${options.url}`);
      startedStreams.push({screen: options.screen, url: options.url});
      await delay(50); // Add delay to simulate stream starting
      return originalStartStream(options);
    });
    
    // Process streams for both screens concurrently
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const manager = streamManager as any;
    await Promise.all([
      manager.handleStreamEnd(1),
      manager.handleStreamEnd(2)
    ]);
    
    // Verify that startStream was called only for screen 2
    // since screen 1 has skipWatchedStreams=true and its stream is marked as watched
    expect(streamManager.startStream).toHaveBeenCalledTimes(1);
    
    // Verify that only screen 2's stream was started
    expect(startedStreams).toEqual([
      {screen: 2, url: mockStream2.url}
    ]);
    
    // Verify the stream on screen 1 was skipped due to being watched
    expect(queueService.removeFromQueue).toHaveBeenCalledWith(1, 0);
  });
  
  /**
   * Test that the StreamManager properly handles network race conditions
   * when fetching streams
   */
  test('should handle network race conditions when fetching streams', async () => {
    // Mock getLiveStreams to simulate different response times
    const fastStream = createMockStreamSource({ screen: 1, priority: 100 });
    const slowStream = createMockStreamSource({ screen: 1, priority: 200 });
    
    // First call returns quickly with one stream
    mockServices.holodexService.getLiveStreams.mockImplementationOnce(async () => {
      executionTracker.record('holodex:fast');
      await delay(10);
      return [fastStream];
    });
    
    // Second call takes longer but returns a different stream
    mockServices.twitchService.getLiveStreams.mockImplementationOnce(async () => {
      executionTracker.record('twitch:slow');
      await delay(100);
      return [slowStream];
    });
    
    // Third call fails with an error
    mockServices.youtubeService.getLiveStreams.mockImplementationOnce(async () => {
      executionTracker.record('youtube:error');
      await delay(50);
      throw new Error('Network error');
    });
    
    // Call getLiveStreams
    const streams = await streamManager.getLiveStreams();
    
    // Verify that both successful responses were combined
    expect(streams).toHaveLength(2);
    expect(streams).toContainEqual(expect.objectContaining({ url: fastStream.url }));
    expect(streams).toContainEqual(expect.objectContaining({ url: slowStream.url }));
    
    // Verify the execution order
    const events = executionTracker.getEvents();
    expect(events).toEqual([
      'holodex:fast',
      'youtube:error',
      'twitch:slow'
    ]);
  });
  
  /**
   * Test that the StreamManager properly handles a stream ending while
   * another stream is being processed
   */
  test('should handle a stream ending while another is being processed', async () => {
    // Create mock streams for different screens
    const mockStream1 = createMockStreamSource({ screen: 1 });
    const mockStream2 = createMockStreamSource({ screen: 2 });
    
    // Set up queue service
    (queueService.getNextStream as jest.Mock)
      .mockImplementation((screen) => {
        return screen === 1 ? mockStream1 : mockStream2;
      });
    
    // Mock startStream to add delay for screen 1
    const originalStartStream = streamManager.startStream.bind(streamManager);
    streamManager.startStream = jest.fn().mockImplementation(async (options) => {
      executionTracker.record(`startStream:${options.screen}`);
      
      // Add significant delay for screen 1 to ensure overlap
      if (options.screen === 1) {
        await delay(200);
      } else {
        await delay(50);
      }
      
      return originalStartStream(options);
    });
    
    // Start processing stream for screen 1 (will take longer)
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const manager = streamManager as any;
    const screen1Promise = manager.handleStreamEnd(1);
    
    // Wait a bit to ensure screen 1 processing has started
    await delay(20);
    
    // Start processing stream for screen 2 (will complete faster)
    const screen2Promise = manager.handleStreamEnd(2);
    
    // Wait for both to complete
    await Promise.all([screen1Promise, screen2Promise]);
    
    // Verify that startStream was called for both screens
    expect(streamManager.startStream).toHaveBeenCalledTimes(2);
    
    // Verify the execution order
    const events = executionTracker.getEvents();
    expect(events[0]).toBe('startStream:1');
    expect(events[1]).toBe('startStream:2');
    
    // Verify that both streams were marked as watched
    expect(queueService.markStreamAsWatched).toHaveBeenCalledWith(mockStream1.url);
    expect(queueService.markStreamAsWatched).toHaveBeenCalledWith(mockStream2.url);
  });
  
  /**
   * Test that the StreamManager properly handles errors during stream processing
   */
  test('should handle errors during stream processing without affecting other screens', async () => {
    // Create mock streams for different screens
    const mockStream1 = createMockStreamSource({ screen: 1 });
    const mockStream2 = createMockStreamSource({ screen: 2 });
    
    // Set up queue service
    (queueService.getNextStream as jest.Mock)
      .mockImplementation((screen) => {
        return screen === 1 ? mockStream1 : mockStream2;
      });
    
    // Mock startStream to fail for screen 1
    const originalStartStream = streamManager.startStream.bind(streamManager);
    streamManager.startStream = jest.fn().mockImplementation(async (options) => {
      executionTracker.record(`startStream:${options.screen}`);
      
      if (options.screen === 1) {
        throw new Error('Failed to start stream');
      }
      
      return originalStartStream(options);
    });
    
    // Process both screens concurrently
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const manager = streamManager as any;
    await Promise.all([
      manager.handleStreamEnd(1).catch(() => {
        executionTracker.record('screen1:error');
      }),
      manager.handleStreamEnd(2)
    ]);
    
    // Verify that startStream was called for both screens
    expect(streamManager.startStream).toHaveBeenCalledTimes(2);
    
    // Verify the execution order includes the error
    const events = executionTracker.getEvents();
    expect(events).toContain('startStream:1');
    expect(events).toContain('screen1:error');
    expect(events).toContain('startStream:2');
    
    // Verify that the queueProcessing lock was released for both screens
    // This is important to ensure future stream processing isn't blocked
    const queueProcessingField = (streamManager as any).queueProcessing;
    expect(queueProcessingField.has(1)).toBe(false);
    expect(queueProcessingField.has(2)).toBe(false);
  });
});
</file>

<file path="src/server/services/logger/index.ts">
import { createLogger, format, transports } from 'winston';
import { join } from 'path';

const logDir = join(process.cwd(), 'logs');

const winstonLogger = createLogger({
  level: 'debug',
  format: format.combine(
    format.timestamp(),
    format.errors({ stack: true }),
    format.splat(),
    format.json()
  ),
  defaultMeta: { service: 'livelink' },
  transports: [
    new transports.File({ filename: join(logDir, 'error.log'), level: 'error' }),
    new transports.File({ filename: join(logDir, 'combined.log') })
  ]
});

if (process.env.NODE_ENV !== 'production') {
  winstonLogger.add(new transports.Console({
    format: format.combine(
      format.colorize(),
      format.simple()
    )
  }));
}

type LogLevel = 'debug' | 'info' | 'warn' | 'error';
type LogError = Error | string | number;

interface LogContext {
  context: string;
  error?: {
    message?: string;
    stack?: string;
    details?: unknown;
  };
}

function formatError(error: LogError): LogContext['error'] {
  if (error instanceof Error) {
    return {
      message: error.message,
      stack: error.stack,
      details: error
    };
  }
  return {
    message: String(error)
  };
}

function log(level: LogLevel, message: string, context: string, error?: LogError) {
  const meta: LogContext = { context };
  if (error !== undefined) {
    meta.error = formatError(error);
  }
  winstonLogger.log(level, message, meta);
}

export const logger = {
  debug: (message: string, context: string, error?: LogError) => {
    log('debug', message, context, error);
  },
  info: (message: string, context: string, error?: LogError) => {
    log('info', message, context, error);
  },
  warn: (message: string, context: string, error?: LogError) => {
    log('warn', message, context, error);
  },
  error: (message: string, context: string, error?: LogError) => {
    log('error', message, context, error);
  }
};
</file>

<file path="DOCS.md">
# LiveLink Architecture

## Core Components
- Server (Node.js/Koa)
  - /src/server/
    - api.ts - Main server entry point
    - routes/ - API routes
    - services/ - Core services
    - db/ - Database interactions

## Key Services
1. PlayerService
   - Manages video player instances
   - Handles IPC communication with MPV
   - Manages stream lifecycle

2. StreamManager
   - Orchestrates multiple streams
   - Manages screen configurations
   - Handles queue management

3. QueueService
   - Manages stream queues per screen
   - Tracks watched streams
   - Handles queue updates

## Communication Flow
1. API Request → Koa Router → StreamManager → PlayerService
2. PlayerService ↔ MPV Player (via IPC)
3. StreamManager ↔ QueueService (via EventEmitter)

# Naming Conventions

## Files
- Services: `camelCase.ts` (e.g., playerService.ts)
- Types: `camelCase.ts` (e.g., streamTypes.ts)
- Components: `PascalCase.svelte`

## Variables/Functions
- Services: camelCase
- Event handlers: handleEventName
- Callbacks: onEventName
- Private methods: _methodName
- Constants: UPPER_SNAKE_CASE

## Types/Interfaces
- Base types: PascalCase (e.g., StreamOptions)
- Service interfaces: IPascalCase (e.g., IPlayerService)
- Event types: EventPascalCase (e.g., StreamEvent)

# Dependencies

## Core Dependencies
- koa - Web framework
- winston - Logging
- node-fetch - HTTP client
- @twurple - Twitch API client
- holodex.js - Holodex API client

## Import Order
1. Node.js built-ins
2. External packages
3. Project types
4. Project services
5. Project utilities

## Example
```typescript
import { EventEmitter } from 'events';  // Node.js built-in
import Koa from 'koa';                  // External package
import type { StreamOptions } from '../types/stream';  // Project types
import { logger } from './services/logger';  // Project services
import { formatTime } from './utils';        // Project utilities
```
```

4. **Design Patterns**
```markdown
# Design Patterns

## Service Pattern
- Services are singletons
- Services extend EventEmitter for pub/sub
- Services handle one specific domain

## Event-Driven Architecture
- Use EventEmitter for cross-service communication
- Define strict event types
- Document event payloads

## Error Handling
- Use typed errors
- Log errors with context
- Propagate errors to appropriate handlers

## Example Service Pattern
```typescript
export class ServiceName extends EventEmitter {
  private static instance: ServiceName;
  
  private constructor() {
    super();
    // initialization
  }

  public static getInstance(): ServiceName {
    if (!ServiceName.instance) {
      ServiceName.instance = new ServiceName();
    }
    return ServiceName.instance;
  }
}
```
```

5. **API Structure**
```markdown
# API Structure

## RESTful Endpoints
Base URL: /api

### Streams
- GET /streams/active - List active streams
- POST /streams/start - Start a stream
- DELETE /streams/:screen - Stop stream on screen
- GET /streams/queue/:screen - Get queue for screen

### Screens
- POST /screens/:screen/enable - Enable screen
- POST /screens/:screen/disable - Disable screen
- GET /screens/:screen - Get screen info

### Player
- POST /player/command/:screen - Send command to player
- POST /player/volume/:target - Set volume
- POST /player/seek/:target - Seek in stream

## Response Format
```typescript
interface ApiResponse<T> {
  success: boolean;
  data?: T;
  error?: string;
  message?: string;
}
```
```

6. **Configuration**
```markdown
# Configuration

## Environment Variables
- HOLODEX_API_KEY - Holodex API key
- TWITCH_CLIENT_ID - Twitch client ID
- TWITCH_CLIENT_SECRET - Twitch client secret
- PORT - Server port (default: 3001)

## Config Files
- config/
  - player.json - Player settings
  - streams.json - Stream configurations
  - favorites.json - Favorite channels
  - mpv.json - MPV player settings
  - streamlink.json - Streamlink settings

## Example Config
```json
{
  "player": {
    "preferStreamlink": false,
    "defaultQuality": "best",
    "defaultVolume": 0,
    "maxStreams": 2,
    "screens": []
  }
}
```
```
</file>

<file path="package.json">
{
	"name": "livelink",
	"version": "0.0.1",
	"scripts": {
		"dev": "vite dev",
		"build": "tsc && vite build",
		"build:server": "rm -rf dist && mkdir -p dist/{config/default,cli} && cp -r config/* dist/config/default/ && tsc -p tsconfig.server.json && echo '{\"type\":\"module\"}' > dist/package.json && chmod +x dist/cli/livelink.js",
		"preview": "vite preview",
		"server": "rm -rf logs && npm run build:server && node dist/server/api.js",
		"dev:all": "concurrently \"npm run dev\" \"npm run tsc:watch\" \"nodemon --watch dist/server --exec node dist/server/api.js\"",
		"dev:server": "npm run build:server && node dist/server/api.js",
		"start": "node dist/server/api.js",
		"start:all": "concurrently \"npm run preview\" \"npm run start\"",
		"build:all": "npm run build && npm run build:server",
		"clean": "rm -rf dist",
		"prebuild:server": "npm run clean",
		"cli": "node --loader ts-node/esm --experimental-specifier-resolution=node src/cli/livelink.ts",
		"prepare": "svelte-kit sync || echo ''",
		"prepack": "svelte-kit sync && svelte-package && publint",
		"check": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
		"check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
		"format": "prettier --write .",
		"lint": "prettier --check . && eslint .",
		"test:unit": "vitest",
		"test": "npm run test:unit -- --run && npm run test:e2e",
		"test:e2e": "playwright test",
		"test:jest": "NODE_OPTIONS=--experimental-vm-modules jest",
		"test:jest:watch": "NODE_OPTIONS=--experimental-vm-modules jest --watch",
		"test:jest:coverage": "NODE_OPTIONS=--experimental-vm-modules jest --coverage",
		"test:race": "NODE_OPTIONS=--experimental-vm-modules jest --testMatch='**/*race*.test.ts'",
		"test:network": "NODE_OPTIONS=--experimental-vm-modules jest --testMatch='**/*network*.test.ts'",
		"storybook": "storybook dev -p 6006",
		"build-storybook": "storybook build",
		"tsc:watch": "tsc -p tsconfig.server.json --watch"
	},
	"files": [
		"dist",
		"!dist/**/*.test.*",
		"!dist/**/*.spec.*"
	],
	"sideEffects": [
		"**/*.css"
	],
	"svelte": "./dist/index.js",
	"types": "./dist/index.d.ts",
	"type": "module",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"svelte": "./dist/index.js"
		}
	},
	"peerDependencies": {
		"svelte": "^5.0.0"
	},
	"devDependencies": {
		"@chromatic-com/storybook": "^3.2.4",
		"@eslint/compat": "^1.2.5",
		"@eslint/js": "^9.18.0",
		"@jest/globals": "^29.7.0",
		"@playwright/test": "^1.49.1",
		"@storybook/addon-essentials": "^8.5.1",
		"@storybook/addon-interactions": "^8.5.1",
		"@storybook/addon-svelte-csf": "^5.0.0-next.23",
		"@storybook/blocks": "^8.5.1",
		"@storybook/svelte": "^8.5.1",
		"@storybook/sveltekit": "^8.5.1",
		"@storybook/test": "^8.5.1",
		"@sveltejs/adapter-node": "^0.0.18",
		"@sveltejs/kit": "^2.16.0",
		"@sveltejs/package": "^2.0.0",
		"@sveltejs/vite-plugin-svelte": "^5.0.0",
		"@tailwindcss/container-queries": "^0.1.1",
		"@tailwindcss/forms": "^0.5.10",
		"@tailwindcss/typography": "^0.5.16",
		"@types/jest": "^29.5.12",
		"@types/koa-send": "^4.1.6",
		"@types/koa-static": "^4.0.4",
		"@types/ws": "^8.5.14",
		"autoprefixer": "^10.4.20",
		"concurrently": "^8.2.2",
		"eslint": "^9.18.0",
		"eslint-config-prettier": "^10.0.1",
		"eslint-plugin-jest": "^27.9.0",
		"eslint-plugin-svelte": "^2.46.1",
		"globals": "^15.14.0",
		"jest": "^29.7.0",
		"jest-environment-node": "^29.7.0",
		"jest-mock-extended": "^3.0.5",
		"mdsvex": "^0.12.3",
		"nodemon": "^3.1.9",
		"prettier": "^3.4.2",
		"prettier-plugin-svelte": "^3.3.3",
		"prettier-plugin-tailwindcss": "^0.6.10",
		"publint": "^0.3.2",
		"storybook": "^8.5.1",
		"svelte": "^5.0.0",
		"svelte-check": "^4.0.0",
		"tailwindcss": "^3.4.17",
		"ts-jest": "^29.1.2",
		"ts-node": "^10.9.2",
		"typescript": "^5.0.0",
		"typescript-eslint": "^8.20.0",
		"vite": "^6.0.0",
		"vitest": "^3.0.0"
	},
	"dependencies": {
		"-": "^0.0.1",
		"@inlang/paraglide-sveltekit": "^0.15.5",
		"@koa/cors": "^5.0.0",
		"@twurple/api": "^7.0.0",
		"@twurple/auth": "^7.0.0",
		"@types/koa": "^2.13.12",
		"@types/koa__cors": "^5.0.0",
		"@types/koa-bodyparser": "^4.3.12",
		"@types/koa-router": "^7.4.8",
		"bootstrap": "^5.3.3",
		"bootstrap-icons": "^1.11.3",
		"chalk": "^5.3.0",
		"commander": "^11.0.0",
		"concurrently": "^8.2.2",
		"dotenv": "^16.4.1",
		"holodex.js": "^2.0.5",
		"koa": "^2.15.3",
		"koa-bodyparser": "^4.4.1",
		"koa-router": "^13.0.1",
		"koa-send": "^5.0.1",
		"koa-static": "^5.0.0",
		"node-fetch": "^3.3.2",
		"node-global-key-listener": "^0.3.0",
		"sqlite": "^5.1.1",
		"sqlite3": "^5.1.7",
		"typesafe-i18n": "^5.26.2",
		"winston": "^3.11.0",
		"zod": "^3.22.4"
	},
	"bin": {
		"livelink": "./dist/cli/livelink.js"
	}
}
</file>

<file path="tsconfig.test.json">
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "module": "NodeNext",
    "target": "ES2020",
    "moduleResolution": "NodeNext",
    "allowJs": true,
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "skipLibCheck": true,
    "types": ["jest", "node"],
    "noEmit": true
  },
  "include": ["src/**/*.ts", "src/**/*.tsx", "src/**/*.js", "src/**/*.jsx"],
  "exclude": ["node_modules"]
}
</file>

<file path="src/config/default/config.json">
{
  "streams": [
    {
      "id": 1,
      "enabled": true,
      "screen": 1,
      "skipWatchedStreams": false,
      "sources": [
        {
          "type": "holodex",
          "subtype": "favorites",
          "enabled": true,
          "limit": 200,
          "priority": 1
        },
        {
          "type": "holodex",
          "subtype": "organization",
          "name": "Hololive",
          "enabled": true,
          "limit": 100,
          "priority": 2
        },
        {
          "type": "holodex",
          "subtype": "organization",
          "name": "Phase Connect",
          "enabled": true,
          "limit": 15,
          "priority": 3
        },
        {
          "type": "holodex",
          "subtype": "organization",
          "name": "Nijisanji",
          "enabled": true,
          "limit": 3,
          "priority": 4
        },
        {
          "type": "holodex",
          "subtype": "organization",
          "name": "Independents",
          "enabled": true,
          "limit": 2,
          "priority": 5
        }
      ],
      "sorting": {
        "field": "viewerCount",
        "order": "desc"
      },
      "refresh": 300,
      "autoStart": true
    },
    {
      "id": 2,
      "enabled": true,
      "screen": 2,
      "skipWatchedStreams": false,
      "sources": [
        {
          "type": "twitch",
          "subtype": "favorites",
          "enabled": true,
          "limit": 100,
          "priority": 1
        },
        {
          "type": "holodex",
          "subtype": "favorites",
          "enabled": true,
          "limit": 100,
          "priority": 2
        },
        {
          "type": "holodex",
          "subtype": "organization",
          "name": "Hololive",
          "enabled": true,
          "limit": 50,
          "priority": 3
        }
      ],
      "sorting": {
        "fields": [
          {
            "field": "priority",
            "order": "asc"
          },
          {
            "field": "viewerCount",
            "order": "desc"
          }
        ]
      },
      "refresh": 300,
      "autoStart": true
    }
  ],
  "organizations": [],
  "favoriteChannels": {
    "groups": {
      "default": {
        "description": "Default favorite channels",
        "priority": 100
      },
      "high_priority": {
        "description": "High priority favorite channels",
        "priority": 50
      },
      "must_watch": {
        "description": "Must watch channels",
        "priority": 10
      },
      "mid_priority": {
        "description": "Mid priority channels",
        "priority": 3
      },
      "low_priority": {
        "description": "Low priority channels",
        "priority": 1
      }
    },
    "holodex": {
      "mid_priority": [
        "UC54JqsuIbMw_d1Ieb4hjKoQ",
        "UCIfAvpeIWGHb0duCkMkmm2Q",
        "UC6T7TJZbW6nO-qsc5coo8Pg",
        "UC5CwaMl1eIgY8h02uZw7u8A",
        "UC7YXqPO3eUnxbJ6rN0z2z1Q",
        "UComInW10MkHJs-_vi4rHQCQ",
        "UC4WvIIAo89_AzGUh1AZ6Dkg",
        "UCt30jJgChL8qeT9VPadidSw",
        "UC3K7pmiHsNSx1y0tdx2bbCw",
        "UCcHHkJ98eSfa5aj0mdTwwLQ",
        "UCJ46YTYBQVXsfsp8-HryoUA"
      ],
      "high_priority": [],
      "must_watch": []
    },
    "twitch": {
      "default": [
        "amemiyanazuna",
        "nekoko88",
        "rosemilovelock",
        "ksonsouchou",
        "sakuramiko_hololive",
        "nakiriayame_hololive",
        "natsuiromatsuri_hololive",
        "laplusdarknesss_hololive",
        "dooby3D",
        "vei",
        "anny",
        "vedal987",
        "filian",
        "henyathegenius",
        "projektmelody",
        "apricot",
        "ironmouse",
        "silvervale",
        "harukakaribu",
        "matarakan",
        "nyanners",
        "aquwa",
        "batatvideogames",
        "tobs",
        "hestiahappiness",
        "akatsukidhotaru",
        "dokibird",
        "ninaninin",
        "shylily",
        "kanekolumi",
        "fallenshadow",
        "pocketchalk",
        "vividlyvivi",
        "inislein",
        "soyapoya",
        "kitanya_is_here",
        "tenma",
        "prayersfromabigail",
        "toma",
        "yuniiho",
        "sushidog",
        "lolotus",
        "yuzu",
        "parasi",
        "nekrolina",
        "grimmivt",
        "emikotone",
        "batatacompepino",
        "nanoless",
        "nyhzumi",
        "cerbervt",
        "AkariiNyan",
        "ywuria",
        "mariamarionette",
        "saruei",
        "squchan",
        "sayu",
        "kiri_komayama",
        "alekirser",
        "nihmune",
        "tevin_vr",
        "michimochievee",
        "geega",
        "kikipyonpyon",
        "BluebellEVE",
        "NeonHarper",
        "laynalazar",
        "grape",
        "k9kuro",
        "snuffy",
        "camila",
        "momo",
        "Hininhas",
        "suwie",
        "lucypyre",
        "meat",
        "marimari_en",
        "sissikawaii_",
        "fefe",
        "oliviamonroe",
        "VamppyChan",
        "ynasshi",
        "HalO_Sweety",
        "felnoutte",
        "suliadh",
        "sinder",
        "vampy",
        "lilyhops",
        "roflgator",
        "murdercrumpet",
        "zentreya",
        "vitongemaplys",
        "nuxtaku",
        "lordaethelstan",
        "toshiruz",
        "jaidenanimations",
        "limealicious",
        "emiru",
        "cellbit",
        "sotibllec",
        "matta",
        "felps",
        "amdreyoung"
      ],
      "high_priority": [],
      "must_watch": []
    },
    "youtube": {
      "default": [],
      "high_priority": [],
      "must_watch": []
    }
  },
  "holodex": {
    "apiKey": "926cc588-f596-4470-86bd-db1a9b635013"
  },
  "twitch": {
    "clientId": "wtl7mwep6n5o1bgcpr0m1v6kae38ia",
    "clientSecret": "f4rkji0woysvs7zd79ex5c4ijp951a",
    "streamersFile": "streamers.json"
  },
  "player": {
    "defaultQuality": "best",
    "defaultVolume": 0,
    "windowMaximized": true,
    "maxStreams": 2,
    "autoStart": true,
    "force_player": false,
    "screens": [
      {
        "id": 1,
        "screen": 1,
        "enabled": true,
        "width": 1920,
        "height": 1080,
        "x": 1366,
        "y": 0,
        "volume": 0,
        "quality": "best",
        "windowMaximized": true,
        "playerType": "both",
        "primary": true
      },
      {
        "id": 2,
        "screen": 2,
        "enabled": true,
        "width": 1366,
        "height": 768,
        "x": 0,
        "y": 312,
        "volume": 0,
        "quality": "best",
        "windowMaximized": true,
        "playerType": "both",
        "primary": false
      }
    ]
  },
  "mpv": {
    "border": "no"
  },
  "streamlink": {
    "path": "streamlink",
    "mpv": {
      "border": "no"
    },
    "options": {
      "player": "mpv",
      "default-stream": "best",
      "stream-timeout": "60",
      "player-no-close": true,
      "twitch-disable-hosting": true,
      "twitch-disable-ads": true,
      "twitch-low-latency": true,
      "retry-max": "3",
      "retry-streams": "3",
      "ringbuffer-size": "32M",
      "player-continuous-http": true,
      "stream-segment-attempts": "3"
    }
  },
  "filters": {
    "filters": [
      "Holostars",
      "HOLOSTARS",
      "HoloStars",
      "holostarsen",
      "holostarsJP",
      "花咲みやび",
      "奏手イヅル",
      "アルランディス",
      "律可",
      "アステル・レダ",
      "岸堂天真",
      "夕刻ロベル",
      "影山シエン",
      "荒咬オウガ",
      "夜十神封魔",
      "羽継烏有",
      "水無世燐央",
      "緋崎ガンマ",
      "Hanasaki Miyabi",
      "HanasakiMiyabi",
      "Kanade Izuru",
      "KanadeIzuru",
      "Arurandeisu",
      "Rikka",
      "Astel Leda",
      "AstelLeda",
      "Kishido Temma",
      "KishidoTemma",
      "Yukoku Roberu",
      "YukokuRoberu",
      "Kageyama Shien",
      "KageyamaShien",
      "Aragami Oga",
      "AragamiOga",
      "Yatogami Fuma",
      "YatogamiFuma",
      "Utsugi Uyu",
      "UtsugiUyu",
      "Minase Rio",
      "MinaseRio",
      "Hizaki Gamma",
      "HizakiGamma",
      "Regis Altare",
      "RegisAltare",
      "Magni Dezmond",
      "MagniDezmond",
      "Axel Syrios",
      "AxelSyrios",
      "Noir Vesper",
      "NoirVesper",
      "Gavis Bettel",
      "GavisBettel",
      "Machina X Flayon",
      "MachinaXFlayon",
      "Banzoin Hakka",
      "BanzoinHakka",
      "Josuiji Shinri",
      "JosuijiShinri"
    ]
  }
}
</file>

<file path="src/config/loader.ts">
import path from 'path';
import * as fs from 'fs';
import type { FavoriteChannels, Config, PlayerSettings, ScreenConfig } from '../types/stream.js';
import { logger } from '../server/services/logger.js';

function loadJsonFile<T>(filename: string): T {
  const configDir = process.env.LIVELINK_CONFIG || path.join(process.cwd(), 'config');
  const filePath = path.join(configDir, path.basename(filename));
  const fileContents = fs.readFileSync(filePath, 'utf-8');
  return JSON.parse(fileContents) as T;
}

export interface PlayerConfig {
  defaultQuality: string;
  preferStreamlink: boolean;
  defaultVolume: number;
  windowMaximized: boolean;
  maxStreams: number;
  autoStart: boolean;
  force_player: boolean;
  screens: Array<{
    id: number;
    width: number;
    height: number;
    x: number;
    y: number;
    primary: boolean;
  }>;
}

export function loadAllConfigs(): Config {
  try {
    // Load individual config files
    const favorites = loadJsonFile<FavoriteChannels>('favorites.json');
    const streams = loadJsonFile<{ streams: ScreenConfig[]; organizations: string[] }>('streams.json');
    const player = loadJsonFile<PlayerSettings & { screens: ScreenConfig[] }>('player.json');
    const mpv = loadJsonFile<Config['mpv']>('mpv.json');
    const streamlink = loadJsonFile<Config['streamlink']>('streamlink.json');
    const filters = loadJsonFile<{ filters: string[] }>('filters.json');

    // Merge into a single config object
    const config: Config = {
      streams: streams.streams || [],
      organizations: streams.organizations || [],
      favoriteChannels: favorites,
  holodex: {
        apiKey: process.env.HOLODEX_API_KEY || ''
      },
      twitch: {
        clientId: process.env.TWITCH_CLIENT_ID || '',
        clientSecret: process.env.TWITCH_CLIENT_SECRET || '',
        streamersFile: 'streamers.json'
      },
      player: {
        ...player,
        screens: player.screens || []
      },
      mpv,
      streamlink,
      filters
    };

    return config;
  } catch (error) {
    // If any config file is missing, use default config
    logger.warn('Failed to load config files, using default config', 'ConfigLoader');
    logger.debug(
      error instanceof Error ? error.message : String(error),
      'ConfigLoader'
    );
    
    return {
      streams: [],
      organizations: [],
      favoriteChannels: {
        groups: {
          default: {
            description: 'Default favorite channels',
            priority: 100
          }
        },
        holodex: { default: [] },
        twitch: { default: [] },
        youtube: { default: [] }
      },
      holodex: {
        apiKey: process.env.HOLODEX_API_KEY || ''
      },
  twitch: {
        clientId: process.env.TWITCH_CLIENT_ID || '',
        clientSecret: process.env.TWITCH_CLIENT_SECRET || '',
        streamersFile: 'streamers.json'
      },
      player: {
        preferStreamlink: false,
        defaultQuality: 'best',
        defaultVolume: 50,
        windowMaximized: false,
        maxStreams: 4,
        autoStart: true,
        force_player: false,
        screens: [
          {
            id: 1,
            screen: 1,
            enabled: true,
            width: 1280,
            height: 720,
            x: 0,
            y: 0,
            volume: 50,
            quality: 'best',
            windowMaximized: false,
            primary: true,
            sources: [],
            sorting: {
              field: 'viewerCount',
              order: 'desc'
            },
            refresh: 300,
            autoStart: true
          },
          {
            id: 2,
            screen: 2,
            enabled: true,
            width: 1280,
            height: 720,
            x: 1280,
            y: 0,
            volume: 50,
            quality: 'best',
            windowMaximized: false,
            primary: false,
            sources: [],
            sorting: {
              field: 'viewerCount',
              order: 'desc'
            },
            refresh: 300,
            autoStart: true
          }
        ]
      },
      mpv: {
        priority: 'normal',
        'gpu-context': 'auto'
      },
      streamlink: {
        path: '',
        options: {},
        http_header: {}
      },
  filters: {
        filters: []
      }
    };
  }
}

export function saveConfig(config: Config): void {
  // Save each part of the config to its respective file
  const configDir = process.env.LIVELINK_CONFIG || path.join(process.cwd(), 'config');

  // Save favorites
  fs.writeFileSync(
    path.join(configDir, 'favorites.json'),
    JSON.stringify(config.favoriteChannels, null, 2)
  );

  // Save streams and organizations
  fs.writeFileSync(
    path.join(configDir, 'streams.json'),
    JSON.stringify({
      streams: config.streams,
      organizations: config.organizations
    }, null, 2)
  );

  // Save player settings
  fs.writeFileSync(
    path.join(configDir, 'player.json'),
    JSON.stringify(config.player, null, 2)
  );

  // Save MPV settings
  fs.writeFileSync(
    path.join(configDir, 'mpv.json'),
    JSON.stringify(config.mpv, null, 2)
  );

  // Save streamlink settings
  fs.writeFileSync(
    path.join(configDir, 'streamlink.json'),
    JSON.stringify(config.streamlink, null, 2)
  );

  // Save filters
  fs.writeFileSync(
    path.join(configDir, 'filters.json'),
    JSON.stringify(config.filters, null, 2)
  );
}

export function saveFavorites(favorites: FavoriteChannels): void {
  const configDir = process.env.LIVELINK_CONFIG || path.join(process.cwd(), 'config');
  const favoritesPath = path.join(configDir, 'favorites.json');
  fs.writeFileSync(favoritesPath, JSON.stringify(favorites, null, 2));
}
</file>

<file path="src/server/index.ts">
import { logger } from './services/logger.js';
import { streamManager } from './stream_manager.js';
import type { StreamInstance } from '../types/stream_instance.js';
import { exec } from 'child_process';
import { StreamInfo } from '../types/stream.js';

// Handle multiple termination signals
const signals = ['SIGINT', 'SIGTERM', 'SIGQUIT'];

let isShuttingDown = false;

// Add this before server startup
// Check if API keys are set
const holodexApiKey = process.env.HOLODEX_API_KEY;
const twitchClientId = process.env.TWITCH_CLIENT_ID;
const twitchClientSecret = process.env.TWITCH_CLIENT_SECRET;

if (!holodexApiKey) {
  logger.error('HOLODEX_API_KEY is not set in environment variables', 'Server');
  logger.error('Holodex streams will not be available', 'Server');
}

if (!twitchClientId || !twitchClientSecret) {
  logger.error('TWITCH_CLIENT_ID or TWITCH_CLIENT_SECRET is not set in environment variables', 'Server');
  logger.error('Twitch streams will not be available', 'Server');
}

async function shutdown() {
  if (isShuttingDown) return;
  isShuttingDown = true;

  logger.info('Shutting down server...', 'Server');
  
  try {
    // Force kill all MPV processes
    const activeStreams = streamManager.getActiveStreams();
    const killPromises = activeStreams.map(async (stream: StreamInfo) => {
      const processInstance = stream as unknown as StreamInstance;
      if (processInstance.process) {
        const childProcess = processInstance.process as unknown as { pid: number };
        if (childProcess.pid) {
          try {
            // Try SIGINT first
            process.kill(childProcess.pid, 'SIGINT');
            
            // Wait a bit and force kill if still running
            await new Promise(resolve => setTimeout(resolve, 2000));
            try {
              // Check if process still exists
              process.kill(childProcess.pid, 0);
              // If we get here, process still exists, force kill it
              process.kill(childProcess.pid, 'SIGKILL');
            } catch (e) {
              // Process doesn't exist anymore, which is good
            }
          } catch (e) {
            // Process might already be gone, try SIGKILL
            try {
              process.kill(childProcess.pid, 'SIGKILL');
            } catch {
              // Ignore if process is already gone
            }
          }
        }
      }
    });

    // Wait for all processes to be killed
    await Promise.all(killPromises);

    // Kill any remaining mpv processes
    try {
      await new Promise((resolve, reject) => {
        exec('pkill -9 mpv', (error) => {
          if (error && error.code !== 1) { // code 1 means no processes found
            reject(error);
          } else {
            resolve(undefined);
          }
        });
      });
    } catch (error) {
      logger.error('Error killing remaining mpv processes', 'Server', error as Error);
    }

    // Kill any remaining streamlink processes
    try {
      await new Promise((resolve, reject) => {
        exec('pkill -9 streamlink', (error) => {
          if (error && error.code !== 1) { // code 1 means no processes found
            reject(error);
          } else {
            resolve(undefined);
          }
        });
      });
    } catch (error) {
      logger.error('Error killing remaining streamlink processes', 'Server', error as Error);
    }

    // Cleanup resources
    await streamManager.cleanup();
    
    // Final delay to ensure all cleanup is complete
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    process.exit(0);
  } catch (error) {
    logger.error('Error during shutdown', 'Server', error as Error);
    process.exit(1);
  }
}

// Register signal handlers
signals.forEach(signal => {
  process.on(signal, () => {
    logger.info(`Received ${signal} signal`, 'Server');
    void shutdown();
  });
});

// Handle uncaught exceptions
process.on('uncaughtException', (error) => {
  logger.error('Uncaught exception', 'Server', error);
  void shutdown();
});

// Handle unhandled rejections
process.on('unhandledRejection', (reason) => {
  logger.error('Unhandled rejection', 'Server', reason as Error);
  void shutdown();
});
</file>

<file path=".gitignore">
test-results
node_modules

# Output
.output
.vercel
.netlify
.wrangler
/.svelte-kit
/build
/dist

# OS
.DS_Store
Thumbs.db

# Env
.env
.env.*
!.env.example
!.env.test

# Vite
vite.config.js.timestamp-*
vite.config.ts.timestamp-*

# Paraglide
src/lib/paraglide

# User configuration
src/config/user/*
!src/config/user/.gitkeep

# Environment variables
.env
.history

# Database
data/
*.db
src/config/default/favorites.json
!src/config/default/.gitkeep
logs/
scripts/mpv
*.jpg
*.png
*.gif
*.mp4
*.mp3
*.wav
*.ogg
*.flac
*.aac
*.m4a
*.m4v
*.mov
*.avi
*.mkv
*.webm
*.mpg
*.mpeg
*.log
</file>

<file path="jest.config.js">
/** @type {import('ts-jest').JestConfigWithTsJest} */
export default {
  testEnvironment: 'node',
  preset: 'ts-jest',
  roots: ['<rootDir>/src'],
  testMatch: ['**/__tests__/**/*.ts?(x)', '**/?(*.)+(spec|test).ts?(x)'],
  transform: {
    '^.+\\.tsx?$': [
      'ts-jest',
      {
        tsconfig: 'tsconfig.test.json'
      },
    ],
  },
  moduleNameMapper: {
    '^@/(.*)$': '<rootDir>/src/$1',
    '^([.]{1,2}/.*)\\.js$': '$1'
  },
  collectCoverage: true,
  coverageDirectory: 'coverage',
  collectCoverageFrom: [
    'src/**/*.{ts,tsx}',
    '!src/**/*.d.ts',
    '!src/types/**',
    '!src/config/**',
    '!src/**/__tests__/**'
  ],
  coverageReporters: ['text', 'lcov', 'clover', 'html'],
  setupFilesAfterEnv: ['./jest.setup.js'],
  verbose: true,
  // Support ESM modules
  extensionsToTreatAsEsm: ['.ts', '.tsx'],
  transformIgnorePatterns: [
    'node_modules/(?!(.*\\.mjs$|@/.*|holodex\\.js))'
  ]
};
</file>

<file path="jest.setup.js">
// Global test setup for Jest
import { jest, beforeEach, afterEach } from '@jest/globals';

// Set longer timeout for async tests
jest.setTimeout(10000);

// Create mock functions for console to reduce noise
const originalConsole = { ...console };
globalThis.console = {
  ...console,
  // Keep error logging but suppress other logs during tests
  log: jest.fn(),
  info: jest.fn(),
  debug: jest.fn(),
  warn: jest.fn(),
  // Keep error for debugging test failures
  error: originalConsole.error,
};

// Helper to reset all mocks between tests
beforeEach(() => {
  jest.clearAllMocks();
});

// Clean up any pending timers
afterEach(() => {
  jest.clearAllTimers();
});
</file>

<file path="src/server/config.ts">
import type { ScreenConfig, PlayerSettings, FavoriteChannels } from '../types/stream.js';

export interface Config {
  screens: ScreenConfig[];
  streams: Array<{
    id: number;
    enabled: boolean;
    screen: number;
    sources: Array<{
      type: string;
      subtype?: string;
      name?: string;
      enabled: boolean;
      limit: number;
      priority: number;
      tags?: string[];
    }>;
    sorting: {
      field: string;
      order: 'asc' | 'desc';
    };
    refresh: number;
    autoStart: boolean;
    quality: string;
    volume: number;
    windowMaximized: boolean;
  }>;
  organizations: string[];
  favoriteChannels: FavoriteChannels;
  holodex: {
    apiKey: string;
  };
  twitch: {
    clientId: string;
    clientSecret: string;
    streamersFile: string;
  };
  player: PlayerSettings & {
    screens: ScreenConfig[];
  };
  mpv: {
    priority?: string;
    'gpu-context'?: string;
  };
  streamlink: {
    path?: string;
    options?: Record<string, string>;
    http_header?: Record<string, string>;
  };
}

export const defaultConfig: Config = {
  screens: [],
  streams: [
    {
      id: 1,
      enabled: true,
      screen: 1,
      sources: [
        {
          type: 'holodex',
          subtype: 'favorites',
          enabled: true,
          limit: 25,
          priority: 1
        },
        {
          type: 'holodex',
          subtype: 'organization',
          name: 'Hololive',
          enabled: true,
          limit: 25,
          priority: 2
        },
        {
          type: 'holodex',
          subtype: 'organization',
          name: 'Independents',
          enabled: true,
          limit: 25,
          priority: 4
        }
      ],
      sorting: {
        field: 'viewerCount',
        order: 'desc'
      },
      refresh: 300,
      autoStart: true,
      quality: 'best',
      volume: 100,
      windowMaximized: false
    },
    {
      id: 2,
      enabled: true,
      screen: 2,
      sources: [
        {
          type: 'twitch',
          subtype: 'favorites',
          enabled: true,
          limit: 100,
          priority: 2
        },
        {
          type: 'twitch',
          enabled: true,
          limit: 25,
          priority: 3,
          tags: ['vtuber']
        }
      ],
      sorting: {
        field: 'viewerCount',
        order: 'desc'
      },
      refresh: 300,
      autoStart: true,
      quality: 'best',
      volume: 0,
      windowMaximized: false
    }
  ],
  organizations: [],
  favoriteChannels: {
    groups: {
      default: {
        description: 'Default favorite channels',
        priority: 100
      }
    },
    holodex: { default: [] },
    twitch: { default: [] },
    youtube: { default: [] }
  },
  holodex: {
    apiKey: process.env.HOLODEX_API_KEY || ''
  },
  twitch: {
    clientId: process.env.TWITCH_CLIENT_ID || '',
    clientSecret: process.env.TWITCH_CLIENT_SECRET || '',
    streamersFile: 'config/streamers.txt'
  },
  player: {
    preferStreamlink: false,
    defaultQuality: 'best',
    defaultVolume: 50,
    windowMaximized: false,
    maxStreams: 4,
    autoStart: true,
    processPriority: 'normal',
    windowMode: 'windowed',
    force_player: false,
    screens: []
  },
  mpv: {
    priority: 'normal',
    'gpu-context': 'auto'
  },
  streamlink: {
    path: '',
    options: {},
    http_header: {}
  }
};
</file>

<file path="src/types/stream_instance.ts">
import type { ChildProcess } from 'child_process';

/** Platform type for streams */
export type StreamPlatform = 'youtube' | 'twitch';

/** Represents a running stream process */
export interface StreamInstance {
  id: number;
  screen: number;
  url: string;
  quality: string;
  status: 'playing' | 'paused' | 'stopped' | 'error';
  volume: number;
  process: ChildProcess | null;
  /** Stream title (if available) */
  title?: string;
  /** Platform the stream is from */
  platform: StreamPlatform;
  progress?: number;
  watched?: boolean;
  playlist?: StreamInstance[];
  error?: string;
  startTime?: number;
  duration?: number;
}

/** Stream process output data */
export interface StreamOutput {
  screen: number;
  data: string;
  type: 'stdout' | 'stderr';
}

/** Stream process error data */
export interface StreamError {
  screen: number;
  error: string;
  code?: number;
  /** URL of the stream that caused the error (if available) */
  url?: string;
  /** Whether to move to the next stream in queue (true) or retry same stream (false) */
  moveToNext?: boolean;
}

export interface StreamEnd {
  screen: number;
  code?: number;
}

export interface StreamResponse {
  /** Screen number the operation was performed on */
  screen: number;
  /** Success or error message */
  message?: string;
  /** Whether the operation was successful */
  success: boolean;
  /** Error details if operation failed */
  error?: string;
}
</file>

<file path="src/config/default/streamlink.json">
{
  "path": "streamlink",
  "mpv": {
    "border": "no"
  },
  "options": {
    "player": "mpv",
    "default-stream": "best",
    "stream-timeout": "60",
    "player-no-close": true,
    "twitch-disable-hosting": true,
    "twitch-disable-ads": true,
    "twitch-low-latency": true,
    "retry-max": "3",
    "retry-streams": "3",
    "ringbuffer-size": "32M",
    "player-continuous-http": true,
    "stream-segment-attempts": "3"
  }
}
</file>

<file path="src/server/workers/player_worker.ts">
import { isMainThread, parentPort, workerData } from 'worker_threads';
import { PlayerService } from '../services/player.js';
import { loadAllConfigs } from '../../config/loader.js';
import type { 
  WorkerMessage, 
  WorkerResponse
} from '../../types/stream.js';
import type {
  StreamOutput,
  StreamError
} from '../../types/stream_instance.js';
import { logger } from '../services/logger.js';

if (!isMainThread) {
  // Load config
  const config = loadAllConfigs();

  // Initialize player service with config
  const player = new PlayerService(config);
  const { streamId } = workerData;
  
  parentPort?.on('message', async (message: WorkerMessage) => {
    try {
      switch (message.type) {
        case 'start': {
          const { screen, ...options } = message.data;
          const result = await player.startStream({
            ...options,
            screen: screen || streamId, // Use streamId as fallback
            config: {
              screen: screen || streamId,
              id: screen || streamId,
              enabled: true,
              volume: options.volume || 50,
              quality: options.quality || 'best',
              windowMaximized: options.windowMaximized || false,
              sources: [],
              sorting: { field: 'viewerCount', order: 'desc' },
              refresh: 300,
              autoStart: true
            }
          });
          parentPort?.postMessage({ 
            type: 'startResult', 
            data: result 
          } as WorkerResponse);
          break;
        }
          
        case 'stop': {
          const success = await player.stopStream(message.data);
          parentPort?.postMessage({ 
            type: 'stopResult', 
            data: success 
          } as WorkerResponse);
          break;
        }
          
        case 'setVolume': {
          // TODO: Implement volume control
          break;
        }
          
        case 'setQuality': {
          // TODO: Implement quality changes
          break;
        }
      }
    } catch (error) {
      logger.error(
        'Player worker error',
        'PlayerWorker',
        error instanceof Error ? error : new Error(String(error))
      );
      parentPort?.postMessage({ 
        type: 'error', 
        error: error instanceof Error ? error.message : String(error)
      } as WorkerResponse);
    }
  });

  player.onStreamOutput((data: StreamOutput) => {
    parentPort?.postMessage({ 
      type: 'output', 
      data: { streamId, ...data } 
    } as WorkerResponse);
  });

  player.onStreamError((data: StreamError) => {
    parentPort?.postMessage({ 
      type: 'streamError', 
      data: { streamId, ...data } 
    } as WorkerResponse);
  });

  logger.info(`Player worker ${streamId} initialized`, 'PlayerWorker');
}
</file>

<file path="src/config/default/player.json">
{
  "defaultQuality": "best",
  "defaultVolume": 0,
  "windowMaximized": true,
  "maxStreams": 2,
  "autoStart": true,
  "force_player": false,
  "screens": [
    {
      "id": 1,
      "screen": 1,
      "enabled": true,
      "width": 1920,
      "height": 1080,
      "x": 1366,
      "y": 0,
      "volume": 0,
      "quality": "best",
      "windowMaximized": true,
      "playerType": "both",
      "primary": true
    },
    {
      "id": 2,
      "screen": 2,
      "enabled": true,
      "width": 1366,
      "height": 768,
      "x": 0,
      "y": 312,
      "volume": 0,
      "quality": "best",
      "windowMaximized": true,
      "playerType": "both",
      "primary": false
    }
  ]
}
</file>

<file path="src/types/stream.ts">
import type { HelixStream } from '@twurple/api';
import type { Video, Channel } from 'holodex.js';
import type { StreamOutput, StreamError as StreamInstanceError } from './stream_instance.js';
import type { ChildProcess } from 'child_process';

export interface WorkerStreamOptions {
  url: string;
  screen: number;
  quality?: string;
  windowMaximized?: boolean;
  volume?: number;
  streamId: number;
}

export type WorkerMessage = 
  | { type: 'start'; data: WorkerStreamOptions }
  | { type: 'stop'; data: number }
  | { type: 'setVolume'; data: { streamId: number; volume: number } }
  | { type: 'setQuality'; data: { streamId: number; quality: string } };

export type WorkerResponse = 
  | { type: 'startResult'; data: StreamResponse }
  | { type: 'stopResult'; data: boolean }
  | { type: 'error'; error: string }
  | { type: 'output'; data: StreamOutput }
  | { type: 'streamError'; data: StreamInstanceError };

export type StreamSourceStatus = 'live' | 'upcoming' | 'ended';
export type PlayerStatus = 'playing' | 'paused' | 'stopped' | 'error';

/**
 * Represents a stream source from various platforms
 */
export interface StreamSource {
  /** Unique identifier for the stream */
  id?: string | number;
  /** URL of the stream */
  url: string;
  /** Title of the stream */
  title?: string;
  /** Platform the stream is from (twitch, youtube, etc.) */
  platform?: 'youtube' | 'twitch';
  /** Current viewer count */
  viewerCount?: number;
  /** Thumbnail URL */
  thumbnail?: string;
  /** Channel name */
  channel?: string;
  /** Channel ID */
  channelId?: string;
  /** Status of the stream at source (live, upcoming, etc.) */
  sourceStatus?: 'live' | 'upcoming' | 'ended' | 'offline';
  /** Start time of the stream */
  startTime?: number;
  /** End time of the stream */
  endTime?: string;
  /** Duration of the stream in seconds */
  duration?: number;
  /** Priority of the stream (lower number = higher priority) */
  priority?: number;
  /** Tags associated with the stream */
  tags?: string[];
  /** Screen number this stream is assigned to */
  screen?: number;
  /** Organization the stream belongs to */
  organization?: string;
  /** Source subtype (favorites, organization, etc.) */
  subtype?: string;
  /** Quality setting of the stream */
  quality?: string;
  /** Volume level (0-100) */
  volume?: number;
  /** Current playback status */
  status?: string;
}

/**
 * Represents an active stream with additional runtime information
 */
export interface Stream extends StreamSource {
  /** Screen number this stream is playing on */
  screen: number;
  /** Quality setting of the stream */
  quality: string;
  /** Current volume level (0-100) */
  volume: number;
  /** Current playback status */
  status?: 'playing' | 'paused' | 'buffering' | 'stopped' | 'error';
  /** Current playback position in seconds */
  position?: number;
  /** Error message if status is 'error' */
  error?: string;
  /** Queue of upcoming streams for this screen */
  queue?: StreamSource[];
  /** Process ID of the player process */
  pid?: number;
  /** Player process */
  process: ChildProcess | null;
  /** Player status */
  playerStatus: PlayerStatus;
}

/**
 * Configuration for a stream screen
 */
export interface ScreenConfig {
  /** Screen identifier */
  screen: number;
  /** Screen ID */
  id: number;
  /** Whether this screen is enabled */
  enabled: boolean;
  /** Whether to skip streams that have been watched */
  skipWatchedStreams?: boolean;
  /** Default volume level (0-100) */
  volume: number;
  /** Default quality setting */
  quality: string;
  /** Whether the window should be maximized */
  windowMaximized: boolean;
  /** Player type to use for this screen (streamlink or mpv) */
  playerType?: 'streamlink' | 'mpv' | 'both';
  /** X position of the window */
  windowX?: number;
  /** Y position of the window */
  windowY?: number;
  /** Width of the window */
  windowWidth?: number;
  /** Height of the window */
  windowHeight?: number;
  /** Width of the screen */
  width?: number;
  /** Height of the screen */
  height?: number;
  /** X position of the screen */
  x?: number;
  /** Y position of the screen */
  y?: number;
  /** Whether this is the primary screen */
  primary?: boolean;
  /** Stream sources for this screen */
  sources?: Array<{
    /** Source type (holodex, twitch, youtube) */
    type: string;
    /** Source subtype (favorites, organization, etc.) */
    subtype?: string;
    /** Whether this source is enabled */
    enabled: boolean;
    /** Priority of this source (lower number = higher priority) */
    priority?: number;
    /** Maximum number of streams to fetch */
    limit?: number;
    /** Name of the organization (for holodex) */
    name?: string;
    /** Tags to filter by */
    tags?: string[];
  }>;
  /** Sorting configuration */
  sorting?: {
    /** Field to sort by */
    field: string;
    /** Sort order */
    order: 'asc' | 'desc';
  };
  /** Refresh interval in seconds */
  refresh?: number;
  /** Whether to auto-start streams on this screen */
  autoStart?: boolean;
  /** Additional screen-specific settings */
  [key: string]: unknown;
}

/**
 * Global player settings
 */
export interface PlayerSettings {
  /** Default volume level (0-100) */
  defaultVolume: number;
  /** Default quality setting */
  defaultQuality: string;
  /** Process priority for the player */
  processPriority: 'normal' | 'high' | 'realtime' | 'above_normal' | 'below_normal' | 'low' | 'idle';
  /** Window mode for the player */
  windowMode: 'windowed' | 'fullscreen' | 'borderless';
  /** Whether to prefer streamlink over direct playback */
  preferStreamlink: boolean;
  /** Whether to maximize the window by default */
  windowMaximized: boolean;
  /** Maximum number of concurrent streams */
  maxStreams: number;
  /** Whether to auto-start streams on startup */
  autoStart: boolean;
  /** Whether to force player to always be running for each enabled screen */
  force_player: boolean;
}

/**
 * Options for starting a stream
 */
export interface StreamOptions {
  /** URL of the stream to play */
  url: string;
  /** Screen number to play on */
  screen?: number;
  /** Quality setting */
  quality?: string;
  /** Volume level (0-100) */
  volume?: number;
  /** Whether to maximize the window */
  windowMaximized?: boolean;
  /** Additional player arguments */
  playerArgs?: string[];
  /** Title of the stream */
  title?: string;
  /** Current viewer count */
  viewerCount?: number;
  /** Start time of the stream */
  startTime?: string | number;
}

/**
 * Response from stream operations
 */
export interface StreamResponse {
  /** Screen number the operation was performed on */
  screen: number;
  /** Success or error message */
  message?: string;
  /** Whether the operation was successful */
  success: boolean;
  /** Error details if operation failed */
  error?: string;
}

/**
 * Favorite group configuration
 */
export interface FavoriteGroup {
  /** Description of the favorite group */
  description: string;
  /** Priority of the favorite group (lower number = higher priority) */
  priority: number;
}

/**
 * Favorite groups configuration
 */
export interface FavoriteGroups {
  /** Map of group names to group configurations */
  [groupName: string]: FavoriteGroup;
}

/**
 * Platform-specific favorite channels by group
 */
export interface PlatformFavorites {
  /** Map of group names to channel IDs */
  [groupName: string]: string[];
}

/**
 * Enhanced favorite channels configuration with groups
 */
export interface FavoriteChannels {
  /** Favorite groups configuration */
  groups: FavoriteGroups;
  /** Holodex channel IDs by group */
  holodex: PlatformFavorites;
  /** Twitch channel IDs/names by group */
  twitch: PlatformFavorites;
  /** YouTube channel IDs by group */
  youtube: PlatformFavorites;
}

export interface MpvConfig {
  vo?: 'gpu' | 'x11';
  'gpu-context'?: string;
  'gpu-api'?: string;
  hwdec?: string;
  border?: string;
  'keep-open'?: string;
  'force-window'?: string;
  'stop-screensaver'?: string;
  'ytdl-format'?: string;
  'demuxer-max-bytes'?: string;
  'demuxer-max-back-bytes'?: string;
  'stream-buffer-size'?: string;
  'cache-secs'?: string;
  'cache-pause'?: string;
  'force-seekable'?: string;
  priority?: string;
  'x11-bypass-compositor'?: string;
  'vd-lavc-threads'?: string;
  'ad-lavc-threads'?: string;
  [key: string]: string | undefined;
}

export interface StreamlinkOptions {
  player?: string;
  'default-stream'?: string;
  'stream-segment-threads'?: string;
  'stream-timeout'?: string;
  'hls-segment-threads'?: string;
  'player-no-close'?: boolean;
  'twitch-disable-hosting'?: boolean;
  'twitch-disable-ads'?: boolean;
  'twitch-low-latency'?: boolean;
  'retry-max'?: string;
  'retry-streams'?: string;
  'ringbuffer-size'?: string;
  'hls-live-edge'?: string;
  'hls-segment-attempts'?: string;
  'player-continuous-http'?: boolean;
  'stream-segment-attempts'?: string;
  [key: string]: string | boolean | undefined;
}

export interface StreamlinkConfig {
  path: string;
  mpv?: MpvConfig;
  options?: StreamlinkOptions;
  http_header?: Record<string, string>;
  args?: string[];
}

/**
 * Complete application configuration
 */
export interface Config {
  /** Whether to skip streams that have been watched (global setting) */
  skipWatchedStreams?: boolean;
  /** Player settings */
  player: {
    /** Default quality setting */
    defaultQuality: string;
    /** Default volume level (0-100) */
    defaultVolume: number;
    /** Whether to maximize the window by default */
    windowMaximized: boolean;
    /** Maximum number of concurrent streams */
    maxStreams: number;
    /** Whether to auto-start streams on startup */
    autoStart: boolean;
    /** Whether to prefer streamlink over direct playback */
    preferStreamlink: boolean;
    /** Whether to force player to always be running for each enabled screen */
    force_player: boolean;
    /** Configuration for each screen */
    screens: ScreenConfig[];
  };
  /** Stream source configurations */
  streams: ScreenConfig[];
  /** Holodex API configuration */
  holodex: {
    /** Holodex API key */
    apiKey: string;
  };
  /** Twitch API configuration */
  twitch: {
    /** Twitch client ID */
    clientId: string;
    /** Twitch client secret */
    clientSecret: string;
    /** Path to streamers file */
    streamersFile?: string;
  };
  /** Organizations to include */
  organizations: string[];
  /** Favorite channels configuration */
  favoriteChannels: FavoriteChannels;
  /** MPV player configuration */
  mpv?: MpvConfig;
  /** Streamlink configuration */
  streamlink?: StreamlinkConfig;
  /** Filters configuration */
  filters?: {
    /** List of filters - can be either simple strings or complex filter objects */
    filters: Array<string | {
      /** Filter type */
      type: string;
      /** Filter value */
      value: string;
      /** Whether to include or exclude */
      include: boolean;
    }>;
  };
}

export interface TwitchTokenData {
  accessToken: string;
  refreshToken: string;
  expiresIn: number;
}

export type TwitchStream = HelixStream;
export type HolodexVideo = Video;
export type HolodexChannel = Channel;

export interface StreamLimits {
  organization?: string;
  limit?: number;
}

export type StreamSourceType = 'holodex' | 'twitch' | 'youtube' |  'favorites';
export type StreamSourceSubtype = 'favorites' | 'organization' | null;

export interface StreamService {
  updateFavorites(channels: string[]): void;
}

export interface StreamSourceConfig {
  type: StreamSourceType;
  subtype?: StreamSourceSubtype;
  name?: string;
  enabled: boolean;
  limit: number;
  priority: number;
  tags?: string[];
  language?: string;
  channels?: string[]; // For favorite channels
}

export interface StreamUpdate {
  type: 'streamUpdate';
  data: {
    stream: Stream;
  };
}

export interface QueueUpdate {
  type: 'queueUpdate';
  data: {
    screen: number;
    queue: StreamSource[];
  };
}

export interface ScreenUpdate {
  type: 'screenUpdate';
  data: {
    screen: number;
    config: ScreenConfig;
  };
}

export interface SettingsUpdate {
  type: 'settingsUpdate';
  data: {
    settings: PlayerSettings;
  };
}

export interface ErrorUpdate {
  type: 'error';
  data: {
    message: string;
  };
}

export type WebSocketMessage = 
  | StreamUpdate 
  | QueueUpdate 
  | ScreenUpdate 
  | SettingsUpdate 
  | ErrorUpdate;

export interface GetStreamsOptions {
  channels?: string[];
  organization?: string;
  limit?: number;
  sort?: 'viewers' | 'start_scheduled';
  tags?: string[];
}

export interface StreamInfo {
  screen: number;
  url: string;
  title?: string;
  platform?: 'youtube' | 'twitch';
  viewerCount?: number;
  startTime?: number;
  quality?: string;
  volume?: number;
  status?: string;
}

export interface StreamError {
  screen: string;
  url: string;
  error: string;
}

export interface StreamEnd {
  screen: string;
  url: string;
}
</file>

<file path="src/config/default/mpv.json">
{
  "border": "no"
}
</file>

<file path="src/server/services/twitch.ts">
import { ApiClient, type HelixStream } from '@twurple/api';
import { RefreshingAuthProvider } from '@twurple/auth';
import type { TwitchAuth } from '../db/database.js';
import type { StreamSource, StreamService } from '../../types/stream.js';
import { logger } from './logger.js';

interface GetTwitchStreamsOptions {
  channels?: string[];
  limit?: number;
  sort?: 'viewers' | 'started_at';
  tags?: string[];
  language?: string;
}

export class TwitchService implements StreamService {
  private client: ApiClient | null = null;
  private clientId: string;
  private clientSecret: string;
  private authProvider: RefreshingAuthProvider | null = null;
  private filters: string[] = [];
  private favoriteChannels: string[] = [];

  constructor(clientId: string, clientSecret: string, filters: string[] = []) {
    this.clientId = clientId;
    this.clientSecret = clientSecret;
    this.filters = filters;

    try {
      this.authProvider = new RefreshingAuthProvider({
        clientId,
        clientSecret,
      });
      this.client = new ApiClient({ authProvider: this.authProvider });
      logger.info('Twitch service initialized', 'TwitchService');
    } catch (error) {
      logger.warn('Failed to initialize Twitch service - some features will be disabled', 'TwitchService');
      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');
    }
  }

  async getStreams(options: GetTwitchStreamsOptions): Promise<StreamSource[]> {
    if (!this.client) return [];

    try {
      const limit = options.limit || 25;
      const channels = options.channels || [];
      let results: StreamSource[] = [];
      
      // If we have channels to fetch
      if (channels.length > 0) {
        // Process channels in batches of 100 (Twitch API limit)
        const batches: string[][] = [];
        for (let i = 0; i < channels.length; i += 100) {
          const batchChannels = channels.slice(i, i + 100);
          batches.push(batchChannels);
        }

        // Fetch all batches in parallel
        const batchResults = await Promise.all(
          batches.map(batchChannels =>
            this.client!.streams.getStreams({
              userName: batchChannels,
              ...(options.language ? { language: options.language } : {})
            }).catch(error => {
              logger.error(
                `Failed to fetch batch of streams: ${error instanceof Error ? error.message : String(error)}`,
                'TwitchService'
              );
              return { data: [] };
            })
          )
        );

        // Combine all batch results
        results = batchResults.flatMap(batch => 
          batch.data.map(stream => ({
            url: `https://twitch.tv/${stream.userName}`,
            title: stream.title,
            platform: 'twitch' as const,
            viewerCount: stream.viewers,
            startTime: stream.startDate.getTime(),
            sourceStatus: 'live' as const,
            channelId: stream.userName.toLowerCase()
          }))
        );

        // If we have a limit, apply it after combining all results
        if (limit) {
          results = results.slice(0, limit);
        }
      } else {
        // No specific channels, just fetch by limit and language
        const streams = await this.client.streams.getStreams({
          limit,
          ...(options.language ? { language: options.language } : {})
        });

        results = streams.data.map(stream => ({
          url: `https://twitch.tv/${stream.userName}`,
          title: stream.title,
          platform: 'twitch' as const,
          viewerCount: stream.viewers,
          startTime: stream.startDate.getTime(),
          sourceStatus: 'live' as const,
          channelId: stream.userName.toLowerCase()
        }));
      }

      // If these are favorite channels, then re-sort preserving favorite order
      if (channels && channels.length > 0) {
        // Create a map of channel IDs to their original position in the favorites array
        const channelOrderMap = new Map<string, number>();
        channels.forEach((channelId, index) => {
          channelOrderMap.set(channelId.toLowerCase(), index);
        });

        // Sort results based on original channel order
        results.sort((a, b) => {
          // If either stream doesn't have a channelId, put it last
          if (!a.channelId) return 1;
          if (!b.channelId) return -1;
          
          const aOrder = channelOrderMap.get(a.channelId) ?? Number.MAX_SAFE_INTEGER;
          const bOrder = channelOrderMap.get(b.channelId) ?? Number.MAX_SAFE_INTEGER;
          return aOrder - bOrder;
        });
      }

      logger.info(`Found ${results.length} Twitch streams`, 'TwitchService');
      return results;
    } catch (error) {
      logger.error(
        'Failed to get Twitch streams',
        'TwitchService',
        error instanceof Error ? error : new Error(String(error))
      );
      return [];
    }
  }

  async getVTuberStreams(limit = 50): Promise<StreamSource[]> {
    if (!this.client) return [];

    try {
      // First, search for channels with VTuber tag
      const channels = await this.client.search.searchChannels('vtuber', {
        liveOnly: true,
        limit
      });

      // Convert to StreamSource format
      const results = channels.data.map(channel => ({
        url: `https://twitch.tv/${channel.name}`,
        title: channel.displayName,
        platform: 'twitch' as const,
        viewerCount: 0, // Not available in search results
        startTime: Date.now(), // Not available in search results
        sourceStatus: channel.isLive ? 'live' as const : 'offline' as const,
        channelId: channel.name.toLowerCase(),
        tags: channel.tags || []
      }));

      // Filter to only live streams with VTuber tag
      const vtuberStreams = results.filter(stream => 
        stream.sourceStatus === 'live' && 
        stream.tags?.some(tag => tag.toLowerCase() === 'vtuber')
      );

      // Get actual stream data for live channels to get viewer counts
      if (vtuberStreams.length > 0) {
        const streamData = await this.client.streams.getStreams({
          userName: vtuberStreams.map(s => s.channelId),
          limit: vtuberStreams.length
        });

        // Update viewer counts and start times
        for (const stream of streamData.data) {
          const matchingStream = vtuberStreams.find(
            s => s.channelId === stream.userName.toLowerCase()
          );
          if (matchingStream) {
            matchingStream.viewerCount = stream.viewers;
            matchingStream.startTime = stream.startDate.getTime();
          }
        }
      }

      // Sort by viewer count
      //vtuberStreams.sort((a, b) => (b.viewerCount || 0) - (a.viewerCount || 0));

      logger.info(`Found ${vtuberStreams.length} VTuber streams on Twitch`, 'TwitchService');
      return vtuberStreams;
    } catch (error) {
      logger.error(
        'Failed to get VTuber streams',
        'TwitchService',
        error instanceof Error ? error : new Error(String(error))
      );
      return [];
    }
  }

  async getJapaneseStreams(limit = 50): Promise<StreamSource[]> {
    return this.getStreams({
      limit,
      language: 'ja'
    });
  }

  async getFollowedStreams(userId: string): Promise<StreamSource[]> {
    if (!this.client || !this.authProvider) {
      logger.warn('User not authenticated', 'TwitchService');
      return [];
    }

    try {
      const userClient = new ApiClient({ authProvider: this.authProvider });
      // @ts-expect-error - Twitch API types are incomplete
      const follows = await userClient.users.getFollows({ userId });
      const channelIds = follows.data.map((follow: { followedUserId: string }) => follow.followedUserId);
      
      const streams = await this.client.streams.getStreamsByUserIds(channelIds);
      const streamData = (streams as unknown as { data: HelixStream[] }).data;
      
      return streamData.map(stream => ({
        url: `https://twitch.tv/${stream.userName}`,
        title: stream.title,
        platform: 'twitch' as const,
        viewerCount: stream.viewers
      }));
    } catch (error) {
      logger.error(
        'Failed to fetch followed streams', 
        'TwitchService',
        error instanceof Error ? error : new Error(String(error))
      );
      return [];
    }
  }

  async setUserAuth(auth: TwitchAuth): Promise<void> {
    try {
      if (!this.authProvider) {
        throw new Error('Twitch service not initialized');
      }

      await this.authProvider.addUserForToken({
        accessToken: auth.accessToken,
        refreshToken: auth.refreshToken,
        expiresIn: Math.floor((auth.expiresAt - Date.now()) / 1000),
        obtainmentTimestamp: Date.now()
      }, ['user:read:follows']);

      logger.info(`Twitch user auth set for user ${auth.userId}`, 'TwitchService');
    } catch (error) {
      logger.error('Failed to set Twitch user auth', 'TwitchService');
      logger.debug(error instanceof Error ? error.message : String(error), 'TwitchService');
      throw error;
    }
  }

  updateFavorites(channels: string[]): void {
    this.favoriteChannels = channels;
  }
}
</file>

<file path="src/config/default/streams.json">
{
	"skipWatchedStreams": false,
	"streams": [
		{
			"id": 1,
			"enabled": true,
			"screen": 1,
			"skipWatchedStreams": false,
			"sources": [
				{
					"type": "holodex",
					"subtype": "favorites",
					"enabled": true,
					"limit": 200,
					"priority": 1
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Hololive",
					"enabled": true,
					"limit": 100,
					"priority": 2
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Phase Connect",
					"enabled": true,
					"limit": 15,
					"priority": 3
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "VSpo",
					"enabled": true,
					"limit": 30,
					"priority": 4
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Nijisanji",
					"enabled": true,
					"limit": 10,
					"priority": 5
				},

				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Varium",
					"enabled": true,
					"limit": 30,
					"priority": 6
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "VEE",
					"enabled": true,
					"limit": 30,
					"priority": 7
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "VOMS",
					"enabled": true,
					"limit": 50,
					"priority": 8
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": ".LIVE",
					"enabled": true,
					"limit": 30,
					"priority": 9
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "VReverie",
					"enabled": true,
					"limit": 30,
					"priority": 10
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "V4Mirai",
					"enabled": true,
					"limit": 11,
					"priority": 40
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Independents",
					"enabled": true,
					"limit": 50,
					"priority": 12
				}
			],
			"sorting": {
				"field": "viewerCount",
				"order": "desc"
			},
			"refresh": 300,
			"autoStart": true
		},
		{
			"id": 2,
			"enabled": true,
			"screen": 2,
			"skipWatchedStreams": false,
			"sources": [
				{
					"type": "twitch",
					"subtype": "favorites",
					"enabled": true,
					"limit": 500,
					"priority": 1
				},
				{
					"type": "holodex",
					"subtype": "organization",
					"name": "Twitch Independents",
					"enabled": true,
					"limit": 50,
					"priority": 2
				}
			],
			"sorting": {
				"fields": [
					{ "field": "priority", "order": "asc" },
					{ "field": "viewerCount", "order": "desc" }
				]
			},
			"refresh": 300,
			"autoStart": true
		}
	]
}
</file>

<file path="src/server/services/holodex.ts">
import { 
  HolodexApiClient,
  type VideoStatus,
  type Video,
  type VideoType,
} from 'holodex.js';
import type { VideoRaw } from 'holodex.js';
import type { StreamSource, Config } from '../../types/stream.js';
import { logger } from './logger.js';
import type { StreamService } from '../../types/stream.js';

interface GetLiveStreamsOptions {
  channels?: string[];
  organization?: string;
  limit?: number;
  sort?: 'start_scheduled' | 'available_at' | 'live_viewers';
}

export class HolodexService implements StreamService {
  private client: HolodexApiClient | null = null;
  private favoriteChannels: string[];
  private filters: string[];
  private config: Config;

  constructor(apiKey: string, filters: string[], favoriteChannels: string[], config: Config) {
    this.favoriteChannels = favoriteChannels;
    this.filters = filters;
    this.config = config;

    try {
      this.client = new HolodexApiClient({
        apiKey: apiKey
      });
      logger.info('Holodex service initialized', 'HolodexService');
    } catch (error) {
      logger.warn('Failed to initialize Holodex service - some features will be disabled', 'HolodexService');
      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');
    }
  }

  async getLiveStreams(options: GetLiveStreamsOptions): Promise<StreamSource[]> {
    try {
      if (!this.client) {
        logger.warn('Holodex service not initialized - returning empty streams', 'HolodexService');
        return [];
      }

      const params: Record<string, string | number> = {
        limit: options.limit || 25,
        sort: options.sort || 'live_viewers',
        order: options.sort === 'available_at' ? 'asc' : 'desc'
      };

      const organization = options?.organization;
      const channels = options?.channels;

      let videos: Video[];
      const channelOrderMap = new Map<string, number>();
      
      if (channels && channels.length > 0) {
        // Create a map of channel IDs to their original position in the favorites array
        channels.forEach((channelId, index) => {
          channelOrderMap.set(channelId, index);
        });
        
        logger.info(`Fetching streams for ${channels.length} favorite Holodex channels`, 'HolodexService');
        logger.debug(`Holodex favorite channels: ${channels.join(', ')}`, 'HolodexService');
        
        // Fetch all channels in parallel but preserve order
        const promises = channels.map(channelId => {
          // Use more inclusive parameters for channel searches
          const params = {
            channel_id: channelId,
            type: 'stream' as VideoType, // Use 'stream' type instead of 'live'
            status: 'live,upcoming' as VideoStatus, // Include both live and upcoming streams
            max_upcoming_hours: 48, // Allow upcoming streams up to 48 hours ahead
            sort: 'available_at' as keyof VideoRaw & string
          };
          
          logger.debug(`Fetching streams for channel ${channelId} with params: ${JSON.stringify(params)}`, 'HolodexService');
          
          return this.client!.getLiveVideos(params).catch(error => {
            logger.error(`Failed to fetch streams for channel ${channelId}`, 'HolodexService');
            logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');
            return [];
          });
        });
        
        const results = await Promise.all(promises);
        
        // Log individual channel results
        channels.forEach((channelId, index) => {
          logger.debug(`Channel ${channelId} returned ${results[index].length} videos`, 'HolodexService');
        });
        
        // Flatten results but maintain channel order
        videos = [];
        channels.forEach((channelId, index) => {
          const channelVideos = results[index];
          // Don't filter by channel ID since we're requesting by channel ID already
          // This fixes issues with collabs where the primary channel ID might not match
          
          if (channelVideos && channelVideos.length > 0) {
            // Sort videos for each channel: live first, then by start time
            channelVideos.sort((a, b) => {
              if (a.status === 'live' && b.status !== 'live') return -1;
              if (a.status !== 'live' && b.status === 'live') return 1;
              
              // For upcoming streams, sort by available_at
              const aTime = a.availableAt ? new Date(a.availableAt).getTime() : 0;
              const bTime = b.availableAt ? new Date(b.availableAt).getTime() : 0;
              return aTime - bTime;
            });
            
            logger.debug(`Adding ${channelVideos.length} videos from channel ${channelId}`, 'HolodexService');
            videos.push(...channelVideos);
          }
        });
        
        logger.info(`Found ${videos.length} live/upcoming streams from favorite channels`, 'HolodexService');
      } else {
        // Fetch streams by organization or all
        if (organization) {
          params.org = organization;
        }

        logger.debug(`Fetching ${params.limit} live streams${organization ? ` for ${organization}` : ''}`, 'HolodexService');
        videos = await this.client.getLiveVideos(params);
      }

      logger.info(`Found ${videos.length} live streams`, 'HolodexService');
      if (videos.length > 0) {
        logger.debug(`Stream details: ${JSON.stringify(videos.slice(0, 3).map(v => ({
          title: v.title,
          channel: v.channel?.name,
          viewers: v.liveViewers,
          id: v.videoId,
          status: v.status
        })))}`, 'HolodexService');
      }

      // Filter out channels that should be excluded
      const filteredVideos = videos.filter(video => {
        if (this.isChannelFiltered(video)) {
          logger.info(`Filtering out video from channel ${video.channel?.name}`, 'HolodexService');
          return false;
        }
        return true;
      });
      if (videos.length !== filteredVideos.length) {
        logger.info(`Some videos were filtered out due to channel exclusions`, 'HolodexService');
      }
      // Convert to StreamSource format with channel order preserved
      const streamSources = filteredVideos.map(video => {
        const channelId = video.channel?.channelId;
        const channelOrder = channelId && channels?.includes(channelId) ? channelOrderMap.get(channelId) : undefined;
        
        return {
          url: `https://youtube.com/watch?v=${video.videoId}`,
          title: video.title,
          platform: 'youtube' as const,
          viewerCount: video.liveViewers,
          thumbnail: video.channel?.avatarUrl,
          startTime: video.actualStart ? new Date(video.actualStart).getTime() : 
                    video.availableAt ? new Date(video.availableAt).getTime() : undefined,
          sourceStatus: video.status === 'live' ? 'live' as const : 
                       video.status === 'upcoming' ? 'upcoming' as const : 'ended' as const,
          channelId: channelId,
          organization: video.channel?.organization,
          // Set priority based on channel order for favorites
          priority: channelOrder !== undefined ? channelOrder : undefined,
          // Tag streams from favorites for easier identification
          subtype: channels?.includes(channelId) ? 'favorites' : undefined
        };
      });

      // Sort streams based on context
      if (channels && channels.length > 0) {
        // For favorites, sort by:
        // 1. Channel order in favorites
        // 2. Live status (live before upcoming)
        // 3. Viewer count for same channel
        streamSources.sort((a, b) => {
          // First by channel order (favorites order)
          const aOrder = a.priority ?? 999;
          const bOrder = b.priority ?? 999;
          if (aOrder !== bOrder) return aOrder - bOrder;
          
          // Then by live status
          if (a.sourceStatus === 'live' && b.sourceStatus !== 'live') return -1;
          if (a.sourceStatus !== 'live' && b.sourceStatus === 'live') return 1;
          
          // Finally by viewer count
          return (b.viewerCount || 0) - (a.viewerCount || 0);
        });
      } else {
        // For non-favorite streams, sort by:
        // 1. Live status
        // 2. Viewer count
        streamSources.sort((a, b) => {
          // First by live status
          if (a.sourceStatus === 'live' && b.sourceStatus !== 'live') return -1;
          if (a.sourceStatus !== 'live' && b.sourceStatus === 'live') return 1;
          
          // Then by viewer count
          return (b.viewerCount || 0) - (a.viewerCount || 0);
        });
      }

      return streamSources;
    } catch (error) {
      logger.error('Failed to fetch Holodex live streams', 'HolodexService');
      logger.debug(error instanceof Error ? error.message : String(error), 'HolodexService');
      return [];
    }
  }

  async getFavoriteStreams(): Promise<StreamSource[]> {
    if (!this.client) return [];

    try {
      const promises = this.favoriteChannels.map(channelId =>
        this.client!.getLiveVideos({ 
          channel_id: channelId,
          status: 'live' as VideoStatus,
          max_upcoming_hours: 0
        })
      );

      const videoArrays = await Promise.all(promises);
      const videos = videoArrays.flat();

      return videos.map(video => ({
        url: `https://youtube.com/watch?v=${video.videoId}`,
        title: video.title,
        platform: 'youtube' as const,
        viewerCount: video.liveViewers,
        channelId: video.channel?.channelId,
        organization: video.channel?.organization
      }));
    } catch (error) {
      logger.error(
        'Failed to fetch favorite streams', 
        'HolodexService',
        error instanceof Error ? error : new Error(String(error))
      );
      return [];
    }
  }

  private isChannelFiltered(video: Video): boolean {
    const channelId = video.channel?.channelId;
    const channelName = video.channel?.name;
    const englishName = video.channel?.englishName;
    
    // If channel is in favorites, don't filter it
    if (channelId && this.favoriteChannels.includes(channelId)) {
      logger.debug(`Channel ${channelName || englishName || channelId} is in favorites, not filtering`, 'HolodexService');
      return false;
    }
    
    // If no channel names, don't filter
    if (!channelName && !englishName) {
      return false;
    }

    // Normalize channel names: lowercase and remove all spaces and special characters
    const normalizedNames = [
      channelName?.toLowerCase().replace(/[\s\-_]+/g, ''),
      englishName?.toLowerCase().replace(/[\s\-_]+/g, '')
    ].filter(Boolean);
    
    // Check if any of the normalized names are in the filters list
    const isFiltered = this.filters.some(filter => {
      const normalizedFilter = filter.toLowerCase().replace(/[\s\-_]+/g, '');
      return normalizedNames.some(name => name?.includes(normalizedFilter));
    });
    
    if (isFiltered) {
      logger.debug(`Channel ${channelName || englishName || channelId} matched filter, excluding from results`, 'HolodexService');
      return true;
    }
    
    return false;
  }

  public updateFavorites(channels: string[]): void {
    if (!channels || !Array.isArray(channels)) {
      logger.warn('Invalid Holodex favorite channels provided, ignoring update', 'HolodexService');
      return;
    }
    
    logger.info(`Updating Holodex favorites with ${channels.length} channels`, 'HolodexService');
    logger.debug(`New Holodex favorites: ${channels.join(', ')}`, 'HolodexService');
    this.favoriteChannels = channels;
  }
}
</file>

<file path="src/server/services/queue_service.ts">
import { EventEmitter } from 'events';
import type { StreamSource } from '../../types/stream.js';
import { logger } from './logger.js';

export interface QueueEvents {
  'queue:updated': (screen: number, queue: StreamSource[]) => void;
  'queue:empty': (screen: number) => void;
  'all:watched': (screen: number) => void;
}

interface FavoritesNode {
  priority: number;
  startTime: number;
  currentIndex: number;
  totalFavorites: number;
  nextNode: FavoritesNode | null;
  prevNode: FavoritesNode | null;
}

class QueueService extends EventEmitter {
  private queues: Map<number, StreamSource[]> = new Map();
  private watchedStreams: Set<string> = new Set();

  constructor() {
    super();
    logger.info('QueueService initialized', 'QueueService');
  }

  // Queue Management
  public setQueue(screen: number, queue: StreamSource[]): void {
    if (!queue || !Array.isArray(queue)) {
      logger.warn(`Invalid queue array provided for screen ${screen}`, 'QueueService');
      return;
    }

    // Filter out any null or undefined entries
    const validQueue = queue.filter(item => item && item.url);

    // Initialize favorites tracking
    const favorites = validQueue.filter(s => s.subtype === 'favorites')
      .sort((a, b) => (a.priority ?? 999) - (b.priority ?? 999));
    
    // Create root node
    const rootNode: FavoritesNode = {
      priority: 999,
      startTime: 0,
      currentIndex: -1,
      totalFavorites: favorites.length,
      nextNode: null,
      prevNode: null
    };

    // Build initial node chain from favorites
    let currentNode = rootNode;
    favorites.forEach((fav, idx) => {
      const favTime = fav.startTime ? 
        (typeof fav.startTime === 'string' ? new Date(fav.startTime).getTime() : fav.startTime) : 0;
      
      const newNode: FavoritesNode = {
        priority: fav.priority ?? 999,
        startTime: favTime,
        currentIndex: idx,
        totalFavorites: favorites.length,
        nextNode: null,
        prevNode: currentNode
      };
      currentNode.nextNode = newNode;
      currentNode = newNode;
    });

    // Sort the queue using the node chain for comparison
    const sortedQueue = validQueue.sort((a, b) => {
      const aPriority = a.priority ?? 999;
      const bPriority = b.priority ?? 999;
      const aIsFavorite = a.subtype === 'favorites';
      const bIsFavorite = b.subtype === 'favorites';

      // If one is a favorite and the other isn't, favorite comes first
      if (aIsFavorite && !bIsFavorite) return -1;
      if (!aIsFavorite && bIsFavorite) return 1;

      // If priorities are different, sort by priority
      if (aPriority !== bPriority) {
        return aPriority - bPriority;
      }

      // If both are favorites, use node chain for ordering
      if (aIsFavorite && bIsFavorite) {
        // Find nodes for both streams
        let node: FavoritesNode | null = rootNode;
        let aNode: FavoritesNode | null = null;
        let bNode: FavoritesNode | null = null;

        while (node && (!aNode || !bNode)) {
          if (node.priority === aPriority) aNode = node;
          if (node.priority === bPriority) bNode = node;
          node = node.nextNode;
        }

        if (aNode && bNode) {
          // Compare based on node order
          return aNode.currentIndex - bNode.currentIndex;
        }
      }

      return 0;
    });
    
    // Check if the queue has actually changed before updating and emitting events
    const currentQueue = this.queues.get(screen) || [];
    const hasChanged = this.hasQueueChanged(currentQueue, sortedQueue);
    
    if (hasChanged) {
      this.queues.set(screen, sortedQueue);
      logger.info(`Queue updated for screen ${screen}. Size: ${sortedQueue.length}`, 'QueueService');
      
      // Only log detailed queue info at debug level
      logger.debug(`Queue contents for screen ${screen}: ${JSON.stringify(sortedQueue.map(s => ({
        url: s.url,
        priority: s.priority,
        startTime: s.startTime,
        viewerCount: s.viewerCount,
        isFavorite: s.subtype === 'favorites'
      })))}`, 'QueueService');
      
      if (sortedQueue.length === 0) {
        this.emit('all:watched', screen);
      } else {
        this.emit('queue:updated', screen, sortedQueue);
      }
    }
  }

  private hasQueueChanged(currentQueue: StreamSource[], newQueue: StreamSource[]): boolean {
    if (currentQueue.length !== newQueue.length) return true;
    
    return currentQueue.some((current, index) => {
      const next = newQueue[index];
      return current.url !== next.url || 
             current.priority !== next.priority ||
             current.viewerCount !== next.viewerCount ||
             current.sourceStatus !== next.sourceStatus;
    });
  }

  public getQueue(screen: number): StreamSource[] {
    const queue = this.queues.get(screen) || [];
    logger.debug(`Getting queue for screen ${screen}. Queue size: ${queue.length}`, 'QueueService');
    return queue;
  }

  public addToQueue(screen: number, source: StreamSource): void {
    if (!source || !source.url) {
      logger.warn(`Invalid stream source provided for screen ${screen}`, 'QueueService');
      return;
    }

    const queue = this.getQueue(screen);
    
    // Check if this URL is already in the queue
    const exists = queue.some(item => item.url === source.url);
    if (exists) {
      logger.info(`Stream ${source.url} already in queue for screen ${screen}`, 'QueueService');
      return;
    }
    
    queue.push(source);
    this.setQueue(screen, queue);
    logger.info(`Added stream ${source.url} to queue for screen ${screen}`, 'QueueService');
  }

  public clearQueue(screen: number): void {
    this.queues.set(screen, []);
    logger.info(`Cleared queue for screen ${screen}`, 'QueueService');
    this.emit('queue:updated', screen, []);
    this.emit('queue:empty', screen);
  }

  public clearAllQueues(): void {
    this.queues.clear();
    logger.info('Cleared all queues', 'QueueService');
  }

  // Stream Management
  public getNextStream(screen: number): StreamSource | undefined {
    const queue = this.queues.get(screen) || [];
    const nextStream = queue[0];
    logger.debug(`Getting next stream for screen ${screen}. Next stream: ${nextStream?.url || 'none'}`, 'QueueService');
    return nextStream;
  }

  public removeFromQueue(screen: number, index: number): void {
    const queue = this.queues.get(screen) || [];
    
    // Validate index
    if (index < 0 || index >= queue.length) {
      logger.warn(`Invalid index ${index} for queue of screen ${screen} with length ${queue.length}`, 'QueueService');
      return;
    }
    
    // Remove the item
    const removedItem = queue.splice(index, 1)[0];
    this.queues.set(screen, queue);
    
    logger.info(`Removed stream ${removedItem.url} from queue for screen ${screen}`, 'QueueService');
    logger.debug(`Queue size after removal: ${queue.length}`, 'QueueService');
    
    // Emit queue updated event
    this.emit('queue:updated', screen, queue);
    
    // If queue is now empty, emit queue empty event
    if (queue.length === 0) {
      logger.info(`Queue for screen ${screen} is now empty`, 'QueueService');
      this.emit('queue:empty', screen);
    }
  }

  // Watched Streams Management
  public markStreamAsWatched(url: string): void {
    this.watchedStreams.add(url);
  }

  public isStreamWatched(url: string): boolean {
    return this.watchedStreams.has(url);
  }

  public getWatchedStreams(): string[] {
    return Array.from(this.watchedStreams);
  }

  public clearWatchedStreams(): void {
    this.watchedStreams.clear();
    logger.info('Cleared watched streams history', 'QueueService');
  }

  // Event Handling
  override on<K extends keyof QueueEvents>(event: K, listener: QueueEvents[K]): this {
    super.on(event, listener);
    return this;
  }

  override off<K extends keyof QueueEvents>(event: K, listener: QueueEvents[K]): this {
    super.off(event, listener);
    return this;
  }

  // Add method to check if any streams are unwatched
  hasUnwatchedStreams(streams: StreamSource[]): boolean {
    return streams.some(stream => !this.watchedStreams.has(stream.url));
  }

  // Add method to filter unwatched streams
  public filterUnwatchedStreams(streams: StreamSource[]): StreamSource[] {
    // First check if we have any unwatched non-favorite streams
    const hasUnwatchedNonFavorites = streams.some(stream => {
      const isFavorite = stream.subtype === 'favorites';
      return !isFavorite && !this.watchedStreams.has(stream.url);
    });

    return streams.filter(stream => {
      // Enhanced members-only detection
      const isMembersOnly = (stream.title?.toLowerCase() || '').match(
        /(membership|member['']?s|grembership|限定|メン限|member only)/i
      ) !== null;

      if (isMembersOnly) {
        logger.info(`Filtering out members-only stream: ${stream.title}`, 'QueueService');
        return false;
      }

      // Check for common error indicators in title
      const hasErrorIndicators = (stream.title?.toLowerCase() || '').match(
        /(unavailable|private|deleted|removed|error)/i
      ) !== null;

      if (hasErrorIndicators) {
        logger.info(`Filtering out potentially unavailable stream: ${stream.title}`, 'QueueService');
        return false;
      }

      const isFavorite = stream.subtype === 'favorites';
      const isWatched = this.isStreamWatched(stream.url);
      
      // If it's not watched, always include it
      if (!isWatched) {
        return true;
      }
      
      // If it's watched and a favorite, only include if all non-favorites are watched
      if (isFavorite && !hasUnwatchedNonFavorites) {
        logger.debug(`Including watched favorite stream ${stream.url} with priority ${stream.priority} because all non-favorites are watched`, 'QueueService');
        return true;
      }
      
      logger.debug(`Filtering out watched stream ${stream.url}`, 'QueueService');
      return false;
    });
  }
}

// Create and export singleton instance
export const queueService = new QueueService();
</file>

<file path="src/cli/livelink.ts">
#!/usr/bin/env node
import { program } from 'commander';
import fetch, { Response } from 'node-fetch';
import chalk from 'chalk';
import type { Stream, StreamSource } from '../types/stream.js';
import { logger } from '../server/services/logger.js';

const API_URL = 'http://localhost:3001/api';

function getTimestamp(): string {
  const now = new Date();
  return now.toLocaleTimeString();
}

function formatUptime(startTime: number | string): string {
  const start = typeof startTime === 'string' ? new Date(startTime).getTime() : startTime;
  const now = Date.now();
  const diff = Math.floor((now - start) / 1000);
  
  const hours = Math.floor(diff / 3600);
  const minutes = Math.floor((diff % 3600) / 60);
  const seconds = diff % 60;
  
  if (hours > 0) {
    return `${hours}h ${minutes}m ${seconds}s`;
  } else if (minutes > 0) {
    return `${minutes}m ${seconds}s`;
  } else {
    return `${seconds}s`;
  }
}

async function handleResponse<T>(response: Response): Promise<T> {
  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);
  }
  const data = await response.json();
  return data as T;
}

program
  .name('livelink')
  .version('0.2.0')
  .description('LiveLink CLI - Control and manage LiveLink streams')
  .option('-d, --debug', 'Enable debug output');

// Create command categories for better organization
const streamCommands = program.command('stream').description('Stream management commands');
const queueCommands = program.command('queue').description('Queue management commands');
const playerCommands = program.command('player').description('Player control commands');
const screenCommands = program.command('screen').description('Screen management commands');
const serverCommands = program.command('server').description('Server control commands');

// Stream Management Commands
streamCommands
  .command('list')
  .description('List all active streams')
  .action(handleStreamList);

streamCommands
  .command('start')
  .description('Start a new stream')
  .requiredOption('-u, --url <url>', 'Stream URL')
  .option('-q, --quality <quality>', 'Stream quality', 'best')
  .option('-s, --screen <number>', 'Screen number', '1')
  .option('-v, --volume <number>', 'Volume level (0-100)')
  .action(async (options) => {
    try {
      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));
      
      // First check if URL is already playing on any screen
      const activeStreams = await fetch(`${API_URL}/streams/active`)
        .then(res => handleResponse<Stream[]>(res));
      
      const existingStream = activeStreams.find(stream => stream.url === options.url);
      if (existingStream) {
        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));
        const proceed = process.argv.includes('--force');
        if (!proceed) {
          console.log(chalk.yellow('Use --force to start anyway.'));
          return;
        }
      }

      const requestBody: {
        url: string;
        quality: string;
        screen: number;
        volume?: number;
      } = {
        url: options.url,
        quality: options.quality,
        screen: parseInt(options.screen)
      };

      if (options.volume) {
        requestBody.volume = parseInt(options.volume);
      }

      const response = await fetch(`${API_URL}/streams/url`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(requestBody)
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Stream started:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

streamCommands
  .command('stop')
  .description('Stop a stream')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Stopping stream on screen ${screen}...`));
      const response = await fetch(`${API_URL}/streams/${screen}`, {
        method: 'DELETE'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Stream stopped:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

streamCommands
  .command('restart')
  .description('Restart streams')
  .option('-s, --screen <number>', 'Screen number (optional, restarts all screens if not specified)')
  .action(async (options) => {
    try {
      if (options.screen) {
        console.log(chalk.blue(`Restarting stream on screen ${options.screen}...`));
      } else {
        console.log(chalk.blue('Restarting all streams...'));
      }
      
      const response = await fetch(`${API_URL}/streams/restart`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(options.screen ? { screen: parseInt(options.screen) } : {})
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Streams restarted:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// New stream refresh commands
streamCommands
  .command('refresh')
  .description('Force refresh streams data')
  .argument('[screen]', 'Screen number (optional, refreshes all screens if not specified)')
  .action(async (screen) => {
    try {
      if (screen) {
        console.log(chalk.blue(`Forcing refresh for screen ${screen}...`));
      } else {
        console.log(chalk.blue('Forcing refresh for all screens...'));
      }
      
      const endpoint = screen ? `${API_URL}/streams/refresh/${screen}` : `${API_URL}/streams/refresh`;
      
      const response = await fetch(endpoint, {
        method: 'POST'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Streams refreshed:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Stream Category Commands
streamCommands
  .command('vtubers')
  .description('List VTuber streams')
  .option('-l, --limit <number>', 'Number of streams to fetch', '20')
  .action(async (options) => {
    try {
      console.log(chalk.blue('Fetching VTuber streams...'));
      const response = await fetch(`${API_URL}/streams/vtubers?limit=${options.limit}`);
      const streams = await handleResponse<Stream[]>(response);
      
      if (streams.length === 0) {
        console.log(chalk.yellow('No VTuber streams found.'));
        return;
      }
      
      console.log(chalk.blue(`\nFound ${streams.length} VTuber Streams:`));
      streams.forEach((stream, index) => {
        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));
        console.log(`URL: ${stream.url}`);
        if (stream.viewerCount) console.log(`Viewers: ${stream.viewerCount}`);
      });
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

streamCommands
  .command('japanese')
  .description('List Japanese streams')
  .option('-l, --limit <number>', 'Number of streams to fetch', '20')
  .action(async (options) => {
    try {
      console.log(chalk.blue('Fetching Japanese streams...'));
      const response = await fetch(`${API_URL}/streams/japanese?limit=${options.limit}`);
      const streams = await handleResponse<Stream[]>(response);
      
      if (streams.length === 0) {
        console.log(chalk.yellow('No Japanese streams found.'));
        return;
      }
      
      console.log(chalk.blue(`\nFound ${streams.length} Japanese Streams:`));
      streams.forEach((stream, index) => {
        console.log(chalk.green(`\n${index + 1}. ${stream.title || 'Untitled'}`));
        console.log(`URL: ${stream.url}`);
        if (stream.viewerCount) console.log(`Viewers: ${stream.viewerCount}`);
      });
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Screen Management Commands
screenCommands
  .command('enable')
  .description('Enable a screen')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Enabling screen ${screen}...`));
      const response = await fetch(`${API_URL}/screens/${screen}/enable`, {
        method: 'POST'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Screen enabled:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

screenCommands
  .command('disable')
  .description('Disable a screen')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Disabling screen ${screen}...`));
      const response = await fetch(`${API_URL}/screens/${screen}/disable`, {
        method: 'POST'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Screen disabled:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

screenCommands
  .command('info')
  .description('Get current screen information')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Fetching information for screen ${screen}...`));
      const response = await fetch(`${API_URL}/screens/${screen}`);
      const screenInfo = await handleResponse(response);
      console.log(chalk.blue(`\nScreen ${screen} Information:`));
      console.log(JSON.stringify(screenInfo, null, 2));
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

screenCommands
  .command('list')
  .description('List all screens and their status')
  .action(async () => {
    try {
      console.log(chalk.blue('Fetching all screens information...'));
      const response = await fetch(`${API_URL}/screens`);
      const screens = await handleResponse(response);
      console.log(chalk.blue('\nScreens Information:'));
      console.log(JSON.stringify(screens, null, 2));
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

screenCommands
  .command('toggle')
  .description('Toggle screen enabled/disabled state')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Toggling screen ${screen}...`));
      const response = await fetch(`${API_URL}/screens/${screen}/toggle`, {
        method: 'POST'
      });
      const result = await handleResponse<{ success: boolean; enabled: boolean }>(response);
      console.log(chalk.green(`Screen ${screen} ${result.enabled ? 'enabled' : 'disabled'}`));
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

screenCommands
  .command('new-player')
  .description('Start a new player instance for a screen')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue('Opening new player...'));
      const response = await fetch(`${API_URL}/screens/${screen}/new-player`, {
        method: 'POST'
      });
      const result = await handleResponse<{ success: boolean }>(response);
      if (result.success) {
        console.log(chalk.green('New player started successfully'));
      } else {
        console.log(chalk.yellow('Failed to start new player'));
      }
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Queue Management Commands
queueCommands
  .command('show')
  .description('Show queue for a screen')
  .argument('<screen>', 'Screen number')
  .action(async (screen: string) => handleQueueShow(parseInt(screen, 10)));

queueCommands
  .command('reorder')
  .description('Reorder queue items')
  .argument('<screen>', 'Screen number')
  .argument('<fromIndex>', 'Source index (0-based)')
  .argument('<toIndex>', 'Target index (0-based)')
  .action(async (screen, fromIndex, toIndex) => {
    try {
      console.log(chalk.blue(`Reordering queue for screen ${screen}...`));
      const response = await fetch(`${API_URL}/streams/reorder`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          screen: parseInt(screen),
          sourceIndex: parseInt(fromIndex),
          targetIndex: parseInt(toIndex)
        })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Queue reordered:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

queueCommands
  .command('clear')
  .description('Clear queue for a screen')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Clearing queue for screen ${screen}...`));
      const response = await fetch(`${API_URL}/streams/queue/${screen}`, {
        method: 'DELETE'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Queue cleared:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Watched Streams Commands
streamCommands
  .command('watched')
  .description('Show watched streams')
  .action(async () => {
    try {
      console.log(chalk.blue('Fetching watched streams...'));
      const response = await fetch(`${API_URL}/streams/watched`);
      const watched = await handleResponse<string[]>(response);
      
      if (watched.length === 0) {
        console.log(chalk.yellow('No watched streams found.'));
        return;
      }
      
      console.log(chalk.blue(`\nWatched Streams (${watched.length} total):`));
      watched.forEach((url, index) => {
        console.log(chalk.green(`${index + 1}. ${url}`));
      });
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

streamCommands
  .command('clear-watched')
  .description('Clear watched streams history')
  .action(async () => {
    try {
      console.log(chalk.blue('Clearing watched streams history...'));
      const response = await fetch(`${API_URL}/streams/watched`, {
        method: 'DELETE'
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Watched streams cleared:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

streamCommands
  .command('mark-watched')
  .description('Mark a stream as watched')
  .argument('<url>', 'Stream URL')
  .action(async (url) => {
    try {
      console.log(chalk.blue(`Marking stream as watched: ${url}`));
      const response = await fetch(`${API_URL}/streams/watched`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ url })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Stream marked as watched:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Player Control Commands
playerCommands
  .command('set-priority')
  .description('Set player priority')
  .argument('<level>', 'Priority level (realtime, high, above_normal, normal, below_normal, low, idle)')
  .action(async (level) => {
    try {
      const validLevels = ['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];
      if (!validLevels.includes(level)) {
        console.error(chalk.red('Error: Invalid priority level. Valid values are:'), validLevels.join(', '));
        return;
      }
      
      console.log(chalk.blue(`Setting player priority to ${level}...`));
      const response = await fetch(`${API_URL}/player/priority`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ priority: level })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Priority set:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

playerCommands
  .command('command')
  .description('Send command to MPV player instance(s)')
  .argument('<command>', 'MPV command to send (e.g. "set pause yes")')
  .option('-s, --screen <number>', 'Send to specific screen')
  .option('-a, --all', 'Send to all screens')
  .action(async (command, options) => {
    try {
      if (!options.screen && !options.all) {
        console.error(chalk.red('Error:'), 'Must specify either --screen or --all');
        return;
      }

      const target = options.all ? 'all screens' : `screen ${options.screen}`;
      console.log(chalk.blue(`Sending command to ${target}: ${command}`));

      const endpoint = options.all ? 
        `${API_URL}/player/command/all` :
        `${API_URL}/player/command/${options.screen}`;

      const response = await fetch(endpoint, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ command })
      });
      
      const result = await handleResponse(response);
      console.log(chalk.green('Command sent:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

playerCommands
  .command('pause')
  .description('Toggle pause')
  .argument('<screen>', 'Screen number')
  .action(async (screen) => {
    try {
      console.log(chalk.blue(`Toggling pause for screen ${screen}...`));
      const response = await fetch(`${API_URL}/player/command/${screen}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ command: 'cycle pause' })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Pause toggled:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

playerCommands
  .command('volume')
  .description('Set volume (0-100)')
  .argument('<screen>', 'Screen number')
  .argument('<level>', 'Volume level (0-100)')
  .action(async (screen, level) => {
    try {
      const volumeLevel = parseInt(level);
      if (isNaN(volumeLevel) || volumeLevel < 0 || volumeLevel > 100) {
        console.error(chalk.red('Error:'), 'Volume level must be between 0 and 100');
        return;
      }
      
      console.log(chalk.blue(`Setting volume for screen ${screen} to ${volumeLevel}...`));
      const response = await fetch(`${API_URL}/player/command/${screen}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ command: `set volume ${volumeLevel}` })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Volume set:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Server Control Commands
serverCommands
  .command('start')
  .description('Start only the LiveLink server (no frontend)')
  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
  .option('-s, --screen <screens>', 'Specific screens to start (comma-separated or multiple flags, e.g., "1,2" or "-s 1 -s 2")')
  .option('-o, --organization <orgs>', 'Organizations to include by name or priority (comma-separated or multiple flags, e.g., "hololive,nijisanji" or "-o 1 -o 3" for priorities)')
  .option('--sort <direction>', 'Sort streams by viewer count (asc or desc)', 'desc')
  .option('-v, --min-viewers <count>', 'Minimum viewer count to include streams')
  .option('-l, --limit <count>', 'Maximum number of streams to fetch per source')
  .option('-m, --max <count>', 'Maximum number of concurrent streams (overrides player.json setting)')
  .action(async (players: string[], options) => {
    try {
      // Convert arguments to numbers
      const screenPlayers = players.map(Number);
      
      // Set environment variables for screen configuration
      if (screenPlayers.length > 0) {
        process.env.START_SCREENS = screenPlayers.length.toString();
        screenPlayers.forEach((numPlayers: number, index: number) => {
          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();
        });
      }

      // Handle screen selection
      if (options.screen) {
        // Process screen options - could be comma-separated or multiple flags
        let screens: number[] = [];
        
        if (Array.isArray(options.screen)) {
          // Multiple -s flags were used
          screens = options.screen.flatMap((s: string) => s.split(',')).map(Number).filter((n: number) => !isNaN(n));
        } else {
          // Single flag with possible comma-separated values
          screens = options.screen.split(',').map(Number).filter((n: number) => !isNaN(n));
        }
        
        if (screens.length > 0) {
          process.env.SELECTED_SCREENS = screens.join(',');
          console.log(chalk.blue(`Starting only screens: ${screens.join(', ')}`));
        }
      }

      // Handle organization selection
      if (options.organization) {
        // Process organization options - could be comma-separated or multiple flags
        let organizations: string[] = [];
        
        if (Array.isArray(options.organization)) {
          // Multiple -o flags were used
          organizations = options.organization.flatMap((o: string) => o.split(','));
        } else {
          // Single flag with possible comma-separated values
          organizations = options.organization.split(',');
        }
        
        if (organizations.length > 0) {
          // Check if any values are numeric (priority) or range (e.g., "1-4")
          const priorityValues: string[] = [];
          const nameValues: string[] = [];
          
          organizations.forEach(org => {
            // Check if it's a range like "1-4"
            if (/^\d+-\d+$/.test(org)) {
              priorityValues.push(org);
            }
            // Check if it's a number (priority)
            else if (/^\d+$/.test(org)) {
              priorityValues.push(org);
            }
            // Otherwise it's an organization name
            else {
              nameValues.push(org);
            }
          });
          
          if (priorityValues.length > 0) {
            process.env.ORGANIZATION_PRIORITIES = priorityValues.join(',');
            console.log(chalk.blue(`Using organization priorities: ${priorityValues.join(', ')}`));
          }
          
          if (nameValues.length > 0) {
            process.env.ORGANIZATION_NAMES = nameValues.join(',');
            console.log(chalk.blue(`Using organizations: ${nameValues.join(', ')}`));
          }
        }
      }
      
      // Handle sorting option
      if (options.sort) {
        const sortDirection = options.sort.toLowerCase();
        if (sortDirection === 'asc' || sortDirection === 'desc') {
          process.env.STREAM_SORT = sortDirection;
          console.log(chalk.blue(`Sorting streams by viewer count: ${sortDirection}`));
        } else {
          console.warn(chalk.yellow(`Invalid sort direction: ${sortDirection}. Using default 'desc'`));
          process.env.STREAM_SORT = 'desc';
        }
      }
      
      // Handle minimum viewers option
      if (options.minViewers) {
        const minViewers = parseInt(options.minViewers);
        if (!isNaN(minViewers) && minViewers >= 0) {
          process.env.MIN_VIEWERS = minViewers.toString();
          console.log(chalk.blue(`Filtering streams with minimum ${minViewers} viewers`));
        } else {
          console.warn(chalk.yellow(`Invalid minimum viewers: ${options.minViewers}. Not applying filter.`));
        }
      }
      
      // Handle stream limit option
      if (options.limit) {
        const limit = parseInt(options.limit);
        if (!isNaN(limit) && limit > 0) {
          process.env.STREAM_LIMIT = limit.toString();
          console.log(chalk.blue(`Setting stream fetch limit to ${limit} per source`));
        } else {
          console.warn(chalk.yellow(`Invalid stream limit: ${options.limit}. Using default from config.`));
        }
      }
      
      // Handle max concurrent streams option
      if (options.max) {
        const maxStreams = parseInt(options.max);
        if (!isNaN(maxStreams) && maxStreams > 0) {
          process.env.MAX_STREAMS = maxStreams.toString();
          console.log(chalk.blue(`Setting maximum concurrent streams to ${maxStreams}`));
        } else {
          console.warn(chalk.yellow(`Invalid max streams: ${options.max}. Using default from player.json.`));
        }
      }

      // Import and start the server
      await import('../server/api.js');
      console.log(chalk.green('LiveLink server started'));
    } catch (error) {
      console.error(chalk.red('Failed to start server:'), error);
      process.exit(1);
    }
  });

serverCommands
  .command('stop')
  .description('Stop the LiveLink server')
  .action(async () => {
    try {
      console.log(chalk.blue('Stopping LiveLink server...'));
      
      // Create AbortController for timeout
      const controller = new AbortController();
      const timeout = setTimeout(() => controller.abort(), 5000);
      
      try {
        const response = await fetch('http://localhost:3001/api/server/stop', {
          method: 'POST',
          signal: controller.signal
        });
        
        clearTimeout(timeout);
        
        if (response.ok) {
          console.log(chalk.green('Server shutdown initiated successfully'));
          // Wait a moment for cleanup to complete
          await new Promise(resolve => setTimeout(resolve, 2000));
          process.exit(0);
        } else {
          const error = await response.text();
          console.error(chalk.red('Failed to stop server:'), error);
          process.exit(1);
        }
      } catch (error) {
        clearTimeout(timeout);
        if (error instanceof Error) {
          if (error.name === 'AbortError') {
            console.error(chalk.red('Server shutdown timed out'));
          } else {
            console.error(chalk.red('Failed to stop server:'), error.message);
          }
        } else {
          console.error(chalk.red('Failed to stop server:'), String(error));
        }
        process.exit(1);
      }
    } catch (error) {
      console.error(chalk.red('Failed to stop server:'), error instanceof Error ? error.message : String(error));
      process.exit(1);
    }
  });

serverCommands
  .command('stop-all')
  .description('Stop all players and the LiveLink server')
  .action(async () => {
    try {
      console.log(chalk.blue('Stopping all players and the LiveLink server...'));
      
      // Create AbortController for timeout (longer timeout since we're stopping all players first)
      const controller = new AbortController();
      const timeout = setTimeout(() => controller.abort(), 10000);
      
      try {
        const response = await fetch('http://localhost:3001/api/server/stop-all', {
          method: 'POST',
          signal: controller.signal
        });
        
        clearTimeout(timeout);
        
        if (response.ok) {
          console.log(chalk.green('All players and server shutdown initiated successfully'));
          console.log(chalk.yellow('Waiting for processes to terminate...'));
          // Wait a moment for cleanup to complete
          await new Promise(resolve => setTimeout(resolve, 3000));
          process.exit(0);
        } else {
          const error = await response.text();
          console.error(chalk.red('Failed to stop players and server:'), error);
          process.exit(1);
        }
      } catch (error) {
        clearTimeout(timeout);
        if (error instanceof Error) {
          if (error.name === 'AbortError') {
            console.error(chalk.red('Stop-all command timed out'));
          } else {
            console.error(chalk.red('Failed to stop players and server:'), error.message);
          }
        } else {
          console.error(chalk.red('Failed to stop players and server:'), String(error));
        }
        process.exit(1);
      }
    } catch (error) {
      console.error(chalk.red('Failed to stop players and server:'), error instanceof Error ? error.message : String(error));
      process.exit(1);
    }
  });

serverCommands
  .command('status')
  .description('Get server status')
  .action(async () => {
    try {
      console.log(chalk.blue('Checking server status...'));
      const controller = new AbortController();
      const timeout = setTimeout(() => controller.abort(), 2000);
      
      try {
        const response = await fetch('http://localhost:3001/api/server/status', {
          signal: controller.signal
        });
        
        clearTimeout(timeout);
        
        if (response.ok) {
          const status = await response.json();
          console.log(chalk.green('Server is running'));
          console.log(JSON.stringify(status, null, 2));
        } else {
          console.log(chalk.red('Server is not responding properly'));
        }
      } catch (error) {
        clearTimeout(timeout);
        if (error instanceof Error && error.name === 'AbortError') {
          console.log(chalk.red('Server is not responding (timeout)'));
        } else if (error instanceof Error && 'code' in error && error.code === 'ECONNREFUSED') {
          console.log(chalk.red('Server is not running'));
        } else {
          console.log(chalk.red('Failed to check server status:'), error instanceof Error ? error.message : String(error));
        }
      }
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Web Control Commands
const webCommands = program.command('web').description('Web frontend control commands');

webCommands
  .command('start')
  .description('Start only the web frontend')
  .action(async () => {
    try {
      console.log(chalk.blue('Starting web frontend...'));
      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));
      process.exit(1);
    } catch (error) {
      console.error(chalk.red('Failed to start web frontend:'), error);
      process.exit(1);
    }
  });

webCommands
  .command('stop')
  .description('Stop the web frontend')
  .action(async () => {
    try {
      console.log(chalk.blue('Stopping web frontend...'));
      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));
      process.exit(1);
    } catch (error) {
      console.error(chalk.red('Failed to stop web frontend:'), error);
      process.exit(1);
    }
  });

// Add backwards compatibility for old command structure
program
  .command('list-streams')
  .description('List all active streams (legacy command)')
  .action(async () => {
    console.log(chalk.yellow('Note: This command is deprecated. Use "stream list" instead.'));
    try {
      logger.info('Fetching active streams', 'CLI');
      const streams = await fetch(`${API_URL}/streams/active`)
        .then(res => handleResponse<Stream[]>(res));

      if (streams.length === 0) {
        console.log(chalk.yellow('No active streams found.'));
        return;
      }

      console.log(chalk.blue('Active Streams:'));
      streams.forEach((stream) => {
        console.log(chalk.green(`\nScreen ${stream.screen}:`));
        console.log(`URL: ${stream.url}`);
        console.log(`Quality: ${stream.quality}`);
        if (stream.title) console.log(`Title: ${stream.title}`);
        if (stream.viewerCount) console.log(`Viewers: ${stream.viewerCount}`);
        console.log(`Status: ${stream.status || 'playing'}`);
      });
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

program
  .command('start-stream')
  .description('Start a new stream (legacy command)')
  .requiredOption('-u, --url <url>', 'Stream URL')
  .option('-q, --quality <quality>', 'Stream quality', 'best')
  .option('-s, --screen <number>', 'Screen number', '1')
  .action(async (options) => {
    console.log(chalk.yellow('Note: This command is deprecated. Use "stream start" instead.'));
    try {
      console.log(chalk.blue(`Starting stream on screen ${options.screen}...`));
      
      // First check if URL is already playing on any screen
      const activeStreams = await fetch(`${API_URL}/streams/active`)
        .then(res => handleResponse<Stream[]>(res));
      
      const existingStream = activeStreams.find(stream => stream.url === options.url);
      if (existingStream) {
        console.error(chalk.yellow(`Warning: URL is already playing on screen ${existingStream.screen}`));
        const proceed = process.argv.includes('--force');
        if (!proceed) {
          console.log(chalk.yellow('Use --force to start anyway.'));
          return;
        }
      }

      const response = await fetch(`${API_URL}/streams/url`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          url: options.url,
          quality: options.quality,
          screen: parseInt(options.screen)
        })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Stream started:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

// Set debug mode if flag is present
const options = program.opts();
if (process.env.DEBUG || options.debug) {
  process.env.DEBUG = 'true';
  logger.debug('Debug mode enabled', 'CLI');
}

// Add start command at root level
program
  .command('start')
  .description('Start both server and web frontend')
  .argument('[players...]', 'Number of players to start on each screen (e.g., "1 3" for 1 on screen 1 and 3 on screen 2)')
  .option('-s, --screen <screens>', 'Specific screens to start (comma-separated or multiple flags, e.g., "1,2" or "-s 1 -s 2")')
  .option('-o, --organization <orgs>', 'Organizations to include by name or priority (comma-separated or multiple flags, e.g., "hololive,nijisanji" or "-o 1 -o 3" for priorities)')
  .option('--sort <direction>', 'Sort streams by viewer count (asc or desc)', 'desc')
  .option('-v, --min-viewers <count>', 'Minimum viewer count to include streams')
  .option('-l, --limit <count>', 'Maximum number of streams to fetch per source')
  .option('-m, --max <count>', 'Maximum number of concurrent streams (overrides player.json setting)')
  .action(async (players: string[], options) => {
    try {
      // Convert arguments to numbers
      const screenPlayers = players.map(Number);
      
      // Set environment variables for screen configuration
      if (screenPlayers.length > 0) {
        process.env.START_SCREENS = screenPlayers.length.toString();
        screenPlayers.forEach((numPlayers: number, index: number) => {
          process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();
        });
      }

      // Handle screen selection
      if (options.screen) {
        // Process screen options - could be comma-separated or multiple flags
        let screens: number[] = [];
        
        if (Array.isArray(options.screen)) {
          // Multiple -s flags were used
          screens = options.screen.flatMap((s: string) => s.split(',')).map(Number).filter((n: number) => !isNaN(n));
        } else {
          // Single flag with possible comma-separated values
          screens = options.screen.split(',').map(Number).filter((n: number) => !isNaN(n));
        }
        
        if (screens.length > 0) {
          process.env.SELECTED_SCREENS = screens.join(',');
          console.log(chalk.blue(`Starting only screens: ${screens.join(', ')}`));
        }
      }

      // Handle organization selection
      if (options.organization) {
        // Process organization options - could be comma-separated or multiple flags
        let organizations: string[] = [];
        
        if (Array.isArray(options.organization)) {
          // Multiple -o flags were used
          organizations = options.organization.flatMap((o: string) => o.split(','));
        } else {
          // Single flag with possible comma-separated values
          organizations = options.organization.split(',');
        }
        
        if (organizations.length > 0) {
          // Check if any values are numeric (priority) or range (e.g., "1-4")
          const priorityValues: string[] = [];
          const nameValues: string[] = [];
          
          organizations.forEach(org => {
            // Check if it's a range like "1-4"
            if (/^\d+-\d+$/.test(org)) {
              priorityValues.push(org);
            }
            // Check if it's a number (priority)
            else if (/^\d+$/.test(org)) {
              priorityValues.push(org);
            }
            // Otherwise it's an organization name
            else {
              nameValues.push(org);
            }
          });
          
          if (priorityValues.length > 0) {
            process.env.ORGANIZATION_PRIORITIES = priorityValues.join(',');
            console.log(chalk.blue(`Using organization priorities: ${priorityValues.join(', ')}`));
          }
          
          if (nameValues.length > 0) {
            process.env.ORGANIZATION_NAMES = nameValues.join(',');
            console.log(chalk.blue(`Using organizations: ${nameValues.join(', ')}`));
          }
        }
      }
      
      // Handle sorting option
      if (options.sort) {
        const sortDirection = options.sort.toLowerCase();
        if (sortDirection === 'asc' || sortDirection === 'desc') {
          process.env.STREAM_SORT = sortDirection;
          console.log(chalk.blue(`Sorting streams by viewer count: ${sortDirection}`));
        } else {
          console.warn(chalk.yellow(`Invalid sort direction: ${sortDirection}. Using default 'desc'`));
          process.env.STREAM_SORT = 'desc';
        }
      }
      
      // Handle minimum viewers option
      if (options.minViewers) {
        const minViewers = parseInt(options.minViewers);
        if (!isNaN(minViewers) && minViewers >= 0) {
          process.env.MIN_VIEWERS = minViewers.toString();
          console.log(chalk.blue(`Filtering streams with minimum ${minViewers} viewers`));
        } else {
          console.warn(chalk.yellow(`Invalid minimum viewers: ${options.minViewers}. Not applying filter.`));
        }
      }
      
      // Handle stream limit option
      if (options.limit) {
        const limit = parseInt(options.limit);
        if (!isNaN(limit) && limit > 0) {
          process.env.STREAM_LIMIT = limit.toString();
          console.log(chalk.blue(`Setting stream fetch limit to ${limit} per source`));
        } else {
          console.warn(chalk.yellow(`Invalid stream limit: ${options.limit}. Using default from config.`));
        }
      }
      
      // Handle max concurrent streams option
      if (options.max) {
        const maxStreams = parseInt(options.max);
        if (!isNaN(maxStreams) && maxStreams > 0) {
          process.env.MAX_STREAMS = maxStreams.toString();
          console.log(chalk.blue(`Setting maximum concurrent streams to ${maxStreams}`));
        } else {
          console.warn(chalk.yellow(`Invalid max streams: ${options.max}. Using default from player.json.`));
        }
      }

      // Start both server and frontend
      console.log(chalk.blue('Starting LiveLink server and web frontend...'));
      await import('../server/api.js');
      console.log(chalk.green('LiveLink server started'));
      console.log(chalk.yellow('Web frontend functionality is not yet implemented'));
    } catch (error) {
      console.error(chalk.red('Failed to start:'), error);
      process.exit(1);
    }
  });

// Parse command line arguments
program.parse(process.argv);

// Handle default case when no arguments are provided
if (process.argv.length <= 2 && !process.argv.includes('-h') && !process.argv.includes('--help')) {
  // Get the number of players to start on each screen from arguments
  const args = process.argv.slice(2);
  const screenPlayers = args.map(Number);
  
  // Set environment variables for screen configuration
  if (screenPlayers.length > 0) {
    process.env.START_SCREENS = screenPlayers.length.toString();
    screenPlayers.forEach((numPlayers: number, index: number) => {
      process.env[`START_SCREEN_${index + 1}`] = numPlayers.toString();
    });
  }

  // Start both server and frontend
  console.log(chalk.blue('Starting LiveLink server and web frontend...'));
  import('../server/api.js').then(() => {
    console.log(chalk.green('LiveLink server started'));
    console.log(chalk.yellow('Web frontend functionality is not yet implemented'));
  }).catch((error) => {
    console.error(chalk.red('Failed to start:'), error);
    process.exit(1);
  });
} else if (process.argv.length <= 2) {
  // Show help if only -h or --help is provided
  program.help();
}

streamCommands
  .command('switch')
  .description('Switch current stream to a new URL')
  .requiredOption('-u, --url <url>', 'New stream URL')
  .option('-s, --screen <number>', 'Screen number', '1')
  .option('-q, --quality <quality>', 'Stream quality', 'best')
  .action(async (options) => {
    try {
      const screen = parseInt(options.screen);
      console.log(chalk.blue(`Switching stream on screen ${screen} to ${options.url}...`));

      // First get current stream to mark as watched
      const activeStreams = await fetch(`${API_URL}/streams/active`)
        .then(res => handleResponse<Stream[]>(res));
      
      const currentStream = activeStreams.find(s => s.screen === screen);
      if (currentStream?.url) {
        // Mark current stream as watched
        await fetch(`${API_URL}/streams/watched`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ url: currentStream.url })
        });
        console.log(chalk.gray(`Marked current stream as watched: ${currentStream.url}`));
      }

      // Stop current stream
      await fetch(`${API_URL}/streams/${screen}`, {
        method: 'DELETE'
      });

      // Start new stream
      const response = await fetch(`${API_URL}/streams/url`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          url: options.url,
          quality: options.quality,
          screen
        })
      });
      const result = await handleResponse(response);
      console.log(chalk.green('Stream switched successfully:'), result);
    } catch (error) {
      console.error(chalk.red('Error:'), error);
    }
  });

interface ScreenInfo {
  enabled: boolean;
  queueProcessing?: boolean;
}

async function handleQueueShow(screen: number) {
  console.log(chalk.blue(`Fetching queue for screen ${screen}...`));
  try {
    // First, get information about any active stream on this screen
    const activeStreamsResponse = await fetch(`${API_URL}/streams/active`);
    const activeStreams = await activeStreamsResponse.json() as Stream[];
    const activeStream = activeStreams.find(s => s.screen === screen);
    
    if (activeStream) {
      console.log(chalk.green(`\nActive stream on screen ${screen}:`));
      console.log(chalk.bold(`Title: ${activeStream.title || 'No Title'}`));
      console.log(`URL: ${activeStream.url}`);
      console.log(`Platform: ${activeStream.platform}`);
      console.log(`Status: ${activeStream.status}`);
      console.log(chalk.gray('----------------------------------------'));
    }
    
    // Next, trigger a queue refresh
    console.log(chalk.yellow('Triggering queue refresh...'));
    const refreshResponse = await fetch(`${API_URL}/streams/queue/${screen}/refresh`, {
      method: 'POST'
    });
    
    if (!refreshResponse.ok) {
      console.log(chalk.yellow('Warning: Could not refresh queue'));
    } else {
      console.log(chalk.green('Queue refresh successful'));
    }

    // Now get the queue
    const response = await fetch(`${API_URL}/streams/queue/${screen}`);
    if (!response.ok) {
      if (response.status === 404) {
        console.log(chalk.yellow(`No queue found for screen ${screen}`));
        return;
      }
      throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);
    }

    const queue = await response.json() as StreamSource[];
    if (!queue || queue.length === 0) {
      console.log(chalk.yellow('Queue is empty'));
      return;
    }

    // Get screen info to show enabled/disabled status
    const screenInfoResponse = await fetch(`${API_URL}/screens/${screen}`);
    const screenInfo = screenInfoResponse.ok ? await screenInfoResponse.json() as ScreenInfo : null;
    
    // Display screen status if available
    if (screenInfo) {
      const screenStatus = screenInfo.enabled ? chalk.green('Enabled') : chalk.red('Disabled');
      console.log(chalk.blue(`\nScreen ${screen} Status: ${screenStatus}`));
    }

    console.log(chalk.blue(`\nQueue for Screen ${screen} (${queue.length} items):`));
    console.log(chalk.gray('----------------------------------------'));
    
    queue.forEach((stream: StreamSource, index: number) => {
      // Title with source type and priority indicator
      const sourceType = stream.subtype === 'favorites' ? chalk.magenta('[FAV]') :
                        stream.organization ? chalk.cyan(`[${stream.organization}]`) :
                        '';
      const priorityIndicator = stream.priority !== undefined ? 
        chalk.gray(`(P${stream.priority})`) : '';
      
      console.log(chalk.green(`\n${index + 1}. ${sourceType} ${priorityIndicator} ${stream.title || 'No Title'}`));
      console.log(`Platform: ${stream.platform || 'Unknown'}`);
      console.log(`URL: ${stream.url}`);
      if (stream.viewerCount) console.log(`Viewers: ${stream.viewerCount.toLocaleString()}`);
      if (stream.organization) console.log(`Organization: ${stream.organization}`);
      if (stream.sourceStatus) {
        const statusColor = stream.sourceStatus === 'live' ? chalk.green :
                          stream.sourceStatus === 'upcoming' ? chalk.yellow :
                          chalk.red;
        console.log(`Status: ${statusColor(stream.sourceStatus)}`);
      }
      console.log(chalk.gray('----------------------------------------'));
    });

    // Show queue processing status if available
    if (screenInfo?.queueProcessing) {
      console.log(chalk.yellow('\nQueue is currently being processed...'));
    }
    
    // If there's an active stream, show a note about what will happen next
    if (activeStream) {
      console.log(chalk.blue('\nNote:'), 'When the current stream ends, the next stream in the queue will automatically start.');
    }
  } catch (error) {
    console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));
  }
}

async function handleStreamList() {
  console.log(getTimestamp(), '[INFO] [CLI] Fetching active streams');
  try {
    const response = await fetch(`${API_URL}/streams/active`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const streams = await response.json() as Stream[];
    if (!streams || streams.length === 0) {
      console.log('\nNo active streams');
      return;
    }

    console.log('\nActive Streams:\n');

    for (let i = 0; i < streams.length; i++) {
      const stream = streams[i];
      
      // Get additional details for each stream
      try {
        const detailsResponse = await fetch(`${API_URL}/streams/${stream.screen}/details`);
        const details = detailsResponse.ok ? await detailsResponse.json() as Stream : null;
        
        console.log(chalk.cyan(`Screen ${stream.screen} ${stream.status === 'playing' ? '●' : '○'}`));
        console.log(`Title: ${stream.title || details?.title || 'No Title'}`);
        console.log(`URL: ${stream.url}`);
        console.log(`Platform: ${stream.platform || 'unknown'}`);
        console.log(`Quality: ${stream.quality || 'default'}`);
        console.log(`Status: ${stream.status || 'unknown'}`);
        
        if (details) {
          if (details.viewerCount) console.log(`Viewers: ${details.viewerCount.toLocaleString()}`);
          if (details.organization) console.log(`Organization: ${details.organization}`);
          if (stream.startTime) {
            const uptime = formatUptime(stream.startTime);
            console.log(`Uptime: ${uptime}`);
          }
        }
        
        // Add a divider between streams unless it's the last one
        if (i < streams.length - 1) {
          console.log('\n' + '-'.repeat(30) + '\n');
        }
      } catch (error) {
        console.error(chalk.yellow(`Error getting details for screen ${stream.screen}:`), 
          error instanceof Error ? error.message : String(error));
        
        // Print basic info even if details fail
        console.log(chalk.cyan(`Screen ${stream.screen} ${stream.status === 'playing' ? '●' : '○'}`));
        console.log(`Title: ${stream.title || 'No Title'}`);
        console.log(`URL: ${stream.url}`);
        console.log(`Status: ${stream.status || 'unknown'}`);
        
        // Add a divider between streams unless it's the last one
        if (i < streams.length - 1) {
          console.log('\n' + '-'.repeat(30) + '\n');
        }
      }
    }
  } catch (error) {
    console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));
  }
}

program
  .command('force-start')
  .description('Force start a stream on a specific screen')
  .argument('<screen>', 'Screen number')
  .argument('<url>', 'Stream URL to start')
  .action(async (screen: string, url: string) => {
    console.log(getTimestamp(), `[INFO] [CLI] Forcing stream start on screen ${screen} with URL: ${url}`);
    try {
      const response = await fetch(`${API_URL}/streams/start`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          url,
          screen: parseInt(screen, 10),
          quality: 'best',
          manual: true
        })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);
      }

      const result = await response.json() as { success: boolean; error?: string };
      if (result.success) {
        console.log(chalk.green(`Stream started successfully on screen ${screen}`));
      } else {
        console.log(chalk.yellow(`Failed to start stream: ${result.error || 'Unknown error'}`));
      }
    } catch (error) {
      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));
    }
  });

// Add command to force refresh queues
program
  .command('refresh')
  .description('Force refresh all stream queues')
  .action(async () => {
    console.log(getTimestamp(), '[INFO] [CLI] Forcing queue refresh');
    try {
      const response = await fetch(`${API_URL}/streams/refresh`, {
        method: 'POST'
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);
      }

      console.log(chalk.green('Queue refresh triggered successfully'));
    } catch (error) {
      console.error(chalk.red('Error:'), error instanceof Error ? error.message : String(error));
    }
  });
</file>

<file path="src/server/routes/api.ts">
import Router from 'koa-router';
import type { Context } from 'koa';
import { streamManager } from '../stream_manager.js';
import type { StreamSource, PlayerSettings, ScreenConfig, StreamOptions, StreamInfo, Config } from '../../types/stream.js';
import { logger, LogLevel } from '../services/logger.js';
import { queueService } from '../services/queue_service.js';
import { execSync } from 'child_process';

const router = new Router();

function logError(message: string, service: string, error: unknown): void {
  if (error instanceof Error) {
    logger.error(message, service, error);
  } else {
    logger.error(message, service, new Error(String(error)));
  }
}

// Add type for request body
interface AddToQueueBody {
  url: string;
  title?: string;
  platform?: 'youtube' | 'twitch';
}

interface ReorderQueueBody {
  screen: number;
  sourceIndex: number;
  targetIndex: number;
}

interface UpdateConfigBody {
  streams?: ScreenConfig[];
  organizations?: string[];
  favoriteChannels?: {
    groups?: {
      [groupName: string]: {
        description: string;
        priority: number;
      };
    };
    holodex?: {
      [groupName: string]: string[];
    };
    twitch?: {
      [groupName: string]: string[];
    };
    youtube?: {
      [groupName: string]: string[];
    };
  };
}

interface MarkWatchedBody {
  url: string;
  screen?: number;
}

// Static routes first (most specific to least specific)
router.get('/api/organizations', (ctx: Context) => {
  ctx.body = streamManager.getOrganizations();
});

// More specific routes before general ones
router.get('/api/streams/active', async (ctx: Context) => {
  try {
    const streams = streamManager.getActiveStreams();
    ctx.body = streams;
  } catch (error: unknown) {
    logError('Failed to get active streams', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to get active streams' };
  }
});

router.get('/api/streams/vtubers', async (ctx: Context) => {
  try {
    const { limit } = ctx.query;
    ctx.body = await streamManager.getVTuberStreams(
      limit ? parseInt(limit as string) : undefined
    );
  } catch (error: unknown) {
    logError('Failed to fetch VTuber streams', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to fetch VTuber streams' };
  }
});

router.get('/api/streams/japanese', async (ctx: Context) => {
  try {
    const { limit } = ctx.query;
    ctx.body = await streamManager.getJapaneseStreams(
      limit ? parseInt(limit as string) : undefined
    );
  } catch (error: unknown) {
    logError('Failed to fetch Japanese streams', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to fetch Japanese streams' };
  }
});

// General routes
router.get('/api/streams', async (ctx: Context) => {
  try {
    const streams = await streamManager.getLiveStreams();
    ctx.body = streams;
  } catch (error: unknown) {
    logError('Failed to get streams', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to get streams' };
  }
});

router.post('/api/streams/start', async (ctx: Context) => {
  try {
    const body = ctx.request.body as { url: string } & Partial<StreamOptions>;
    if (!body.url) {
      ctx.status = 400;
      ctx.body = { error: 'URL is required' };
      return;
    }

    const response = await streamManager.startStream({
      url: body.url,
      screen: body.screen || 1,
      quality: body.quality || 'best',
      volume: body.volume || 50,
      windowMaximized: body.windowMaximized ?? true
    });
    ctx.body = response;
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: error instanceof Error ? error.message : String(error) };
  }
});

// Dynamic route with validation in handler
router.delete('/api/streams/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    const result = await streamManager.stopStream(screen);
    ctx.body = { success: result };
  } catch (error: unknown) {
    logError('Failed to stop stream', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to stop stream' };
  }
});

// Screen Management
router.post('/api/screens/:screen/disable', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    await streamManager.disableScreen(screen);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/screens/:screen/enable', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    await streamManager.enableScreen(screen);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Stream Control
router.post('/api/streams/url', async (ctx: Context) => {
  try {
    const { url, screen, quality, notify_only } = ctx.request.body as { 
      url: string; 
      screen?: number; 
      quality?: string;
      notify_only?: boolean;
    };
    
    if (!url) {
      ctx.status = 400;
      ctx.body = { error: 'URL is required' };
      return;
    }

    // Check if stream is already playing on this screen
    const activeStreams = streamManager.getActiveStreams();
    const existingStream = activeStreams.find((s: StreamInfo) => s.screen === screen);
    if (existingStream && existingStream.url === url) {
      ctx.body = { message: 'Stream already playing on this screen' };
      return;
    }

    // Check if stream is playing on a higher priority screen
    const isStreamActive = activeStreams.some((s: StreamInfo) => s.screen === screen);
    if (isStreamActive) {
      ctx.body = { message: 'Stream already playing on higher priority screen' };
      return;
    }

    // If this is just a notification, don't start the stream
    if (notify_only) {
      ctx.body = { message: 'Stream info updated' };
      return;
    }

    const result = await streamManager.startStream({ 
      url, 
      screen: screen || 1, 
      quality: quality || 'best' 
    });
    ctx.body = result;
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/streams/restart', async (ctx: Context) => {
  try {
    const { screen } = ctx.request.body as { screen?: number };
    await streamManager.restartStreams(screen);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Queue Management
router.get('/api/streams/queue/:screen', async (ctx: Context) => {
  const screen = parseInt(ctx.params.screen);
  if (isNaN(screen)) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  try {
    const queue = streamManager.getQueueForScreen(screen);
    if (!queue) {
      ctx.status = 404;
      ctx.body = { error: `No queue found for screen ${screen}` };
      return;
    }
    ctx.body = queue;
  } catch (error) {
    const errorObj = error instanceof Error ? error : new Error(String(error));
    logger.error('Failed to get queue', 'API', errorObj);
    ctx.status = 500;
    ctx.body = { error: 'Internal server error' };
  }
});

router.post('/api/streams/queue/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen, 10);
    const body = ctx.request.body as AddToQueueBody;
    
    if (!body.url) {
      ctx.status = 400;
      ctx.body = { error: 'URL is required' };
      return;
    }

    if (body.platform && body.platform !== 'youtube' && body.platform !== 'twitch') {
      ctx.status = 400;
      ctx.body = { error: 'Platform must be either "youtube" or "twitch"' };
      return;
    }

    const source: StreamSource = {
      url: body.url,
      title: body.title,
      platform: body.platform
    };

    await streamManager.addToQueue(screen, source);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.delete('/api/streams/queue/:screen/:index', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    const index = parseInt(ctx.params.index);
    
    if (isNaN(screen) || isNaN(index)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number or index' };
      return;
    }

    await streamManager.removeFromQueue(screen, index);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/streams/reorder', async (ctx: Context) => {
  try {
    const body = ctx.request.body as ReorderQueueBody;
    
    if (typeof body.screen !== 'number' || typeof body.sourceIndex !== 'number' || typeof body.targetIndex !== 'number') {
      ctx.status = 400;
      ctx.body = { error: 'Invalid parameters' };
      return;
    }

    await streamManager.reorderQueue(body.screen, body.sourceIndex, body.targetIndex);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add stream control endpoints
router.post('/api/streams/start/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }

    const { url } = ctx.request.body as { url: string };
    if (!url) {
      ctx.status = 400;
      ctx.body = { error: 'URL is required' };
      return;
    }

    const result = await streamManager.startStream({ url, screen });
    ctx.body = result;
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/streams/stop/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }

    await streamManager.stopStream(screen);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Process Priority
router.post('/api/player/priority', async (ctx: Context) => {
  try {
    const { priority } = ctx.request.body as { priority: string };
    await streamManager.setPlayerPriority(priority);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Watched Streams
router.get('/api/streams/watched', async (ctx: Context) => {
  try {
    ctx.body = streamManager.getWatchedStreams();
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/streams/watched', async (ctx: Context) => {
  try {
    const { url } = ctx.request.body as MarkWatchedBody;
    if (!url) {
      ctx.status = 400;
      ctx.body = { error: 'URL is required' };
      return;
    }
    
    // Mark the stream as watched
    streamManager.markStreamAsWatched(url);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.delete('/api/streams/watched', async (ctx: Context) => {
  try {
    streamManager.clearWatchedStreams();
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Server Control
router.post('/api/server/stop', async (ctx: Context) => {
  try {
    logger.info('Received stop server request', 'API');
    
    // Set response headers to prevent connection from closing
    ctx.set('Connection', 'close');
    
    // Send response before cleanup
    ctx.status = 200;
    ctx.body = { success: true, message: 'Server stopping...' };
    
    // Force send the response
    ctx.res.end();
    
    // Perform cleanup after response is sent
    setTimeout(async () => {
      try {
        logger.info('Starting server cleanup...', 'API');
        await streamManager.cleanup();
        logger.info('Server cleanup complete, exiting...', 'API');
        process.exit(0);
      } catch (error) {
        logError('Failed to cleanup server', 'API', error instanceof Error ? error : new Error(String(error)));
        process.exit(1);
      }
    }, 1000);
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Stop server and all player processes
router.post('/api/server/stop-all', async (ctx: Context) => {
  try {
    logger.info('Received stop-all request (stopping all players and server)', 'API');
    
    // Set response headers to prevent connection from closing
    ctx.set('Connection', 'close');
    
    // Send response before cleanup
    ctx.status = 200;
    ctx.body = { success: true, message: 'Stopping all players and server...' };
    
    // Force send the response
    ctx.res.end();
    
    // Perform cleanup after response is sent
    setTimeout(async () => {
      try {
        logger.info('Stopping all player processes...', 'API');
        
        // Get all active streams and stop them
        const activeStreams = streamManager.getActiveStreams();
        logger.info(`Active streams: ${JSON.stringify(activeStreams)}`, 'API');
        
        if (activeStreams.length > 0) {
          logger.info(`Found ${activeStreams.length} active streams to stop`, 'API');
          
          // First attempt - stop streams through the API
          const stopPromises = activeStreams.map((stream: StreamInfo) => {
            logger.info(`Stopping player on screen ${stream.screen}`, 'API');
            return streamManager.stopStream(stream.screen, true);
          });
          
          // Wait for all streams to be stopped with a timeout
          const results = await Promise.allSettled(stopPromises);
          logger.info(`Stop results: ${JSON.stringify(results)}`, 'API');
          
          // Check if all streams were stopped
          const allStopped = results.every(r => r.status === 'fulfilled' && r.value === true);
          if (!allStopped) {
            logger.warn('Not all streams stopped successfully, using fallback methods', 'API');
          }
        } else {
          logger.info('No active streams found through API, checking for orphaned processes', 'API');
        }
        
        // Fallback - directly kill processes that might have been missed
        try {
          logger.info('Using fallback process termination methods...', 'API');
          
          // First try graceful termination
          execSync('pkill -f streamlink || true', { stdio: 'ignore' });
          execSync('pkill -f mpv || true', { stdio: 'ignore' });
          
          // Wait a moment
          await new Promise(resolve => setTimeout(resolve, 500));
          
          // Then try more aggressive termination
          execSync('pkill -9 -f streamlink || true', { stdio: 'ignore' });
          execSync('pkill -9 -f mpv || true', { stdio: 'ignore' });
          
          // Final check for any remaining processes
          const checkStreamlink = execSync('pgrep -f streamlink || echo ""', { encoding: 'utf8' }).trim();
          const checkMpv = execSync('pgrep -f mpv || echo ""', { encoding: 'utf8' }).trim();
          
          if (checkStreamlink || checkMpv) {
            logger.warn(`There are still player processes running after termination attempts: ${checkStreamlink} ${checkMpv}`, 'API');
            
            // Last resort - try to kill by process group
            if (checkStreamlink) {
              const pids = checkStreamlink.split('\n');
              for (const pid of pids) {
                if (pid.trim()) {
                  try {
                    execSync(`kill -9 -$(ps -o pgid= ${pid} | grep -o '[0-9]*') || true`, { stdio: 'ignore' });
                  } catch (e) {
                    // Ignore errors
                  }
                }
              }
            }
            
            if (checkMpv) {
              const pids = checkMpv.split('\n');
              for (const pid of pids) {
                if (pid.trim()) {
                  try {
                    execSync(`kill -9 -$(ps -o pgid= ${pid} | grep -o '[0-9]*') || true`, { stdio: 'ignore' });
                  } catch (e) {
                    // Ignore errors
                  }
                }
              }
            }
          }
        } catch (error) {
          logger.error('Error during fallback process termination', 'API', error);
        }
        
        // Then perform server cleanup
        logger.info('Starting server cleanup...', 'API');
        await streamManager.cleanup();
        logger.info('Server cleanup complete, exiting...', 'API');
        process.exit(0);
      } catch (error) {
        logError('Failed during stop-all sequence', 'API', error);
        process.exit(1);
      }
    }, 1000);
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add these new routes after the existing player/priority route
router.post('/api/player/command/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    const { command } = ctx.request.body as { command: string };
    
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    
    if (!command) {
      ctx.status = 400;
      ctx.body = { error: 'Command is required' };
      return;
    }

    streamManager.sendCommandToScreen(screen, command);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/player/command/all', async (ctx: Context) => {
  try {
    const { command } = ctx.request.body as { command: string };
    
    if (!command) {
      ctx.status = 400;
      ctx.body = { error: 'Command is required' };
      return;
    }

    streamManager.sendCommandToAll(command);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add after existing player commands
router.post('/api/player/volume/:target', async (ctx: Context) => {
  try {
    const { level } = ctx.request.body as { level: number };
    const target = ctx.params.target;
    
    if (typeof level !== 'number' || level < 0 || level > 100) {
      ctx.status = 400;
      ctx.body = { error: 'Volume must be between 0-100' };
      return;
    }
    
    if (target === 'all') {
      streamManager.sendCommandToAll(`set volume ${level}`);
    } else {
      const screen = parseInt(target);
      if (isNaN(screen)) {
        ctx.status = 400;
        ctx.body = { error: 'Invalid screen number' };
        return;
      }
      streamManager.sendCommandToScreen(screen, `set volume ${level}`);
    }
    
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/player/pause/:target', async (ctx: Context) => {
  try {
    const target = ctx.params.target;
    
    if (target === 'all') {
      streamManager.sendCommandToAll('cycle pause');
    } else {
      const screen = parseInt(target);
      if (isNaN(screen)) {
        ctx.status = 400;
        ctx.body = { error: 'Invalid screen number' };
        return;
      }
      streamManager.sendCommandToScreen(screen, 'cycle pause');
    }
    
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/player/seek/:target', async (ctx: Context) => {
  try {
    const { seconds } = ctx.request.body as { seconds: number };
    const target = ctx.params.target;
    
    if (typeof seconds !== 'number') {
      ctx.status = 400;
      ctx.body = { error: 'Seconds must be a number' };
      return;
    }
    
    if (target === 'all') {
      streamManager.sendCommandToAll(`seek ${seconds}`);
    } else {
      const screen = parseInt(target);
      if (isNaN(screen)) {
        ctx.status = 400;
        ctx.body = { error: 'Invalid screen number' };
        return;
      }
      streamManager.sendCommandToScreen(screen, `seek ${seconds}`);
    }
    
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Get player settings endpoint
router.get('/api/player/settings', async (ctx: Context) => {
  try {
    ctx.body = streamManager.getPlayerSettings();
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: error instanceof Error ? error.message : String(error) };
  }
});

// Update player settings endpoint
router.post('/api/player/settings', async (ctx: Context) => {
  try {
    const settings = ctx.request.body as Partial<PlayerSettings>;
    await streamManager.updatePlayerSettings(settings);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: error instanceof Error ? error.message : String(error) };
  }
});

// Add screen configuration endpoints
router.get('/api/screens', (ctx: Context) => {
  ctx.body = streamManager.getScreenConfigs();
});

router.put('/api/screens/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }

    const config = ctx.request.body as Partial<ScreenConfig>;
    streamManager.updateScreenConfig(screen, config);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add these new routes before the export
router.get('/api/config', (ctx: Context) => {
  ctx.body = streamManager.getConfig();
});

router.put('/api/config', async (ctx: Context) => {
  try {
    const body = ctx.request.body as UpdateConfigBody;
    
    // Convert the UpdateConfigBody to a proper Config object
    const configUpdate: Partial<Config> = {};
    
    if (body.streams) {
      configUpdate.streams = body.streams;
    }
    
    if (body.organizations) {
      configUpdate.organizations = body.organizations;
    }
    
    if (body.favoriteChannels) {
      // Ensure the favoriteChannels structure matches FavoriteChannels type
      configUpdate.favoriteChannels = {
        groups: body.favoriteChannels.groups || {},
        holodex: body.favoriteChannels.holodex || {},
        twitch: body.favoriteChannels.twitch || {},
        youtube: body.favoriteChannels.youtube || {}
      };
    }
    
    await streamManager.updateConfig(configUpdate);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Screen endpoints
router.get('/screens/:screen', async (ctx) => {
  try {
    const screen = parseInt(ctx.params.screen);
    ctx.body = streamManager.getScreenInfo(screen);
  } catch (error) {
    ctx.status = 400;
    ctx.body = { error: error instanceof Error ? error.message : 'Unknown error' };
  }
});

// Add after other stream routes
router.post('/api/streams/autostart', async (ctx: Context) => {
  try {
    const { screen } = ctx.request.body as { screen?: number };
    
    if (screen) {
      // Start streams on specific screen
      const screenConfig = streamManager.getScreenConfig(screen);
      if (!screenConfig) {
        ctx.status = 400;
        ctx.body = { error: `Invalid screen number: ${screen}` };
        return;
      }
      
      // Enable screen if disabled
      if (!screenConfig.enabled) {
        await streamManager.enableScreen(screen);
      }
      
      // Stop any existing streams
      await streamManager.stopStream(screen);
      
      // Start new streams
      await streamManager.handleQueueEmpty(screen);
      ctx.body = { success: true, message: `Auto-started streams on screen ${screen}` };
    } else {
      // Start streams on all screens
      await streamManager.autoStartStreams();
      ctx.body = { success: true, message: 'Auto-started streams on all screens' };
    }
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add after other stream routes
router.post('/api/streams/close-all', async (ctx: Context) => {
  try {
    // Get all active screens
    const activeStreams = streamManager.getActiveStreams();
    
    // Stop all streams
    for (const stream of activeStreams) {
      await streamManager.stopStream(stream.screen, true);
    }
    
    ctx.body = { success: true, message: 'All players closed' };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add after other player routes
router.post('/api/log', async (ctx: Context) => {
  try {
    const { screen, type, data } = ctx.request.body as { screen: number; type: string; data: unknown };
    
    if (typeof screen !== 'number' || !type) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid message format' };
      return;
    }

    streamManager.handleLuaMessage(screen, type, data);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Update playlist endpoint
router.post('/api/streams/playlist', async (ctx: Context) => {
  try {
    const { screen, data } = ctx.request.body as { 
      screen: number; 
      data: Array<{
        filename: string;
        title?: string;
        current: boolean;
      }>;
    };

    if (!screen || !Array.isArray(data)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid playlist data' };
      return;
    }

    // Update playlist in stream manager
    streamManager.handlePlaylistUpdate(screen, data);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Add a refresh endpoint to force stream refresh
router.post('/api/streams/refresh', async (ctx: Context) => {
  try {
    logger.info('Force refreshing all streams', 'API');
    
    // Reset the last refresh timestamps for all screens
    const enabledScreens = streamManager.getEnabledScreens();
    streamManager.resetRefreshTimestamps(enabledScreens);
    
    // Update streams queue for all enabled screens
    await streamManager.updateAllQueues(true);
    
    ctx.body = { success: true, message: 'Stream data refresh initiated for all screens' };
  } catch (error) {
    logError('Failed to refresh streams', 'API', error);
    ctx.status = 500;
    ctx.body = { success: false, error: 'Failed to refresh streams' };
  }
});

// Add a refresh endpoint for specific screen
router.post('/api/streams/refresh/:screen', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { success: false, error: 'Invalid screen number' };
      return;
    }
    
    logger.info(`Force refreshing streams for screen ${screen}`, 'API');
    
    // Reset the refresh timestamp for this screen
    streamManager.resetRefreshTimestamps([screen]);
    
    // Force refresh queue for screen
    logger.info(`Force refreshing queue for screen ${screen}`, 'API');
    await streamManager.updateQueue(screen);
    
    ctx.body = { success: true, message: `Stream data refresh initiated for screen ${screen}` };
  } catch (error) {
    logError(
      `Failed to refresh streams for screen ${ctx.params.screen}`,
      'API',
      error instanceof Error ? error : new Error(String(error))
    );
    ctx.status = 500;
    ctx.body = { success: false, error: 'Failed to refresh streams' };
  }
});

// Server status endpoint
router.get('/api/server/status', async (ctx: Context) => {
  try {
    const uptimeSeconds = process.uptime();
    const uptimeFormatted = formatUptime(uptimeSeconds);
    
    const activeStreams = streamManager.getActiveStreams();
    const memUsage = process.memoryUsage();
    
    // Define memory usage object with proper types
    const memoryInfo: Record<string, string> = {
      rss: `${Math.round(memUsage.rss / 1024 / 1024)} MB`,
      heapTotal: `${Math.round(memUsage.heapTotal / 1024 / 1024)} MB`,
      heapUsed: `${Math.round(memUsage.heapUsed / 1024 / 1024)} MB`,
      external: `${Math.round(memUsage.external / 1024 / 1024)} MB`
    };
    
    ctx.body = {
      status: 'running',
      uptime: uptimeFormatted,
      activeStreams: activeStreams.length,
      version: process.env.npm_package_version || '1.0.0',
      nodeVersion: process.version,
      platform: process.platform,
      memory: memoryInfo
    };
  } catch (error) {
    logError('Failed to get server status', 'API', error);
    ctx.status = 500;
    ctx.body = { error: 'Failed to get server status' };
  }
});

// Helper function to format uptime
function formatUptime(seconds: number): string {
  const days = Math.floor(seconds / (3600 * 24));
  const hours = Math.floor((seconds % (3600 * 24)) / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const remainingSeconds = Math.floor(seconds % 60);
  
  const parts = [];
  if (days > 0) parts.push(`${days}d`);
  if (hours > 0) parts.push(`${hours}h`);
  if (minutes > 0) parts.push(`${minutes}m`);
  if (remainingSeconds > 0 || parts.length === 0) parts.push(`${remainingSeconds}s`);
  
  return parts.join(' ');
}

// Add new routes for screen management
router.post('/screens/:screen/toggle', async (ctx) => {
  const screen = parseInt(ctx.params.screen);
  if (isNaN(screen)) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  const isEnabled = !streamManager.getScreenConfig(screen)?.enabled;
  if (isEnabled) {
    await streamManager.enableScreen(screen);
  } else {
    await streamManager.disableScreen(screen);
  }
  
  ctx.body = { screen, enabled: isEnabled };
});

router.post('/screens/new-player', async (ctx) => {
  const { screen } = ctx.request.body as { screen?: number };
  
  // Get active streams to avoid duplicates
  const activeStreams = streamManager.getActiveStreams();
  const activeUrls = new Set(activeStreams.map((s: StreamInfo) => s.url));
  
  // Get all queues
  const queues = [1, 2].map(s => streamManager.getQueueForScreen(s)).flat();
  
  // Find first stream that's not already playing
  const newStream = queues.find(stream => !activeUrls.has(stream.url));
  
  if (!newStream) {
    ctx.status = 404;
    ctx.body = { error: 'No available streams found in queues' };
    return;
  }
  
  // If no specific screen provided, find first available screen
  const targetScreen = screen || activeStreams.length + 1;
  if (targetScreen > 2) {
    ctx.status = 400;
    ctx.body = { error: 'No available screens' };
    return;
  }
  
  // Start the stream
  const result = await streamManager.startStream({
    url: newStream.url,
    screen: targetScreen,
    quality: 'best'
  });
  
  ctx.body = result;
});

// Add new routes for screen toggle and new player
router.post('/api/screens/:screen/toggle', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    const config = streamManager.getScreenConfig(screen);
    if (!config) {
      ctx.status = 404;
      ctx.body = { error: 'Screen not found' };
      return;
    }
    if (config.enabled) {
      await streamManager.disableScreen(screen);
    } else {
      await streamManager.enableScreen(screen);
    }
    ctx.body = { success: true, enabled: !config.enabled };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

router.post('/api/screens/:screen/new-player', async (ctx: Context) => {
  try {
    const screen = parseInt(ctx.params.screen);
    if (isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { error: 'Invalid screen number' };
      return;
    }
    const config = streamManager.getScreenConfig(screen);
    if (!config) {
      ctx.status = 404;
      ctx.body = { error: 'Screen not found' };
      return;
    }
    // Stop current stream if any
    await streamManager.stopStream(screen);
    // Start a new player instance
    await streamManager.enableScreen(screen);
    ctx.body = { success: true };
  } catch (error) {
    ctx.status = 500;
    ctx.body = { error: String(error) };
  }
});

// Get stream details for a screen
router.get('/streams/:screen/details', async (ctx: Context) => {
  const screen = parseInt(ctx.params.screen);
  if (isNaN(screen)) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  try {
    const streams = streamManager.getActiveStreams();
    const stream = streams.find((s: StreamInfo) => s.screen === screen);
    
    if (!stream) {
      ctx.status = 404;
      ctx.body = { error: 'No active stream found for this screen' };
      return;
    }

    ctx.body = stream;
  } catch (error) {
    logger.log({
      level: LogLevel.ERROR,
      message: 'Failed to get stream details',
      context: 'API',
      error: error instanceof Error ? error : new Error(String(error))
    });
    ctx.status = 500;
    ctx.body = { error: 'Failed to get stream details' };
  }
});

// Get queue for a screen
router.get('/streams/queue/:screen', async (ctx: Context) => {
  const screen = parseInt(ctx.params.screen, 10);
  if (isNaN(screen) || screen < 1) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  try {
    const queue = queueService.getQueue(screen);
    ctx.body = queue;
  } catch (error) {
    const errorObj = error instanceof Error ? error : new Error(String(error));
    logger.error('Failed to get queue', 'API', errorObj);
    ctx.status = 500;
    ctx.body = { error: 'Internal server error' };
  }
});

// Refresh queue for a screen
router.post('/streams/queue/:screen/refresh', async (ctx: Context) => {
  const screen = parseInt(ctx.params.screen, 10);
  if (isNaN(screen) || screen < 1) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  try {
    await streamManager.updateQueue(screen);
    ctx.status = 200;
    ctx.body = { message: 'Queue refreshed successfully' };
  } catch (error) {
    const errorObj = error instanceof Error ? error : new Error(String(error));
    logger.error('Failed to refresh queue', 'API', errorObj);
    ctx.status = 500;
    ctx.body = { 
      error: 'Failed to refresh queue'
    };
  }
});

// Get screen info
router.get('/screens/:screen', async (ctx: Context) => {
  const screen = parseInt(ctx.params.screen, 10);
  if (isNaN(screen) || screen < 1) {
    ctx.status = 400;
    ctx.body = { error: 'Invalid screen number' };
    return;
  }

  try {
    const queue = queueService.getQueue(screen);
    const activeStreams = streamManager.getActiveStreams();
    const isActive = activeStreams.some((s: StreamInfo) => s.screen === screen);
    
    ctx.status = 200;
    ctx.body = {
      enabled: true, // We'll assume enabled if we can get the queue
      queueProcessing: isActive,
      queueLength: queue.length
    };
  } catch (error) {
    const errorObj = error instanceof Error ? error : new Error(String(error));
    logger.error('Failed to get screen info', 'API', errorObj);
    ctx.status = 500;
    ctx.body = { error: 'Internal server error' };
  }
});

// Add a new endpoint for manually starting a stream with a URL
router.post('/streams/manual-start', async (ctx: Context) => {
  try {
    const { url, screen, quality } = ctx.request.body as { url: string; screen: number; quality?: string };
    
    if (!url) {
      ctx.status = 400;
      ctx.body = { success: false, error: 'URL is required' };
      return;
    }
    
    if (!screen || isNaN(screen)) {
      ctx.status = 400;
      ctx.body = { success: false, error: 'Valid screen number is required' };
      return;
    }
    
    // Use the logError helper function defined in this file
    console.log(`Manually starting stream ${url} on screen ${screen}`);
    
    // First stop any existing stream on this screen
    const activeStreams = streamManager.getActiveStreams();
    const currentStream = activeStreams.find((s: StreamInfo) => s.screen === screen);
    
    if (currentStream) {
      console.log(`Stopping current stream on screen ${screen} before starting new one`);
      await streamManager.stopStream(screen, true);
    }
    
    // Start the requested stream
    const result = await streamManager.startStream({
      url,
      screen,
      quality: quality || 'best',
      windowMaximized: true
    });
    
    if (result.success) {
      ctx.body = { success: true, message: `Stream started on screen ${screen}` };
    } else {
      ctx.status = 500;
      ctx.body = { success: false, error: result.error || 'Failed to start stream' };
    }
  } catch (error) {
    // Use the logError helper function
    logError('Failed to manually start stream', 'API', error);
    ctx.status = 500;
    ctx.body = { success: false, error: 'Internal server error' };
  }
});

// Force refresh all screens and optionally restart streams
router.post('/streams/force-refresh-all', async (ctx: Context) => {
  try {
    const { restart = false } = ctx.request.body as { restart?: boolean };
    
    logger.info(`API request to force refresh all streams${restart ? ' and restart them' : ''}`, 'API');
    
    await streamManager.forceRefreshAll(restart);
    
    ctx.status = 200;
    ctx.body = { 
      success: true, 
      message: `All streams have been refreshed${restart ? ' and restarted' : ''} successfully` 
    };
  } catch (error) {
    logger.error(
      'Failed to force refresh all streams', 
      'API', 
      error instanceof Error ? error : new Error(String(error))
    );
    ctx.status = 500;
    ctx.body = { 
      success: false, 
      error: 'Failed to force refresh all streams' 
    };
  }
});

// Endpoint to manually add a live stream to the queue for testing
router.post('/api/streams/add-test-stream', async (ctx: Context) => {
  try {
    const { url, title, platform, screen = 1 } = ctx.request.body as { 
      url: string; 
      title?: string;
      platform?: 'youtube' | 'twitch';
      screen?: number;
    };
    
    if (!url) {
      ctx.status = 400;
      ctx.body = { 
        success: false, 
        message: 'URL is required' 
      };
      return;
    }
    
    // Create a stream source
    const streamSource: StreamSource = {
      url,
      title: title || `Test Stream (${new Date().toLocaleTimeString()})`,
      platform: platform || (url.includes('youtube') ? 'youtube' : 'twitch'),
      viewerCount: 100,
      thumbnail: '',
      sourceStatus: 'live',
      startTime: Date.now(),
      priority: 1,
      screen,
      // Don't set subtype so it's recognized as manually added
    };
    
    logger.log({
      level: LogLevel.INFO,
      message: `Adding test stream to screen ${screen} queue: ${url}`,
      context: 'API'
    });
    
    // Add to the queue
    await streamManager.addToQueue(screen, streamSource);
    
    // Force refresh the queue to make sure our change is visible
    await streamManager.updateQueue(screen);
    
    logger.log({
      level: LogLevel.INFO,
      message: `Manually added test stream to screen ${screen} queue: ${url}`,
      context: 'API'
    });
    
    ctx.body = { 
      success: true, 
      message: `Test stream added to screen ${screen} queue` 
    };
  } catch (error) {
    logger.log({
      level: LogLevel.ERROR,
      message: 'Failed to add test stream',
      context: 'API',
      error: error instanceof Error ? error : new Error(String(error))
    });
    
    ctx.status = 500;
    ctx.body = { 
      success: false, 
      message: 'Failed to add test stream' 
    };
  }
});

export const apiRouter = router;
</file>

<file path="src/server/stream_manager.ts">
import type { 
  StreamSource, 
  StreamOptions, 
  PlayerSettings,
  Config,
  FavoriteChannels,
  StreamResponse,
  ScreenConfig
} from '../types/stream.js';
import type { 
  StreamOutput, 
  StreamError, 
  StreamInstance,
  StreamPlatform,
  StreamEnd
} from '../types/stream_instance.js';
import { logger } from './services/logger.js';
import { loadAllConfigs } from '../config/loader.js';
import { TwitchService } from './services/twitch.js';
import { HolodexService } from './services/holodex.js';
import { YouTubeService } from './services/youtube.js';
import { PlayerService } from './services/player.js';
import type { TwitchAuth } from './db/database.js';
import { env } from '../config/env.js';
import { queueService } from './services/queue_service.js';
import fs from 'fs';
import path from 'path';
import { EventEmitter } from 'events';
import { KeyboardService } from './services/keyboard_service.js';
import './types/events.js';

/**
 * Manages multiple video streams across different screens
 */
export class StreamManager extends EventEmitter {
  private streams: Map<number, StreamInstance> = new Map();
  private config: Config;
  private twitchService: TwitchService;
  private holodexService: HolodexService;
  private youtubeService: YouTubeService;
  private playerService: PlayerService;
  private keyboardService: KeyboardService;
  private cleanupHandler: (() => void) | null = null;
  private isShuttingDown = false;
  private updateInterval: NodeJS.Timeout | null = null;
  private readonly QUEUE_UPDATE_INTERVAL = 3 * 60 * 1000; // 3 minutes in milliseconds (reduced from 15 minutes)
  private readonly STREAM_START_TIMEOUT = 20 * 1000; // 20 seconds timeout for stream start (reduced from 30 seconds)
  private readonly QUEUE_PROCESSING_TIMEOUT = 20 * 1000; // 20 seconds timeout for queue processing (reduced from 60 seconds)
  private readonly STREAM_REFRESH_INTERVAL = 2 * 60 * 1000; // 2 minutes refresh interval (reduced from 5 minutes)
  private favoriteChannels: FavoriteChannels = {
    groups: {
      default: {
        description: 'Default favorite channels',
        priority: 100
      }
    },
    holodex: { default: [] },
    twitch: { default: [] },
    youtube: { default: [] }
  };
  private queues: Map<number, StreamSource[]> = new Map();
  private readonly RETRY_INTERVAL = 2000; // 2 seconds (reduced from 5 seconds)
  private errorCallback?: (data: StreamError) => void;
  private manuallyClosedScreens: Set<number> = new Set();
  private streamRetries: Map<number, number> = new Map();
  private streamRefreshTimers: Map<number, NodeJS.Timeout> = new Map();
  private inactiveTimers: Map<number, NodeJS.Timeout> = new Map();
  private fifoPaths: Map<number, string> = new Map();
  private ipcPaths: Map<number, string> = new Map();
  private cachedStreams: StreamSource[] = []; // Cache for stream metadata
  private lastStreamFetch: number = 0; // Timestamp of last stream fetch
  private readonly STREAM_CACHE_TTL = 60000; // 1 minute cache TTL
  private queueProcessing: Set<number> = new Set(); // Track screens where queue is being processed
  private lastStreamRefresh: Map<number, number> = new Map(); // Track last refresh time per screen
  private screenConfigs: Map<number, ScreenConfig> = new Map();
  private isOffline = false; // Added for network recovery logic
  private queueProcessingStartTimes: Map<number, number> = new Map();
  private queueProcessingTimeouts: Map<number, NodeJS.Timeout> = new Map();

  /**
   * Creates a new StreamManager instance
   */
  constructor(
    config: Config,
    holodexService: HolodexService,
    twitchService: TwitchService,
    youtubeService: YouTubeService,
    playerService: PlayerService
  ) {
    super(); // Initialize EventEmitter
    this.config = config;
    this.holodexService = holodexService;
    this.twitchService = twitchService;
    this.youtubeService = youtubeService;
    this.playerService = playerService;
    this.keyboardService = new KeyboardService();
    this.isOffline = false; // Initialize offline state
    this.favoriteChannels = config.favoriteChannels || {
      groups: {
        default: {
          description: 'Default favorite channels',
          priority: 100
        }
      },
      holodex: { default: [] },
      twitch: { default: [] },
      youtube: { default: [] }
    };
    
    // Initialize screenConfigs before other initialization that might use it
    this.screenConfigs = new Map(config.player.screens.map(screen => [
      screen.screen, 
      {
        screen: screen.screen,
        id: screen.id,
        enabled: screen.enabled,
        volume: config.player.defaultVolume,
        quality: config.player.defaultQuality,
        windowMaximized: config.player.windowMaximized,
        maxStreams: 1
      }
    ]));
    
    // Now that screenConfigs is initialized, we can safely initialize queues
    this.initializeQueues();
    
    // Synchronize disabled screens from config
    this.synchronizeDisabledScreens();

    logger.info('Stream manager initialized', 'StreamManager');

    // Handle stream end events
    this.playerService.onStreamError(async (data: StreamError) => {
      try {
        // If screen was manually closed, ignore the error
        if (this.manuallyClosedScreens.has(data.screen)) {
          logger.info(`Screen ${data.screen} was manually closed, ignoring error`, 'StreamManager');
          // Attempt to clean up anyway, just in case
          this.queueProcessing.delete(data.screen);
          this.queueProcessingStartTimes.delete(data.screen);
          const timeout = this.queueProcessingTimeouts.get(data.screen);
          if (timeout) {
              clearTimeout(timeout);
              this.queueProcessingTimeouts.delete(data.screen);
          }
          return;
        }

        // Clear any existing timeouts for this screen
        const existingTimeout = this.queueProcessingTimeouts.get(data.screen);
        if (existingTimeout) {
          clearTimeout(existingTimeout);
          this.queueProcessingTimeouts.delete(data.screen);
        }

        // If queue is already being processed for this screen, check how long it's been processing
        if (this.queueProcessing.has(data.screen)) {
          const startTime = this.queueProcessingStartTimes.get(data.screen);
          if (startTime && Date.now() - startTime > 10000) {
            logger.warn(`Queue processing stuck for screen ${data.screen}, resetting state`, 'StreamManager');
            this.queueProcessing.delete(data.screen);
            this.queueProcessingStartTimes.delete(data.screen);
          } else {
            logger.info(`Queue already being processed for screen ${data.screen}`, 'StreamManager');
            return;
          }
        }

        // Set a timeout to clear the queue processing flag if it gets stuck
        const timeout = setTimeout(() => {
          if (this.queueProcessing.has(data.screen)) {
            logger.warn(`Queue processing flag stuck for screen ${data.screen}, clearing it`, 'StreamManager');
            this.queueProcessing.delete(data.screen);
            this.queueProcessingStartTimes.delete(data.screen);
          }
        }, 30000);

        this.queueProcessingTimeouts.set(data.screen, timeout);
        this.queueProcessing.add(data.screen);
        this.queueProcessingStartTimes.set(data.screen, Date.now());

        // Get the URL of the stream that actually failed
        const failedUrl = data.url;
        if (!failedUrl) {
            logger.error(`Stream error event for screen ${data.screen} missing URL, cannot process queue.`, 'StreamManager');
            // Clean up processing state and exit
            this.queueProcessing.delete(data.screen);
            this.queueProcessingStartTimes.delete(data.screen);
            const timeout = this.queueProcessingTimeouts.get(data.screen);
            if (timeout) {
                clearTimeout(timeout);
                this.queueProcessingTimeouts.delete(data.screen);
            }
            return;
        }

        // Get the current queue from queueService *before* modification
        let currentQueue = queueService.getQueue(data.screen);

        // Find the index of the failed stream in the *current* queue
        const failedIndex = currentQueue.findIndex((item: StreamSource) => item.url === failedUrl);

        if (failedIndex !== -1) {
          logger.info(`Removing failed stream ${failedUrl} from queue for screen ${data.screen}`, 'StreamManager');
          // Remove the stream using queueService
          queueService.removeFromQueue(data.screen, failedIndex);
          // Update the local copy of the queue *after* removal
          currentQueue = queueService.getQueue(data.screen);
        } else {
          logger.warn(`Could not find failed stream ${failedUrl} in queue for screen ${data.screen}`, 'StreamManager');
        }

        // Now, filter the *updated* queue
        const screenConfig = this.getScreenConfig(data.screen);
        const filteredQueue = screenConfig?.skipWatchedStreams
          ? currentQueue.filter((stream: StreamSource) => !this.isStreamWatched(stream.url)) // Use updated isStreamWatched
          : currentQueue;

        if (filteredQueue.length === 0) {
          logger.info(`No more streams in queue for screen ${data.screen} after removing failed stream and filtering`, 'StreamManager');
          await this.handleEmptyQueue(data.screen); // handleEmptyQueue uses queueService
          return;
        }

        // The next stream is now at index 0 of the filtered queue
        const nextStream = filteredQueue[0];
        if (nextStream) {
          logger.info(`Starting next stream in queue for screen ${data.screen}: ${nextStream.url}`, 'StreamManager');

          // Remove the *next* stream from the queue *before* attempting to start it
          const nextStreamIndex = currentQueue.findIndex((item: StreamSource) => item.url === nextStream.url);
          if (nextStreamIndex !== -1) {
             logger.debug(`Removing next stream ${nextStream.url} from queue before starting.`, 'StreamManager');
             queueService.removeFromQueue(data.screen, nextStreamIndex);
          } else {
             // This might happen if filtering removed the stream between getting currentQueue and filtering
             logger.warn(`Could not find next stream ${nextStream.url} in current queue for removal before starting. It might have been filtered.`, 'StreamManager');
          }

          // Attempt to start the stream
          await this.startStream({
            url: nextStream.url,
            screen: data.screen,
            title: nextStream.title,
            viewerCount: nextStream.viewerCount,
            startTime: nextStream.startTime
          });
        } else {
          // This case might occur if filtering removes all streams after removing the failed one
          logger.info(`No suitable streams left in queue for screen ${data.screen} after filtering`, 'StreamManager');
          await this.handleEmptyQueue(data.screen);
        }
      } catch (error) {
        logger.error(`Error handling stream error for screen ${data.screen}:`, 'StreamManager', error instanceof Error ? error : new Error(String(error)));
      } finally {
        // Always clear the processing flag and timeout
        this.queueProcessing.delete(data.screen);
        this.queueProcessingStartTimes.delete(data.screen);
        const timeout = this.queueProcessingTimeouts.get(data.screen);
        if (timeout) {
          clearTimeout(timeout);
          this.queueProcessingTimeouts.delete(data.screen);
        }
      }
    });

    // Set up stream end handler
    this.playerService.onStreamEnd(async (data: StreamEnd) => {
      try {
        // Check if we're already processing this screen
        if (this.queueProcessing.has(data.screen)) {
          logger.info(`Already processing queue for screen ${data.screen}, skipping`, 'StreamManager');
          return;
        }

        // Clear any existing timeouts for this screen
        const existingTimeout = this.queueProcessingTimeouts.get(data.screen);
        if (existingTimeout) {
          clearTimeout(existingTimeout);
          this.queueProcessingTimeouts.delete(data.screen);
        }

        // Set up a new timeout for this screen
        const timeout = setTimeout(() => {
          logger.warn(`Queue processing timeout for screen ${data.screen}, clearing state`, 'StreamManager');
          this.queueProcessing.delete(data.screen);
          this.queueProcessingStartTimes.delete(data.screen);
          this.queueProcessingTimeouts.delete(data.screen);
        }, 30000);
        this.queueProcessingTimeouts.set(data.screen, timeout);
        this.queueProcessing.add(data.screen);

        // Get current queue and filter out watched streams based on configuration
        const queue = this.queues.get(data.screen) || [];
        const filteredQueue = this.filterUnwatchedStreams(queue, data.screen);
        
        if (filteredQueue.length === 0) {
          logger.info(`No unwatched streams in queue for screen ${data.screen}, handling empty queue`, 'StreamManager');
          await this.handleEmptyQueue(data.screen);
          return;
        }

        // Get the next stream from the filtered queue
        const nextStream = filteredQueue[0];
        if (!nextStream) {
          logger.info(`No next stream in filtered queue for screen ${data.screen}`, 'StreamManager');
          await this.handleEmptyQueue(data.screen);
          return;
        }

        // Remove the current stream from the queue if it exists
        const currentStream = this.getActiveStreams().find((s: StreamSource) => 
          s.screen !== undefined && s.screen === data.screen
        );
        if (currentStream) {
          const currentIndex = queue.findIndex((item: StreamSource) => item.url === currentStream.url);
          if (currentIndex !== -1) {
            logger.info(`Removing current stream ${currentStream.url} from queue`, 'StreamManager');
            this.queues.set(data.screen, queue.filter((_, index) => index !== currentIndex));
          }
        }

        // Start the next stream
        logger.info(`Starting next stream in queue for screen ${data.screen}: ${nextStream.url}`, 'StreamManager');
        await this.startStream({
          url: nextStream.url,
          screen: data.screen,
          quality: this.config.player.defaultQuality,
          title: nextStream.title,
          viewerCount: nextStream.viewerCount,
          startTime: nextStream.startTime
        });

        // Remove the started stream from the queue
        const updatedQueue = queue.filter(item => item.url !== nextStream.url);
        this.queues.set(data.screen, updatedQueue);

      } catch (error) {
        logger.error(
          `Failed to handle stream end for screen ${data.screen}`,
          'StreamManager',
          error instanceof Error ? error : new Error(String(error))
        );
      } finally {
        // Clean up processing state
        const timeout = this.queueProcessingTimeouts.get(data.screen);
        if (timeout) {
          clearTimeout(timeout);
          this.queueProcessingTimeouts.delete(data.screen);
        }
        this.queueProcessing.delete(data.screen);
      }
    });

    this.initializeQueues();
    this.startQueueUpdates();
    this.setupNetworkRecovery();

    // Initialize stream cleanup
    this.setupStreamCleanup();
  }

  private async handleStreamEnd(screen: number): Promise<void> {
    logger.info(`Handling stream end for screen ${screen}`, 'StreamManager');

    // Guard against multiple concurrent calls for the same screen
    if (this.queueProcessing.has(screen)) {
      logger.warn(`Already processing queue for screen ${screen}, ignoring this call`, 'StreamManager');
      return;
    }

    // Mark that we're processing this screen's queue
    this.queueProcessing.add(screen);
    this.queueProcessingStartTimes.set(screen, Date.now());

    try {
      // Ensure stream is actually stopped first
      await this.playerService.stopStream(screen, true);
      
      // Ensure we're no longer tracking this stream
      this.streams.delete(screen);
      
      // Get the current queue and check if there's a next stream
      const queue = this.queues.get(screen) || [];
      const nextStream = queue.length > 0 ? queue[0] : null;

      if (!nextStream) {
        logger.info(`No next stream in queue for screen ${screen}, looking for new streams`, 'StreamManager');
        await this.handleEmptyQueue(screen);
        return;
      }

      // Remove the stream from queue before starting it
      queue.shift();
      this.queues.set(screen, queue);
      logger.info(`Starting next stream in queue for screen ${screen}: ${nextStream.url}`, 'StreamManager');
      
      // Start the stream immediately
      await this.startStream({
        url: nextStream.url,
        screen,
        quality: 'best',
        windowMaximized: true
      });
    } catch (error) {
      logger.error(
        `Failed to start next stream on screen ${screen}`,
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
      
      // If starting the stream fails, try to update the queue immediately
      await this.handleEmptyQueue(screen);
    } finally {
      // Always clear the processing flags and timeouts
      this.queueProcessing.delete(screen);
      this.queueProcessingStartTimes.delete(screen);
      this.clearQueueProcessingTimeout(screen);
    }
  }

  private async handleEmptyQueue(screen: number): Promise<void> {
    try {
      // If screen was manually closed, don't update queue
       if (this.manuallyClosedScreens.has(screen)) {
        logger.info(`Screen ${screen} was manually closed, not updating queue`, 'StreamManager');
        return;
      }

      // Prevent concurrent queue processing
      if (this.queueProcessing.has(screen)) {
        logger.info(`Queue processing already in progress for screen ${screen}`, 'StreamManager');
         return;
      }

      // Set queue processing flag with a short timeout
      this.queueProcessing.add(screen);
      this.queueProcessingStartTimes.set(screen, Date.now());
      
      const timeoutId = setTimeout(() => {
        logger.warn(`Queue processing timed out for screen ${screen}`, 'StreamManager');
        this.queueProcessing.delete(screen);
        this.queueProcessingStartTimes.delete(screen);
      }, 15000); // Reduced from 30s to 15s
      
      this.queueProcessingTimeouts.set(screen, timeoutId);

      try {
        // Force reset cache timestamp to get fresh data
        this.lastStreamFetch = 0;
        this.lastStreamRefresh.set(screen, 0);
        
        // Update queue to get fresh streams
        await this.updateQueue(screen);
        
        // Get updated queue
        const queue = this.queues.get(screen) || [];
        
        if (queue.length > 0) {
          // Remove the stream from queue before starting it
          const nextStream = queue[0];
          queue.shift();
          this.queues.set(screen, queue);
          
          logger.info(`Starting stream from refreshed queue on screen ${screen}: ${nextStream.url}`, 'StreamManager');
          
          await this.startStream({
            url: nextStream.url,
            screen,
            quality: 'best',
            windowMaximized: true
          });
        } else {
          logger.info(`No streams available for screen ${screen} after queue update`, 'StreamManager');
          
          // Try adding a test stream when no streams are available
          await this.addDefaultTestStream(screen);
        }
      } finally {
        // Clear processing flag and timeout
        this.queueProcessing.delete(screen);
        this.queueProcessingStartTimes.delete(screen);
        this.clearQueueProcessingTimeout(screen);
      }
    } catch (error) {
      logger.error(
        `Error handling empty queue for screen ${screen}`,
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
      this.queueProcessing.delete(screen);
      this.queueProcessingStartTimes.delete(screen);
      this.clearQueueProcessingTimeout(screen);
    }
  }

  // Helper method to add a default test stream if queues are empty
  private async addDefaultTestStream(screen: number): Promise<void> {
    logger.info(`Adding default test stream for screen ${screen}`, 'StreamManager');
    
    try {
      // Default test streams - try YouTube first, then Twitch
      const testStreams = [
        {
          url: "https://www.youtube.com/watch?v=jfKfPfyJRdk", // YouTube lofi beats
          title: "Default Test Stream - YouTube",
          platform: "youtube"
        },
        {
          url: "https://www.twitch.tv/twitchpresents",
          title: "Default Test Stream - Twitch",
          platform: "twitch"
        }
      ];
      
      // Try to add the first test stream
      const testStream = testStreams[0];
      const source: StreamSource = {
        url: testStream.url,
        title: testStream.title,
        platform: testStream.platform as 'youtube' | 'twitch',
        viewerCount: 100,
        thumbnail: '',
        sourceStatus: 'live',
        startTime: Date.now(),
        priority: 1,
        screen
      };
      
      await this.addToQueue(screen, source);
      
      // Try to start the stream immediately
      await this.startStream({
        url: source.url,
        screen,
        quality: 'best',
        windowMaximized: true
      });
      
      logger.info(`Added and started default test stream for screen ${screen}`, 'StreamManager');
    } catch (error) {
      logger.error(
        `Failed to add default test stream for screen ${screen}`,
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
    }
  }

  private clearQueueProcessingTimeout(screen: number): void {
    const timeoutId = this.queueProcessingTimeouts.get(screen);
    if (timeoutId) {
      clearTimeout(timeoutId);
      this.queueProcessingTimeouts.delete(screen);
    }
  }

  private async handleAllStreamsWatched(screen: number) {
    logger.info(`All streams watched for screen ${screen}, refetching immediately...`);
    
    // Clear watched history to allow playing again
    queueService.clearWatchedStreams();
    logger.info(`Cleared watched streams history for screen ${screen}`, 'StreamManager');
    
    // Skip the waiting period and refresh immediately
    logger.info(`Fetching new streams after all watched for screen ${screen}`, 'StreamManager');
    
    // Force reset cache timestamp to get fresh data
    this.lastStreamFetch = 0;
    this.lastStreamRefresh.set(screen, 0);
    
    // Update queue to get fresh streams
    await this.updateQueue(screen);
    
    // Process the queue immediately
    await this.handleEmptyQueue(screen);
  }

  /**
   * Starts a new stream on the specified screen
   */
  async startStream(options: StreamOptions & { url: string }): Promise<StreamResponse> {
    try {
      // Ensure screen is defined
      if (options.screen === undefined) {
        return { screen: 1, success: false, message: 'Screen number is required' };
      }
      const screen = options.screen;

      const stream = this.streams.get(screen);

      // If there's an existing stream, stop it first
      if (stream) {
        await this.stopStream(screen);
      }

      // Clear any existing processing state
      this.queueProcessing.delete(screen);
      this.queueProcessingStartTimes.delete(screen);
      const timeout = this.queueProcessingTimeouts.get(screen);
      if (timeout) {
        clearTimeout(timeout);
        this.queueProcessingTimeouts.delete(screen);
      }

      // Clear any existing stream from the map
      this.streams.delete(screen);

      // Start the new stream
      const screenConfig = this.screenConfigs.get(screen);
      if (!screenConfig) {
        throw new Error(`Screen ${screen} not found in screenConfigs`);
      }

      const result = await this.playerService.startStream({
        screen,
        config: screenConfig,
        url: options.url,
        quality: options.quality || screenConfig.quality,
        volume: options.volume || screenConfig.volume,
        windowMaximized: options.windowMaximized ?? screenConfig.windowMaximized,
        title: options.title,
        viewerCount: options.viewerCount,
        startTime: typeof options.startTime === 'string' ? Date.parse(options.startTime) : options.startTime
      });

      if (result.success) {
        // Add the new stream to our map
        this.streams.set(screen, {
          url: options.url,
          screen: screen,
          quality: options.quality || 'best',
          platform: options.url.includes('twitch.tv') ? 'twitch' as StreamPlatform : 
                   options.url.includes('youtube.com') ? 'youtube' as StreamPlatform : 'twitch' as StreamPlatform,
          status: 'playing',
          volume: 100,
          process: null,
          id: Date.now() // Use timestamp as unique ID
        });
      }

      return { screen, success: result.success };
    } catch (error) {
      logger.error(
        `Failed to start stream on screen ${options.screen}`,
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
      return { screen: options.screen || 1, success: false };
    }
  }

  /**
   * Stops a stream on the specified screen
   */
  async stopStream(screen: number, isManualStop: boolean = false): Promise<boolean> {
    logger.info(`Stopping stream on screen ${screen}, manualStop=${isManualStop}`, 'StreamManager');
    
    try {
      if (isManualStop) {
        this.manuallyClosedScreens.add(screen);
        logger.info(`Screen ${screen} manually closed, added to manuallyClosedScreens`, 'StreamManager');
      }

      // Safety check - don't allow processing queue during stop
      this.queueProcessing.delete(screen);
      this.clearQueueProcessingTimeout(screen);

      // Stop the stream in player service
      const success = await this.playerService.stopStream(screen, true, isManualStop);
      
      // Clean up all related resources
      if (success) {
        this.streams.delete(screen);
        this.clearInactiveTimer(screen);
        this.clearStreamRefresh(screen);
        
        // Also clear these timers to be safe
        const streamRefreshTimer = this.streamRefreshTimers.get(screen);
        if (streamRefreshTimer) {
          clearTimeout(streamRefreshTimer);
          this.streamRefreshTimers.delete(screen);
        }
        
        this.lastStreamRefresh.delete(screen);
      } else {
        logger.warn(`Failed to stop stream on screen ${screen}, forcing cleanup`, 'StreamManager');
        this.streams.delete(screen);
        this.clearInactiveTimer(screen);
        this.clearStreamRefresh(screen);
      }
      
      // Force synchronize after stopping
      this.synchronizeStreams();
      
      return success;
    } catch (error) {
      logger.error(`Error stopping stream on screen ${screen}`, 'StreamManager', 
        error instanceof Error ? error : new Error(String(error)));
      
      // Force cleanup anyway on error
      this.streams.delete(screen);
      this.clearInactiveTimer(screen);
      this.clearStreamRefresh(screen);
      
      return false;
    }
  }

  /**
   * Gets information about all active streams
   */
  getActiveStreams() {
    return this.playerService.getActiveStreams();
  }

  onStreamOutput(callback: (data: StreamOutput) => void) {
    this.playerService.onStreamOutput(callback);
  }

  onStreamError(callback: (data: StreamError) => void) {
    this.playerService.onStreamError(callback);
  }

  /**
   * Gets available organizations
   */
  getOrganizations(): string[] {
    return this.config.organizations;
  }

  /**
   * Fetches live streams from both Holodex and Twitch based on config
   */
  async getLiveStreams(retryCount = 0): Promise<StreamSource[]> {
    // Check if we have a recent cache
    const now = Date.now();
    if (this.cachedStreams.length > 0 && now - this.lastStreamFetch < this.STREAM_CACHE_TTL) {
      logger.debug(
        `Using cached streams (${this.cachedStreams.length} streams, age: ${
          now - this.lastStreamFetch
        }ms)`,
        'StreamManager'
      );
      return this.cachedStreams;
    }

    logger.info('Fetching fresh stream data...', 'StreamManager');
    
    try {
      const results: Array<StreamSource & { screen?: number; sourceName?: string; priority?: number }> = [];
      const streamConfigs = this.config.streams;
      
      // Defensive check for config
      if (!streamConfigs || !Array.isArray(streamConfigs)) {
        logger.warn('Stream configuration is missing or invalid', 'StreamManager');
        return this.cachedStreams.length > 0 ? this.cachedStreams : [];
      }
      
      for (const streamConfig of streamConfigs) {
        const screenNumber = streamConfig.screen;
        if (!streamConfig.enabled) {
          logger.debug('Screen %s is disabled, skipping', String(screenNumber));
          continue;
        }

        // Sort sources by priority first
        const sortedSources = streamConfig.sources && Array.isArray(streamConfig.sources) 
          ? [...streamConfig.sources]
              .filter(source => source.enabled)
              .sort((a, b) => (a.priority || 999) - (b.priority || 999))
          : [];

        logger.debug(
          'Sources for screen %s: %s',
          String(screenNumber),
          sortedSources.map(s => `${s.type}:${s.subtype || 'other'} (${s.priority || 999})`).join(', ')
        );

        // Process each source
        for (const source of sortedSources) {
          try {
            // Get streams based on source type
            let sourceStreams: StreamSource[] = [];

            if (source.type === 'holodex') {
              if (source.subtype === 'organization' && source.name) {
                sourceStreams = await this.holodexService.getLiveStreams({
                  organization: source.name as string,
                  limit: source.limit || 50
                });
              } else if (source.subtype === 'favorites') {
                sourceStreams = await this.holodexService.getLiveStreams({
                  channels: this.getFlattenedFavorites('holodex'),
                  limit: source.limit || 50
                });
              }
            } else if (source.type === 'twitch') {
              if (source.subtype === 'favorites') {
                sourceStreams = await this.twitchService.getStreams({
                  channels: this.getFlattenedFavorites('twitch'),
                  limit: source.limit || 50
                });
              }
            }

            // Filter out any streams with 'ended' status
            sourceStreams = sourceStreams.filter(stream => {
              // For ended streams, filter them out
              if (stream.sourceStatus === 'ended') {
                logger.debug(`Filtering out ended stream: ${stream.url}`, 'StreamManager');
                return false;
              }
              
              // For upcoming streams, check if they're in the past
              if (stream.sourceStatus === 'upcoming' && stream.startTime) {
                // If the start time is in the past by more than 30 minutes, filter it out
                if (stream.startTime < now - 30 * 60 * 1000) {
                  logger.debug(`Filtering out past upcoming stream: ${stream.url}`, 'StreamManager');
                  return false;
                }
              }
              
              return true;
            });

            // Add screen and priority information to all streams from this source
            sourceStreams.forEach(stream => {
              stream.screen = screenNumber;
              stream.priority = source.priority || 999;
              stream.subtype = source.subtype;
            });

            // Add the streams to our results
            results.push(...sourceStreams);
          } catch (error) {
            logger.error(
              `Error fetching streams for ${source.type}:${source.subtype}`,
              'StreamManager',
              error instanceof Error ? error : new Error(String(error))
            );
          }
        }
      }

      // Save to cache
      this.cachedStreams = results;
      this.lastStreamFetch = now;

      logger.info(`Fetched ${results.length} streams from all sources`, 'StreamManager');
      
      return results;
    } catch (error) {
      logger.error('Failed to fetch streams', 'StreamManager', 
        error instanceof Error ? error : new Error(String(error)));
      
      // If this is not a retry, try once more
      if (retryCount < 1) {
        logger.info('Retrying stream fetch...', 'StreamManager');
        return this.getLiveStreams(retryCount + 1);
      }
      
      // Return cached streams if available, otherwise empty array
      return this.cachedStreams.length > 0 ? this.cachedStreams : [];
    }
  }

  /**
   * Gets VTuber streams from Twitch
   */
  async getVTuberStreams(limit = 50): Promise<StreamSource[]> {
    return this.twitchService.getVTuberStreams(limit);
  }

  /**
   * Gets Japanese language streams
   */
  async getJapaneseStreams(limit = 50): Promise<StreamSource[]> {
    return this.twitchService.getJapaneseStreams(limit);
  }

  /**
   * Sets up user authentication for Twitch
   */
  async setTwitchUserAuth(auth: TwitchAuth): Promise<void> {
    await this.twitchService.setUserAuth(auth);
  }

  /**
   * Gets streams from user's followed channels
   */   
  async getFollowedStreams(userId: string): Promise<StreamSource[]> {
    return this.twitchService.getFollowedStreams(userId);
  }

  async autoStartStreams() {
    if (this.isShuttingDown) return;
    
    logger.info('Auto-starting streams...', 'StreamManager');
    
    try {
      // Get all enabled screens with autoStart enabled from streams config
      const autoStartScreens = this.config.streams
        .filter(stream => stream.enabled && stream.autoStart)
        .map(stream => stream.screen);
      
      if (autoStartScreens.length === 0) {
        logger.info('No screens configured for auto-start', 'StreamManager');
        return;
      }
      
      logger.info(`Auto-starting streams for screens: ${autoStartScreens.join(', ')}`, 'StreamManager');
      
      // First, fetch all available streams
      const allStreams = await this.getLiveStreams();
      logger.info(`Fetched ${allStreams.length} live streams for initialization`, 'StreamManager');
      
      // Process each screen
      for (const screen of autoStartScreens) {
        // Check if a stream is already playing on this screen
        const activeStreams = this.getActiveStreams();
        const isStreamActive = activeStreams.some(s => s.screen === screen);
        
        if (isStreamActive) {
          logger.info(`Stream already active on screen ${screen}, skipping auto-start`, 'StreamManager');
          
          // Still update the queue for this screen
          const streamConfig = this.config.streams.find(s => s.screen === screen);
          if (!streamConfig) {
            logger.warn(`No stream configuration found for screen ${screen}`, 'StreamManager');
            continue;
          }
          
          // Filter streams for this screen but exclude the currently playing one
          const currentStream = this.streams.get(screen);
          const currentUrl = currentStream?.url;
          
          const screenStreams = allStreams.filter(stream => {
            // Skip the currently playing stream
            if (currentUrl && stream.url === currentUrl) {
              return false;
            }
            
            // Only include streams that are actually live
            if (!stream.sourceStatus || stream.sourceStatus !== 'live') {
              return false;
            }
            
            // Check if stream is already playing on another screen
            const isPlaying = activeStreams.some(s => s.url === stream.url);
            
            // Never allow duplicate streams across screens
            if (isPlaying) {
              return false;
            }
            
            // Check if this stream matches the screen's configured sources
            const matchesSource = streamConfig.sources?.some(source => {
              if (!source.enabled) return false;

              switch (source.type) {
                case 'holodex':
                  if (stream.platform !== 'youtube') return false;
                  if (source.subtype === 'favorites' && stream.channelId && this.isChannelInFavorites('holodex', stream.channelId)) return true;
                  if (source.subtype === 'organization' && source.name && stream.organization === source.name) return true;
                  break;
                case 'twitch':
                  if (stream.platform !== 'twitch') return false;
                  if (source.subtype === 'favorites' && stream.channelId && this.isChannelInFavorites('twitch', stream.channelId)) return true;
                  if (!source.subtype && source.tags?.includes('vtuber')) return true;
                  break;
              }
              return false;
            });

            return matchesSource;
          }).sort((a, b) => {
            // Sort by priority first
            const aPriority = a.priority ?? 999;
            const bPriority = b.priority ?? 999;
            if (aPriority !== bPriority) return aPriority - bPriority;
            
            return 0;
          });
          
          // Set up the queue first
          if (screenStreams.length > 0) {
            queueService.setQueue(screen, screenStreams);
            logger.info(`Initialized queue for screen ${screen} with ${screenStreams.length} streams`, 'StreamManager');
          }
          
          continue; // Skip to next screen
        }
        
        // Reset the last refresh time to force a fresh start
        this.lastStreamRefresh.set(screen, 0);
        
        // Get stream configuration for this screen
        const streamConfig = this.config.streams.find(s => s.screen === screen);
        if (!streamConfig) {
          logger.warn(`No stream configuration found for screen ${screen}`, 'StreamManager');
          continue;
        }
        
        // Filter and sort streams for this screen
        const screenStreams = allStreams.filter(stream => {
          // Only include streams that are actually live
          if (!stream.sourceStatus || stream.sourceStatus !== 'live') {
            return false;
          }
          
          // Check if stream is already playing on another screen
          const isPlaying = activeStreams.some(s => s.url === stream.url);
          
          // Never allow duplicate streams across screens
          if (isPlaying) {
            return false;
          }
          
          // Check if this stream matches the screen's configured sources
          const matchesSource = streamConfig.sources?.some(source => {
            if (!source.enabled) return false;

            switch (source.type) {
              case 'holodex':
                if (stream.platform !== 'youtube') return false;
                if (source.subtype === 'favorites' && stream.channelId && this.isChannelInFavorites('holodex', stream.channelId)) return true;
                if (source.subtype === 'organization' && source.name && stream.organization === source.name) return true;
                break;
              case 'twitch':
                if (stream.platform !== 'twitch') return false;
                if (source.subtype === 'favorites' && stream.channelId && this.isChannelInFavorites('twitch', stream.channelId)) return true;
                if (!source.subtype && source.tags?.includes('vtuber')) return true;
                break;
            }
            return false;
          });

          return matchesSource;
        }).sort((a, b) => {
          // Sort by priority first
          const aPriority = a.priority ?? 999;
          const bPriority = b.priority ?? 999;
          if (aPriority !== bPriority) return aPriority - bPriority;
          
          return 0; //(b.viewerCount || 0) - (a.viewerCount || 0);
        });
        
        if (screenStreams.length > 0) {
          // Take the first stream to play and queue the rest
          const [firstStream, ...queueStreams] = screenStreams;
          
          // Set up the queue first
          if (queueStreams.length > 0) {
            queueService.setQueue(screen, queueStreams);
            logger.info(`Initialized queue for screen ${screen} with ${queueStreams.length} streams`, 'StreamManager');
          }
          
          // Start playing the first stream
          logger.info(`Starting initial stream on screen ${screen}: ${firstStream.url}`, 'StreamManager');
          await this.startStream({
            url: firstStream.url,
            screen,
            quality: this.config.player.defaultQuality,
            windowMaximized: this.config.player.windowMaximized,
            volume: this.config.player.defaultVolume,
            title: firstStream.title,
            viewerCount: firstStream.viewerCount,
            startTime: firstStream.startTime
          });
        } else {
          logger.info(`No live streams available for screen ${screen}, will try again later`, 'StreamManager');
        }
      }
      
      logger.info('Auto-start complete', 'StreamManager');
    } catch (error) {
      logger.error(`Error during auto-start: ${error instanceof Error ? error.message : String(error)}`, 'StreamManager');
    }
  }

  async disableScreen(screen: number): Promise<void> {
    const streamConfig = this.config.player.screens.find(s => s.screen === screen);
    if (!streamConfig) {
      throw new Error(`Invalid screen number: ${screen}`);
    }
    
    // Notify the PlayerService first that the screen is disabled
    // This ensures any new attempts to start streams will be blocked
    this.playerService.disableScreen(screen);
    
    // Stop any active streams with up to 3 attempts
    for (let attempt = 0; attempt < 3; attempt++) {
      const result = await this.stopStream(screen, true);
      if (result) {
        break;
      }
      // If stopping failed, wait a bit and try again
      if (attempt < 2) {
        logger.warn(`Failed to stop stream on screen ${screen}, attempt ${attempt + 1}, retrying...`, 'StreamManager');
        await new Promise(resolve => setTimeout(resolve, 500));
      }
    }
    
    // Force kill the stream process if it exists
    const stream = this.streams.get(screen);
    if (stream && stream.process) {
      logger.warn(`Forcibly killing stream process for screen ${screen}`, 'StreamManager');
      try {
        stream.process.kill('SIGKILL');
      } catch (e) {
        logger.error(`Failed to kill stream process: ${e}`, 'StreamManager');
      }
    }
    
    // Force clean up any remaining streams on this screen
    if (this.streams.has(screen)) {
      logger.warn(`Stream on screen ${screen} could not be stopped properly, forcing cleanup`, 'StreamManager');
      this.streams.delete(screen);
    }
    
    // Disable the screen in config
    streamConfig.enabled = false;
    
    // Also make sure PlayerService has cleaned up its stream data
    const activeStreams = this.playerService.getActiveStreams();
    if (activeStreams.some(s => s.screen === screen)) {
      logger.warn(`PlayerService still has active stream for screen ${screen}, forcing cleanup`, 'StreamManager');
      // Send a direct command to clean up
      try {
        await this.playerService.stopStream(screen, true);
      } catch (e) {
        logger.error(`Failed final PlayerService cleanup: ${e}`, 'StreamManager');
      }
    }
    
    logger.info(`Screen ${screen} disabled`, 'StreamManager');
  }

  async enableScreen(screen: number): Promise<void> {
    try {
      const config = this.getScreenConfig(screen);
      if (!config) {
        throw new Error(`No configuration found for screen ${screen}`);
      }

      config.enabled = true;
      this.screenConfigs.set(screen, config);
      await this.saveConfig();

      // Remove from manually closed screens when enabling
      this.manuallyClosedScreens.delete(screen);
      logger.info(`Screen ${screen} enabled and removed from manuallyClosedScreens`, 'StreamManager');

      // Start stream if autoStart is enabled
      if (config.autoStart) {
        await this.handleStreamEnd(screen);
      }
    } catch (error) {
      logger.error(`Error enabling screen ${screen}: ${error}`, 'StreamManager');
      throw error;
    }
  }

  /**
   * Handles empty queue by fetching and starting new streams
   */
  public async handleQueueEmpty(screen: number): Promise<void> {
    return this.handleEmptyQueue(screen);
  }

  /**
   * Restarts streams on specified screen or all screens
   */
  public async restartStreams(screen?: number): Promise<void> {
    if (screen) {
      // Restart specific screen
      await this.stopStream(screen, false);
      await this.handleQueueEmpty(screen);
    } else {
      // Restart all screens
      const activeScreens = Array.from(this.streams.keys());
      for (const screenId of activeScreens) {
        await this.stopStream(screenId, false);
        await this.handleQueueEmpty(screenId);
      }
    }
  }

  async reorderQueue(screen: number, sourceIndex: number, targetIndex: number): Promise<void> {
    const queue = queueService.getQueue(screen);
    if (sourceIndex < 0 || sourceIndex >= queue.length || 
        targetIndex < 0 || targetIndex >= queue.length) {
      throw new Error('Invalid source or target index');
    }

    // Reorder the queue
    const [item] = queue.splice(sourceIndex, 1);
    queue.splice(targetIndex, 0, item);
    queueService.setQueue(screen, queue);
    
    logger.info(`Reordered queue for screen ${screen}: moved item from ${sourceIndex} to ${targetIndex}`, 'StreamManager');
  }

  getQueueForScreen(screen: number): StreamSource[] {
    return queueService.getQueue(screen);
  }

  async setPlayerPriority(priority: string): Promise<void> {
    // Validate priority
    const validPriorities = ['realtime', 'high', 'above_normal', 'normal', 'below_normal', 'low', 'idle'];
    if (!validPriorities.includes(priority.toLowerCase())) {
      throw new Error(`Invalid priority: ${priority}. Valid values are: ${validPriorities.join(', ')}`);
    }

    // Update config
    if (!this.config.mpv) {
      this.config.mpv = {};
    }
    this.config.mpv.priority = priority;

    // Restart all streams to apply new priority
    logger.info(`Setting player priority to ${priority}`, 'StreamManager');
    await this.restartStreams();
  }

  public markStreamAsWatched(url: string): void {
    queueService.markStreamAsWatched(url);
    logger.info(`Stream marked as watched: ${url}`, 'StreamManager');
  }

  public getWatchedStreams(): string[] {
    return queueService.getWatchedStreams();
  }

  public clearWatchedStreams(): void {
    queueService.clearWatchedStreams();
    logger.info('Cleared watched streams history', 'StreamManager');
  }

  async cleanup() {
    this.isShuttingDown = true;
    
    try {
      // Stop all keyboard listeners
      this.keyboardService.cleanup();

      // Get all active screens
      const activeScreens = Array.from(this.streams.keys());
      
      // Stop all streams
      const stopPromises = activeScreens.map(screen => 
        this.stopStream(screen, true).catch(error => {
          logger.error(
            `Failed to stop stream on screen ${screen} during cleanup`,
            'StreamManager',
            error instanceof Error ? error : new Error(String(error))
          );
        })
      );

      // Wait for all streams to stop
      await Promise.all(stopPromises);

      // Clear all timers
      for (const screen of this.streamRefreshTimers.keys()) {
        this.clearStreamRefresh(screen);
      }
      
      for (const screen of this.inactiveTimers.keys()) {
        this.clearInactiveTimer(screen);
      }

      // Clear all queues
      this.queues.clear();
      
      // Remove all FIFO files
      for (const [, fifoPath] of this.fifoPaths) {
        try {
          fs.unlinkSync(fifoPath);
        } catch {
          // Ignore errors, file might not exist
          logger.debug(`Failed to remove FIFO file ${fifoPath}`, 'StreamManager');
        }
      }
      this.fifoPaths.clear();
      this.ipcPaths.clear();

      // Clear all event listeners
      this.removeAllListeners();
      
      logger.info('Stream manager cleanup complete', 'StreamManager');
    } catch (error) {
      logger.error(
        'Error during stream manager cleanup',
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
      throw error;
    }
  }

  public sendCommandToScreen(screen: number, command: string): void {
    this.playerService.sendCommandToScreen(screen, command);
  }

  public sendCommandToAll(command: string): void {
    this.playerService.sendCommandToAll(command);
  }

  public async addToQueue(screen: number, source: StreamSource): Promise<void> {
    const queue = this.queues.get(screen) || [];
    
    // Check if stream already exists in queue
    const exists = queue.some(item => item.url === source.url);
    if (exists) {
      logger.info(`Stream ${source.url} already in queue for screen ${screen}`, 'StreamManager');
      return;
    }
    
    queue.push(source);
    this.queues.set(screen, queue);
    
    // Also update the queue service to ensure consistency
    queueService.setQueue(screen, queue);
    
    logger.info(`Added stream ${source.url} to queue for screen ${screen}`, 'StreamManager');
    this.emit('queueUpdate', screen, queue);
  }

  public async removeFromQueue(screen: number, index: number): Promise<void> {
    const queue = this.queues.get(screen) || [];
    if (index >= 0 && index < queue.length) {
      queue.splice(index, 1);
      this.queues.set(screen, queue);
      this.emit('queueUpdate', screen, queue);
    }
  }

  public getPlayerSettings() {
    return {
      preferStreamlink: this.config.player.preferStreamlink,
      defaultQuality: this.config.player.defaultQuality,
      defaultVolume: this.config.player.defaultVolume,
      windowMaximized: this.config.player.windowMaximized,
      maxStreams: this.config.player.maxStreams,
      autoStart: this.config.player.autoStart
    };
  }

  public async updatePlayerSettings(settings: Partial<PlayerSettings>): Promise<void> {
    // Update the settings
    Object.assign(this.config.player, settings);
    
    // Emit settings update event
    this.emit('settingsUpdate', this.config.player);
    await this.saveConfig();
  }

  public getScreenConfigs() {
    return this.config.player.screens;
  }

  public async saveConfig(): Promise<void> {
    try {
      await fs.promises.writeFile(
        path.join(process.cwd(), 'config', 'config.json'),
        JSON.stringify(this.config, null, 2),
        'utf-8'
      );
      this.emit('configUpdate', this.config);
    } catch (error) {
      this.emit('error', error);
      throw error;
    }
  }

  public getScreenConfig(screen: number): ScreenConfig | undefined {
    return this.screenConfigs.get(screen);
  }

  public updateScreenConfig(screen: number, config: Partial<ScreenConfig>): void {
    const screenConfig = this.getScreenConfig(screen);
    if (!screenConfig) {
      throw new Error(`Screen ${screen} not found`);
    }
    
    // Update the config
    Object.assign(screenConfig, config);
    
    this.screenConfigs.set(screen, screenConfig);
    this.emit('screenConfigChanged', { screen, config });
  }

  public getConfig() {
    return {
      streams: this.config.player.screens,
      organizations: this.config.organizations,
      favoriteChannels: this.config.favoriteChannels,
      holodex: {
        apiKey: this.config.holodex.apiKey
      },
      twitch: {
        clientId: this.config.twitch.clientId,
        clientSecret: this.config.twitch.clientSecret,
        streamersFile: this.config.twitch.streamersFile
      }
    };
  }

  public async updateConfig(newConfig: Partial<Config>): Promise<void> {
    Object.assign(this.config, newConfig);
    await this.saveConfig();
    this.emit('configUpdate', this.getConfig());
  }

  public async updateFavorites(favorites: FavoriteChannels): Promise<void> {
    this.favoriteChannels = favorites;
    this.config.favoriteChannels = favorites;
    
    // Update services with new favorites - flatten all groups into a single array for each platform
    const flattenedHolodex = this.getFlattenedFavorites('holodex');
    const flattenedTwitch = this.getFlattenedFavorites('twitch');
    const flattenedYoutube = this.getFlattenedFavorites('youtube');
    
    this.holodexService.updateFavorites(flattenedHolodex);
    this.twitchService.updateFavorites(flattenedTwitch);
    this.youtubeService.updateFavorites(flattenedYoutube);
    
    await fs.promises.writeFile(
      path.join(process.cwd(), 'config', 'favorites.json'),
      JSON.stringify(favorites, null, 2),
      'utf-8'
    );
    
    this.emit('favoritesUpdate', favorites);
  }

  public getFavorites(): FavoriteChannels {
    return this.favoriteChannels;
  }

  public async addFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string, group: string = 'default'): Promise<void> {
    // Ensure the platform and group exist
    if (!this.favoriteChannels[platform]) {
      this.favoriteChannels[platform] = {};
    }
    
    if (!this.favoriteChannels[platform][group]) {
      this.favoriteChannels[platform][group] = [];
    }
    
    // Add the channel to the specified group if it doesn't already exist
    if (!this.favoriteChannels[platform][group].includes(channelId)) {
      this.favoriteChannels[platform][group].push(channelId);
      await this.updateFavorites(this.favoriteChannels);
    }
  }

  public async removeFavorite(platform: 'holodex' | 'twitch' | 'youtube', channelId: string, group: string = 'default'): Promise<void> {
    if (this.favoriteChannels[platform] && this.favoriteChannels[platform][group]) {
      const index = this.favoriteChannels[platform][group].indexOf(channelId);
      if (index !== -1) {
        this.favoriteChannels[platform][group].splice(index, 1);
        await this.updateFavorites(this.favoriteChannels);
      }
    }
  }

  private initializeQueues() {
    this.config.player.screens.forEach(screen => {
      this.queues.set(screen.screen, []);
    });
    // Force update all queues after initialization
    this.updateAllQueues(true).catch(error => {
      logger.error(
        'Failed to initialize queues',
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
    });
  }

  /**
   * Get comprehensive information about a screen, including:
   * - Current stream
   * - Queue
   * - Configuration
   * - Status
   */
  public getScreenInfo(screen: number) {
    // Get screen configuration
    const screenConfig = this.config.player.screens.find(s => s.screen === screen);
    if (!screenConfig) {
      throw new Error(`Screen ${screen} not found`);
    }

    // Get active stream for this screen
    const activeStream = this.getActiveStreams().find(s => s.screen === screen);

    // Get queue for this screen
    const queue = this.getQueueForScreen(screen);

    return {
      config: screenConfig,
      currentStream: activeStream || null,
      queue,
      enabled: screenConfig.enabled,
      status: activeStream?.status || 'stopped',
      // Additional useful information
      volume: screenConfig.volume,
      quality: screenConfig.quality,
      windowMaximized: screenConfig.windowMaximized,
      dimensions: {
        width: screenConfig.width,
        height: screenConfig.height,
        x: screenConfig.x,
        y: screenConfig.y
      }
    };
  }

  private clearInactiveTimer(screen: number) {
    const timer = this.inactiveTimers.get(screen);
    if (timer) {
      clearTimeout(timer);
      this.inactiveTimers.delete(screen);
    }
  }

  private clearStreamRefresh(screen: number) {
    const timer = this.streamRefreshTimers.get(screen);
    if (timer) {
      clearTimeout(timer);
      this.streamRefreshTimers.delete(screen);
    }
  }

  private async startQueueUpdates() {
    if (this.updateInterval) {
      return; // Already running
    }

    const updateQueues = async (force: boolean = false) => {
      if (this.isShuttingDown) {
        return;
      }

      logger.info('Updating stream queues...', 'StreamManager');
      
      // Get all enabled screens
      const enabledScreens = this.config.streams
        .filter(stream => stream.enabled)
        .map(stream => stream.screen);

      // Update queues for each screen
      for (const screen of enabledScreens) {
        try {
          // Skip screens that are already being processed
          if (this.queueProcessing.has(screen)) {
            logger.info(`Queue processing already in progress for screen ${screen}, skipping`, 'StreamManager');
            continue;
          }

          // Check if there's an active stream on this screen
          const activeStream = this.getActiveStreams().find(s => s.screen === screen);
          
          if (!activeStream) {
            // If no active stream and screen isn't manually closed, try to start a new one
            if (!this.manuallyClosedScreens.has(screen)) {
              const now = Date.now();
              const lastRefresh = this.lastStreamRefresh.get(screen) || 0;
              const timeSinceLastRefresh = now - lastRefresh;
              
              // Only attempt to start new streams if forced or if it's been long enough since last refresh
              if (force || timeSinceLastRefresh >= this.STREAM_REFRESH_INTERVAL) {
                logger.info(`No active stream on screen ${screen}, fetching new streams`, 'StreamManager');
                // Mark as processing to prevent concurrent queue processing
                this.queueProcessing.add(screen);
                try {
                  // Reset last stream fetch to force fresh data
                  this.lastStreamFetch = 0;
                  const streams = await this.getLiveStreams();
            const availableStreams = streams.filter(s => s.screen === screen);
            
            if (availableStreams.length > 0) {
                    // Start first stream immediately
                    const firstStream = availableStreams[0];
                    await this.startStream({
                      url: firstStream.url,
                      screen,
                      quality: this.config.player.defaultQuality,
                      title: firstStream.title,
                      viewerCount: firstStream.viewerCount,
                      startTime: firstStream.startTime
                    });
                    
                    // Set remaining streams in queue
                    if (availableStreams.length > 1) {
                      queueService.setQueue(screen, availableStreams.slice(1));
                    }
                    
                    this.lastStreamRefresh.set(screen, now);
                  } else {
                    logger.info(`No available streams found for screen ${screen}`, 'StreamManager');
                  }
                } catch (error) {
                  logger.error(
                    `Failed to fetch streams for screen ${screen}`,
                    'StreamManager',
                    error instanceof Error ? error : new Error(String(error))
                  );
                } finally {
                  // Always clear the processing flag
                  this.queueProcessing.delete(screen);
                }
                } else {
                logger.info(`No active stream on screen ${screen}, but refresh interval not elapsed. Skipping refresh.`, 'StreamManager');
                }
              } else {
              logger.info(`Screen ${screen} was manually closed, not starting new streams`, 'StreamManager');
            }
          }
        } catch (error) {
          logger.error(
            `Failed to update queue for screen ${screen}`,
            'StreamManager',
            error instanceof Error ? error : new Error(String(error))
          );
          // Ensure processing flag is cleared on error
          this.queueProcessing.delete(screen);
        }
      }
    };

    // Initial update
    await updateQueues(true); // Force initial update

    // Set up interval for periodic updates
    this.updateInterval = setInterval(async () => {
      await updateQueues();
    }, this.QUEUE_UPDATE_INTERVAL);

    logger.info(`Queue updates started with ${this.QUEUE_UPDATE_INTERVAL / 60000} minute interval`, 'StreamManager');
  }

  private stopQueueUpdates() {
    if (this.updateInterval) {
      clearInterval(this.updateInterval);
      this.updateInterval = null;
      logger.info('Queue updates stopped', 'StreamManager');
    }
  }

  handleLuaMessage(screen: number, type: string, data: unknown) {
    if (typeof data === 'object' && data !== null) {
      this.playerService.handleLuaMessage(screen, type, data as Record<string, unknown>);
    }
  }

  public handlePlaylistUpdate(screen: number, playlist: Array<{ filename: string; title?: string; current: boolean; }>): void {
    // Get or create stream instance
    let stream = this.streams.get(screen);
    
    // If no stream exists but we have playlist data, create a new stream instance
    if (!stream && playlist.length > 0) {
      const currentItem = playlist.find(item => item.current);
      if (currentItem) {
        // Get screen configuration
        const screenConfig = this.config.player.screens.find(s => s.screen === screen);
        if (!screenConfig) {
          logger.warn(`No screen configuration found for screen ${screen}`, 'StreamManager');
          return;
        }

        // Create new stream instance
        stream = {
          id: Date.now(),
          screen,
          url: currentItem.filename,
          title: currentItem.title,
          quality: screenConfig.quality || this.config.player.defaultQuality,
          status: 'playing',
          platform: currentItem.filename.includes('youtube.com') ? 'youtube' : 'twitch',
          volume: screenConfig.volume || this.config.player.defaultVolume,
          process: null // Process will be attached when available
        };
        this.streams.set(screen, stream);
        logger.info(`Created new stream instance for screen ${screen}`, 'StreamManager');
      }
    }

    if (!stream) {
      logger.warn(`No active stream found for screen ${screen} during playlist update`, 'StreamManager');
      return;
    }

    // Update the stream's playlist
    stream.playlist = playlist.map(item => ({
      id: Date.now(),
      screen,
      url: item.filename,
      title: item.title,
      quality: stream.quality,
      status: item.current ? 'playing' : 'stopped',
      platform: item.filename.includes('youtube.com') ? 'youtube' : 'twitch',
      volume: stream.volume,
      process: item.current ? stream.process : null
    }));

    // Log the update
    logger.debug(
      `Updated playlist for screen ${screen} with ${playlist.length} items`,
      'StreamManager'
    );

    // Emit playlist update event
    this.emit('playlistUpdate', screen, stream.playlist);
  }

  /**
   * Gets a list of all enabled screens
   */
  getEnabledScreens(): number[] {
    // Get all enabled screens from the config
    return this.config.streams
      .filter(stream => stream.enabled)
      .map(stream => stream.screen);
  }

  /**
   * Resets the refresh timestamps for specified screens
   * @param screens Array of screen numbers to reset
   */
  resetRefreshTimestamps(screens: number[]): void {
    logger.info(`Resetting refresh timestamps for screens: ${screens.join(', ')}`, 'StreamManager');
    
    screens.forEach(screen => {
      this.lastStreamRefresh.set(screen, 0);
    });
  }

  /**
   * Updates the queue for a specific screen, optionally forcing a refresh
   * @param screen Screen number
   * @param forceRefresh Whether to force a refresh regardless of time elapsed
   */
  async updateQueue(screen: number): Promise<void> {
    try {
      const screenConfig = this.getScreenConfig(screen);
      if (!screenConfig || !screenConfig.enabled) {
        logger.debug(`Screen ${screen} is disabled or has no config, skipping queue update`, 'StreamManager');
        return;
      }

      // Get streams from all sources
      const streams = await this.getAllStreamsForScreen(screen);
      if (streams.length === 0) {
        logger.info(`No streams found for screen ${screen}, queue will be empty`, 'StreamManager');
      }
      
      // Log stream status distribution
      const liveCount = streams.filter(s => s.sourceStatus === 'live').length;
      const upcomingCount = streams.filter(s => s.sourceStatus === 'upcoming').length;
      const otherCount = streams.length - liveCount - upcomingCount;
      
      logger.info(
        `Stream status breakdown for screen ${screen}: ${liveCount} live, ${upcomingCount} upcoming, ${otherCount} other`,
        'StreamManager'
      );
      
      // Filter out watched streams based on configuration
      const filteredStreams = this.filterUnwatchedStreams(streams, screen);

      // Sort streams
      const sortedStreams = this.sortStreams(filteredStreams, screenConfig.sorting);

      // Update queue
      this.queues.set(screen, sortedStreams);
      queueService.setQueue(screen, sortedStreams);
      
      logger.info(
        `Updated queue for screen ${screen}: ${sortedStreams.length} streams (${streams.length - sortedStreams.length} filtered)`,
        'StreamManager'
      );

      // Emit queue update event
      this.emit('queueUpdate', { screen, queue: sortedStreams });
    } catch (error) {
      logger.error(
        `Failed to update queue for screen ${screen}`,
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
    }
  }

  private filterUnwatchedStreams(streams: StreamSource[], screen: number): StreamSource[] {
    // Get screen config
    const screenConfig = this.getScreenConfig(screen);
    if (!screenConfig) {
      logger.warn(`No config found for screen ${screen}, using default settings`, 'StreamManager');
    }

    // Check if we should skip watched streams
    // First check screen-specific setting, then global setting, default to true if neither is set
    const skipWatched = screenConfig?.skipWatchedStreams !== undefined ? 
      screenConfig.skipWatchedStreams : 
      (this.config.skipWatchedStreams !== undefined ? this.config.skipWatchedStreams : true);

    if (!skipWatched) {
      logger.info(`Watched stream skipping disabled for screen ${screen}`, 'StreamManager');
      return streams;
    }

    const unwatchedStreams = streams.filter((stream: StreamSource) => {
      const isWatched = this.isStreamWatched(stream.url);
      if (isWatched) {
        logger.debug(
          `Filtering out watched stream: ${stream.url} (${stream.title || 'No title'})`,
          'StreamManager'
        );
      }
      return !isWatched;
    });

    if (unwatchedStreams.length < streams.length) {
      logger.info(
        `Filtered out ${streams.length - unwatchedStreams.length} watched streams for screen ${screen}`,
        'StreamManager'
      );
    }

    return unwatchedStreams;
  }

  private isStreamWatched(url: string): boolean {
    // Use queueService to check watched status
    return queueService.getWatchedStreams().includes(url);
  }

  /**
   * Updates all queues for enabled screens
   * @param forceRefresh Whether to force a refresh for all screens
   */
  async updateAllQueues(forceRefresh = false): Promise<void> {
    if (this.isShuttingDown) {
      return;
    }

    logger.info(`${forceRefresh ? 'Force updating' : 'Updating'} all stream queues...`, 'StreamManager');
    
    // Get all enabled screens
    const enabledScreens = this.getEnabledScreens();

    // Early return if no enabled screens
    if (enabledScreens.length === 0) {
      logger.info('No enabled screens to update queues for', 'StreamManager');
      return;
    }

    try {
      // Use Promise.all for parallel updates to reduce total processing time
      await Promise.all(enabledScreens.map(async (screen) => {
        try {
          return this.updateQueue(screen);
        } catch (error) {
          logger.error(
            `Failed to update queue for screen ${screen}`,
            'StreamManager',
            error instanceof Error ? error : new Error(String(error))
          );
        }
      }));
      logger.info('All queues updated successfully', 'StreamManager');
    } catch (error) {
      logger.error(
        'Error updating all queues',
        'StreamManager',
        error instanceof Error ? error : new Error(String(error))
      );
    }
  }

  /**
   * Synchronize disabled screens from config to PlayerService
   */
  private synchronizeDisabledScreens(): void {
    if (!this.config.player.screens) return;
    
    // Mark all disabled screens in the PlayerService
    for (const screenConfig of this.config.player.screens) {
      if (!screenConfig.enabled) {
        this.playerService.disableScreen(screenConfig.screen);
        logger.info(`Screen ${screenConfig.screen} marked as disabled during initialization`, 'StreamManager');
      }
    }
  }

  // Add method to force queue refresh
  public async forceQueueRefresh(): Promise<void> {
    logger.info('Forcing queue refresh for all screens', 'StreamManager');
    
    // Save ALL existing streams to preserve them
    const existingStreams = new Map<number, StreamSource[]>();
    for (const [screen, queue] of this.queues.entries()) {
      if (queue.length > 0) {
        existingStreams.set(screen, [...queue]);
        logger.info(`Preserving ${queue.length} existing streams for screen ${screen}`, 'StreamManager');
      }
    }
    
    // Reset all refresh timestamps to force update
    this.lastStreamFetch = 0;
    
    // Get all enabled screens
    const enabledScreens = this.getEnabledScreens();
    
    // Clear last refresh timestamps for all screens to force fresh fetch
    for (const screen of enabledScreens) {
      this.lastStreamRefresh.set(screen, 0);
    }
    
    // Do NOT clear existing queues before fetching - we'll merge instead
    logger.info('Fetching fresh stream data for all screens', 'StreamManager');
    
    // Force update all queues
    try {
      await this.updateAllQueues(true);
      
      // After fetching new streams, restore preserved streams for each screen
      for (const [screen, preserved] of existingStreams.entries()) {
        const currentQueue = this.queues.get(screen) || [];
        
        // Avoid duplicates by creating a Set of URLs in the current queue
        const currentUrls = new Set(currentQueue.map(stream => stream.url));
        
        // Filter preserved streams to only include those not already in the queue
        const uniquePreserved = preserved.filter(stream => !currentUrls.has(stream.url));
        
        if (uniquePreserved.length > 0) {
          // Merge current queue with preserved streams
          const newQueue = [...currentQueue, ...uniquePreserved];
          
          // Update the queue
          this.queues.set(screen, newQueue);
          queueService.setQueue(screen, newQueue);
          
          logger.info(`Restored ${uniquePreserved.length} preserved streams for screen ${screen}`, 'StreamManager');
        }
      }
    } catch (error) {
      logger.error('Error during queue refresh', 'StreamManager', 
        error instanceof Error ? error : new Error(String(error)));
      
      // If fetch fails, restore all preserved streams as a fallback
      if (existingStreams.size > 0) {
        logger.info('Fetch failed - restoring preserved streams', 'StreamManager');
        for (const [screen, preserved] of existingStreams.entries()) {
          this.queues.set(screen, preserved);
          queueService.setQueue(screen, preserved);
        }
      }
    }
  }

  // Add network recovery handler
  private setupNetworkRecovery(): void {
    let wasOffline = false;
    let recoveryAttempts = 0;
    let lastSuccessfulNetworkCheck = Date.now();
    let lastQueueRefreshAfterRecovery = 0;
    const RECOVERY_DELAY = 2000; // 2 seconds between recovery attempts (reduced from 5 seconds)
    const MINIMUM_RECOVERY_INTERVAL = 20000; // 20 seconds between queue refreshes after recovery (reduced from 60 seconds)
    const MAX_OFFLINE_TIME_BEFORE_FULL_RESET = 3600000; // 1 hour - after this time, do a full reset
    
    const CHECK_URLS = [
      'https://8.8.8.8',
      'https://1.1.1.1',
      'https://google.com',
      'https://cloudflare.com'
    ];

    // Check network status periodically
    setInterval(async () => {
      try {
        // Try each URL until one succeeds
        let isOnline = false;
        for (const url of CHECK_URLS) {
          try {
            const controller = new AbortController();
            const timeoutId = setTimeout(() => controller.abort(), 3000); // 3s timeout
            
            const response = await fetch(url, { 
              signal: controller.signal,
              method: 'HEAD'  // Only request headers, not full content
            });
            clearTimeout(timeoutId);
            
            if (response.ok) {
              isOnline = true;
              lastSuccessfulNetworkCheck = Date.now();
              break;
            }
          } catch {
            // Continue to next URL if this one fails
            continue;
          }
        }

        if (!isOnline && !wasOffline) {
          // Just went offline
          wasOffline = true;
          recoveryAttempts = 0;
          this.isOffline = true; // Set the global offline flag
          logger.warn('Network connection lost - unable to reach any test endpoints', 'StreamManager');
        } else if (isOnline && wasOffline) {
          // Just came back online
          wasOffline = false;
          recoveryAttempts = 0;
          this.isOffline = false; // Reset the global offline flag
          
          const offlineDuration = Date.now() - lastSuccessfulNetworkCheck;
          const isLongOutage = offlineDuration > MAX_OFFLINE_TIME_BEFORE_FULL_RESET;
          
          logger.info(`Network connection restored after ${Math.round(offlineDuration/1000)} seconds, refreshing streams`, 'StreamManager');
          
          // Prevent too frequent queue refreshes after recovery
          if (Date.now() - lastQueueRefreshAfterRecovery < MINIMUM_RECOVERY_INTERVAL) {
            logger.info('Skipping queue refresh as one was performed recently', 'StreamManager');
            return;
          }
          
          lastQueueRefreshAfterRecovery = Date.now();
          
          // Execute recovery with delay to ensure network is stable
          setTimeout(async () => {
            try {
              // First, ensure all essential properties are initialized
              if (!this.screenConfigs) {
                logger.warn('Reinitializing screenConfigs after network outage', 'StreamManager');
                this.screenConfigs = new Map(this.config.player.screens.map(screen => [
                  screen.screen,
                  {
                    screen: screen.screen,
                    id: screen.id || screen.screen,
                    enabled: screen.enabled,
                    volume: screen.volume || this.config.player.defaultVolume,
                    quality: screen.quality || this.config.player.defaultQuality,
                    windowMaximized: screen.windowMaximized ?? this.config.player.windowMaximized,
                    sources: [],
                    sorting: { field: 'viewerCount', order: 'desc' },
                    refresh: 300,
                    autoStart: true
                  }
                ]));
              }
              
              // For long outages, clear cached data to ensure fresh content
              if (isLongOutage) {
                logger.warn('Long network outage detected, clearing cached streams and queue data', 'StreamManager');
                this.cachedStreams = [];
                this.lastStreamFetch = 0;
                
                // Reset all queue processing flags that might be stuck
                this.queueProcessing.clear();
                this.queueProcessingStartTimes.clear();
                
                // Clear all timeouts
                for (const [screen, timeout] of this.queueProcessingTimeouts.entries()) {
                  clearTimeout(timeout);
                  this.queueProcessingTimeouts.delete(screen);
                }
              }
              
              // Force refresh all queues and streams
              logger.info('Forcing queue refresh after network recovery', 'StreamManager');
              await this.forceQueueRefresh();
              
              // Check active streams and restart any that might have failed during outage
              const activeStreams = this.getActiveStreams();
              logger.info(`Checking ${activeStreams.length} active streams after network recovery`, 'StreamManager');
              
              // For screens without active streams, try to start next in queue
              const enabledScreens = this.getEnabledScreens();
              for (const screen of enabledScreens) {
                const hasActiveStream = activeStreams.some((s: StreamSource) => 
                  s.screen !== undefined && s.screen === screen
                );
                if (!hasActiveStream && !this.manuallyClosedScreens.has(screen)) {
                  logger.info(`No active stream on screen ${screen} after network recovery, attempting to start next stream`, 'StreamManager');
                  
                  // For long outages, reset the queue for this screen first
                  if (isLongOutage) {
                    logger.info(`Resetting queue for screen ${screen} after long outage`, 'StreamManager');
                    await this.updateQueue(screen);
                  }
                  
                  // Try to start a stream from the queue
                  await this.handleEmptyQueue(screen);
                  
                  // If queue is still empty after trying to update it, force another update
                  const queue = queueService.getQueue(screen);
                  if (queue.length === 0) {
                    logger.warn(`Queue still empty for screen ${screen} after recovery, forcing another update`, 'StreamManager');
                    await this.updateAllQueues(true);
                    await this.handleEmptyQueue(screen);
                  }
                }
              }
            } catch (error) {
              logger.error('Failed to execute network recovery actions', 'StreamManager', 
                error instanceof Error ? error : new Error(String(error))
              );
            }
          }, RECOVERY_DELAY);
        } else if (!isOnline && wasOffline) {
          // Still offline
          recoveryAttempts++;
          if (recoveryAttempts % 6 === 0) { // Log every ~60 seconds (6 * 10s interval)
            logger.warn(`Network still disconnected. Recovery will be attempted when connection is restored.`, 'StreamManager');
          }
        } else if (isOnline && !wasOffline) {
          // Still online, periodically check if queues need refreshing
          const timeSinceLastRefresh = Date.now() - this.lastStreamFetch;
          if (timeSinceLastRefresh > this.QUEUE_UPDATE_INTERVAL) {
            logger.debug('Periodic queue refresh during stable network connection', 'StreamManager');
            this.updateAllQueues(false).catch(error => {
              logger.error('Failed to update queues during periodic check', 'StreamManager', 
                error instanceof Error ? error : new Error(String(error))
              );
            });
          }
        }
      } catch (error) {
        if (!wasOffline) {
          wasOffline = true;
          recoveryAttempts = 0;
          this.isOffline = true; // Set the global offline flag
          logger.warn(
            'Network connection lost', 
            'StreamManager',
            error instanceof Error ? error.message : String(error)
          );
        }
      }
    }, 5000); // Check every 5 seconds (reduced from 10 seconds)
  }

  async refreshStreams(): Promise<void> {
    logger.info('Refreshing streams for all screens', 'StreamManager');
    for (const screen of this.screenConfigs.keys()) {
        await this.updateQueue(screen);
    }
  }

  /**
   * Force refresh all streams and optionally restart them
   * @param restart Whether to restart all streams after refreshing
   */
  public async forceRefreshAll(restart: boolean = false): Promise<void> {
    logger.info(`Force refreshing all streams${restart ? ' and restarting them' : ''}`, 'StreamManager');
    
    try {
      // Force refresh all queues first
      await this.forceQueueRefresh();
      
      if (restart) {
        // Restart all streams
        await this.restartStreams();
        logger.info('All streams have been restarted successfully', 'StreamManager');
      }
    } catch (error) {
      logger.error(
        'Failed to force refresh all streams', 
        'StreamManager', 
        error instanceof Error ? error : new Error(String(error))
      );
      throw error;
    }
  }

  // Add a method to periodically clean up finished streams
  private setupStreamCleanup(): void {
    // Periodically check for orphaned streams and clean them up
    const interval = setInterval(() => {
      if (this.isShuttingDown) {
        clearInterval(interval);
        return;
      }

      try {
        this.synchronizeStreams();
      } catch (error) {
        logger.error('Error in stream cleanup interval', 'StreamManager', error instanceof Error ? error : new Error(String(error)));
      }
    }, 60000); // Check every minute

    // Cleanup on shutdown
    this.cleanupHandler = () => {
      clearInterval(interval);
      this.cleanup().catch(error => {
        logger.error('Error during cleanup', 'StreamManager', error instanceof Error ? error : new Error(String(error)));
        process.exit(1);
      });
    };

    // Handle SIGINT
    process.on('SIGINT', () => {
      logger.info('Received SIGINT. Shutting down...', 'StreamManager');
      if (this.cleanupHandler) {
        this.cleanupHandler();
      }
    });
  }

  /**
   * Synchronize the stream manager's state with the player service
   * to ensure no orphaned streams or inconsistencies
   */
  private synchronizeStreams(): void {
    try {
      // Get active streams from player service
      const playerStreams = this.playerService.getActiveStreams();
      const playerScreens = new Set(playerStreams.map(stream => stream.screen));
      
      // Get active streams from stream manager
      const managerScreens = new Set(this.streams.keys());
      
      // Log current state
      logger.debug(`Stream synchronization - Manager screens: ${Array.from(managerScreens).join(', ')}, Player screens: ${Array.from(playerScreens).join(', ')}`, 'StreamManager');
      
      // Check for streams that exist in player but not in manager
      for (const screen of playerScreens) {
        if (!managerScreens.has(screen)) {
          logger.warn(`Orphaned stream found on screen ${screen} - stopping it`, 'StreamManager');
          this.playerService.stopStream(screen, true).catch(error => {
            logger.error(`Failed to stop orphaned stream on screen ${screen}`, 'StreamManager', error instanceof Error ? error : new Error(String(error)));
          });
        }
      }
      
      // Check for streams that exist in manager but not in player
      for (const screen of managerScreens) {
        if (!playerScreens.has(screen)) {
          logger.warn(`Stream in manager but not in player for screen ${screen} - cleaning up`, 'StreamManager');
          this.streams.delete(screen);
          this.clearStreamRefresh(screen);
          this.clearInactiveTimer(screen);
        }
      }
      
      // Update the disabled screens in player service
      this.synchronizeDisabledScreens();
    } catch (error) {
      logger.error('Error synchronizing streams', 'StreamManager', error instanceof Error ? error : new Error(String(error)));
    }
  }

  private async getAllStreamsForScreen(screen: number): Promise<StreamSource[]> {
    const screenConfig = this.getScreenConfig(screen);
    if (!screenConfig || !screenConfig.sources?.length) {
      return [];
    }

    const streams: StreamSource[] = [];
    for (const source of screenConfig.sources) {
      if (!source.enabled) continue;

      try {
        let sourceStreams: StreamSource[] = [];
        if (source.type === 'holodex') {
          if (source.subtype === 'organization' && source.name) {
            sourceStreams = await this.holodexService.getLiveStreams({
              organization: source.name,
              limit: source.limit
            });
          } else if (source.subtype === 'favorites') {
            sourceStreams = await this.holodexService.getLiveStreams({
              channels: this.getFlattenedFavorites('holodex'),
              limit: source.limit
            });
          }
        } else if (source.type === 'twitch') {
          if (source.subtype === 'favorites') {
            sourceStreams = await this.twitchService.getStreams({
              channels: this.getFlattenedFavorites('twitch'),
              limit: source.limit
            });
          }
        }

        // Filter out finished streams (keep live and upcoming)
        sourceStreams = sourceStreams.filter(stream => {
          // For YouTube/Holodex, sourceStatus could be 'live', 'upcoming', or 'ended'
          if (stream.sourceStatus === 'ended') {
            logger.debug(`Filtering out ended stream: ${stream.url}`, 'StreamManager');
            return false;
          }
          
          // For upcoming streams, check if they're in the past
          if (stream.sourceStatus === 'upcoming' && stream.startTime) {
            const now = Date.now();
            // If the start time is in the past by more than 30 minutes, filter it out
            if (stream.startTime < now - 30 * 60 * 1000) {
              logger.debug(`Filtering out past upcoming stream: ${stream.url}`, 'StreamManager');
              return false;
            }
          }
          
          return true;
        });

        // Add source metadata to streams
        sourceStreams.forEach(stream => {
          stream.subtype = source.subtype;
          stream.priority = source.priority;
          stream.screen = screen;
        });

        streams.push(...sourceStreams);
      } catch (error) {
        logger.error(
          `Failed to fetch streams for source ${source.type}/${source.subtype}`,
          'StreamManager',
          error instanceof Error ? error : new Error(String(error))
        );
      }
    }

    logger.info(`Retrieved ${streams.length} total streams for screen ${screen}`, 'StreamManager');
    return streams;
  }

  /**
   * Helper method to get a flattened array of channel IDs across all groups for a platform
   * @param platform The platform to get favorites for (holodex, twitch, youtube)
   * @returns Array of channel IDs from all groups
   */
  private getFlattenedFavorites(platform: 'holodex' | 'twitch' | 'youtube'): string[] {
    if (!this.favoriteChannels || !this.favoriteChannels[platform]) {
      return [];
    }
    
    // Get all groups for this platform and flatten them into a single array
    const platformFavorites = this.favoriteChannels[platform];
    const allChannels: string[] = [];
    
    // Sort groups by priority (lower number = higher priority)
    const groupNames = Object.keys(platformFavorites);
    const sortedGroups = groupNames.sort((a, b) => {
      const priorityA = this.favoriteChannels.groups[a]?.priority || 999;
      const priorityB = this.favoriteChannels.groups[b]?.priority || 999;
      return priorityA - priorityB;
    });
    
    // Add channels from each group, maintaining priority order
    for (const groupName of sortedGroups) {
      const channelsInGroup = platformFavorites[groupName] || [];
      for (const channelId of channelsInGroup) {
        if (!allChannels.includes(channelId)) {
          allChannels.push(channelId);
        }
      }
    }
    
    return allChannels;
  }
  
  /**
   * Helper method to check if a channel is in any favorite group for a platform
   * @param platform The platform to check (holodex, twitch, youtube)
   * @param channelId The channel ID to check for
   * @returns True if the channel is in any favorite group for the platform
   */
  private isChannelInFavorites(platform: 'holodex' | 'twitch' | 'youtube', channelId: string): boolean {
    if (!this.favoriteChannels || !this.favoriteChannels[platform]) {
      return false;
    }
    
    const platformFavorites = this.favoriteChannels[platform];
    
    // Check each group for the channel ID
    for (const groupName in platformFavorites) {
      if (platformFavorites[groupName]?.includes(channelId)) {
        return true;
      }
    }
    
    return false;
  }
  
  private sortStreams(streams: StreamSource[], sorting?: { field: string; order: 'asc' | 'desc' }): StreamSource[] {
    if (!sorting) return streams;
    
    const { field, order } = sorting;
    
    return [...streams].sort((a, b) => {
      // Handle undefined values
      const aValue = a[field as keyof StreamSource];
      const bValue = b[field as keyof StreamSource];
      
      if (aValue === undefined && bValue === undefined) return 0;
      if (aValue === undefined) return order === 'asc' ? 1 : -1;
      if (bValue === undefined) return order === 'asc' ? -1 : 1;
      
      // Compare values based on their types
      if (typeof aValue === 'number' && typeof bValue === 'number') {
        return order === 'asc' ? aValue - bValue : bValue - aValue;
      }
      
      if (typeof aValue === 'string' && typeof bValue === 'string') {
        return order === 'asc' 
          ? aValue.localeCompare(bValue) 
          : bValue.localeCompare(aValue);
      }
      
      // Default comparison for other types
      const aStr = String(aValue);
      const bStr = String(bValue);
      return order === 'asc' ? aStr.localeCompare(bStr) : bStr.localeCompare(aStr);
    });
  }
}

// Create singleton instance
const config = loadAllConfigs();
// Create flattened favorites arrays for services
const flattenedHolodexFavorites: string[] = [];
if (config.favoriteChannels && config.favoriteChannels.holodex) {
  Object.values(config.favoriteChannels.holodex).forEach(channels => {
    if (Array.isArray(channels)) {
      flattenedHolodexFavorites.push(...channels);
    }
  });
}

const holodexService = new HolodexService(
  env.HOLODEX_API_KEY,
  config.filters?.filters ? config.filters.filters.map(f => typeof f === 'string' ? f : f.value) : [],
  flattenedHolodexFavorites,
  config
);
const twitchService = new TwitchService(
  env.TWITCH_CLIENT_ID,
  env.TWITCH_CLIENT_SECRET,
  config.filters?.filters ? config.filters.filters.map(f => typeof f === 'string' ? f : f.value) : []
);
// Create flattened YouTube favorites array
const flattenedYoutubeFavorites: string[] = [];
if (config.favoriteChannels && config.favoriteChannels.youtube) {
  Object.values(config.favoriteChannels.youtube).forEach(channels => {
    if (Array.isArray(channels)) {
      flattenedYoutubeFavorites.push(...channels);
    }
  });
}

const youtubeService = new YouTubeService(
  flattenedYoutubeFavorites
);
const playerService = new PlayerService(config);

export const streamManager = new StreamManager(
  config,
  holodexService,
  twitchService,
  youtubeService,
  playerService
);
</file>

<file path="src/server/services/player.ts">
import { spawn, type ChildProcess } from 'child_process';
import { EventEmitter } from 'events';
import type { Config, StreamlinkConfig, ScreenConfig } from '../../types/stream.js';
import type { StreamOutput, StreamError, StreamResponse, StreamEnd } from '../../types/stream_instance.js';
import { logger } from './logger.js';
import { exec, execSync } from 'child_process';
import path from 'path';
import fs from 'fs';
import net from 'net';

interface LocalStreamInstance {
	id: number;
	screen: number;
	url: string;
	quality: string;
	status: string;
	volume: number;
	process: ChildProcess;
	platform: 'youtube' | 'twitch';
	title?: string;
	startTime?: number;
	options: StreamOptions & { screen: number };
}

export interface StreamOptions {
	screen: number;
	config: ScreenConfig;
	url: string;
	isLive?: boolean;
	isWatched?: boolean;
	isRetry?: boolean;
	title?: string;
	viewerCount?: number;
	startTime?: number;
	quality?: string;
	volume?: number;
	windowMaximized?: boolean;
}

export class PlayerService {
	private readonly BASE_LOG_DIR: string;
	private readonly MAX_RETRIES = 3; // Increased from 2 to 3
	private readonly MAX_NETWORK_RETRIES = 5; // Separate counter for network-related issues
	private readonly RETRY_INTERVAL = 200; // Reduced from 500ms to 200ms
	private readonly NETWORK_RETRY_INTERVAL = 2000; // Reduced from 5s to 2s for network retries
	private readonly MAX_BACKOFF_TIME = 30000; // Reduced from 60s to 30s maximum backoff
	private readonly STREAM_REFRESH_INTERVAL = 2 * 60 * 60 * 1000; // Reduced from 4 hours to 2 hours
	private readonly INACTIVE_RESET_TIMEOUT = 2 * 60 * 1000; // Reduced from 5 minutes to 2 minutes
	private readonly STARTUP_TIMEOUT = 30000; // Reduced from 60s to 30s
	private readonly SHUTDOWN_TIMEOUT = 1000; // Reduced from 2s to 1s
	private readonly SCRIPTS_PATH: string;
	private streams: Map<number, LocalStreamInstance> = new Map();
	private streamRetries: Map<number, number> = new Map();
	private networkRetries: Map<number, number> = new Map(); // Track network-specific retries separately
	private lastNetworkError: Map<number, number> = new Map(); // Track when the last network error occurred
	private streamStartTimes: Map<number, number> = new Map();
	private streamRefreshTimers: Map<number, NodeJS.Timeout> = new Map();
	private inactiveTimers: Map<number, NodeJS.Timeout> = new Map();
	private healthCheckIntervals: Map<number, NodeJS.Timeout> = new Map();
	private startupLocks: Map<number, boolean> = new Map();
	private manuallyClosedScreens: Set<number> = new Set();
	private disabledScreens: Set<number> = new Set();
	private ipcPaths: Map<number, string> = new Map();
	private isNetworkError: Map<number, boolean> = new Map(); // Track if error is network-related

	private config: Config;
	private mpvPath: string;
	private isShuttingDown = false;
	private events = new EventEmitter();
	private outputCallback?: (data: StreamOutput) => void;
	private errorCallback?: (data: StreamError) => void;
	private endCallback?: (data: StreamEnd) => void;

	public readonly DUMMY_SOURCE = '';  // Empty string instead of black screen URL

	private readonly streamlinkConfig: StreamlinkConfig;
	private readonly retryTimers: Map<number, NodeJS.Timeout>;

	constructor(config: Config) {
		this.config = config;
		this.streamlinkConfig = config.streamlink || {
			path: 'streamlink',
			options: {},
			http_header: {}
		};
		this.streams = new Map();
		this.ipcPaths = new Map();
		this.disabledScreens = new Set();
		this.retryTimers = new Map();
		
		// Set up paths
		this.BASE_LOG_DIR = path.join(process.cwd(), 'logs');
		this.SCRIPTS_PATH = path.join(process.cwd(), 'scripts/mpv');
		this.mpvPath = 'mpv';

		// Create log directory if it doesn't exist
		if (!fs.existsSync(this.BASE_LOG_DIR)) {
			fs.mkdirSync(this.BASE_LOG_DIR, { recursive: true });
		}

		this.initializeDirectories();
		this.registerSignalHandlers();
	}

	private initializeDirectories(): void {
		try {
			// Create log directories
			const logDirs = ['mpv', 'streamlink'].map((dir) => path.join(this.BASE_LOG_DIR, dir));
			logDirs.forEach((dir) => {
				if (!fs.existsSync(dir)) {
					fs.mkdirSync(dir, { recursive: true });
				}
			});

			// Create .livelink directory
			const homedir = process.env.HOME || process.env.USERPROFILE;
			if (homedir) {
				const livelinkDir = path.join(homedir, '.livelink');
				if (!fs.existsSync(livelinkDir)) {
					fs.mkdirSync(livelinkDir, { recursive: true });
				}
			}

			// Clean old logs
			this.clearOldLogs(path.join(this.BASE_LOG_DIR, 'mpv'));
			this.clearOldLogs(path.join(this.BASE_LOG_DIR, 'streamlink'));
		} catch (err) {
			logger.error(
				'Failed to initialize directories',
				'PlayerService',
				err instanceof Error ? err : new Error(String(err))
			);
		}
	}

	private clearOldLogs(directory: string): void {
		try {
			if (!fs.existsSync(directory)) return;

			const files = fs.readdirSync(directory);
			const now = Date.now();
			const maxAge = 7 * 24 * 60 * 60 * 1000; // 7 days

			for (const file of files) {
				if (!file.endsWith('.log')) continue;

				const filePath = path.join(directory, file);
				const stats = fs.statSync(filePath);
				const age = now - stats.mtime.getTime();

				if (age > maxAge) {
					fs.unlinkSync(filePath);
					logger.debug(`Deleted old log file: ${filePath}`, 'PlayerService');
				}
			}
		} catch (error) {
			logger.error(
				`Failed to clean old logs in ${directory}`,
				'PlayerService',
				error instanceof Error ? error : new Error(String(error))
			);
		}
	}

	private findMpvPath(): string {
		try {
			return execSync('which mpv').toString().trim();
		} catch (error) {
			logger.error(
				'Failed to find MPV',
				'PlayerService',
				error instanceof Error ? error : new Error(String(error))
			);
			return 'mpv';
		}
	}

	private registerSignalHandlers(): void {
		['SIGINT', 'SIGTERM', 'SIGQUIT'].forEach((signal) => {
			process.once(signal, () => {
				if (!this.isShuttingDown) {
					logger.info(`Received ${signal} signal`, 'PlayerService');
					this.cleanup();
				}
			});
		});
	}

	async startStream(options: StreamOptions & { screen: number }): Promise<StreamResponse> {
		try {
			// Check if screen is disabled
			if (this.disabledScreens.has(options.screen)) {
				logger.warn(`Attempted to start stream on disabled screen ${options.screen}`, 'PlayerService');
			return {
					screen: options.screen,
					success: false,
					error: 'Screen is disabled'
				};
			}

			// Check for maximum streams limit
			const activeStreams = Array.from(this.streams.values()).filter(s => s.process && this.isProcessRunning(s.process.pid));
			if (activeStreams.length >= this.config.player.maxStreams) {
				logger.warn(`Maximum number of streams (${this.config.player.maxStreams}) reached, active: ${activeStreams.length}`, 'PlayerService');
				return {
					screen: options.screen,
					success: false,
					error: `Maximum number of streams (${this.config.player.maxStreams}) reached`
				};
			}

			// Check if we're already starting a stream on this screen
			if (this.startupLocks.get(options.screen)) {
				logger.warn(`Stream startup already in progress for screen ${options.screen}`, 'PlayerService');
			return {
					screen: options.screen,
					success: false,
					error: 'Stream startup already in progress'
				};
			}

			// Set startup lock
			this.startupLocks.set(options.screen, true);

			// Stop any existing stream first
			await this.stopStream(options.screen);

			// Initialize directories if needed
			this.initializeDirectories();

			// Initialize IPC path
			const homedir = process.env.HOME || process.env.USERPROFILE;
			const ipcPath = homedir
				? path.join(homedir, '.livelink', `mpv-ipc-${options.screen}`)
				: `/tmp/mpv-ipc-${options.screen}`;
			this.ipcPaths.set(options.screen, ipcPath);

			logger.info(
				`Starting stream with title: ${options.title}, viewers: ${options.viewerCount}, time: ${options.startTime}, screen: ${options.screen}`,
				'PlayerService'
			);

			let playerProcess: ChildProcess;
			if (this.config.player.preferStreamlink || options.url.includes('twitch.tv')) {
				logger.info(`Starting Streamlink for screen ${options.screen}`, 'PlayerService');
				playerProcess = await this.startStreamlinkProcess(options);
			} else {
				logger.info(`Starting MPV for screen ${options.screen}`, 'PlayerService');
				playerProcess = await this.startMpvProcess(options);
			}

			if (!playerProcess || !playerProcess.pid) {
				throw new Error('Failed to start player process');
			}

			// Create stream instance and store it
			const streamInstance: LocalStreamInstance = {
				id: Date.now(),
				screen: options.screen,
				url: options.url,
				quality: options.quality || this.config.player.defaultQuality,
				status: 'playing',
				volume: options.volume || 0,
				process: playerProcess,
				platform: options.url.includes('twitch.tv') ? 'twitch' : 'youtube',
				title: options.title,
				startTime: typeof options.startTime === 'string' ? new Date(options.startTime).getTime() : options.startTime,
				options
			};

			// Store stream instance before setting up handlers
			this.streams.set(options.screen, streamInstance);
			
			// Set up process handlers and monitoring
			this.setupProcessHandlers(playerProcess, options.screen);
			this.setupStreamMonitoring(options.screen, playerProcess, options);

			// Clear startup lock
			this.startupLocks.set(options.screen, false);

			// Double check the stream was added correctly
			const addedStream = this.streams.get(options.screen);
			if (!addedStream || !addedStream.process || !addedStream.process.pid) {
				throw new Error('Stream was not properly initialized');
			}

			logger.info(`Stream started successfully on screen ${options.screen} with PID ${addedStream.process.pid}`, 'PlayerService');
			return {
				screen: options.screen,
				success: true
			};
		} catch (error) {
			// Clear startup lock on error
			this.startupLocks.set(options.screen, false);
			
			// Clean up any partially initialized stream
			this.cleanup_after_stop(options.screen);
			
			logger.error(
				`Failed to start stream on screen ${options.screen}`,
				'PlayerService',
				error instanceof Error ? error : new Error(String(error))
			);

			return {
				screen: options.screen,
				success: false,
				error: error instanceof Error ? error.message : String(error)
			};
		}
	}

	private async startMpvProcess(options: StreamOptions & { screen: number }): Promise<ChildProcess> {
		logger.info(`Starting MPV for screen ${options.screen}`, 'PlayerService');

		// Ensure IPC path is initialized
		if (!this.ipcPaths.has(options.screen)) {
			// Create a consistent directory for IPC socket files
			const userHomeDir = process.env.HOME || '/tmp';
			const ipcDir = path.join(userHomeDir, '.livelink');
			
			// Ensure directory exists
			try {
				if (!fs.existsSync(ipcDir)) {
					fs.mkdirSync(ipcDir, { recursive: true });
				}
			} catch (error) {
				logger.error(`Failed to create IPC directory ${ipcDir}`, 'PlayerService', error as Error);
			}
			
			// Use the user's home directory for more reliable socket location
			const ipcPath = path.join(ipcDir, `mpv-ipc-${options.screen}`);
			this.ipcPaths.set(options.screen, ipcPath);
			
			// Remove existing socket file if it exists
			try {
				if (fs.existsSync(ipcPath)) {
					fs.unlinkSync(ipcPath);
					logger.info(`Removed existing socket file at ${ipcPath}`, 'PlayerService');
				}
			} catch (error) {
				// Ignore errors if file doesn't exist or can't be removed
				logger.warn(`Could not remove existing socket at ${ipcPath}`, 'PlayerService',
					error instanceof Error ? error.message : String(error));
			}
		}

		const args = this.getMpvArgs(options);
		const env = this.getProcessEnv();

		logger.debug(`Starting MPV with command: ${this.mpvPath} ${args.join(' ')}`, 'PlayerService');
		logger.debug(`MPV args: ${args.join(' ')}`, 'PlayerService');
		const mpvProcess = spawn(this.mpvPath, args, {
			env,
			stdio: ['ignore', 'pipe', 'pipe']
		});

		// Set up logging for the process
		if (mpvProcess.stdout) {
			mpvProcess.stdout.on('data', (data: Buffer) => {
				logger.debug(`MPV stdout (screen ${options.screen}): ${data.toString().trim()}`, 'PlayerService');
			});
		}

		if (mpvProcess.stderr) {
			mpvProcess.stderr.on('data', (data: Buffer) => {
				logger.debug(`MPV stderr (screen ${options.screen}): ${data.toString().trim()}`, 'PlayerService');
			});
		}

		// Wait a moment to let MPV create the socket
		await new Promise(resolve => setTimeout(resolve, 1000)); // Increased from 500ms
		
		return mpvProcess;
	}

	private async startStreamlinkProcess(
		options: StreamOptions & { screen: number }
	): Promise<ChildProcess> {
		const args = this.getStreamlinkArgs(options.url, options);
		const env = this.getProcessEnv();
		logger.debug(`Streamlink args: ${args.join(' ')}`, 'PlayerService');
		try {
			const process = spawn(this.streamlinkConfig.path || 'streamlink', args, {
			env,
			stdio: ['ignore', 'pipe', 'pipe']
		});

			return new Promise((resolve, reject) => {
				let errorOutput = '';
				let hasStarted = false;
				const startTimeout = setTimeout(() => {
					const error = new Error('Stream start timeout exceeded');
					this.logError(
						`Stream start timeout on screen ${options.screen}`,
						'PlayerService',
						error
					);
					process.kill();
					reject(error);
			}, this.STARTUP_TIMEOUT);

			const onData = (data: Buffer) => {
				const output = data.toString();
					if (output.includes('Starting player')) {
						hasStarted = true;
						clearTimeout(startTimeout);
						resolve(process);
					}
					// Check for common error patterns
					if (output.toLowerCase().includes('error')) {
						errorOutput += output + '\n';
				}
			};

			const onError = (error: Error) => {
					clearTimeout(startTimeout);
					this.logError(
						`Failed to start streamlink for screen ${options.screen}`,
						'PlayerService',
						error
					);
				reject(error);
			};

			const onExit = (code: number | null) => {
					clearTimeout(startTimeout);
					if (!hasStarted) {
						let errorMessage = 'Stream failed to start';
						
						// Enhanced error detection
						if (errorOutput.toLowerCase().includes('members-only')) {
							errorMessage = 'Stream unavailable (members-only content)';
						} else if (errorOutput.toLowerCase().includes('no playable streams')) {
							errorMessage = 'No playable streams found';
						} else if (errorOutput.toLowerCase().includes('404')) {
							errorMessage = 'Stream not found (404)';
						} else if (errorOutput.toLowerCase().includes('private')) {
							errorMessage = 'Stream is private';
						} else if (code === 1) {
							errorMessage = 'Stream unavailable (possibly members-only content)';
						} else if (code === 130) {
							errorMessage = 'Stream process interrupted';
						} else if (code === 2) {
							errorMessage = 'Stream unavailable or invalid URL';
						}
						
						const error = new Error(errorMessage);
						this.logError(
							`Stream failed to start on screen ${options.screen} (code ${code})`,
							'PlayerService',
							error
						);
						reject(error);
					}
				};

				process.stdout.on('data', onData);
				process.stderr.on('data', (data: Buffer) => {
					errorOutput += data.toString() + '\n';
					onData(data);
				});
			process.on('error', onError);
			process.on('exit', onExit);
		});
		} catch (error) {
			this.logError(
				`Failed to spawn streamlink process for screen ${options.screen}`,
				'PlayerService',
				error
			);
			throw error;
		}
	}

	private setupProcessHandlers(process: ChildProcess, screen: number): void {
		let hasEndedStream = false;
		let cleanupTimeout: NodeJS.Timeout | null = null;

		const cleanup = () => {
			if (cleanupTimeout) {
				clearTimeout(cleanupTimeout);
				cleanupTimeout = null;
			}
			
			// Clear monitoring and remove stream from map
			this.clearMonitoring(screen);
			this.streams.delete(screen);
			this.streamRetries.delete(screen);
			
			// Log the number of active streams after cleanup
			const activeStreams = Array.from(this.streams.values()).filter(s => s.process && this.isProcessRunning(s.process.pid));
			logger.debug(`Cleaned up stream on screen ${screen}. Remaining active streams: ${activeStreams.length}/${this.config.player.maxStreams}`, 'PlayerService');
		};

		const handleStreamEnd = (error: string, code: number = 0) => {
			if (!hasEndedStream) {
				hasEndedStream = true;
				const stream = this.streams.get(screen);
				const url = stream?.url || '';
				
				logger.info(`Stream ended on screen ${screen}${url ? ` (${url})` : ''}`, 'PlayerService');
				
				// Call error callback with stream URL
				this.errorCallback?.({
					screen,
					error,
					code,
					url,
					moveToNext: true
				});
				
				// Schedule cleanup after a short delay to ensure all events are processed
				cleanupTimeout = setTimeout(cleanup, 1000);
			}
		};

		if (process.stdout) {
			process.stdout.on('data', (data: Buffer) => {
				const output = data.toString('utf8').trim();
				if (output && /[\x20-\x7E]/.test(output)) {
					// Log YouTube-specific state information
					if (output.includes('[youtube]')) {
						if (output.includes('Post-Live Manifestless mode')) {
							logger.info(`[Screen ${screen}] YouTube stream is in post-live state (ended)`, 'PlayerService');
							handleStreamEnd('Stream ended');
						} else if (output.includes('Downloading MPD manifest')) {
							logger.debug(`[Screen ${screen}] YouTube stream manifest download attempt`, 'PlayerService');
						}
					}

					logger.debug(`[Screen ${screen}] ${output}`, 'PlayerService');
					this.outputCallback?.({
						screen,
						data: output,
						type: 'stdout'
					});

					// Check for different types of stream endings
					if (output.includes('Exiting... (Quit)') || 
						output.includes('Quit') || 
						output.includes('Exiting normally') ||
						output.includes('EOF reached') ||
						output.includes('User stopped playback')) {
						handleStreamEnd('Stream ended');
					}
				}
			});
		}

		if (process.stderr) {
			process.stderr.on('data', (data: Buffer) => {
				const output = data.toString('utf8').trim();
				if (output && /[\x20-\x7E]/.test(output)) {
					// Filter out common PipeWire warnings that don't affect functionality
					if (output.includes('pw.conf') && output.includes('deprecated')) {
						logger.debug(`[Screen ${screen}] PipeWire config warning: ${output}`, 'PlayerService');
					} else {
						// Log YouTube-specific errors with more context
						if (output.includes('youtube-dl failed')) {
							logger.info(
								`[Screen ${screen}] YouTube stream error - may be ended or unavailable: ${output}`,
								'PlayerService'
							);
							handleStreamEnd('Stream ended');
						} else {
							logger.error(`[Screen ${screen}] ${output}`, 'PlayerService');
							handleStreamEnd(output);
						}
					}
				}
			});
		}

		process.on('error', (err: Error) => {
			this.logError(`Process error on screen ${screen}`, 'PlayerService', err);
			handleStreamEnd(err.message);
		});

		process.on('exit', (code: number | null) => {
			// Get the URL before any cleanup happens
			const stream = this.streams.get(screen);
			const url = stream?.url || '';
			
			logger.info(`Process exited on screen ${screen} with code ${code}${url ? ` (${url})` : ''}`, 'PlayerService');
			
			// Only handle process exit if we haven't already handled stream end
			if (!hasEndedStream) {
				handleStreamEnd(`Process exited with code ${code || 0}`, code || 0);
			} else {
				cleanup();
			}
		});
	}

	private setupStreamMonitoring(
		screen: number,
		process: ChildProcess,
		options: StreamOptions
	): void {
		// Setup health check with more lenient timing
		const healthCheck = setInterval(() => {
			if (!process.pid) {
				logger.warn(`No PID found for stream on screen ${screen}`, 'PlayerService');
				return;
			}

			try {
				// Check if process exists and responds
				process.kill(0);
				
				// Also verify the process hasn't been replaced
				const currentProcess = this.streams.get(screen)?.process;
				if (currentProcess !== process) {
					logger.warn(`Process mismatch detected for screen ${screen}, clearing health check`, 'PlayerService');
					clearInterval(healthCheck);
					this.healthCheckIntervals.delete(screen);
					return;
				}
			} catch (err) {
				// Only restart if the process is actually gone
				if (err && typeof err === 'object' && 'code' in err && err.code === 'ESRCH') {
					logger.warn(`Stream on screen ${screen} appears to be unresponsive`, 'PlayerService');
					this.restartStream(screen, options).catch((err) => {
						logger.error(
							`Failed to restart unresponsive stream on screen ${screen}`,
							'PlayerService',
							err
						);
					});
				}
			}
		}, 15000); // Reduced from 30s to 15s for more responsive detection

		this.healthCheckIntervals.set(screen, healthCheck);

		// Setup refresh timer
		const refreshTimer = setTimeout(() => {
			logger.info(`Refreshing stream on screen ${screen}`, 'PlayerService');
			this.restartStream(screen, options).catch(error => {
				logger.error(`Failed to refresh stream on screen ${screen}`, 'PlayerService', error);
			});
		}, this.STREAM_REFRESH_INTERVAL);

		this.streamRefreshTimers.set(screen, refreshTimer);
		this.streamStartTimes.set(screen, Date.now());
	}

	private async restartStream(screen: number, options: StreamOptions): Promise<void> {
		// Don't restart if the screen was manually closed
		if (this.manuallyClosedScreens.has(screen)) {
			logger.info(
				`Not restarting stream on screen ${screen} as it was manually closed`,
				'PlayerService'
			);
			return;
		}

		logger.info(`Restarting stream on screen ${screen}: ${options.url}`, 'PlayerService');
		
		// Stop existing stream and wait for cleanup
		await this.stopStream(screen);
		
		// Reduced delay to ensure cleanup is complete
		await new Promise((resolve) => setTimeout(resolve, 200)); // Reduced from 500ms to 200ms
		
		// Double check no existing process before starting new one
		const existingStream = this.streams.get(screen);
		if (existingStream?.process) {
			logger.warn(`Found existing process for screen ${screen}, forcing cleanup`, 'PlayerService');
			try {
				existingStream.process.kill('SIGKILL');
				await new Promise(resolve => setTimeout(resolve, 100)); // Reduced from 200ms to 100ms
			} catch {
				// Process might already be gone
			}
		}
		
		await this.startStream({ ...options, screen });
	}

	private handleProcessExit(screen: number, code: number | null): void {
		// Get stream info before any cleanup happens
		const stream = this.streams.get(screen);
		const url = stream?.url || '';
		const options = stream?.options;
		
		// Log with URL for better tracking
		logger.info(`Process exited on screen ${screen} with code ${code}${url ? ` (${url})` : ''}`, 'PlayerService');
		
		// Check if this is a network-related error
		const isNetworkError = this.isNetworkErrorCode(code);
		this.isNetworkError.set(screen, isNetworkError);
		
		// Handle retries for network errors differently
		if (isNetworkError && url && options) {
			const networkRetryCount = this.networkRetries.get(screen) || 0;
			const now = Date.now();
			const lastError = this.lastNetworkError.get(screen) || 0;
			const timeSinceLastError = now - lastError;
			
			// Reset network retry count if it's been a while since the last error
			if (timeSinceLastError > 2 * 60 * 1000) { // Reduced from 5 minutes to 2 minutes
				logger.info(`Resetting network retry count for screen ${screen} as it's been ${Math.round(timeSinceLastError/1000)}s since last error`, 'PlayerService');
				this.networkRetries.set(screen, 0);
			}
			
			// Update last error time
			this.lastNetworkError.set(screen, now);
			
			// Check if we should retry
			if (networkRetryCount < this.MAX_NETWORK_RETRIES) {
				// Calculate backoff time with exponential backoff
				const backoffTime = Math.min(this.NETWORK_RETRY_INTERVAL * Math.pow(1.5, networkRetryCount), this.MAX_BACKOFF_TIME);
				
				logger.info(`Network error detected for ${url} on screen ${screen}, retry ${networkRetryCount + 1}/${this.MAX_NETWORK_RETRIES} in ${Math.round(backoffTime/1000)}s`, 'PlayerService');
				
				// Increment retry count
				this.networkRetries.set(screen, networkRetryCount + 1);
				
				// Clean up but don't emit error yet
				this.cleanup_after_stop(screen);
				this.clearMonitoring(screen);
				
				// Set up retry timer
				const retryTimer = setTimeout(async () => {
					try {
						logger.info(`Attempting to restart stream ${url} on screen ${screen} after network error`, 'PlayerService');
						await this.startStream({
							...options,
							isRetry: true
						});
					} catch (error) {
						logger.error(`Failed to restart stream after network error on screen ${screen}`, 'PlayerService', 
							error instanceof Error ? error : new Error(String(error)));
						
						// Now emit the error since retry failed
						this.errorCallback?.({
							screen,
							error: `Failed to restart stream after network error: ${error instanceof Error ? error.message : String(error)}`,
							code: code || 0,
							url,
							moveToNext: true
						});
					}
				}, backoffTime);
				
				// Store the timer
				this.retryTimers.set(screen, retryTimer);
				return; // Don't emit error yet, we're handling it with retry
			} else {
				logger.warn(`Maximum network retries (${this.MAX_NETWORK_RETRIES}) reached for screen ${screen}, giving up`, 'PlayerService');
				// Reset retry count for future attempts
				this.networkRetries.set(screen, 0);
			}
		}
		
		// For non-network errors or if max retries reached, clean up and emit error
		this.cleanup_after_stop(screen);
		this.clearMonitoring(screen);

		// Emit stream error with URL if we have it
		this.errorCallback?.({
			screen,
			error: code === 0 ? 'Stream ended normally' : `Stream ended with code ${code}`,
			code: code || 0,
			url,
			moveToNext: true // Always signal to move to next stream
		});
	}

	private clearMonitoring(screen: number): void {
		// Clear health check
		const healthCheck = this.healthCheckIntervals.get(screen);
		if (healthCheck) {
			clearInterval(healthCheck);
			this.healthCheckIntervals.delete(screen);
		}

		// Clear refresh timer
		const refreshTimer = this.streamRefreshTimers.get(screen);
		if (refreshTimer) {
			clearTimeout(refreshTimer);
			this.streamRefreshTimers.delete(screen);
		}

		// Clear inactive timer
		const inactiveTimer = this.inactiveTimers.get(screen);
		if (inactiveTimer) {
			clearTimeout(inactiveTimer);
			this.inactiveTimers.delete(screen);
		}
		
		// Clear retry timer if exists
		const retryTimer = this.retryTimers.get(screen);
		if (retryTimer) {
			clearTimeout(retryTimer);
			this.retryTimers.delete(screen);
		}

		// Clear other state
		this.streamStartTimes.delete(screen);
		this.streamRetries.delete(screen);
		// Don't clear networkRetries or lastNetworkError here to maintain retry history
	}

	/**
	 * Determines if an exit code is likely related to network issues
	 */
	private isNetworkErrorCode(code: number | null): boolean {
		// Common network-related exit codes
		// 2: Streamlink network error
		// 1: General error (could be network)
		// 9: Killed (could happen during network fluctuations)
		return code === 2 || code === 1 || code === 9;
	}
	
	/**
	 * Stop a stream that is currently playing on a screen
	 */
	async stopStream(screen: number, force: boolean = false, isManualStop: boolean = false): Promise<boolean> {
		// Check if screen is already disabled
		if (this.disabledScreens.has(screen)) {
			logger.debug(`Screen ${screen} is disabled, no stream to stop`, 'PlayerService');
			return true;
		}

		// Remove from manually closed screens
		if (isManualStop) {
			this.manuallyClosedScreens.add(screen);
		} else {
			this.manuallyClosedScreens.delete(screen);
		}

		// Clear network error status
		this.isNetworkError.delete(screen);

		// Get the stream object
		const player = this.streams.get(screen);

		// If there's no stream, consider it already stopped
		if (!player) {
			logger.debug(`No stream found for screen ${screen}`, 'PlayerService');
			return true;
		}
		
		// Check if process exists
		if (!player.process) {
			logger.debug(`No process found for stream on screen ${screen}`, 'PlayerService');
			this.cleanup_after_stop(screen);
			return true;
		}
		
		// If process is already gone, clean up
		if (!this.isProcessRunning(player.process.pid)) {
			logger.debug(`Process for screen ${screen} is already gone`, 'PlayerService');
			this.cleanup_after_stop(screen);
			return true;
		}
		
		// Log action
		logger.info(`Stopping stream on screen ${screen} (${isManualStop ? 'manual' : 'automatic'})`, 'PlayerService');
		
		try {
			// Use more aggressive kill if force is true
			const signal = force ? 'SIGKILL' : 'SIGTERM';
			
			// Try to gracefully stop the process
			player.process.kill(signal);
			
			// Wait a moment for process to exit gracefully
			await new Promise<void>((resolve) => {
				const timeout = setTimeout(() => {
					logger.warn(`Stream stop timeout on screen ${screen}, forcing kill`, 'PlayerService');
					try {
						if (player.process && this.isProcessRunning(player.process.pid)) {
							player.process.kill('SIGKILL');
						}
					} catch (error) {
						logger.error(`Error killing process on screen ${screen}`, 'PlayerService', 
							error instanceof Error ? error : new Error(String(error)));
					}
					resolve();
				}, 500); // Reduced from SHUTDOWN_TIMEOUT to 500ms
				
				// If process exits gracefully, clear timeout and resolve
				player.process.once('exit', () => {
					clearTimeout(timeout);
					resolve();
				});
			});
			
			// Clean up regardless of kill success
			this.cleanup_after_stop(screen);
			
			return true;
		} catch (error) {
			this.logError(`Error stopping stream on screen ${screen}`, 'PlayerService', error);
			return false;
		}
	}
	
	/**
	 * Kill child processes of a given parent process
	 */
	private killChildProcesses(parentPid?: number): void {
		if (!parentPid) {
			logger.debug('No parent PID provided to kill child processes', 'PlayerService');
			return;
		}

		try {
			// First try to kill the parent process
			try {
				process.kill(parentPid, 'SIGTERM');
				logger.debug(`Sent SIGTERM to parent process ${parentPid}`, 'PlayerService');
			} catch (error) {
				if ((error as NodeJS.ErrnoException).code !== 'ESRCH') {
					logger.warn(`Error sending SIGTERM to parent process ${parentPid}`, 'PlayerService');
				}
			}

			// Give parent process time to clean up
			setTimeout(() => {
				try {
					// Check if parent is still running
					try {
						process.kill(parentPid, 0);
						// If we get here, process is still running, try SIGKILL
						process.kill(parentPid, 'SIGKILL');
						logger.debug(`Sent SIGKILL to parent process ${parentPid}`, 'PlayerService');
					} catch (error) {
						if ((error as NodeJS.ErrnoException).code !== 'ESRCH') {
							logger.warn(`Error checking/killing parent process ${parentPid}`, 'PlayerService');
						}
					}

					// Try to get child processes
					const childPidsStr = execSync(`pgrep -P ${parentPid}`, { encoding: 'utf8' }).trim();
					if (childPidsStr) {
						const childPids = childPidsStr.split('\n').map(Number);
						for (const pid of childPids) {
							try {
					process.kill(pid, 'SIGTERM');
								logger.debug(`Sent SIGTERM to child process ${pid}`, 'PlayerService');
							} catch (error) {
								if ((error as NodeJS.ErrnoException).code !== 'ESRCH') {
									logger.warn(`Error killing child process ${pid}`, 'PlayerService');
								}
							}
				}
			}
		} catch (error) {
					// Ignore pgrep errors as the parent process might already be gone
					if (!(error as NodeJS.ErrnoException).message?.includes('Command failed: pgrep')) {
						const errorMsg = error instanceof Error ? error.message : String(error);
						logger.warn(`Error killing child processes: ${errorMsg}`, 'PlayerService');
					}
				}
			}, 500); // Wait 500ms before checking/killing remaining processes
		} catch (error) {
			const errorMsg = error instanceof Error ? error.message : String(error);
			logger.error(`Error in killChildProcesses: ${errorMsg}`, 'PlayerService');
		}
	}
	
	/**
	 * Clean up resources after a stream is stopped
	 */
	private cleanup_after_stop(screen: number): void {
		try {
			logger.info(`Cleaning up resources for screen ${screen}`, 'PlayerService');
			
			// First, clear all monitoring timers
			this.clearMonitoring(screen);
			
			// Get stream instance before deleting it
			const stream = this.streams.get(screen);
			
			// Log stream details for debugging
			if (stream) {
				logger.debug(`Cleaning up stream: screen=${stream.screen}, url=${stream.url}, pid=${stream.process?.pid || 'none'}`, 'PlayerService');
			} else {
				logger.debug(`No stream found for screen ${screen} during cleanup`, 'PlayerService');
			}
			
			// Delete from streams map immediately to prevent double processing
			this.streams.delete(screen);
			
			// Clear all retry related maps
			this.streamRetries.delete(screen);
			this.networkRetries.delete(screen);
			this.lastNetworkError.delete(screen);
			this.isNetworkError.delete(screen);
			this.streamStartTimes.delete(screen);
			this.startupLocks.delete(screen);
			
			// Clean up IPC socket if it exists
			const ipcPath = this.ipcPaths.get(screen);
			if (ipcPath && fs.existsSync(ipcPath)) {
				try {
					// Close any existing socket connection
					const socket = net.createConnection(ipcPath);
					socket.end();
					socket.destroy();
					
					// Remove the socket file
					if (fs.existsSync(ipcPath)) {
						fs.unlinkSync(ipcPath);
						logger.debug(`Removed IPC socket for screen ${screen}`, 'PlayerService');
					}
				} catch (error) {
					// Only log as warning if file still exists
					if (fs.existsSync(ipcPath)) {
						const errorMsg = error instanceof Error ? error.message : String(error);
						logger.warn(`Failed to remove IPC socket for screen ${screen}: ${errorMsg}`, 'PlayerService');
					}
				}
			}
			this.ipcPaths.delete(screen);
			
			// Kill any remaining processes
			if (stream?.process?.pid) {
				try {
					this.killChildProcesses(stream.process.pid);
				} catch (error) {
					logger.debug(`Error killing processes for screen ${screen}: ${error}`, 'PlayerService');
				}
			}

			// Verify cleanup completed successfully
			if (this.streams.has(screen)) {
				logger.warn(`Stream for screen ${screen} still exists after cleanup - forcing removal`, 'PlayerService');
				this.streams.delete(screen);
			}

			// Log the number of active streams after cleanup
			const remainingStreams = Array.from(this.streams.values()).filter(s => s.process && this.isProcessRunning(s.process.pid));
			const streamInfo = remainingStreams.map(s => `screen:${s.screen}, pid:${s.process?.pid}`).join('; ');
			
			logger.info(`Cleanup complete for screen ${screen}. Remaining active streams: ${remainingStreams.length}/${this.config.player.maxStreams} - ${streamInfo}`, 'PlayerService');
		} catch (error) {
			const errorMsg = error instanceof Error ? error.message : String(error);
			logger.error(`Error during cleanup for screen ${screen}: ${errorMsg}`, 'PlayerService');
			
			// Ensure stream is deleted even if there was an error
			this.streams.delete(screen);
		}
	}
	
	/**
	 * Check if a process is still running without sending a signal
	 */
	private isProcessRunning(pid: number | undefined): boolean {
		if (!pid) return false;
		
		try {
			// The kill with signal 0 doesn't actually kill the process
			// It just checks if the process exists
			process.kill(pid, 0);
			
			// Additional check - verify socket file exists for MPV processes
			const stream = Array.from(this.streams.values()).find(s => s.process && s.process.pid === pid);
			if (stream) {
				const ipcPath = this.ipcPaths.get(stream.screen);
				if (ipcPath && !fs.existsSync(ipcPath)) {
					logger.warn(`Process ${pid} is running but IPC socket ${ipcPath} doesn't exist`, 'PlayerService');
					return false;
				}
			}
			
			return true;
		} catch {
			return false;
		}
	}

	private getMpvArgs(options: StreamOptions & { screen: number }, includeUrl: boolean = true): string[] {
		const screenConfig = this.config.player.screens.find(s => s.screen === options.screen);
		if (!screenConfig) {
			throw new Error(`No screen configuration found for screen ${options.screen}`);
		}

		// Initialize IPC path if not already set
		if (!this.ipcPaths.has(options.screen)) {
			const ipcPath = `/tmp/mpv-socket-${options.screen}`;
			this.ipcPaths.set(options.screen, ipcPath);
		}

		// Ensure log directory exists
		if (!fs.existsSync(this.BASE_LOG_DIR)) {
			fs.mkdirSync(this.BASE_LOG_DIR, { recursive: true });
		}

		const logFile = path.join(this.BASE_LOG_DIR, `screen_${options.screen}.log`);
		const ipcPath = this.ipcPaths.get(options.screen);

		if (!ipcPath) {
			throw new Error(`No IPC path found for screen ${options.screen}`);
		}

		const baseArgs: string[] = [];

		// Add global MPV arguments from config
		if (this.config.mpv) {
			for (const [key, value] of Object.entries(this.config.mpv)) {
				if (value !== undefined && value !== null) {
					baseArgs.push(`--${key}=${value}`);
				}
			}
		}

		// Add screen-specific MPV arguments from streamlink config
		if (this.config.streamlink?.mpv) {
			for (const [key, value] of Object.entries(this.config.streamlink.mpv)) {
				if (value !== undefined && value !== null) {
					baseArgs.push(`--${key}=${value}`);
				}
			}
		}

		// Essential arguments
		baseArgs.push(
			`--input-ipc-server=${ipcPath}`,
			`--config-dir=${path.join(process.cwd(), 'scripts', 'mpv')}`,
			`--log-file=${logFile}`,
			`--geometry=${screenConfig.width}x${screenConfig.height}+${screenConfig.x}+${screenConfig.y}`,
			`--volume=${(options.volume || 0).toString()}`,
			`--title=${options.screen}: ${options.title || 'No Title'}`,	
			'--msg-level=all=debug'
		);

		if (options.windowMaximized) {
			baseArgs.push('--window-maximized=yes');
		}

		// Add URL if requested
		if (includeUrl && options.url) {
			baseArgs.push(options.url);
		}

		logger.debug(`MPV args for screen ${options.screen}: ${baseArgs.join(' ')}`, 'PlayerService');
		return baseArgs;
	}

	private getStreamlinkArgs(url: string, options: StreamOptions & { screen: number }): string[] {
		const screenConfig = this.config.player.screens.find(s => s.screen === options.screen);
		if (!screenConfig) {
			throw new Error(`No screen config found for screen ${options.screen}`);
		}

		// Start with streamlink-specific arguments
		const streamlinkArgs = [
			url,
			options.quality || screenConfig.quality || this.config.player.defaultQuality || 'best',
			'--player',
			this.mpvPath
		];

		// Add streamlink options from config
		if (this.config.streamlink?.options) {
			Object.entries(this.config.streamlink.options).forEach(([key, value]) => {
				if (value === true) {
					streamlinkArgs.push(`--${key}`);
				} else if (value !== false && value !== undefined && value !== null) {
					streamlinkArgs.push(`--${key}`, String(value));
				}
			});
		}

		// Add HTTP headers if configured
		if (this.config.streamlink?.http_header) {
			Object.entries(this.config.streamlink.http_header).forEach(([key, value]) => {
				streamlinkArgs.push('--http-header', `${key}=${value}`);
			});
		}

		// Get MPV arguments without the URL (we don't want streamlink to pass the URL to MPV)
		const mpvArgs = this.getMpvArgs(options, false);

		// Properly quote and escape the MPV arguments
		const quotedMpvArgs = mpvArgs
			.map(arg => {
				// If arg already contains quotes, leave it as is
				if (arg.includes('"')) return arg;
				// If arg contains spaces, quote it
				if (arg.includes(' ')) return `"${arg}"`;
				return arg;
			})
			.join(' ');

		// Add player arguments
		streamlinkArgs.push('--player-args', quotedMpvArgs);

		// Add any additional streamlink arguments from config
		if (this.config.streamlink?.args) {
			streamlinkArgs.push(...this.config.streamlink.args);
		}
		logger.debug(`Streamlink args: ${streamlinkArgs.join(' ')}`, 'PlayerService');
		return streamlinkArgs;
	}

	private getProcessEnv(): NodeJS.ProcessEnv {
		const timestamp = new Date().toISOString().replace(/[:.]/g, '-');

		return {
			...process.env,
			MPV_HOME: undefined,
			XDG_CONFIG_HOME: undefined,
			DISPLAY: process.env.DISPLAY || ':0',
			SDL_VIDEODRIVER: 'x11',
			DATE: timestamp
		};
	}

	public getActiveStreams() {
		return Array.from(this.streams.entries()).map(([screen, stream]) => ({
			screen,
			url: stream.url,
			quality: stream.quality,
			platform: stream.platform,
			status: stream.status
		}));
	}

	public sendCommandToScreen(screen: number, command: string): void {
		const ipcPath = this.ipcPaths.get(screen);
		if (!ipcPath) {
			logger.warn(`No IPC path found for screen ${screen}`, 'PlayerService');
			return;
		}

		try {
			exec(`echo "${command}" | socat - ${ipcPath}`, (err) => {
				if (err) {
					this.logError(`Failed to send command to screen ${screen}`, 'PlayerService', err);
				}
			});
		} catch (err) {
			this.logError(`Command send error for screen ${screen}`, 'PlayerService', err);
		}
	}

	public sendCommandToAll(command: string): void {
		this.ipcPaths.forEach((_, screen) => {
			this.sendCommandToScreen(screen, command);
		});
	}

	public onStreamOutput(callback: (data: StreamOutput) => void): void {
		this.outputCallback = callback;
	}

	public onStreamError(callback: (data: StreamError) => void): void {
		this.errorCallback = (data: StreamError) => {
			// Log all stream errors with URL information for better tracking
			if (data.url) {
				logger.info(`Stream error on screen ${data.screen} with url ${data.url}: ${data.error} (code: ${data.code})`, 'PlayerService');
			} else {
				logger.warn(`Stream error on screen ${data.screen} without URL: ${data.error} (code: ${data.code})`, 'PlayerService');
				
				// Try to get URL from streams map if missing
				const stream = this.streams.get(data.screen);
				if (stream?.url) {
					data.url = stream.url;
					logger.info(`Added missing URL ${stream.url} to stream error for screen ${data.screen}`, 'PlayerService');
				}
			}
			callback(data);
		};
	}

	public onStreamEnd(callback: (data: StreamEnd) => void): void {
		this.endCallback = callback;
	}

	public handleLuaMessage(screen: number, type: string, data: Record<string, unknown>): void {
		if (type === 'log' && typeof data.level === 'string' && typeof data.message === 'string') {
			logger[data.level as 'debug' | 'info' | 'warn' | 'error'](
				`[MPV-${screen}] ${data.message}`,
				'PlayerService'
			);
		} else {
			logger.debug(
				`Received message from screen ${screen}: ${type} - ${JSON.stringify(data)}`,
				'PlayerService'
			);
		}
	}

	public async cleanup(): Promise<void> {
		if (this.isShuttingDown) return;

		this.isShuttingDown = true;
		logger.info('Cleaning up player service...', 'PlayerService');

		try {
			// Stop all streams with force=true to ensure they're killed
			const activeScreens = Array.from(this.streams.keys());
			
			// Attempt graceful shutdown first
			const promises = activeScreens.map((screen) => this.stopStream(screen, false));
			await Promise.allSettled(promises);
			
			// Wait a moment for graceful shutdown to complete
			await new Promise(resolve => setTimeout(resolve, 500));
			
			// Force kill any remaining streams
			const remainingScreens = Array.from(this.streams.keys());
			if (remainingScreens.length > 0) {
				logger.warn(`Forcing shutdown of ${remainingScreens.length} remaining streams`, 'PlayerService');
				const forcePromises = remainingScreens.map((screen) => this.stopStream(screen, true));
				await Promise.allSettled(forcePromises);
			}

			// Clear all timers and state
			activeScreens.forEach((screen) => {
				this.clearMonitoring(screen);
			});

			// Clean up IPC sockets
			this.ipcPaths.forEach((ipcPath) => {
				try {
					if (fs.existsSync(ipcPath)) {
						fs.unlinkSync(ipcPath);
					}
				} catch (error) {
					this.logError(`Failed to remove IPC socket ${ipcPath}`, 'PlayerService', error);
				}
			});
			
			// Kill any remaining streamlink processes
			try {
				logger.info('Checking for any remaining streamlink processes...', 'PlayerService');
				execSync('pkill -9 streamlink || true');
			} catch {
				// Ignore errors, this is just a precaution
			}
			
			// Reset all state
			this.ipcPaths.clear();
			this.streams.clear();
			this.manuallyClosedScreens.clear();
			this.disabledScreens.clear();
			this.streamRetries.clear();
			this.streamStartTimes.clear();

			logger.info('Player service cleanup complete', 'PlayerService');
		} catch (error) {
			logger.error(
				'Error during player service cleanup',
				'PlayerService',
				error instanceof Error ? error : new Error(String(error))
			);
			// Even if there's an error, try to kill remaining processes
			try {
				execSync('pkill -9 streamlink || true');
				execSync('pkill -9 mpv || true');
			} catch {
				// Ignore errors
			}
			throw error;
		}
	}

	public isRetrying(screen: number): boolean {
		return this.streamRetries.has(screen);
	}

	public disableScreen(screen: number): void {
		this.disabledScreens.add(screen);
	}

	public enableScreen(screen: number): void {
		this.disabledScreens.delete(screen);
	}

	// Helper method to extract title from URL
	private extractTitleFromUrl(url: string): string | null {
		try {
			// Extract video ID from YouTube URL
			if (url.includes('youtube.com') || url.includes('youtu.be')) {
				const urlObj = new URL(url);
				let videoId;

				if (url.includes('youtube.com/watch')) {
					videoId = urlObj.searchParams.get('v');
				} else if (url.includes('youtu.be/')) {
					videoId = url.split('youtu.be/')[1]?.split(/[/?#]/)[0];
				} else if (url.includes('youtube.com/live/')) {
					videoId = url.split('youtube.com/live/')[1]?.split(/[/?#]/)[0];
				} else if (url.includes('youtube.com/channel/')) {
					const channelId = url.split('youtube.com/channel/')[1]?.split(/[/?#]/)[0];
					return channelId ? `YouTube Channel (${channelId})` : 'YouTube Stream';
				}

				return videoId ? `YouTube Video (${videoId})` : 'YouTube Stream';
			}

			// Extract channel name from Twitch URL
			if (url.includes('twitch.tv')) {
				const channelName = url.split('twitch.tv/')[1]?.split(/[/?#]/)[0];
				return channelName ? `Twitch Stream (${channelName})` : 'Twitch Stream';
			}

			// For other URLs, use the hostname
			const hostname = new URL(url).hostname;
			return hostname ? `Stream from ${hostname}` : 'Unknown Stream';
		} catch (err) {
			this.logError('Failed to extract title from URL', 'PlayerService', err);
			return 'Unknown Stream';
		}
	}

	/**
	 * Sends a command directly to the MPV IPC socket
	 */
	private async sendMpvCommand(screen: number, command: string): Promise<void> {
		const ipcPath = this.ipcPaths.get(screen);
		logger.info(`Sending command ${command} to screen ${screen} with IPC path ${ipcPath}`, 'PlayerService');
		if (!ipcPath) {
			logger.warn(`No IPC path found for screen ${screen}`, 'PlayerService');
			throw new Error(`No IPC socket for screen ${screen}`);
		}
		
		return new Promise((resolve, reject) => {
			try {
				const socket = net.createConnection(ipcPath);
				let hasResponded = false;

				// Set a shorter connection timeout
				socket.setTimeout(500);
				
				socket.on('connect', () => {
					const mpvCommand = JSON.stringify({ command: [command] });
					socket.write(mpvCommand + '\n', () => {
						// Wait a brief moment after writing to ensure command is sent
						setTimeout(() => {
							if (!hasResponded) {
								hasResponded = true;
					socket.end();
					resolve();
							}
						}, 100);
					});
				});
				
				socket.on('error', (err: Error) => {
					if (!hasResponded) {
						hasResponded = true;
						socket.destroy();
						this.logError(`Failed to send command to screen ${screen}`, 'PlayerService', err);
					reject(err);
					}
				});
				
				socket.on('timeout', () => {
					if (!hasResponded) {
						hasResponded = true;
					socket.destroy();
					logger.error(`Command send timeout for screen ${screen}`, 'PlayerService');
					reject(new Error('Socket timeout'));
					}
				});

				// Cleanup socket on any response
				socket.on('data', () => {
					if (!hasResponded) {
						hasResponded = true;
						socket.end();
						resolve();
					}
				});

				// Handle socket close
				socket.on('close', () => {
					if (!hasResponded) {
						hasResponded = true;
						reject(new Error('Socket closed unexpectedly'));
					}
				});
			} catch (err) {
				this.logError(`Command send error for screen ${screen}`, 'PlayerService', err instanceof Error ? err : String(err));
				reject(err);
			}
		});
	}

	private logError(message: string, service: string, error: unknown): void {
		if (error instanceof Error) {
			logger.error(message, service, error);
		} else {
			logger.error(message, service, new Error(String(error)));
		}
	}
}
</file>

</files>
